{"version":3,"sources":["../static/js/67.827654d3.chunk.js","pages/Charts/C3Page/index.js","pages/Charts/C3Page/C3/index.js","../node_modules/react-c3js/react-c3js.js","../node_modules/c3/c3.js","../node_modules/d3/d3.js","webpack:///./node_modules/c3/c3.css?f077","../node_modules/c3/c3.css"],"names":["webpackJsonp","1337","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_class","_temp","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_components_LayoutComponents_Page__","__WEBPACK_IMPORTED_MODULE_2_react_helmet__","__WEBPACK_IMPORTED_MODULE_2_react_helmet___default","__WEBPACK_IMPORTED_MODULE_3__C3__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","C3Page","_React$Component","this","getPrototypeOf","apply","arguments","a","createElement","title","Component","defaultProps","pathName","roles","2284","__WEBPACK_IMPORTED_MODULE_1_react_c3js__","__WEBPACK_IMPORTED_MODULE_1_react_c3js___default","__WEBPACK_IMPORTED_MODULE_2_c3_c3_css__","C3Items","colors","_primary","_default","_success","_danger","line","data","columns","color","pattern","axis","x","tick","outer","y","max","min","count","values","grid","show","spline","type","scatter","xs","Danger","Primary","label","fit","size","height","padding","right","bar","width","stackedBar","groups","lines","combination","types","Success","Danger2","subChart","subchart","zoom","Sample","enabled","pie","donut","step","area","className","href","rel","2285","exports","_interopRequireDefault","obj","__esModule","default","_extends","assign","source","hasOwnProperty","_react","_react2","_propTypes","_propTypes2","_reactDom","c3","C3Chart","updateChart","newProps","destroyChart","chart","destroy","err","Error","mountNode","config","newConfig","bindto","generate","load","unload","generateChart","findDOMNode","unloadBeforeLoad","unloadData","loadNewData","style","get","object","isRequired","interaction","transition","oninit","func","onrendered","onmouseover","onmouseout","onresize","onresized","regions","array","legend","tooltip","point","gauge","string","bool","2286","global","factory","AxisInternal","component","params","internal","d3","scale","linear","range","orient","innerTickSize","outerTickSize","withOuterTick","tickPadding","tickValues","tickFormat","tickArguments","tickOffset","tickCulling","tickCentered","tickTextCharSize","tickTextRotate","tickLength","generateAxis","owner","componentKey","fn","Chart","$$","ChartInternal","loadConfig","beforeInit","init","afterInit","bindThis","argThis","keys","forEach","bind","c3_chart_fn","api","window","getDefaultConfig","cache","axes","c3_axis_fn","c3_axis_internal_fn","CLASS","chartLine","chartLines","chartBar","chartBars","chartText","chartTexts","chartArc","chartArcs","chartArcsTitle","chartArcsBackground","chartArcsGaugeUnit","chartArcsGaugeMax","chartArcsGaugeMin","selectedCircle","selectedCircles","eventRect","eventRects","eventRectsSingle","eventRectsMultiple","zoomRect","brush","focused","defocused","region","tooltipContainer","tooltipName","shape","shapes","bars","circle","circles","arc","arcLabelLine","arcs","areas","empty","text","texts","gaugeValue","gridLines","xgrid","xgrids","xgridLine","xgridLines","xgridFocus","ygrid","ygrids","ygridLine","ygridLines","axisX","axisXLabel","axisY","axisYLabel","axisY2","axisY2Label","legendBackground","legendItem","legendItemEvent","legendItemTile","legendItemHidden","legendItemFocused","dragarea","EXPANDED","SELECTED","INCLUDED","_typeof","Symbol","iterator","classCallCheck","inherits","possibleConstructorReturn","isValue","v","isFunction","o","isArray","Array","isString","isUndefined","isDefined","ceil10","Math","ceil","asHalfPixel","diffDomain","d","isEmpty","notEmpty","c3_chart_internal_fn","getOption","options","defaultValue","hasValue","dict","found","sanitise","str","replace","getPathBox","path","box","getBoundingClientRect","items","pathSegList","getItem","selection","attr","scaleExtent","domain","start","stop","generateTicks","ticks","push","unshift","copyScale","newScale","copy","isCategory","textFormatted","formatted","updateRange","rangeExtent","updateTickTextCharSize","h","w","select","each","undefined","transitionise","withoutTransition","isVertical","tspanData","splitted","tickMultiline","splitTickText","concat","tickMultilineMax","ellipsify","map","s","index","split","spaceIndex","charAt","subtext","substr","textWidth","maxWidth","slice","tickText","tickWidth","toString","ellipsified","remaining","available","padEnd","updateTickLength","lineY2","tickPosition","textY","rotate","textTransform","textTextAnchor","tspanDx","sin","PI","tspanDy","dy","g","tickTransform","tickX","tickY","scale0","__chart__","scale1","selectAll","tickEnter","enter","insert","tickExit","exit","remove","tickUpdate","append","lineUpdate","textUpdate","tspanUpdate","pathUpdate","rangeBand","dx","top","bottom","left","format","isCentered","tickInterval","interval","node","getTotalLength","Infinity","culling","Axis","_Component","_this","main","axis_x_inner","clipPathForXAxis","getTranslate","axis_x_show","axis_rotated","textAnchorForXAxisLabel","axis_y_inner","clipPathForYAxis","axis_y_show","textAnchorForYAxisLabel","y2","axis_y2_show","textAnchorForY2AxisLabel","getXAxis","withoutRotateTickText","axisParams","isCategorized","axis_x_tick_multiline","Number","axis_x_tick_multilineMax","axis_x_tick_width","axis_x_tick_rotate","isTimeSeries","parseDate","axis_x_tick_centered","axis_x_tick_culling","updateXAxisTickValues","targets","axis_x_tick_fit","axis_x_tick_count","generateTickValues","mapTargetsToUniqueXs","xAxis","subXAxis","getYAxis","axis_y_tick_rotate","isTimeSeriesY","time","axis_y_tick_time_value","axis_y_tick_time_interval","getId","id","data_axes","getXAxisTickFormat","defaultAxisTimeFormat","categoryName","toFixed","axis_x_tick_format","date","axisTimeFormat","getTickValues","getXAxisTickValues","axis_x_tick_values","getYAxisTickValues","axis_y_tick_values","yAxis","getY2AxisTickValues","axis_y2_tick_values","y2Axis","getLabelOptionByAxisId","axisId","option","axis_y_label","axis_y2_label","axis_x_label","getLabelText","setLabelText","getLabelPosition","defaultPosition","position","isInner","indexOf","isOuter","isLeft","isCenter","isRight","isTop","isMiddle","isBottom","getXAxisLabelPosition","getYAxisLabelPosition","getY2AxisLabelPosition","getLabelPositionById","textForXAxisLabel","textForYAxisLabel","textForY2AxisLabel","xForAxisLabel","forHorizontal","dxForAxisLabel","textAnchorForAxisLabel","xForXAxisLabel","xForYAxisLabel","xForY2AxisLabel","dxForXAxisLabel","dxForYAxisLabel","dxForY2AxisLabel","dyForXAxisLabel","getMaxTickWidth","axis_x_height","dyForYAxisLabel","dyForY2AxisLabel","axis_y2_inner","withoutRecompute","targetsToShow","dummy","svg","currentMaxTickWidths","filterTargetsToShow","getYDomain","yOrient","axis_y_tick_format","yAxisTickValues","y2Orient","axis_y2_tick_format","y2AxisTickValues","getXDomain","xOrient","xAxisTickFormat","xAxisTickValues","classed","updateLabels","withTransition","getPadding","domainLength","p","unit","convertPixelsToAxisPadding","pixels","tickCount","forTimeSeries","targetCount","end","tickValue","Date","sort","b","generateTransitions","duration","axisSubX","subx","redraw","transitions","isHidden","version","initParams","data_url","convertUrlToData","data_mimeType","data_headers","data_keys","initWithData","data_json","convertJsonToData","data_rows","convertRowsToData","data_columns","convertColumnsToData","clipId","clipIdForXAxis","clipIdForYAxis","clipIdForGrid","clipIdForSubchart","clipPath","getClipPath","clipPathForGrid","clipPathForSubchart","dragStart","dragging","flowing","cancelClick","mouseover","transiting","generateColor","levelColor","generateLevelColor","dataTimeFormat","data_xLocaltime","utc","axis_x_localtime","multi","getMilliseconds","getSeconds","getMinutes","getHours","getDay","getDate","getMonth","hiddenTargetIds","hiddenLegendIds","focusedTargetIds","defocusedTargetIds","subXOrient","isLegendRight","legend_position","isLegendInset","isLegendTop","legend_inset_anchor","isLegendLeft","legendStep","legendItemWidth","legendItemHeight","rotated_padding_left","rotated_padding_right","rotated_padding_top","withoutFadeIn","intervalForObserveInserted","initChartElements","initBar","initLine","initArc","initGauge","initText","defs","binding","initPie","initBrush","initZoom","selectChart","document","observeInserted","html","convertDataToTargets","data_filter","filter","data_hide","addHiddenTargetIds","mapToIds","legend_hide","addHiddenLegendIds","updateSizes","updateScales","extent","subX","subY","subY2","orgXDomain","zoom_enabled","on","svg_classname","clipChart","appendClip","clipXAxis","clipYAxis","clipGrid","clipSubchart","updateSvgSize","initSubchart","initTooltip","initLegend","initTitle","initRegion","initGrid","grid_lines_front","initGridLines","initEventRect","zoom_privileged","axis_x_extent","getDefaultExtent","updateTargets","updateDimension","withTransform","withUpdateXDomain","withUpdateOrgXDomain","withTransitionForAxis","bindResize","element","smoothLines","el","x1","x2","y1","legendHeight","getLegendHeight","legendWidth","getLegendWidth","legendHeightForBottom","hasArc","hasArcType","xAxisHeight","getHorizontalAxisHeight","subchartHeight","subchart_show","subchart_size_height","currentWidth","getCurrentWidth","currentHeight","getCurrentHeight","margin","getCurrentPaddingTop","getCurrentPaddingRight","getCurrentPaddingBottom","getCurrentPaddingLeft","margin2","NaN","margin3","updateSizeForLegend","width2","height2","arcWidth","arcHeight","hasType","gauge_fullCircle","getGaugeLabelHeight","updateRadius","radiusExpanded","updateTargetsForText","updateTargetsForBar","updateTargetsForLine","updateTargetsForArc","updateTargetsForSubchart","showTargets","isTargetToShow","transition_duration","withY","withSubchart","withTransitionForExit","withTrimXDomain","withLegend","withEventRect","withDimension","withUpdateXAxis","drawArea","drawBar","drawLine","xForText","yForText","durationForExit","durationForAxis","waitForDraw","flow","intervalForCulling","xDomainForZoom","cx","cy","areaIndices","getShapeIndices","isAreaType","barIndices","isBarType","lineIndices","isLineType","hideAxis","xv","legend_show","updateLegend","updateXDomain","zoom_rescale","orgDomain","axis_y_tick_count","axis_y2_tick_count","axis_x_tick_culling_max","e","generateDrawArea","generateDrawBar","generateDrawLine","generateXYForText","updateXgridFocus","data_empty_label_text","updateGrid","updateRegion","updateBar","updateLine","updateArea","updateCircle","hasDataLabel","updateText","redrawTitle","redrawArc","redrawSubchart","interaction_enabled","redrawEventRect","updateZoom","updateCircleY","circleY","circleX","generateFlow","isTabVisible","transitionsToWait","redrawBar","redrawLine","redrawArea","redrawCircle","redrawText","redrawRegion","redrawGrid","generateWait","t","add","updateAndRedraw","withTransitionForTransform","transformAll","redrawWithoutRescale","axis_x_type","isCustomX","data_x","data_xs","axis_y_type","initialOpacity","initialOpacityForCircle","opacityForCircle","isPointShouldBeShown","point_show","opacity","isScatterType","opacityForText","xx","axis_x_categories","yv","yScale","subxx","transformMain","transformContext","transformLegend","getXAxisClipX","getXAxisClipY","getXAxisClipWidth","getXAxisClipHeight","getYAxisClipX","getYAxisClipY","getYAxisClipWidth","getYAxisClipHeight","withoutAxis","observer","MutationObserver","console","error","mutations","mutation","previousSibling","disconnect","setInterval","parentNode","clearInterval","update","observe","attributes","childList","characterData","resizeFunction","generateResize","resize_auto","resizeTimeout","clearTimeout","setTimeout","flush","resizeIfElementDisplayed","offsetParent","attachEvent","addEventListener","wrapper","callResizeFunctions","resizeFunctions","f","splice","endall","callback","timer","done","parsedDate","data_xFormat","parse","isNaN","hidden","mozHidden","msHidden","webkitHidden","Function","oThis","aArgs","fToBind","fNOP","fBound","SVGPathSeg","typeAsLetter","owningPathSegList","pathSegType","pathSegTypeAsLetter","_owningPathSegList","classname","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","PATHSEG_MOVETO_ABS","PATHSEG_MOVETO_REL","PATHSEG_LINETO_ABS","PATHSEG_LINETO_REL","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_ABS","PATHSEG_ARC_REL","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","_segmentChanged","segmentChanged","SVGPathSegClosePath","_asPathString","clone","SVGPathSegMovetoAbs","_x","_y","set","SVGPathSegMovetoRel","SVGPathSegLinetoAbs","SVGPathSegLinetoRel","SVGPathSegCurvetoCubicAbs","_x1","_y1","_x2","_y2","SVGPathSegCurvetoCubicRel","SVGPathSegCurvetoQuadraticAbs","SVGPathSegCurvetoQuadraticRel","SVGPathSegArcAbs","r1","r2","angle","largeArcFlag","sweepFlag","_r1","_r2","_angle","_largeArcFlag","_sweepFlag","SVGPathSegArcRel","SVGPathSegLinetoHorizontalAbs","SVGPathSegLinetoHorizontalRel","SVGPathSegLinetoVerticalAbs","SVGPathSegLinetoVerticalRel","SVGPathSegCurvetoCubicSmoothAbs","SVGPathSegCurvetoCubicSmoothRel","SVGPathSegCurvetoQuadraticSmoothAbs","SVGPathSegCurvetoQuadraticSmoothRel","SVGPathElement","createSVGPathSegClosePath","createSVGPathSegMovetoAbs","createSVGPathSegMovetoRel","createSVGPathSegLinetoAbs","createSVGPathSegLinetoRel","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicRel","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticRel","createSVGPathSegArcAbs","createSVGPathSegArcRel","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoHorizontalRel","createSVGPathSegLinetoVerticalAbs","createSVGPathSegLinetoVerticalRel","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoCubicSmoothRel","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegCurvetoQuadraticSmoothRel","getPathSegAtLength","distance","isFinite","measurementElement","createElementNS","setAttribute","getAttribute","lastPathSegment","numberOfItems","removeItem","SVGPathSegList","pathElement","_pathElement","_list","_parsePath","_mutationObserverConfig","attributeFilter","_pathElementMutationObserver","_updateListFromPathMutations","_checkPathSynchronizedToList","_pathSegList","takeRecords","mutationRecords","hasPathMutations","record","attributeName","_writeListToPath","_pathSegArrayAsString","pathSeg","clear","initialize","newItem","_checkValidIndex","insertItemBefore","replaceItem","item","appendItem","pathSegArray","first","Builder","appendSegment","Source","_string","_currentIndex","_endIndex","_previousCommand","_skipOptionalSpaces","_isCurrentSpace","character","_skipOptionalSpacesOrDelimiter","hasMoreData","peekSegmentType","lookahead","_pathSegTypeFromChar","_nextCommandHelper","previousCommand","initialCommandIsMoveTo","command","_parseNumber","exponent","integer","frac","decimal","sign","expsign","startIndex","startIntPartIndex","scanIntPartIndex","multiplier","number","pow","_parseArcFlag","flag","flagChar","parseSegment","points","arcAngle","arcLarge","arcSweep","builder","String","targetLength","padString","repeat","labels","axis_x_max","axis_y_max","axis_y2_max","axis_x_min","axis_y_min","axis_y2_min","category","categories","resize","size_width","size_height","detachEvent","removeEventListener","targetIds","shown","targetId","names","clearLegendItemTextBoxCache","updateDataAttributes","args","baseTarget","baseValue","diff","to","notfoundIds","orgDataCount","getMaxDataCount","tail","json","rows","j","getOtherTargetX","missing","translateX","transform","scaleX","flowIndex","flowLength","flowStart","getValueOnIndex","flowEnd","durationForFlow","wait","mainRegion","mainText","mainBar","mainLine","mainArea","mainCircle","updateXGrid","hideXGridFocus","ease","isRegionOnX","xgridAttr","regionX","regionWidth","focus","candidates","mapToTargetIds","selectorTargets","revert","defocus","expandArc","toggleFocusLegend","unexpandArc","showLegend","isLegendToShow","selectorLegends","grids","grid_x_lines","removeGridLines","grid_y_lines","data_groups","hide","hideLegend","addXs","classes","data_classes","data_colors","hasCaches","cacheIds","getCaches","loadFromArgs","ids","c","selected","merge","getTargetSelectorSuffix","__data__","indices","resetOther","data_selection_enabled","toggle","getToggle","isTargetId","data_selection_grouped","isTargetIndex","isSelected","data_selection_isselectable","unselect","removeHiddenTargetIds","that","mouse","isMultipleX","getYScale","getIndexByX","dispatchEvent","tooltip_onshow","tooltip_onhide","transformTo","optionsForRedraw","setTargetType","updateTargetX","updateTargetXs","zoom_onzoom","enable","unzoom","zoom_x_max","zoom_x_min","layout","reduce","getOrderFunction","gauge_width","donut_width","gaugeArcWidth","gauge_arcs_minWidth","radius","innerRadiusRatio","innerRadius","updateArc","svgArc","getSvgArc","svgArcExpanded","getSvgArcExpanded","svgArcExpandedSub","updateAngle","gMin","gMax","gTic","gValue","startAngle","endAngle","isGaugeType","gauge_min","gauge_max","gauge_startingAngle","hasGaugeType","singleArcWidth","outerRadius","newArc","withoutUpdate","updated","centroid","rate","expandWidth","getArc","force","isArcType","transformForArcLabel","ratio","translate","hasGauge","sqrt","donut_label_ratio","pie_label_ratio","cos","abs","getArcRatio","whole","convertToArcData","addName","textForArcLabel","shouldShowArcLabel","meetsArcLabelThreshold","getArcLabelFormat","defaultArcValueFormat","textForGaugeMinMax","isMax","getGaugeLabelExtents","shouldExpand","expandDuration","isDonutType","donut_expand_duration","gauge_expand_duration","isPieType","pie_expand_duration","donut_expand","gauge_expand","pie_expand","shouldShow","donut_label_show","pie_label_show","donut_label_threshold","pie_label_threshold","pie_label_format","gauge_label_format","donut_label_format","gauge_label_extents","getArcTitle","donut_title","mainPieUpdate","mainPieEnter","classChartArc","classArcs","classFocus","mainArc","backgroundArc","mainArcLabelLine","arcData","classArc","_current","color_pattern","gauge_labelLine_show","lineLength","innerLineLength","lineAngle","arcInnerRadius","linePositioningAngle","data_onmouseover","selectedData","showTooltip","revertLegend","hideTooltip","data_onmouseout","toggleShape","data_onclick","attrTween","interpolate","interpolated","round","d1","gauge_label_show","gauge_units","addCache","cloneTarget","generateClass","prefix","classText","classTexts","classShape","classShapes","classLine","classLines","classCircle","classCircles","classBar","classBars","classArea","classAreas","classRegion","classEvent","classTarget","additionalClassSuffix","additionalClass","classFocused","classDefocused","classChartText","classChartLine","classChartBar","selectorTarget","selectorLegend","navigator","appVersion","toLowerCase","URL","parent","getAxisClipX","getAxisClipY","getAxisClipWidth","getAxisClipHeight","category10","data_color","threshold","color_threshold","asValue","padding_left","padding_right","padding_top","padding_bottom","zoom_extent","zoom_onzoomstart","zoom_onzoomend","interaction_brighten","data_xSort","data_idConverter","data_names","data_type","data_types","data_labels","data_order","data_regions","data_selection_multiple","data_selection_draggable","data_onselected","data_onunselected","subchart_axis_x_show","subchart_onbrush","legend_inset_x","legend_inset_y","legend_inset_step","legend_item_onclick","legend_item_onmouseover","legend_item_onmouseout","legend_equally","legend_padding","legend_item_tile_width","legend_item_tile_height","axis_x_tick_outer","axis_x_padding","axis_y_inverted","axis_y_center","axis_y_tick_outer","axis_y_padding","axis_y_default","axis_y2_inverted","axis_y2_center","axis_y2_tick_outer","axis_y2_padding","axis_y2_default","grid_x_show","grid_x_type","grid_y_show","grid_y_ticks","grid_focus_show","point_r","point_sensitivity","point_focus_expand_enabled","point_focus_expand_r","point_select_r","line_connectNull","line_step_type","bar_width","bar_width_ratio","bar_width_max","bar_zerobased","bar_space","area_zerobased","area_above","spline_interpolation_type","tooltip_show","tooltip_grouped","tooltip_order","tooltip_format_title","tooltip_format_name","tooltip_format_value","tooltip_position","tooltip_contents","defaultTitleFormat","defaultValueFormat","getTooltipContent","tooltip_init_show","tooltip_init_x","tooltip_init_position","title_text","title_padding","title_position","additionalConfig","find","shift","read","this_config","url","mimeType","headers","req","xhr","header","dataResponse","response","responseText","responseURL","status","statusText","JSON","convertTsvToData","convertCsvToData","convertXsvToData","xsv","parser","parseRows","csv","tsv","targetKeys","new_rows","new_row","findValueInJson","pathArray","k","newRows","newRow","appendXs","isNotX","isX","xKey","getXKey","rawX","generateTargetX","getOtherTargetXs","getXValuesOfXKey","convertedId","id_org","v1","v2","hasNegativeValue","hasNegativeValueInTargets","hasPositiveValue","hasPositiveValueInTargets","xValues","filterByX","getXValue","idsForX","hasMultipleX","name","valueOnIndex","updateXs","getPrevX","getNextX","getMaxDataCountTarget","maxTarget","getEdgeX","hasTarget","removeHiddenLegendIds","getValuesAsIdKeyed","ys","checkValueInTargets","checker","isOrderDesc","isOrderAsc","orderAsc","orderDesc","t1","t2","reducer","t1Sum","t2Sum","order","orderTargets","fct","reverse","filterRemoveNull","filterByXDomain","xDomain","getDataLabelLength","lengths","dataLabelFormat","isNoneArc","isArc","findSameXOfValues","targetX","sames","findClosestFromTargets","pos","findClosest","closest","minDist","isWithinBar","dist","xIndex","yIndex","convertValuesToStep","converted","attrs","current","getYDomainMin","baseId","idsInGroup","getYDomainMax","yDomainAbs","isAllPositive","isAllNegative","targetsByAxisId","yTargets","yMin","yMax","yDomainMin","yDomainMax","center","isZeroBased","isInverted","showHorizontalDataLabel","showVerticalDataLabel","getXDomainMin","getXDomainMax","getXDomainPadding","maxDataCount","paddingLeft","paddingRight","firstX","lastX","getTime","withTrim","updateScaleExtent","trimXDomain","zoomDomain","getZoomDomain","drag","sx","sy","mx","my","minX","maxX","minY","maxY","altDomain","_w","_h","isIncluded","isWithin","togglePoint","togglePath","dragstart","dragend","getYFormat","forArc","formatForY","yFormat","formatForY2","y2Format","defaultFormat","xgridData","generateGridData","updateYGrid","gridValues","gridTextAnchor","gridTextDx","xGridTextX","yGridTextX","showXGridFocus","dataToShow","focusEl","firstYear","lastYear","gridData","tickNum","getFullYear","getGridFilterToRemove","param","forX","toRemove","toShow","eventRectUpdate","maxDataCountTarget","generateEventRectsForMultipleXs","updateEventRect","datum","generateEventRectsForSingleX","rectW","rectX","getEventRectWidth","prevX","nextX","thisX","eventRectEnter","expandCircles","expandBars","unexpandCircles","unexpandBars","isStepType","isWithinShape","behavior","origin","mouseout","sameXData","selector","event","createEvent","initMouseEvent","legendItemTextBox","legendHasRendered","updateLegendWithDefaults","insetLegendPosition","updateLegendStep","updateLegendItemWidth","updateLegendItemHeight","opacityForLegend","opacityForUnfocusedLegend","getTextBox","textElement","getTextRect","textContent","updatePositions","updateValues","withoutStep","areaLength","totalLength","itemLength","posMin","steps","margins","offsets","maxLength","reset","isLast","itemWidth","tileWidth","itemHeight","paddingTop","maxHeight","widths","heights","xForLegend","xForLegendText","xForLegendRect","yForLegend","yForLegendText","yForLegendRect","x1ForLegendTile","x2ForLegendTile","yForLegendTile","l","rects","tiles","background","altKey","parentData","regionY","regionHeight","getScale","forTimeseries","getX","offset","_scale","raw","getY","getSubYScale","forInit","xMin","xMax","subXMin","subXMax","subYMin","subYMax","selectPoint","r","pointSelectR","unselectPoint","selectPath","rgb","brighter","unselectPath","nodeName","mainBarUpdate","mainBarEnter","barData","random","getBarW","barTargetsNum","getBars","isSub","getPoints","generateGetBarPoints","indexX","indexY","__max__","barW","barX","getShapeX","barY","getShapeY","barOffset","getShapeOffset","barSpaceOffset","y0","posX","posY","seg0","seg1","ex","ey","typeFilter","targetsNum","isWithinStep","isWithinCircle","getInterpolate","interpolation","isInterpolationType","isSplineType","mainLineUpdate","mainLineEnter","lineData","generateGetLinePoints","yScaleGetter","xValue","yValue","defined","x0","lineWithRegions","lineTargetsNum","lineOffset","_regions","generateM","sWithRegion","xp","yp","dd","diffx2","xOffset","d0","x_diff","xv0","xv1","orgAreaOpacity","generateGetAreaPoints","value0","getAreaBaseValue","value1","areaTargetsNum","areaOffset","lineOrScatterData","pointR","getCircles","pointExpandedR","d3_this","getParentWidth","getParentHeight","getTitlePadding","getAxisWidthByAxisId","legendWidthOnRight","getParentRectValue","tagName","offsetWidth","getSvgLeft","hasLeftAxisRect","leftAxisClass","leftAxis","svgRect","chartRect","svgLeft","redrawForBrush","context","visibility","contextLineEnter","contextLineUpdate","contextBarEnter","contextBarUpdate","updateBarForSubchart","contextBar","redrawBarForSubchart","drawBarOnSub","updateLineForSubchart","contextLine","redrawLineForSubchart","drawLineOnSub","updateAreaForSubchart","contextArea","redrawAreaForSubchart","drawAreaOnSub","mainTextUpdate","mainTextEnter","barOrLineData","forFlow","cls","rect","font","getAreaPoints","getBarPoints","getLinePoints","getter","getXForText","getYForText","xPos","yPos","isSafari","isChrome","xForTitle","yForTitle","getTooltipSortFunction","valueOf","sortFunction","bgcolor","titleFormat","nameFormat","valueFormat","tooltipSortFunction","tooltipPosition","tWidth","tHeight","tooltipLeft","tooltipRight","tooltipTop","chartRight","positionFunction","property","has","ua","userAgent","startEvent","sourceEvent","redrawForZoom","clientX","clientY","orgScaleExtent","z","2287","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","d3_number","d3_numeric","d3_bisector","compare","lo","hi","mid","d3_transposeLength","d3_range_integerScale","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","d3_vendorSymbol","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","d3_subclass","d3_selectionPrototype","d3_selection_selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","d3_selection_classedRe","RegExp","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createNS","d3_selectionRemove","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","m","group","d3_selection_enter","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","d3_selection_on","capture","onRemove","$","onAdd","wrap","d3_array","removeAll","match","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","d3_mouse_bug44083","scrollX","scrollY","border","ctm","getScreenCTM","pageX","pageY","matrixTransform","inverse","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","d3_hcl_lab","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","hsl","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","d3_xhr","respond","result","request","d3_xhrHasResponse","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","d3_timer","delay","then","now","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","t0","d3_format_precision","log","LN10","d3_formatPrefix","symbol","d3_locale_numberFormat","locale","locale_decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","join","specifier","d3_format_re","fill","align","zfill","comma","precision","suffix","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","d3_date","dt","times","range_utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","charCodeAt","d3_time_formatPads","d3_time_formats","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","B","d3_time_formatPad","I","d3_time","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","z0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","pointLine","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","direction","meridian","parallel","meridianNormal","polarAngle","winding","point0","antimeridian","τ","intersection","φarc","d3_geo_clipCircle","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","ax","ay","bx","by","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","rangeRound","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","span","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","cancelId","cancel","tweens","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","d3_json","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","d3_requote_re","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","contains","getComputedStyle","getPropertyValue","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","nextSibling","upgroup","mouseenter","mouseleave","touch","touches","mousedown","touchstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","correspondingElement","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","translateTo","zoomTo","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","locations0","started","touchmove","touchend","changed","touchtime","distance0","l0","l1","distance1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","stringify","token","EOF","eol","EOL","formatRows","fieldSet","fields","field","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","stack","childs","revalue","partition","d3_layout_pieSortByValue","series","orders","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","mode","worst","stickify","rmax","rmin","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTweenNS","styleString","styleTween","inheritId","id0","id1","tickArguments_","tickFormat_","tickSpacing","lineEnter","textEnter","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brushstart","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","xExtent","yExtent","keydown","keyCode","keyup","brushmove","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","d3_svg_brushResizes","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","responseXML","2288","content","hmr","locals","2289","sources","mappings","file","sourcesContent","sourceRoot"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YAQ+gB,SAASC,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAPjzCE,OAAOS,eAAevB,EAAqB,cAAgBiB,OAAO,GAC7C,IAM6eO,GAAOC,EANhfC,EAAsCzB,EAAoB,GAC1D0B,EAA8C1B,EAAoB2B,EAAEF,GACpEG,EAAiE5B,EAAoB,KACrF6B,EAA6C7B,EAAoB,KACjE8B,EAAqD9B,EAAoB2B,EAAEE,GAC3EE,EAAoC/B,EAAoB,MAC7EgC,EAAa,WAAW,QAASC,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWrB,WAAWqB,EAAWrB,aAAY,EAAMqB,EAAWnB,cAAa,EAAQ,SAAUmB,KAAWA,EAAWpB,UAAS,GAAKL,OAAOS,eAAeY,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASnC,EAAYqC,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiB9B,EAAYS,UAAU4B,GAAeC,GAAYR,EAAiB9B,EAAYsC,GAAoBtC,MCRteuC,GDQm0ClB,EAAMD,EAAO,SAASoB,GAAqD,QAASD,KAAsC,MAA7BzC,GAAgB2C,KAAKF,GAAerC,EAA2BuC,MAAMF,EAAOrB,WAAWR,OAAOgC,eAAeH,IAASI,MAAMF,KAAKG,YAAuf,MAA7qBtC,GAAUiC,EAAOC,GAAkLX,EAAaU,IAASH,IAAI,SAASvB,MAAM,WCDzlD,GAAMmB,GAAQS,KAAKT,KACnB,OACET,GAAAsB,EAAAC,cAACrB,EAAA,EAASO,EACRT,EAAAsB,EAAAC,cAACnB,EAAAkB,GAAOE,MAAM,UACdxB,EAAAsB,EAAAC,cAAClB,EAAA,EAAD,WDH6hEW,GCRhhEhB,EAAAsB,EAAMG,WDQ4kE5B,ECP9lE6B,cACLC,SAAU,QACVC,OAAQ,QAAS,kBDKypE9B,ECS9qEzB,GAAA,WDLMwD,KACA,SAAUzD,EAAQC,EAAqBC,GAE7C,YAO8f,SAASC,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUC,OAAOC,OAAOH,GAAYA,EAAWC,WAAWG,aAAaC,MAAMN,EAASO,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWR,IAAWE,OAAOO,eAAeP,OAAOO,eAAeV,EAASC,GAAYD,EAASW,UAAUV,GAN3wC,GAAIc,GAAsCzB,EAAoB,GAC1D0B,EAA8C1B,EAAoB2B,EAAEF,GACpE+B,EAA2CxD,EAAoB,MAC/DyD,EAAmDzD,EAAoB2B,EAAE6B,GACzEE,EAA0C1D,EAAoB,MAEnFgC,GADuEhC,EAAoB2B,EAAE+B,GAChF,WAAW,QAASzB,GAAiBC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWrB,WAAWqB,EAAWrB,aAAY,EAAMqB,EAAWnB,cAAa,EAAQ,SAAUmB,KAAWA,EAAWpB,UAAS,GAAKL,OAAOS,eAAeY,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASnC,EAAYqC,EAAWC,GAAuI,MAAvHD,IAAWP,EAAiB9B,EAAYS,UAAU4B,GAAeC,GAAYR,EAAiB9B,EAAYsC,GAAoBtC,OEvBtewD,EFuBkzC,SAAShB,GAAsD,QAASgB,KAAwC,MAA9B1D,GAAgB2C,KAAKe,GAAgBtD,EAA2BuC,MAAMe,EAAQtC,WAAWR,OAAOgC,eAAec,IAAUb,MAAMF,KAAKG,YAA2whB,MAAt8hBtC,GAAUkD,EAAQhB,GAAsLX,EAAa2B,IAAUpB,IAAI,SAASvB,MAAM,WErBjkD,GAAI4C,IACFC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,QAAS,WAGPC,GACFC,MACEC,UACG,UAAW,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACzC,UAAW,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,OAG3CC,OACEC,SAAUT,EAAOC,SAAUD,EAAOG,WAEpCO,MACEC,GACEC,MACEC,OAAO,IAGXC,GACEC,IAAK,IACLC,IAAK,EACLJ,MACEC,OAAO,EACPI,MAAO,EACPC,QAAS,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,QAI1CC,MACER,GACES,MAAM,GAERN,GACEM,MAAM,KAIRC,GACFf,MACEC,UACG,UAAW,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACzC,SAAU,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,MAExCe,KAAM,UAERd,OACEC,SAAUT,EAAOC,SAAUD,EAAOI,UAEpCM,MACEC,GACEC,MACEC,OAAO,IAGXC,GACEC,IAAK,IACLC,IAAK,EACLJ,MACEC,OAAO,EACPI,MAAO,EACPC,QAAS,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,QAI1CC,MACER,GACES,MAAM,GAERN,GACEM,MAAM,KAIRG,GACFjB,MACEkB,IACEC,OAAQ,WACRC,QAAS,aAEXne,KAAM,WAERd,OACEC,SAAUT,EAAOI,QAASJ,EAAOC,WAEnCS,MACEC,GACEgB,MAAO,QACPf,MACEC,OAAO,EACPe,KAAK,IAGTC,MACEC,OAAQ,KAEVC,SACEC,MAAO,IAETlB,GACEa,MAAO,SACPf,MACEC,OAAO,EACPI,MAAO,EACPC,QAAS,EAAG,GAAK,GAAK,IAAK,QAIjCC,MACER,GACES,MAAM,GAERN,GACEM,MAAM,KAIRa,GACF3B,MACEC,UACG,SAAU,GAAI,IAAK,IAAK,IAAK,IAAK,MAClC,UAAW,IAAK,IAAK,IAAK,IAAK,IAAK,KACpC,UAAW,KAAM,IAAK,IAAK,KAAM,IAAK,MAEzCe,KAAM,OAERW,KACEC,OACEnB,IAAK,KAGTP,OACEC,SAAUT,EAAOI,QAASJ,EAAOE,SAAUF,EAAOC,WAEpDkB,MACEL,GACEM,MAAM,GAERT,GACES,MAAM,KAIRe,GACF7B,MACEC,UACG,WAAY,GAAI,IAAK,IAAK,KAAM,IAAK,KAAM,GAAI,IAAK,IAAK,KAAM,IAAK,MACpE,UAAW,IAAK,KAAM,IAAK,KAAM,IAAK,GAAI,IAAK,KAAM,IAAK,KAAM,IAAK,KACrE,UAAW,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,MACrE,UAAW,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,MAE3Ee,KAAM,MACNc,SAAU,UAAW,UAAW,SAAU,aAE5C5B,OACEC,SAAUT,EAAOC,SAAUD,EAAOE,SAAUF,EAAOI,QAASJ,EAAOG,WAErE8B,KACEC,OACEnB,IAAK,KAGTI,MACEL,GACEM,MAAM,EACNiB,QAEIjF,MAAO,OAMbkF,GACFhC,MACEC,UACG,UAAW,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACvD,UAAW,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,MAChE,UAAW,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAClE,SAAU,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,MAC/D,UAAW,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAClE,UAAW,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,MAE3De,KAAM,MACNiB,OACEC,QAAS,SACTf,OAAQ,OACRgB,QAAS,QAEXL,SAAU,UAAW,aAEvB5B,OACEC,SACET,EAAOC,SACPD,EAAOE,SACPF,EAAOG,SACPH,EAAOI,QACPJ,EAAOI,UAGXe,MACER,GACES,MAAM,GAERN,GACEM,MAAM,KAIRsB,GACFpC,MACEC,UACG,UAAW,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAClE,UAAW,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,MAEjEe,KAAM,UAERd,OACEC,SAAUT,EAAOC,SAAUD,EAAOI,UAEpCuC,UACEvB,MAAM,IAGNwB,GACFtC,MACEC,UAEI,SACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,KAGJP,QACE6C,OAAQ7C,EAAOC,WAGnB2C,MACEE,SAAS,IAGTC,GACFzC,MACEC,UAAW,UAAW,KAAM,UAAW,MACvCe,KAAM,OAERd,OACEC,SAAUT,EAAOC,SAAUD,EAAOG,YAGlC6C,GACF1C,MACEC,UAAW,SAAU,KAAM,UAAW,MACtCe,KAAM,SAERd,OACEC,SAAUT,EAAOI,QAASJ,EAAOG,WAEnC6C,OACE1D,MAAO,gBAGP2D,GACF3C,MACEC,UAAW,UAAW,IAAK,IAAK,IAAK,EAAG,EAAG,MAAO,UAAW,IAAK,IAAK,IAAK,IAAK,IAAK,KACtFgC,OACEb,QAAS,OACTc,QAAS,cAGbhC,OACEC,SAAUT,EAAOC,SAAUD,EAAOG,YAGlC+C,GACF5C,MACEC,UAAW,UAAW,IAAK,IAAK,IAAK,EAAG,EAAG,IAAK,UAAW,IAAK,IAAK,IAAK,IAAK,IAAK,KACpFgC,OACEb,QAAS,OACTc,QAAS,gBAGbhC,OACEC,SAAUT,EAAOC,SAAUD,EAAOG,WAItC,OACErC,GAAAsB,EAAAC,cAAA,WAAS8D,UAAU,QACjBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,eACbrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,gBACbrF,EAAAsB,EAAAC,cAAA,oBACAvB,EAAAsB,EAAAC,cAAA,KACE+D,KAAK,mBACL9E,OAAO,SACP+E,IAAI,sBACJF,UAAU,+BAJZ,0BAMyBrF,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAI1CrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,aACbrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,OACbrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,8BAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GAAQkB,KAAMD,EAAKC,KAAME,MAAOH,EAAKG,MAAOE,KAAML,EAAKK,KAAMS,KAAMd,EAAKc,SAG7ErD,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,yBAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GACCkB,KAAMe,EAAOf,KACbE,MAAOa,EAAOb,MACdE,KAAMW,EAAOX,KACbS,KAAME,EAAOF,UAKrBrD,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,OACbrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,uBAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GAAQkB,KAAM2C,EAAK3C,KAAME,MAAOyC,EAAKzC,UAG1C1C,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,uBAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GAAQkB,KAAM4C,EAAK5C,KAAME,MAAO0C,EAAK1C,WAI5C1C,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,OACbrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,0BAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GACCkB,KAAMiB,EAAQjB,KACdE,MAAOe,EAAQf,MACfE,KAAMa,EAAQb,KACdS,KAAMI,EAAQJ,SAIpBrD,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,sBAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GAAQkB,KAAM2B,EAAI3B,KAAME,MAAOyB,EAAIzB,MAAOW,KAAMc,EAAId,KAAMc,IAAKA,EAAIA,SAI1EnE,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,OACbrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,8BAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GACCkB,KAAM6B,EAAW7B,KACjBE,MAAO2B,EAAW3B,MAClByB,IAAKE,EAAWF,IAChBd,KAAMgB,EAAWhB,SAIvBrD,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,8BAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GACCkB,KAAMgC,EAAYhC,KAClBE,MAAO8B,EAAY9B,MACnBW,KAAMmB,EAAYnB,UAK1BrD,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,OACbrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,4BAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GAAQkB,KAAMoC,EAASpC,KAAME,MAAOkC,EAASlC,MAAOmC,SAAUD,EAASC,aAG5E7E,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,uBAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GAAQkB,KAAMsC,EAAKtC,KAAME,MAAOoC,EAAKpC,MAAOoC,KAAMA,EAAKA,UAI9D9E,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,OACbrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,4BAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GAAQkB,KAAMyC,EAAIzC,KAAME,MAAOuC,EAAIvC,UAGxC1C,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,YACbrF,EAAAsB,EAAAC,cAAA,MAAI8D,UAAU,cACZrF,EAAAsB,EAAAC,cAAA,8BAEFvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,cAAb,gBACgB,IACdrF,EAAAsB,EAAAC,cAAA,KAAG+D,KAAK,mBAAmB9E,OAAO,SAAS+E,IAAI,uBAA/C,yBACwBvF,EAAAsB,EAAAC,cAAA,aACpBvB,EAAAsB,EAAAC,cAAA,KAAG8D,UAAU,sBAInBrF,EAAAsB,EAAAC,cAAA,OAAK8D,UAAU,QACbrF,EAAAsB,EAAAC,cAACQ,EAAAT,GAAQkB,KAAM0C,EAAM1C,KAAME,MAAOwC,EAAMxC,MAAOwC,MAAOA,EAAMA,iBFnwBotkBjD,GEvB1wkBjC,EAAAsB,EAAMG,UAoyB5BpD,GAAA,KFzwBMmH,KACA,SAAUpH,EAAQqH,EAASnH,GAEjC,YGdA,SAAAoH,GAAAC,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCE,QAAAF,GAE7E,QAAApH,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE3F,QAAAC,GAAAC,EAAAC,GAAiD,IAAAD,EAAa,SAAAE,gBAAA,4DAAyF,QAAAD,GAAA,iBAAAA,IAAA,mBAAAA,GAAAD,EAAAC,EAEvJ,QAAAE,GAAAC,EAAAC,GAA0C,sBAAAA,IAAA,OAAAA,EAA+D,SAAAP,WAAA,iEAAAO,GAAuGD,GAAAE,UAAAC,OAAAC,OAAAH,KAAAC,WAAyEG,aAAeC,MAAAN,EAAAO,YAAA,EAAAC,UAAA,EAAAC,cAAA,KAA6ER,IAAAE,OAAAO,eAAAP,OAAAO,eAAAV,EAAAC,GAAAD,EAAAW,UAAAV,GAxBrXE,OAAAS,eAAA6F,EAAA,cACAnG,OAAA,GAGA,IAAAwG,GAAA3G,OAAA4G,QAAA,SAAAvF,GAAmD,OAAAE,GAAA,EAAgBA,EAAAW,UAAAV,OAAsBD,IAAA,CAAO,GAAAsF,GAAA3E,UAAAX,EAA2B,QAAAG,KAAAmF,GAA0B7G,OAAAD,UAAA+G,eAAApH,KAAAmH,EAAAnF,KAAyDL,EAAAK,GAAAmF,EAAAnF,IAAiC,MAAAL,IAE/OF,EAAA,WAAgC,QAAAC,GAAAC,EAAAC,GAA2C,OAAAC,GAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,GAAAE,GAAAH,EAAAC,EAA2BE,GAAArB,WAAAqB,EAAArB,aAAA,EAAwDqB,EAAAnB,cAAA,EAAgC,SAAAmB,OAAApB,UAAA,GAAuDL,OAAAS,eAAAY,EAAAI,EAAAC,IAAAD,IAA+D,gBAAAnC,EAAAqC,EAAAC,GAA2L,MAAlID,IAAAP,EAAA9B,EAAAS,UAAA4B,GAAqEC,GAAAR,EAAA9B,EAAAsC,GAA6DtC,MAExhByH,EAAA5H,EAAA,GAEA6H,EAAAT,EAAAQ,GAEAE,EAAA9H,EAAA,GAEA+H,EAAAX,EAAAU,GAEAE,EAAAhI,EAAA,GAUAiI,MAAA,GAEAC,EAAA,SAAAvF,GAGA,QAAAuF,KAGA,MAFAjI,GAAA2C,KAAAsF,GAEA7H,EAAAuC,MAAAsF,EAAA7G,WAAAR,OAAAgC,eAAAqF,IAAApF,MAAAF,KAAAG,YA2GA,MAhHAtC,GAAAyH,EAAAvF,GAQAX,EAAAkG,IACA3F,IAAA,oBACAvB,MAAA,WACAiH,EAAAjI,EAAA,MACA4C,KAAAuF,YAAAvF,KAAAT,UAGAI,IAAA,4BACAvB,MAAA,SAAAoH,GACAxF,KAAAuF,YAAAC,MAGA7F,IAAA,uBACAvB,MAAA,WACA4B,KAAAyF,kBAGA9F,IAAA,eACAvB,MAAA,WACA,IACA4B,KAAA0F,MAAA1F,KAAA0F,MAAAC,UACO,MAAAC,GACP,SAAAC,OAAA,oBAAAD,OAIAjG,IAAA,gBACAvB,MAAA,SAAA0H,EAAAC,GACA,GAAAC,GAAApB,GAAgCqB,OAAAH,GAAoBC,EACpD,OAAAV,GAAAa,SAAAF,MAGArG,IAAA,cACAvB,MAAA,SAAAkD,GACAtB,KAAA0F,MAAAS,KAAA7E,MAGA3B,IAAA,aACAvB,MAAA,WACA4B,KAAA0F,MAAAU,YAGAzG,IAAA,cACAvB,MAAA,SAAA2H,GACA/F,KAAA0F,QACA1F,KAAA0F,MAAA1F,KAAAqG,eAAA,EAAAjB,EAAAkB,aAAAtG,MAAA+F,IAGAA,EAAAQ,kBACAvG,KAAAwG,aAGAxG,KAAAyG,YAAAV,EAAAzE,SAGA3B,IAAA,SACAvB,MAAA,WACA,GAAA+F,GAAAnE,KAAAT,MAAA4E,UAAA,IAAAnE,KAAAT,MAAA4E,UAAA,GACAuC,EAAA1G,KAAAT,MAAAmH,MAAA1G,KAAAT,MAAAmH,QACA,OAAAzB,GAAAN,QAAAtE,cAAA,OAAmD8D,YAAAuC,eAGnD/G,IAAA,cACAgH,IAAA,WACA,mBAGAhH,IAAA,YACAgH,IAAA,WACA,OACArF,KAAA6D,EAAAR,QAAAiC,OAAAC,WACAvG,MAAA6E,EAAAR,QAAAiC,OACA/D,KAAAsC,EAAAR,QAAAiC,OACA7D,QAAAoC,EAAAR,QAAAiC,OACApF,MAAA2D,EAAAR,QAAAiC,OACAE,YAAA3B,EAAAR,QAAAiC,OACAG,WAAA5B,EAAAR,QAAAiC,OACAI,OAAA7B,EAAAR,QAAAsC,KACAC,WAAA/B,EAAAR,QAAAsC,KACAE,YAAAhC,EAAAR,QAAAsC,KACAG,WAAAjC,EAAAR,QAAAsC,KACAI,SAAAlC,EAAAR,QAAAsC,KACAK,UAAAnC,EAAAR,QAAAsC,KACAvF,KAAAyD,EAAAR,QAAAiC,OACAzE,KAAAgD,EAAAR,QAAAiC,OACAW,QAAApC,EAAAR,QAAA6C,MACAC,OAAAtC,EAAAR,QAAAiC,OACAc,QAAAvC,EAAAR,QAAAiC,OACAjD,SAAAwB,EAAAR,QAAAiC,OACAhD,KAAAuB,EAAAR,QAAAiC,OACAe,MAAAxC,EAAAR,QAAAiC,OACAvF,KAAA8D,EAAAR,QAAAiC,OACA1C,KAAAiB,EAAAR,QAAAiC,OACA3D,IAAAkC,EAAAR,QAAAiC,OACA7C,IAAAoB,EAAAR,QAAAiC,OACA5C,MAAAmB,EAAAR,QAAAiC,OACAgB,MAAAzC,EAAAR,QAAAiC,OACAzC,UAAAgB,EAAAR,QAAAkD,OACAnB,MAAAvB,EAAAR,QAAAiC,OACAL,iBAAApB,EAAAR,QAAAmD,UAKAxC,GACCL,EAAAN,QAAApE,UAEDgE,GAAAI,QAAAW,GHwCMyC,KACA,SAAU7K,EAAQqH,EAASnH,II1LjC,SAAA4K,EAAAC,GACA/K,EAAAqH,QAAA0D,KAGCjI,EAAA,WAAqB,YAgLtB,SAAAkI,GAAAC,EAAAC,GACA,GAAAC,GAAArI,IACAqI,GAAAF,YACAE,EAAAD,aAEAC,EAAAC,GAAAH,EAAAG,GACAD,EAAAE,MAAAF,EAAAC,GAAAC,MAAAC,SACAH,EAAAI,MACAJ,EAAAK,OAAA,SACAL,EAAAM,cAAA,EACAN,EAAAO,cAAA5I,KAAAoI,OAAAS,cAAA,IACAR,EAAAS,YAAA,EACAT,EAAAU,WAAA,KACAV,EAAAW,WACAX,EAAAY,cAEAZ,EAAAa,WAAA,EACAb,EAAAc,aAAA,EACAd,EAAAe,aACAf,EAAAgB,iBACAhB,EAAAiB,eAAAjB,EAAAD,OAAAkB,eACAjB,EAAAkB,WAEAlB,EAAA3G,KAAA2G,EAAAmB,eA+yBA,QAAAjJ,GAAAkJ,EAAAC,EAAAC,GACA3J,KAAAyJ,QACApE,EAAAK,MAAA2C,SAAAqB,GAAAC,EAGA,QAAAC,GAAA7D,GACA,GAAA8D,GAAA7J,KAAAqI,SAAA,GAAAyB,GAAA9J,KACA6J,GAAAE,WAAAhE,GAEA8D,EAAAG,WAAAjE,GACA8D,EAAAI,OACAJ,EAAAK,UAAAnE,GAGA,QAAAoE,GAAAR,EAAArK,EAAA8K,GACAnM,OAAAoM,KAAAV,GAAAW,QAAA,SAAA3K,GACAL,EAAAK,GAAAgK,EAAAhK,GAAA4K,KAAAH,GACAnM,OAAAoM,KAAAV,EAAAhK,IAAAF,OAAA,GACA0K,EAAAR,EAAAhK,GAAAL,EAAAK,GAAAyK,MAGSI,EAAAxK,WAGT,QAAA8J,GAAAW,GACA,GAAAZ,GAAA7J,IACA6J,GAAAvB,GAAAoC,OAAApC,GAAAoC,OAAApC,GAAAlL,EAAA,MACAyM,EAAAY,MACAZ,EAAA9D,OAAA8D,EAAAc,mBACAd,EAAAvI,QACAuI,EAAAe,SACAf,EAAAgB,QAnhCA,GA2KAC,GACAC,EA5KAC,GACA1L,OAAA,YACAoG,MAAA,WACAuF,UAAA,gBACAC,WAAA,iBACAC,SAAA,eACAC,UAAA,gBACAC,UAAA,gBACAC,WAAA,iBACAC,SAAA,eACAC,UAAA,gBACAC,eAAA,sBACAC,oBAAA,2BACAC,mBAAA,2BACAC,kBAAA,0BACAC,kBAAA,0BACAC,eAAA,qBACAC,gBAAA,sBACAC,UAAA,gBACAC,WAAA,iBACAC,iBAAA,wBACAC,mBAAA,0BACAC,SAAA,eACAC,MAAA,WACAC,QAAA,aACAC,UAAA,eACAC,OAAA,YACAjF,QAAA,aACAjH,MAAA,WACAmM,iBAAA,uBACA/E,QAAA,aACAgF,YAAA,kBACAC,MAAA,WACAC,OAAA,YACAvL,KAAA,UACAgC,MAAA,WACAJ,IAAA,SACA4J,KAAA,UACAC,OAAA,YACAC,QAAA,aACAC,IAAA,SACAC,aAAA,oBACAC,KAAA,UACAhJ,KAAA,UACAiJ,MAAA,WACAC,MAAA,WACAC,KAAA,UACAC,MAAA,WACAC,WAAA,iBACApL,KAAA,UACAqL,UAAA,gBACAC,MAAA,WACAC,OAAA,YACAC,UAAA,gBACAC,WAAA,iBACAC,WAAA,iBACAC,MAAA,WACAC,OAAA,YACAC,UAAA,gBACAC,WAAA,iBACAvM,KAAA,UACAwM,MAAA,YACAC,WAAA,kBACAC,MAAA,YACAC,WAAA,kBACAC,OAAA,aACAC,YAAA,mBACAC,iBAAA,uBACAC,WAAA,iBACAC,gBAAA,uBACAC,eAAA,sBACAC,iBAAA,wBACAC,kBAAA,yBACAC,SAAA,cACAC,SAAA,aACAC,SAAA,aACAC,SAAA,cAGAC,EAAA,mBAAAC,SAAA,iBAAAA,QAAAC,SAAA,SAAA3K,GACA,aAAAA,IACK,SAAAA,GACL,MAAAA,IAAA,mBAAA0K,SAAA1K,EAAAtG,cAAAgR,QAAA1K,IAAA0K,OAAAnR,UAAA,eAAAyG,IAGA4K,EAAA,SAAA/R,EAAAC,GACA,KAAAD,YAAAC,IACA,SAAAC,WAAA,sCAIA8R,EAAA,SAAAxR,EAAAC,GACA,sBAAAA,IAAA,OAAAA,EACA,SAAAP,WAAA,iEAAAO,GAGAD,GAAAE,UAAAC,OAAAC,OAAAH,KAAAC,WACAG,aACAC,MAAAN,EACAO,YAAA,EACAC,UAAA,EACAC,cAAA,KAGAR,IAAAE,OAAAO,eAAAP,OAAAO,eAAAV,EAAAC,GAAAD,EAAAW,UAAAV,IAGAwR,EAAA,SAAA7R,EAAAC,GACA,IAAAD,EACA,SAAAE,gBAAA,4DAGA,QAAAD,GAAA,iBAAAA,IAAA,mBAAAA,GAAAD,EAAAC,GAGA6R,EAAA,SAAAC,GACA,MAAAA,IAAA,IAAAA,GAEAC,EAAA,SAAAC,GACA,yBAAAA,IAEAC,EAAA,SAAAD,GACA,MAAAE,OAAAD,QAAAD,IAEAG,EAAA,SAAAH,GACA,uBAAAA,IAEAI,EAAA,SAAAN,GACA,0BAAAA,IAEAO,EAAA,SAAAP,GACA,0BAAAA,IAEAQ,EAAA,SAAAR,GACA,UAAAS,KAAAC,KAAAV,EAAA,KAEAW,EAAA,SAAArR,GACA,MAAAmR,MAAAC,KAAApR,GAAA,IAEAsR,EAAA,SAAAC,GACA,MAAAA,GAAA,GAAAA,EAAA,IAEAC,EAAA,SAAAZ,GACA,0BAAAA,IAAA,OAAAA,GAAAG,EAAAH,IAAA,IAAAA,EAAAlQ,QAAA,gCAAAkQ,GAAA,YAAAT,EAAAS,KAAA,IAAA1R,OAAAoM,KAAAsF,GAAAlQ,QAEA+Q,EAAA,SAAAb,GACA,OAAAc,EAAAF,QAAAZ,IAEAe,EAAA,SAAAC,EAAAhR,EAAAiR,GACA,MAAAZ,GAAAW,EAAAhR,IAAAgR,EAAAhR,GAAAiR,GAEAC,EAAA,SAAAC,EAAA1S,GACA,GAAA2S,IAAA,CAMA,OALA9S,QAAAoM,KAAAyG,GAAAxG,QAAA,SAAA3K,GACAmR,EAAAnR,KAAAvB,IACA2S,GAAA,KAGAA,GAEAC,EAAA,SAAAC,GACA,uBAAAA,KAAAC,QAAA,aAAgEA,QAAA,aAAsBD,GAEtFE,EAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAE,wBACAC,GAAAH,EAAAI,YAAAC,QAAA,GAAAL,EAAAI,YAAAC,QAAA,GAGA,QAAgB9P,EAFhB4P,EAAA,GAAA5P,EAEgBG,EADhBoO,KAAAlO,IAAAuP,EAAA,GAAAzP,EAAAyP,EAAA,GAAAzP,GACgBoB,MAAAmO,EAAAnO,MAAAJ,OAAAuO,EAAAvO,QA+BhBiI,GAAA7C,EAAAlK,UAEA+M,EAAAmD,MAAA,SAAAwD,EAAA/P,EAAAuH,GACAwI,EAAAC,KAAA,qBAAArB,GACA,mBAAAJ,KAAAC,KAAAxO,EAAA2O,GAAApH,GAAA,UAGA6B,EAAAqD,MAAA,SAAAsD,EAAA5P,GACA4P,EAAAC,KAAA,qBAAArB,GACA,qBAAAJ,KAAAC,KAAArO,EAAAwO,IAAA,OAGAvF,EAAA6G,YAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA,GACAE,EAAAF,IAAApS,OAAA,EACA,OAAAqS,GAAAC,GAAAD,EAAAC,MAAAD,IAEA/G,EAAAiH,cAAA,SAAAzJ,GACA,GACA/I,GACAqS,EAFAxJ,EAAArI,KAGAiS,IACA,IAAA1J,EAAA0J,MACA,MAAA1J,GAAA0J,MAAA/R,MAAAqI,EAAAF,EAAAY,cAGA,KADA4I,EAAAtJ,EAAAsJ,SACArS,EAAA0Q,KAAAC,KAAA0B,EAAA,IAAsCrS,EAAAqS,EAAA,GAAerS,IACrDyS,EAAAC,KAAA1S,EAKA,OAHAyS,GAAAxS,OAAA,GAAAwS,EAAA,MACAA,EAAAE,QAAAF,EAAA,IAAAA,EAAA,GAAAA,EAAA,KAEAA,GAEAlH,EAAAqH,UAAA,WACA,GAEAP,GAFAxJ,EAAArI,KACAqS,EAAAhK,EAAAE,MAAA+J,MAMA,OAJAjK,GAAAD,OAAAmK,aACAV,EAAAxJ,EAAAE,MAAAsJ,SACAQ,EAAAR,UAAA,GAAAA,EAAA,QAEAQ,GAEAtH,EAAAyH,cAAA,SAAA/C,GACA,GAAApH,GAAArI,KACAyS,EAAApK,EAAAW,WAAAX,EAAAW,WAAAyG,IACA,2BAAAgD,KAAA,IAEA1H,EAAA2H,YAAA,WACA,GAAArK,GAAArI,IAEA,OADAqI,GAAAI,MAAAJ,EAAAE,MAAAoK,YAAAtK,EAAAE,MAAAoK,cAAAtK,EAAAuJ,YAAAvJ,EAAAE,MAAAE,SACAJ,EAAAI,OAEAsC,EAAA6H,uBAAA,SAAAhR,GACA,GAAAyG,GAAArI,IACA,IAAAqI,EAAAgB,iBACA,MAAAhB,GAAAgB,gBAEA,IAAAxG,IACAgQ,EAAA,KACAC,EAAA,IAeA,OAbAlR,GAAAmR,OAAA,QAAA1F,KAAA,SAAAiD,GACA,MAAAjI,GAAAmK,cAAAlC,KACS0C,KAAA,SAAA1C,GACT,GAAAe,GAAArR,KAAAsR,wBACAjE,EAAAhF,EAAAmK,cAAAlC,GACAuC,EAAAxB,EAAAvO,OACAgQ,EAAAzF,EAAAgE,EAAAnO,MAAAmK,EAAA5N,WAAAwT,EACAJ,IAAAC,IACAjQ,EAAAgQ,IACAhQ,EAAAiQ,OAESzF,KAAA,IACThF,EAAAgB,iBAAAxG,EACAA,GAEAkI,EAAAmI,cAAA,SAAAxB,GACA,MAAA1R,MAAAoI,OAAA+K,kBAAAzB,EAAA1R,KAAAsI,GAAAvB,WAAA2K,IAEA3G,EAAAqI,WAAA,WACA,eAAApT,KAAA0I,QAAA,UAAA1I,KAAA0I,QAEAqC,EAAAsI,UAAA,SAAA/C,EAAA9Q,EAAAyS,EAAA1J,GACA,GAAAF,GAAArI,KACAsT,EAAAjL,EAAAD,OAAAmL,cAAAlL,EAAAmL,cAAAlD,EAAA2B,EAAA1J,MAAAkL,OAAApL,EAAAmK,cAAAlC,GAMA,OAJAjI,GAAAD,OAAAmL,eAAAlL,EAAAD,OAAAsL,iBAAA,IACAJ,EAAAjL,EAAAsL,UAAAL,EAAAjL,EAAAD,OAAAsL,mBAGAJ,EAAAM,IAAA,SAAAC,GACA,OAAoBC,MAAAtU,EAAA8T,SAAAO,EAAApU,OAAA6T,EAAA7T,WAGpBsL,EAAAyI,cAAA,SAAAlD,EAAA2B,EAAA1J,GAiBA,QAAAwL,GAAAT,EAAAjG,GACA2G,MAAAf,EACA,QAAAzT,GAAA,EAA2BA,EAAA6N,EAAA5N,OAAiBD,IAO5C,GANA,MAAA6N,EAAA4G,OAAAzU,KACAwU,EAAAxU,GAEA0U,EAAA7G,EAAA8G,OAAA,EAAA3U,EAAA,GACA4U,EAAA/L,EAAAgB,iBAAAyJ,EAAAoB,EAAAzU,OAEA4U,EAAAD,EACA,MAAAL,GAAAT,EAAAG,OAAApG,EAAA8G,OAAA,EAAAH,GAAAxU,IAAA6N,EAAAiH,MAAAN,IAAA,EAAAxU,GAGA,OAAA8T,GAAAG,OAAApG,GA7BA,GAGA6G,GACAF,EACAI,EALA/L,EAAArI,KACAuU,EAAAlM,EAAAmK,cAAAlC,GACA+D,EAAAhM,EAAAD,OAAAoM,UAIAlB,IAEA,0BAAArV,OAAAD,UAAAyW,SAAA9W,KAAA4W,GACAA,KAGAF,MAAA,KACAA,EAAAhM,EAAA+K,aAAA,GAAA/K,EAAAD,OAAAmK,WAAArC,KAAAC,KAAA5H,EAAA0J,EAAA,IAAA1J,EAAA0J,EAAA,aAmBA8B,EAAAT,EAAAiB,EAAA,MAEAxJ,EAAA4I,UAAA,SAAAL,EAAAvR,GACA,GAAAuR,EAAA7T,QAAAsC,EACA,MAAAuR,EAKA,QAFAoB,GAAApB,EAAAgB,MAAA,EAAAvS,GACA4S,EAAA,EACAnV,EAAAuC,EAAA,EAA6BvC,GAAA,EAAQA,IAAA,CACrC,GAAAoV,GAAAF,EAAAlV,GAAAC,MAMA,IAJAiV,EAAAlV,GAAAkV,EAAAlV,GAAA2U,OAAA,EAAAS,EAAAD,GAAAE,OAAAD,EAAA,MAEAD,GAAAC,IAEA,EACA,MAIA,MAAAF,IAEA3J,EAAA+J,iBAAA,WACA,GAAAzM,GAAArI,IACAqI,GAAAkB,WAAA2G,KAAAnO,IAAAsG,EAAAM,cAAA,GAAAN,EAAAS,aAEAiC,EAAAgK,OAAA,SAAAzE,GACA,GAAAjI,GAAArI,KACAgV,EAAA3M,EAAAE,MAAA+H,IAAAjI,EAAAe,aAAA,EAAAf,EAAAa,WACA,OAAAb,GAAAI,MAAA,GAAAuM,KAAA3M,EAAAI,MAAA,GAAAJ,EAAAM,cAAA,GAEAoC,EAAAkK,MAAA,WACA,GAAA5M,GAAArI,KACAkV,EAAA7M,EAAAiB,cACA,OAAA4L,GAAA,KAAAA,EAAA,QAAAA,EAAA,QAAA7M,EAAAkB,YAEAwB,EAAAoK,cAAA,WACA,GAAA9M,GAAArI,KACAkV,EAAA7M,EAAAiB,cACA,OAAA4L,GAAA,UAAAA,EAAA,QAEAnK,EAAAqK,eAAA,WACA,GAAA/M,GAAArI,KACAkV,EAAA7M,EAAAiB,cACA,OAAA4L,KAAA,0BAEAnK,EAAAsK,QAAA,WACA,GAAAhN,GAAArI,KACAkV,EAAA7M,EAAAiB,cACA,OAAA4L,GAAA,EAAAhF,KAAAoF,IAAApF,KAAAqF,IAAAL,EAAA,SAEAnK,EAAAyK,QAAA,SAAAlF,EAAA9Q,GACA,GAAA6I,GAAArI,KACAyV,EAAApN,EAAAgB,iBAAAwJ,CAQA,OAPA,KAAArT,IAEAiW,EADApN,EAAA+K,gBACA9C,EAAA7Q,OAAA,IAAA4I,EAAAgB,iBAAAwJ,EAAA,MAEA,SAGA4C,GAGA1K,EAAAvB,aAAA,WAIA,QAAA9H,GAAAgU,GACAA,EAAA1C,KAAA,WACA,GAYA2C,GACAC,EACAC,EAdAH,EAAAhU,EAAAgU,EAAApN,EAAAyK,OAAA/S,MAEA8V,EAAA9V,KAAA+V,WAAA1N,EAAAE,MACAyN,EAAAhW,KAAA+V,UAAA1N,EAAA+J,YAEAH,EAAA5J,EAAAU,WAAAV,EAAAU,WAAAV,EAAA2J,cAAAgE,GACApU,EAAA8T,EAAAO,UAAA,SAAA3U,KAAA2Q,EAAA+D,GACAE,EAAAtU,EAAAuU,QAAAC,OAAA,eAAAzE,KAAA,gBAAAjL,MAAA,gBAGA2P,EAAAzU,EAAA0U,OAAAC,SACAC,EAAAnO,EAAA6K,cAAAtR,GAAA8E,MAAA,YAKA0B,GAAAmK,YACAlK,EAAAa,WAAAgH,KAAAC,MAAA6F,EAAA,GAAAA,EAAA,OACAJ,EAAAvN,EAAAe,aAAA,EAAAf,EAAAa,WACA2M,EAAAxN,EAAAe,aAAAf,EAAAa,WAAA,GAEAb,EAAAa,WAAA0M,EAAA,EAGAM,EAAAO,OAAA,QACAP,EAAAO,OAAA,QAEApO,EAAAqK,cACArK,EAAAyM,mBACAzM,EAAAuK,uBAAA8C,EAAA3C,OAAA,SAEA,IAAA2D,GAAAF,EAAAzD,OAAA,QACA4D,EAAAH,EAAAzD,OAAA,QACA6D,EAAAhV,EAAAmR,OAAA,QAAAkD,UAAA,SAAA3U,KAAA,SAAAgP,EAAA9Q,GACA,MAAA6I,GAAAgL,UAAA/C,EAAA9Q,EAAAyS,EAAA+D,IAGAY,GAAAT,QAAAM,OAAA,SACAG,EAAAN,OAAAC,SACAK,EAAAvJ,KAAA,SAAAiD,GACA,MAAAA,GAAAgD,UAGA,IAAAlC,GAAAsE,EAAAO,UAAA,WAAA3U,MAAA,IACAuV,GAAAzF,EAAA+E,QAAAM,OAAA,QAAA9E,KAAA,kBAAAtJ,EAAA6K,cAAA9B,GAGA,QAAA/I,EAAAK,QACA,aAEAiN,EAAAtN,EAAA6F,MACAwI,EAAA/E,KAAA,KAAAiE,GAAAjE,KAAA,KAAAiE,GAAAjE,KAAA,cAAArB,EAAA9Q,GACA,MAAA6I,GAAA0M,OAAAzE,EAAA9Q,KAEAmX,EAAAhF,KAAA,OAAAA,KAAA,aAAArB,EAAA9Q,GACA,MAAA6I,GAAA4M,MAAA3E,EAAA9Q,KAC6BmS,KAAA,qBAAArB,EAAA9Q,GAC7B,MAAA6I,GAAA8M,cAAA7E,EAAA9Q,KAC6BkH,MAAA,uBAAA4J,EAAA9Q,GAC7B,MAAA6I,GAAA+M,eAAA9E,EAAA9Q,KAEAoX,EAAAjF,KAAA,OAAAA,KAAA,cAAArB,EAAA9Q,GACA,MAAA6I,GAAAmN,QAAAlF,EAAA9Q,KAC6BmS,KAAA,cAAArB,EAAA9Q,GAC7B,MAAA6I,GAAAgN,QAAA/E,EAAA9Q,KAEAqX,EAAAlF,KAAA,QAAAtJ,EAAAI,MAAA,OAAAJ,EAAAO,cAAA,MAAAP,EAAAI,MAAA,OAAAJ,EAAAO,cACA,MAEA,WAGA+M,EAAAtN,EAAA6F,MACAwI,EAAA/E,KAAA,KAAAiE,GAAAjE,KAAA,KAAAiE,GAAAjE,KAAA,cAAArB,EAAA9Q,GACA,SAAA6I,EAAA0M,OAAAzE,EAAA9Q,KAEAmX,EAAAhF,KAAA,OAAAA,KAAA,aAAArB,EAAA9Q,GACA,SAAA6I,EAAA4M,MAAA3E,EAAA9Q,IAAA4I,EAAAmK,WAAA,EAAAlK,EAAAkB,WAAA,KAC6BoI,KAAA,qBAAArB,EAAA9Q,GAC7B,MAAA6I,GAAA8M,cAAA7E,EAAA9Q,KAC6BkH,MAAA,uBAAA4J,EAAA9Q,GAC7B,MAAA6I,GAAA+M,eAAA9E,EAAA9Q,KAEAoX,EAAAjF,KAAA,OAAAA,KAAA,cAAArB,EAAA9Q,GACA,MAAA6I,GAAAmN,QAAAlF,EAAA9Q,KAC6BmS,KAAA,cAAArB,EAAA9Q,GAC7B,MAAA6I,GAAAgN,QAAA/E,EAAA9Q,KAEAqX,EAAAlF,KAAA,QAAAtJ,EAAAI,MAAA,QAAAJ,EAAAO,cAAA,MAAAP,EAAAI,MAAA,QAAAJ,EAAAO,cACA,MAEA,YAEA+M,EAAAtN,EAAA+F,MACAsI,EAAA/E,KAAA,MAAAtJ,EAAAM,eAAAgJ,KAAA,KAAAkE,GAAAlE,KAAA,KAAAkE,GACAc,EAAAhF,KAAA,KAAAtJ,EAAAkB,YAAAoI,KAAA,IAAAtJ,EAAAa,YAAAxC,MAAA,qBACAkQ,EAAAjF,KAAA,KAAAtJ,EAAAkB,YAAAoI,KAAA,cAAArB,EAAA9Q,GACA,MAAA6I,GAAAmN,QAAAlF,EAAA9Q,KAEAqX,EAAAlF,KAAA,SAAAtJ,EAAAO,cAAA,IAAAP,EAAAI,MAAA,SAAAJ,EAAAI,MAAA,QAAAJ,EAAAO,cACA,MAEA,aAEA+M,EAAAtN,EAAA+F,MACAsI,EAAA/E,KAAA,KAAAtJ,EAAAM,eAAAgJ,KAAA,KAAAkE,GAAAlE,KAAA,KAAAkE,GACAc,EAAAhF,KAAA,IAAAtJ,EAAAkB,YAAAoI,KAAA,IAAAtJ,EAAAa,YAAAxC,MAAA,uBACAkQ,EAAAjF,KAAA,IAAAtJ,EAAAkB,YAAAoI,KAAA,cAAArB,EAAA9Q,GACA,MAAA6I,GAAAmN,QAAAlF,EAAA9Q,KAEAqX,EAAAlF,KAAA,QAAAtJ,EAAAO,cAAA,IAAAP,EAAAI,MAAA,SAAAJ,EAAAI,MAAA,OAAAJ,EAAAO,eAIA,GAAAoN,EAAAc,UAAA,CACA,GAAAnV,GAAAqU,EACAe,EAAApV,EAAAmV,YAAA,CACAhB,GAAAE,EAAA,SAAA1F,GACA,MAAA3O,GAAA2O,GAAAyG,OAEiBjB,GAAAgB,UACjBhB,EAAAE,EAEAK,EAAA1Y,KAAAgY,EAAAK,EAAA3N,EAAAa,WAEAgN,GAAAvY,KAAAgY,EAAAG,EAAAzN,EAAAa,YACAsN,EAAA7Y,KAAAgY,EAAAK,EAAA3N,EAAAa,cAnIA,GAAAb,GAAArI,KACAsI,EAAAD,EAAAC,GACAF,EAAAC,EAAAD,MAwMA,OApEA1G,GAAA6G,MAAA,SAAA5G,GACA,MAAAxB,WAAAV,QAGA4I,EAAAE,MAAA5G,EACAD,GAHA2G,EAAAE,OAKA7G,EAAAgH,OAAA,SAAA/G,GACA,MAAAxB,WAAAV,QAGA4I,EAAAK,OAAA/G,KAAoCqV,IAAA,EAAAhU,MAAA,EAAAiU,OAAA,EAAAC,KAAA,GAAuCvV,EAAA,YAC3ED,GAHA2G,EAAAK,QAKAhH,EAAAsH,WAAA,SAAAmO,GACA,MAAAhX,WAAAV,QAGA4I,EAAAW,WAAAmO,EACAzV,GAHA2G,EAAAW,YAKAtH,EAAA0H,aAAA,SAAAgO,GACA,MAAAjX,WAAAV,QAGA4I,EAAAe,aAAAgO,EACA1V,GAHA2G,EAAAe,cAKA1H,EAAAwH,WAAA,WACA,MAAAb,GAAAa,YAEAxH,EAAA2V,aAAA,WACA,GAAAC,GAAA7X,CAOA,OANA2I,GAAAmK,WACA+E,EAAA,EAAAjP,EAAAa,YAEAzJ,EAAAiC,EAAAgU,EAAA3C,OAAA,eAAAwE,OAAAC,iBAAA,EAAAnP,EAAAO,cACA0O,EAAA7X,EAAAiC,EAAAgU,EAAAO,UAAA,QAAApT,QAEAyU,IAAAG,IAAA,EAAAH,GAEA5V,EAAAuQ,MAAA,WACA,MAAA9R,WAAAV,QAGA4I,EAAAY,cAAA9I,UACAuB,GAHA2G,EAAAY,eAKAvH,EAAAyH,YAAA,SAAAuO,GACA,MAAAvX,WAAAV,QAGA4I,EAAAc,YAAAuO,EACAhW,GAHA2G,EAAAc,aAKAzH,EAAAqH,WAAA,SAAApH,GACA,sBAAAA,GACA0G,EAAAU,WAAA,WACA,MAAApH,GAAA0G,EAAAE,MAAAsJ,eAEa,CACb,IAAA1R,UAAAV,OACA,MAAA4I,GAAAU,UAEAV,GAAAU,WAAApH,EAEA,MAAAD,IAEAA,EAGA,IAAAiW,GAAA,SAAAC,GAGA,QAAAD,GAAAlO,GACA4F,EAAArP,KAAA2X,EAEA,IAAAhO,IACAA,GAAAmB,EACAzC,UACAsB,GAAAoB,IAIA8M,EAAAtI,EAAAvP,MAAA2X,EAAAlZ,WAAAR,OAAAgC,eAAA0X,IAAAha,KAAAqC,KAAAyJ,EAAA,OAAAE,GAIA,OAFAkO,GAAAvP,GAAAmB,EAAAnB,GACAuP,EAAAxP,SAAAH,EACA2P,EAGA,MAnBAvI,GAAAqI,EAAAC,GAmBAD,GACKpX,EAELuK,GAAA6M,EAAA3Z,UAEA8M,EAAAb,KAAA,WACA,GAAAJ,GAAA7J,KAAAyJ,MACA1D,EAAA8D,EAAA9D,OACA+R,EAAAjO,EAAAiO,IACAjO,GAAAgB,KAAAlJ,EAAAmW,EAAArB,OAAA,KAAA9E,KAAA,QAAA3G,EAAAtJ,KAAA,IAAAsJ,EAAAkD,OAAAyD,KAAA,YAAA5L,EAAAgS,aAAA,GAAAlO,EAAAmO,kBAAArG,KAAA,YAAA9H,EAAAoO,aAAA,MAAAvR,MAAA,aAAAX,EAAAmS,YAAA,oBACArO,EAAAgB,KAAAlJ,EAAA8U,OAAA,QAAA9E,KAAA,QAAA3G,EAAAmD,YAAAwD,KAAA,YAAA5L,EAAAoS,aAAA,kBAAAzR,MAAA,cAAA1G,KAAAoY,wBAAA7N,KAAAvK,OACA6J,EAAAgB,KAAA/I,EAAAgW,EAAArB,OAAA,KAAA9E,KAAA,QAAA3G,EAAAtJ,KAAA,IAAAsJ,EAAAoD,OAAAuD,KAAA,YAAA5L,EAAAsS,aAAA,GAAAxO,EAAAyO,kBAAA3G,KAAA,YAAA9H,EAAAoO,aAAA,MAAAvR,MAAA,aAAAX,EAAAwS,YAAA,oBACA1O,EAAAgB,KAAA/I,EAAA2U,OAAA,QAAA9E,KAAA,QAAA3G,EAAAqD,YAAAsD,KAAA,YAAA5L,EAAAoS,aAAA,kBAAAzR,MAAA,cAAA1G,KAAAwY,wBAAAjO,KAAAvK,OAEA6J,EAAAgB,KAAA4N,GAAAX,EAAArB,OAAA,KAAA9E,KAAA,QAAA3G,EAAAtJ,KAAA,IAAAsJ,EAAAsD,QAEAqD,KAAA,YAAA9H,EAAAoO,aAAA,OAAAvR,MAAA,aAAAX,EAAA2S,aAAA,oBACA7O,EAAAgB,KAAA4N,GAAAhC,OAAA,QAAA9E,KAAA,QAAA3G,EAAAuD,aAAAoD,KAAA,YAAA5L,EAAAoS,aAAA,kBAAAzR,MAAA,cAAA1G,KAAA2Y,yBAAApO,KAAAvK,QAEA8K,EAAA8N,SAAA,SAAArQ,EAAAG,EAAAM,EAAAD,EAAAF,EAAAsK,EAAA0F,GACA,GAAAhP,GAAA7J,KAAAyJ,MACA1D,EAAA8D,EAAA9D,OACA+S,GACAvG,WAAA1I,EAAAkP,gBACAlQ,gBACA0K,cAAAxN,EAAAiT,sBACAtF,iBAAA3N,EAAAiT,sBAAAC,OAAAlT,EAAAmT,0BAAA,EACA1E,UAAAzO,EAAAoT,kBACA7P,eAAAuP,EAAA,EAAA9S,EAAAqT,mBACAjG,qBAEAzR,EAAA,GAAA1B,MAAAqI,SAAArI,KAAA8Y,GAAApX,KAAA6G,SAAAG,SAiBA,OAfAmB,GAAAwP,gBAAAtQ,GAAA,mBAAAA,KACAA,IAAA6K,IAAA,SAAAnE,GACA,MAAA5F,GAAAyP,UAAA7J,MAKA/N,EAAAsH,cAAAD,cACAc,EAAAkP,kBACArX,EAAA0H,aAAArD,EAAAwT,sBACAhJ,EAAAxK,EAAAyT,uBACAzT,EAAAyT,qBAAA,IAIA9X,GAEAoJ,EAAA2O,sBAAA,SAAAC,EAAAhY,GACA,GAEAqH,GAFAc,EAAA7J,KAAAyJ,MACA1D,EAAA8D,EAAA9D,MAWA,QATAA,EAAA4T,iBAAA5T,EAAA6T,qBACA7Q,EAAA/I,KAAA6Z,mBAAAhQ,EAAAiQ,qBAAAJ,GAAA3T,EAAA6T,kBAAA/P,EAAAwP,iBAEA3X,EACAA,EAAAqH,eAEAc,EAAAkQ,MAAAhR,cACAc,EAAAmQ,SAAAjR,eAEAA,GAEA+B,EAAAmP,SAAA,SAAA1R,EAAAG,EAAAM,EAAAD,EAAAF,EAAAsK,EAAA0F,GACA,GAAAhP,GAAA7J,KAAAyJ,MACA1D,EAAA8D,EAAA9D,OACA+S,GACAjQ,gBACAsK,oBACA7J,eAAAuP,EAAA,EAAA9S,EAAAmU,oBAEAxY,EAAA,GAAA1B,MAAAqI,SAAArI,KAAA8Y,GAAApX,KAAA6G,SAAAG,UAAAM,aAMA,OALAa,GAAAsQ,gBACAzY,EAAAuQ,MAAApI,EAAAvB,GAAA8R,KAAArU,EAAAsU,wBAAAtU,EAAAuU,2BAEA5Y,EAAAqH,cAEArH,GAEAoJ,EAAAyP,MAAA,SAAAC,GACA,GAAAzU,GAAA/F,KAAAyJ,MAAA1D,MACA,OAAAyU,KAAAzU,GAAA0U,UAAA1U,EAAA0U,UAAAD,GAAA,KAEA1P,EAAA4P,mBAAA,WACA,GAAA7Q,GAAA7J,KAAAyJ,MACA1D,EAAA8D,EAAA9D,OACAoR,EAAAtN,EAAAwP,eAAAxP,EAAA8Q,sBAAA9Q,EAAAkP,gBAAAlP,EAAA+Q,aAAA,SAAAnL,GACA,MAAAA,GAAA,EAAAA,EAAAoL,QAAA,GAAApL,EAWA,OATA1J,GAAA+U,qBACApL,EAAA3J,EAAA+U,oBACA3D,EAAApR,EAAA+U,mBACajR,EAAAwP,iBACblC,EAAA,SAAA4D,GACA,MAAAA,GAAAlR,EAAAmR,eAAAjV,EAAA+U,oBAAAC,GAAA,MAIArL,EAAAyH,GAAA,SAAA1H,GACA,MAAA0H,GAAAxZ,KAAAkM,EAAA4F,IACS0H,GAETrM,EAAAmQ,cAAA,SAAAlS,EAAArH,GACA,MAAAqH,KAAArH,IAAAqH,iBAAAkK,KAEAnI,EAAAoQ,mBAAA,WACA,MAAAlb,MAAAib,cAAAjb,KAAAyJ,MAAA1D,OAAAoV,mBAAAnb,KAAAyJ,MAAAsQ,QAEAjP,EAAAsQ,mBAAA,WACA,MAAApb,MAAAib,cAAAjb,KAAAyJ,MAAA1D,OAAAsV,mBAAArb,KAAAyJ,MAAA6R,QAEAxQ,EAAAyQ,oBAAA,WACA,MAAAvb,MAAAib,cAAAjb,KAAAyJ,MAAA1D,OAAAyV,oBAAAxb,KAAAyJ,MAAAgS,SAEA3Q,EAAA4Q,uBAAA,SAAAC,GACA,GAEAC,GAFA/R,EAAA7J,KAAAyJ,MACA1D,EAAA8D,EAAA9D,MASA,OAPA,MAAA4V,EACAC,EAAA7V,EAAA8V,aACS,OAAAF,EACTC,EAAA7V,EAAA+V,cACS,MAAAH,IACTC,EAAA7V,EAAAgW,cAEAH,GAEA9Q,EAAAkR,aAAA,SAAAL,GACA,GAAAC,GAAA5b,KAAA0b,uBAAAC,EACA,OAAA7L,GAAA8L,SAAAvO,KAAA,MAEAvC,EAAAmR,aAAA,SAAAN,EAAAtO,GACA,GAAAxD,GAAA7J,KAAAyJ,MACA1D,EAAA8D,EAAA9D,OACA6V,EAAA5b,KAAA0b,uBAAAC,EACA7L,GAAA8L,GACA,MAAAD,EACA5V,EAAA8V,aAAAxO,EACa,OAAAsO,EACb5V,EAAA+V,cAAAzO,EACa,MAAAsO,IACb5V,EAAAgW,aAAA1O,GAESuO,IACTA,EAAAvO,SAGAvC,EAAAoR,iBAAA,SAAAP,EAAAQ,GACA,GAAAP,GAAA5b,KAAA0b,uBAAAC,GACAS,EAAAR,GAAA,gCAAAA,GAAA,YAAA1M,EAAA0M,OAAAQ,SAAAR,EAAAQ,SAAAD,CACA,QACAE,QAAAD,EAAAE,QAAA,YACAC,QAAAH,EAAAE,QAAA,YACAE,OAAAJ,EAAAE,QAAA,WACAG,SAAAL,EAAAE,QAAA,aACAI,QAAAN,EAAAE,QAAA,YACAK,MAAAP,EAAAE,QAAA,UACAM,SAAAR,EAAAE,QAAA,aACAO,SAAAT,EAAAE,QAAA,eAGAxR,EAAAgS,sBAAA,WACA,MAAA9c,MAAAkc,iBAAA,IAAAlc,KAAAyJ,MAAA1D,OAAAoS,aAAA,4BAEArN,EAAAiS,sBAAA,WACA,MAAA/c,MAAAkc,iBAAA,IAAAlc,KAAAyJ,MAAA1D,OAAAoS,aAAA,4BAEArN,EAAAkS,uBAAA,WACA,MAAAhd,MAAAkc,iBAAA,KAAAlc,KAAAyJ,MAAA1D,OAAAoS,aAAA,4BAEArN,EAAAmS,qBAAA,SAAAzC,GACA,aAAAA,EAAAxa,KAAAgd,yBAAA,MAAAxC,EAAAxa,KAAA+c,wBAAA/c,KAAA8c,yBAEAhS,EAAAoS,kBAAA,WACA,MAAAld,MAAAgc,aAAA,MAEAlR,EAAAqS,kBAAA,WACA,MAAAnd,MAAAgc,aAAA,MAEAlR,EAAAsS,mBAAA,WACA,MAAApd,MAAAgc,aAAA,OAEAlR,EAAAuS,cAAA,SAAAC,EAAAlB,GACA,GAAAvS,GAAA7J,KAAAyJ,KACA,OAAA6T,GACAlB,EAAAI,OAAA,EAAAJ,EAAAK,SAAA5S,EAAA3G,MAAA,EAAA2G,EAAA3G,MAEAkZ,EAAAS,UAAAhT,EAAA/G,OAAAsZ,EAAAQ,UAAA/S,EAAA/G,OAAA,KAGAgI,EAAAyS,eAAA,SAAAD,EAAAlB,GACA,MAAAkB,GACAlB,EAAAI,OAAA,QAAAJ,EAAAM,QAAA,aAEAN,EAAAO,MAAA,SAAAP,EAAAS,SAAA,aAGA/R,EAAA0S,uBAAA,SAAAF,EAAAlB,GACA,MAAAkB,GACAlB,EAAAI,OAAA,QAAAJ,EAAAK,SAAA,eAEAL,EAAAS,SAAA,QAAAT,EAAAQ,SAAA,gBAGA9R,EAAA2S,eAAA,WACA,MAAAzd,MAAAqd,eAAArd,KAAAyJ,MAAA1D,OAAAoS,aAAAnY,KAAA8c,0BAEAhS,EAAA4S,eAAA,WACA,MAAA1d,MAAAqd,cAAArd,KAAAyJ,MAAA1D,OAAAoS,aAAAnY,KAAA+c,0BAEAjS,EAAA6S,gBAAA,WACA,MAAA3d,MAAAqd,cAAArd,KAAAyJ,MAAA1D,OAAAoS,aAAAnY,KAAAgd,2BAEAlS,EAAA8S,gBAAA,WACA,MAAA5d,MAAAud,gBAAAvd,KAAAyJ,MAAA1D,OAAAoS,aAAAnY,KAAA8c,0BAEAhS,EAAA+S,gBAAA,WACA,MAAA7d,MAAAud,eAAAvd,KAAAyJ,MAAA1D,OAAAoS,aAAAnY,KAAA+c,0BAEAjS,EAAAgT,iBAAA,WACA,MAAA9d,MAAAud,eAAAvd,KAAAyJ,MAAA1D,OAAAoS,aAAAnY,KAAAgd,2BAEAlS,EAAAiT,gBAAA,WACA,GAAAlU,GAAA7J,KAAAyJ,MACA1D,EAAA8D,EAAA9D,OACAqW,EAAApc,KAAA8c,uBACA,OAAA/W,GAAAoS,aACAiE,EAAAC,QAAA,aAAAxS,EAAA9D,OAAAgS,aAAA,EAAA/X,KAAAge,gBAAA,MAEA5B,EAAAC,QAAA,SAAAtW,EAAAkY,cAAAlY,EAAAkY,cAAA,UAGAnT,EAAAoT,gBAAA,WACA,GAAArU,GAAA7J,KAAAyJ,MACA2S,EAAApc,KAAA+c,uBACA,OAAAlT,GAAA9D,OAAAoS,aACAiE,EAAAC,QAAA,eAEAD,EAAAC,QAAA,aAAAxS,EAAA9D,OAAAsS,aAAA,EAAArY,KAAAge,gBAAA,UAGAlT,EAAAqT,iBAAA,WACA,GAAAtU,GAAA7J,KAAAyJ,MACA2S,EAAApc,KAAAgd,wBACA,OAAAnT,GAAA9D,OAAAoS,aACAiE,EAAAC,QAAA,iBAEAD,EAAAC,QAAA,aAAAxS,EAAA9D,OAAAqY,cAAA,EAAApe,KAAAge,gBAAA,WAGAlT,EAAAsN,wBAAA,WACA,GAAAvO,GAAA7J,KAAAyJ,KACA,OAAAzJ,MAAAwd,wBAAA3T,EAAA9D,OAAAoS,aAAAnY,KAAA8c,0BAEAhS,EAAA0N,wBAAA,WACA,GAAA3O,GAAA7J,KAAAyJ,KACA,OAAAzJ,MAAAwd,uBAAA3T,EAAA9D,OAAAoS,aAAAnY,KAAA+c,0BAEAjS,EAAA6N,yBAAA,WACA,GAAA9O,GAAA7J,KAAAyJ,KACA,OAAAzJ,MAAAwd,uBAAA3T,EAAA9D,OAAAoS,aAAAnY,KAAAgd,2BAEAlS,EAAAkT,gBAAA,SAAAxD,EAAA6D,GACA,GAGAC,GACA/V,EACA7G,EACA6c,EACAC,EAPA3U,EAAA7J,KAAAyJ,MACA1D,EAAA8D,EAAA9D,OACAsO,EAAA,CAMA,OAAAgK,IAAAxU,EAAA4U,qBAAAjE,GACA3Q,EAAA4U,qBAAAjE,IAEA3Q,EAAA2U,MACAF,EAAAzU,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SACA,MAAAc,GACAjS,EAAAsB,EAAA/H,EAAAwQ,OAAAT,OAAAhI,EAAA8U,WAAAL,EAAA,MACA5c,EAAA1B,KAAAia,SAAA1R,EAAAsB,EAAA+U,QAAA7Y,EAAA8Y,mBAAAhV,EAAAiV,iBAAA,UACa,OAAAtE,GACbjS,EAAAsB,EAAA4O,GAAAnG,OAAAT,OAAAhI,EAAA8U,WAAAL,EAAA,OACA5c,EAAA1B,KAAAia,SAAA1R,EAAAsB,EAAAkV,SAAAhZ,EAAAiZ,oBAAAnV,EAAAoV,kBAAA,WAEA1W,EAAAsB,EAAAlI,EAAA2Q,OAAAT,OAAAhI,EAAAqV,WAAAZ,IACA5c,EAAA1B,KAAA4Y,SAAArQ,EAAAsB,EAAAsV,QAAAtV,EAAAuV,gBAAAvV,EAAAwV,iBAAA,SACArf,KAAAyZ,sBAAA6E,EAAA5c,IAEA6c,EAAA1U,EAAAvB,GAAAyK,OAAA,QAAA0D,OAAA,OAAA6I,QAAA,SACAd,EAAAD,EAAA9H,OAAA,OAAA/P,MAAA,uBAAAA,MAAA,oBAAAA,MAAA,SAAAA,MAAA,UAAA8X,EAAA/H,OAAA,KAAA9Y,KAAA+D,GAAAsR,KAAA,WACAnJ,EAAAvB,GAAAyK,OAAA/S,MAAAiW,UAAA,QAAAjD,KAAA,WACA,GAAA3B,GAAArR,KAAAsR,uBACA+C,GAAAhD,EAAAnO,QACAmR,EAAAhD,EAAAnO,SAGAqb,EAAAhI,YAGA1M,EAAA4U,qBAAAjE,GAAAnG,GAAA,EAAAxK,EAAA4U,qBAAAjE,GAAAnG,EACAxK,EAAA4U,qBAAAjE,KAGA1P,EAAAyU,aAAA,SAAAC,GACA,GAAA3V,GAAA7J,KAAAyJ,MACA0E,EAAAtE,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAkD,MAAA,KAAAlD,EAAAmD,YACAE,EAAAxE,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAoD,MAAA,KAAApD,EAAAqD,YACAE,EAAA1E,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAsD,OAAA,KAAAtD,EAAAuD,cACAiR,EAAArR,EAAApH,aAAAoH,GAAAwD,KAAA,IAAA3R,KAAAyd,eAAAlT,KAAAvK,OAAA2R,KAAA,KAAA3R,KAAA4d,gBAAArT,KAAAvK,OAAA2R,KAAA,KAAA3R,KAAA+d,gBAAAxT,KAAAvK,OAAAqN,KAAArN,KAAAkd,kBAAA3S,KAAAvK,QACAwf,EAAAnR,EAAAtH,aAAAsH,GAAAsD,KAAA,IAAA3R,KAAA0d,eAAAnT,KAAAvK,OAAA2R,KAAA,KAAA3R,KAAA6d,gBAAAtT,KAAAvK,OAAA2R,KAAA,KAAA3R,KAAAke,gBAAA3T,KAAAvK,OAAAqN,KAAArN,KAAAmd,kBAAA5S,KAAAvK,QACAwf,EAAAjR,EAAAxH,aAAAwH,GAAAoD,KAAA,IAAA3R,KAAA2d,gBAAApT,KAAAvK,OAAA2R,KAAA,KAAA3R,KAAA8d,iBAAAvT,KAAAvK,OAAA2R,KAAA,KAAA3R,KAAAme,iBAAA5T,KAAAvK,OAAAqN,KAAArN,KAAAod,mBAAA7S,KAAAvK,QAEA8K,EAAA2U,WAAA,SAAA1c,EAAApD,EAAAiR,EAAA8O,GACA,GAAAC,GAAA,iBAAA5c,OAAApD,EACA,OAAA6P,GAAAmQ,GAGA,UAAA5c,EAAA6c,KACA7c,EAAApD,GAAA+f,EAGA1f,KAAA6f,2BAAAF,EAAAD,GANA9O,GAQA9F,EAAA+U,2BAAA,SAAAC,EAAAJ,GACA,GAAA7V,GAAA7J,KAAAyJ,KAEA,OAAAiW,IAAAI,GADAjW,EAAA9D,OAAAoS,aAAAtO,EAAA3G,MAAA2G,EAAA/G,UAGAgI,EAAA+O,mBAAA,SAAA3X,EAAA6d,EAAAC,GACA,GACAC,GACAnO,EACAoO,EACAje,EACAqV,EACA9X,EACA2gB,EAPApX,EAAA7G,CAQA,IAAA6d,EAGA,QAFAE,EAAAvQ,EAAAqQ,UAGAhX,GAAA7G,EAAA,QACa,QAAA+d,EACblX,GAAA7G,EAAA,GAAAA,IAAAzC,OAAA,QACa,IAAAwgB,EAAA,GAOb,IANAhe,EAAAge,EAAA,EACAnO,EAAA5P,EAAA,GACAge,EAAAhe,IAAAzC,OAAA,GACA6X,GAAA4I,EAAApO,IAAA7P,EAAA,GAEA8G,GAAA+I,GACAtS,EAAA,EAA2BA,EAAAyC,EAAWzC,IACtC2gB,GAAArO,EAAAwF,GAAA9X,EAAA,GACAuJ,EAAAmJ,KAAA8N,EAAA,GAAAI,MAAAD,KAEApX,GAAAmJ,KAAAgO,GAQA,MALAF,KACAjX,IAAAsX,KAAA,SAAAjgB,EAAAkgB,GACA,MAAAlgB,GAAAkgB,KAGAvX,GAEA+B,EAAAyV,oBAAA,SAAAC,GACA,GAAA3W,GAAA7J,KAAAyJ,MACAoB,EAAAhB,EAAAgB,IACA,QACAqD,MAAAsS,EAAA3V,EAAAlJ,EAAAoF,aAAAyZ,YAAA3V,EAAAlJ,EACAyM,MAAAoS,EAAA3V,EAAA/I,EAAAiF,aAAAyZ,YAAA3V,EAAA/I,EACAwM,OAAAkS,EAAA3V,EAAA4N,GAAA1R,aAAAyZ,YAAA3V,EAAA4N,GACAgI,SAAAD,EAAA3V,EAAA6V,KAAA3Z,aAAAyZ,YAAA3V,EAAA6V,OAGA5V,EAAA6V,OAAA,SAAAC,EAAAC,GACA,GAAAhX,GAAA7J,KAAAyJ,KACAI,GAAAgB,KAAAlJ,EAAA+E,MAAA,UAAAma,EAAA,KACAhX,EAAAgB,KAAA/I,EAAA4E,MAAA,UAAAma,EAAA,KACAhX,EAAAgB,KAAA4N,GAAA/R,MAAA,UAAAma,EAAA,KACAhX,EAAAgB,KAAA6V,KAAAha,MAAA,UAAAma,EAAA,KACAD,EAAA1S,MAAAvQ,KAAAkM,EAAAkQ,OACA6G,EAAAxS,MAAAzQ,KAAAkM,EAAAyR,OACAsF,EAAAtS,OAAA3Q,KAAAkM,EAAA4R,QACAmF,EAAAH,SAAA9iB,KAAAkM,EAAAmQ,UAGA,IAEAxP,GACAiG,EAHApL,GAAcyb,QAAA,SAipQd,OA1mQAzb,GAAAa,SAAA,SAAAH,GACA,UAAA6D,GAAA7D,IAGAV,EAAAK,OACAiE,GAAAC,EAAA5L,UACAqK,UACAsB,GAAAG,EAAA9L,YAGAwM,EAAAnF,EAAAK,MAAAiE,GACA8G,EAAApL,EAAAK,MAAA2C,SAAAsB,GAEA8G,EAAAzG,WAAA,aAGAyG,EAAAvG,UAAA,aAGAuG,EAAAxG,KAAA,WACA,GAAAJ,GAAA7J,KACA+F,EAAA8D,EAAA9D,MAIA,IAFA8D,EAAAkX,aAEAhb,EAAAib,SACAnX,EAAAoX,iBAAAlb,EAAAib,SAAAjb,EAAAmb,cAAAnb,EAAAob,aAAApb,EAAAqb,UAAAvX,EAAAwX,kBACS,IAAAtb,EAAAub,UACTzX,EAAAwX,aAAAxX,EAAA0X,kBAAAxb,EAAAub,UAAAvb,EAAAqb,gBACS,IAAArb,EAAAyb,UACT3X,EAAAwX,aAAAxX,EAAA4X,kBAAA1b,EAAAyb,gBACS,KAAAzb,EAAA2b,aAGT,KAAA7b,OAAA,8CAFAgE,GAAAwX,aAAAxX,EAAA8X,qBAAA5b,EAAA2b,iBAMAjR,EAAAsQ,WAAA,WACA,GAAAlX,GAAA7J,KACAsI,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,MAGA8D,GAAA+X,OAAA,WAAAxB,MAAA,QAAAvW,EAAAgY,eAAAhY,EAAA+X,OAAA,SAAA/X,EAAAiY,eAAAjY,EAAA+X,OAAA,SAAA/X,EAAAkY,cAAAlY,EAAA+X,OAAA,QAAA/X,EAAAmY,kBAAAnY,EAAA+X,OAAA,YAAA/X,EAAAoY,SAAApY,EAAAqY,YAAArY,EAAA+X,QAAA/X,EAAAmO,iBAAAnO,EAAAqY,YAAArY,EAAAgY,gBAAAhY,EAAAyO,iBAAAzO,EAAAqY,YAAArY,EAAAiY,gBACAjY,EAAAsY,gBAAAtY,EAAAqY,YAAArY,EAAAkY,eAAAlY,EAAAuY,oBAAAvY,EAAAqY,YAAArY,EAAAmY,mBAAAnY,EAAAwY,UAAA,KACAxY,EAAAyY,UAAA,EACAzY,EAAA0Y,SAAA,EACA1Y,EAAA2Y,aAAA,EACA3Y,EAAA4Y,WAAA,EACA5Y,EAAA6Y,YAAA,EAEA7Y,EAAArI,MAAAqI,EAAA8Y,gBACA9Y,EAAA+Y,WAAA/Y,EAAAgZ,qBAEAhZ,EAAAiZ,eAAA/c,EAAAgd,gBAAAza,EAAA8R,KAAAjD,OAAA7O,EAAA8R,KAAAjD,OAAA6L,IACAnZ,EAAAmR,eAAAjV,EAAAkd,iBAAA3a,EAAA8R,KAAAjD,OAAA7O,EAAA8R,KAAAjD,OAAA6L,IACAnZ,EAAA8Q,sBAAA9Q,EAAAmR,eAAAkI,QAAA,eAAA5S,GACA,MAAAA,GAAA6S,qBACS,eAAA7S,GACT,MAAAA,GAAA8S,gBACS,iBAAA9S,GACT,MAAAA,GAAA+S,gBACS,iBAAA/S,GACT,MAAAA,GAAAgT,cACS,mBAAAhT,GACT,MAAAA,GAAAiT,UAAA,IAAAjT,EAAAkT,aACS,mBAAAlT,GACT,WAAAA,EAAAkT,aACS,mBAAAlT,GACT,MAAAA,GAAAmT,cACS,wBACT,aAGA5Z,EAAA6Z,mBACA7Z,EAAA8Z,mBACA9Z,EAAA+Z,oBACA/Z,EAAAga,sBAEAha,EAAAsV,QAAApZ,EAAAoS,aAAApS,EAAAgS,aAAA,eAAAhS,EAAAgS,aAAA,eACAlO,EAAA+U,QAAA7Y,EAAAoS,aAAApS,EAAAsS,aAAA,eAAAtS,EAAAsS,aAAA,eACAxO,EAAAkV,SAAAhZ,EAAAoS,aAAApS,EAAAqY,cAAA,eAAArY,EAAAqY,cAAA,eACAvU,EAAAia,WAAA/d,EAAAoS,aAAA,gBAEAtO,EAAAka,cAAA,UAAAhe,EAAAie,gBACAna,EAAAoa,cAAA,UAAAle,EAAAie,gBACAna,EAAAqa,YAAA,aAAAne,EAAAoe,qBAAA,cAAApe,EAAAoe,oBACAta,EAAAua,aAAA,aAAAre,EAAAoe,qBAAA,gBAAApe,EAAAoe,oBACAta,EAAAwa,WAAA,EACAxa,EAAAya,gBAAA,EACAza,EAAA0a,iBAAA,EAEA1a,EAAA4U,sBACA9c,EAAA,EACAG,EAAA,EACA2W,GAAA,GAGA5O,EAAA2a,qBAAA,GACA3a,EAAA4a,sBAAA1e,EAAAoS,eAAApS,EAAAmS,YAAA,KACArO,EAAA6a,oBAAA,EAEA7a,EAAA8a,iBAEA9a,EAAA+a,+BAAA3R,GAEApJ,EAAAgB,KAAA6V,KAAApY,EAAA2N,eAGAxF,EAAAoU,kBAAA,WACA7kB,KAAA8kB,SACA9kB,KAAA8kB,UAEA9kB,KAAA+kB,UACA/kB,KAAA+kB,WAEA/kB,KAAAglB,SACAhlB,KAAAglB,UAEAhlB,KAAAilB,WACAjlB,KAAAilB,YAEAjlB,KAAAklB,UACAllB,KAAAklB,YAIAzU,EAAA4Q,aAAA,SAAA/f,GACA,GAGA6jB,GACArN,EAJAjO,EAAA7J,KACAsI,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,OAGAqf,GAAA,CAEAvb,GAAAnI,KAAA,GAAAiW,GAAA9N,GAEAA,EAAAwb,SACAxb,EAAAwb,UAEAxb,EAAAyb,WACAzb,EAAAyb,YAEAzb,EAAA0b,UACA1b,EAAA0b,WAGAxf,EAAAE,OAES,mBAAAF,GAAAE,OAAAsR,KACT1N,EAAA2b,YAAAzf,EAAAE,OAEA4D,EAAA2b,YAAAld,EAAAyK,OAAAhN,EAAAE,QAJA4D,EAAA2b,YAAAld,EAAA2N,cAMApM,EAAA2b,YAAApY,UACAvD,EAAA2b,YAAAld,EAAAyK,OAAA0S,SAAAplB,cAAA,QAAAqG,MAAA,aACAmD,EAAA6b,gBAAA7b,EAAA2b,aACAJ,GAAA,GAEAvb,EAAA2b,YAAAG,KAAA,IAAArG,QAAA,SAGAzV,EAAAvI,KAAAkB,MACAqH,EAAAvI,KAAAoY,QAAA7P,EAAA+b,qBAAAtkB,GAEAyE,EAAA8f,cACAhc,EAAAvI,KAAAoY,QAAA7P,EAAAvI,KAAAoY,QAAAoM,OAAA/f,EAAA8f,cAIA9f,EAAAggB,WACAlc,EAAAmc,oBAAA,IAAAjgB,EAAAggB,UAAAlc,EAAAoc,SAAApc,EAAAvI,KAAAoY,SAAA3T,EAAAggB,WAEAhgB,EAAAmgB,aACArc,EAAAsc,oBAAA,IAAApgB,EAAAmgB,YAAArc,EAAAoc,SAAApc,EAAAvI,KAAAoY,SAAA3T,EAAAmgB,aAIArc,EAAAuc,cACAvc,EAAAwc,eAGAxc,EAAAlI,EAAAkQ,OAAAvJ,EAAAge,OAAAzc,EAAAqV,WAAArV,EAAAvI,KAAAoY,WACA7P,EAAA/H,EAAA+P,OAAAhI,EAAA8U,WAAA9U,EAAAvI,KAAAoY,QAAA,MACA7P,EAAA4O,GAAA5G,OAAAhI,EAAA8U,WAAA9U,EAAAvI,KAAAoY,QAAA,OACA7P,EAAA0c,KAAA1U,OAAAhI,EAAAlI,EAAAkQ,UACAhI,EAAA2c,KAAA3U,OAAAhI,EAAA/H,EAAA+P,UACAhI,EAAA4c,MAAA5U,OAAAhI,EAAA4O,GAAA5G,UAGAhI,EAAA6c,WAAA7c,EAAAlI,EAAAkQ,SAGAhI,EAAAwC,OACAxC,EAAAwC,MAAA9D,MAAAsB,EAAA0c,MAEAxgB,EAAA4gB,cACA9c,EAAAjG,KAAA2E,MAAAsB,EAAAlI,GAMAkI,EAAA2U,IAAA3U,EAAA2b,YAAA/O,OAAA,OAAA/P,MAAA,qBAAAkgB,GAAA,wBACA,MAAA7gB,GAAAoB,YAAAxJ,KAAAkM,KACS+c,GAAA,wBACT,MAAA7gB,GAAAqB,WAAAzJ,KAAAkM,KAGAA,EAAA9D,OAAA8gB,eACAhd,EAAA2U,IAAA7M,KAAA,QAAA9H,EAAA9D,OAAA8gB,eAIA1B,EAAAtb,EAAA2U,IAAA/H,OAAA,QACA5M,EAAAid,UAAAjd,EAAAkd,WAAA5B,EAAAtb,EAAA+X,QACA/X,EAAAmd,UAAAnd,EAAAkd,WAAA5B,EAAAtb,EAAAgY,gBACAhY,EAAAod,UAAApd,EAAAkd,WAAA5B,EAAAtb,EAAAiY,gBACAjY,EAAAqd,SAAArd,EAAAkd,WAAA5B,EAAAtb,EAAAkY,eACAlY,EAAAsd,aAAAtd,EAAAkd,WAAA5B,EAAAtb,EAAAmY,mBACAnY,EAAAud,gBAGAtP,EAAAjO,EAAAiO,KAAAjO,EAAA2U,IAAA/H,OAAA,KAAA9E,KAAA,YAAA9H,EAAAoO,aAAA,SAEApO,EAAAwd,cACAxd,EAAAwd,eAEAxd,EAAAyd,aACAzd,EAAAyd,cAEAzd,EAAA0d,YACA1d,EAAA0d,aAEA1d,EAAA2d,WACA3d,EAAA2d,YAMA1P,EAAArB,OAAA,QAAA9E,KAAA,QAAA3G,EAAAqC,KAAA,IAAArC,EAAAoC,OAAAuE,KAAA,wBACAA,KAAA,8BAGA9H,EAAA4d,aAGA5d,EAAA6d,WAGA5P,EAAArB,OAAA,KAAA9E,KAAA,YAAA9H,EAAAoY,UAAAtQ,KAAA,QAAA3G,EAAAtF,OAGAK,EAAA4hB,kBACA9d,EAAA+d,gBAIA/d,EAAAge,gBAGAhe,EAAAgb,oBAIA/M,EAAA1B,OAAA,OAAArQ,EAAA+hB,gBAAA,UAAA9c,EAAAzD,SAAAoK,KAAA,QAAA3G,EAAAoB,UAAAuF,KAAA,QAAA9H,EAAA3G,OAAAyO,KAAA,SAAA9H,EAAA/G,QAAA4D,MAAA,aAAAkgB,GAAA,sBAGA7gB,EAAAgiB,eACAle,EAAAwC,MAAAia,OAAAzc,EAAAme,oBAIAne,EAAAnI,KAAAuI,OAGAJ,EAAAoe,cAAApe,EAAAvI,KAAAoY,SAGA0L,IACAvb,EAAAqe,kBACAre,EAAA9D,OAAAiB,OAAArJ,KAAAkM,GACAA,EAAA8W,QACAnB,gBAAA,EACA2I,eAAA,EACAC,mBAAA,EACAC,sBAAA,EACAC,uBAAA,KAKAze,EAAA0e,aAGA1e,EAAAY,IAAA+d,QAAA3e,EAAA2b,YAAAjO,QAGA9G,EAAAgY,YAAA,SAAAC,EAAApmB,GACA,GAAAuH,GAAA7J,IACA,UAAAsC,GACAomB,EAAA1V,KAAA,WACA,GAAA0C,GAAA7L,EAAAvB,GAAAyK,OAAA/S,MACA2oB,EAAAjT,EAAA/D,KAAA,MACAiX,EAAAlT,EAAA/D,KAAA,MACAkX,EAAAnT,EAAA/D,KAAA,MACA8G,EAAA/C,EAAA/D,KAAA,KACA+D,GAAA/D,MACAgX,GAAAzY,KAAAC,KAAAwY,GACAC,GAAA1Y,KAAAC,KAAAyY,GACAC,GAAA3Y,KAAAC,KAAA0Y,GACApQ,GAAAvI,KAAAC,KAAAsI,QAMAhI,EAAA2V,YAAA,WACA,GAAAvc,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA+iB,EAAAjf,EAAApC,OAAAoC,EAAAkf,kBAAA,EACAC,EAAAnf,EAAApC,OAAAoC,EAAAof,iBAAA,EACAC,EAAArf,EAAAka,eAAAla,EAAAoa,cAAA,EAAA6E,EACAK,EAAAtf,EAAAuf,aACAC,EAAAtjB,EAAAoS,cAAAgR,EAAA,EAAAtf,EAAAyf,wBAAA,KACAC,EAAAxjB,EAAAyjB,gBAAAL,EAAApjB,EAAA0jB,qBAAAJ,EAAA,CAEAxf,GAAA6f,aAAA7f,EAAA8f,kBACA9f,EAAA+f,cAAA/f,EAAAggB,mBAGAhgB,EAAAigB,OAAA/jB,EAAAoS,cACAnB,IAAAnN,EAAAyf,wBAAA,MAAAzf,EAAAkgB,uBACA/mB,MAAAmmB,EAAA,EAAAtf,EAAAmgB,yBACA/S,OAAApN,EAAAyf,wBAAA,KAAAJ,EAAArf,EAAAogB,0BACA/S,KAAAqS,GAAAJ,EAAA,EAAAtf,EAAAqgB,2BAEAlT,IAAA,EAAAnN,EAAAkgB,uBACA/mB,MAAAmmB,EAAA,EAAAtf,EAAAmgB,yBACA/S,OAAAoS,EAAAE,EAAAL,EAAArf,EAAAogB,0BACA/S,KAAAiS,EAAA,EAAAtf,EAAAqgB,yBAIArgB,EAAAsgB,QAAApkB,EAAAoS,cACAnB,IAAAnN,EAAAigB,OAAA9S,IACAhU,MAAAonB,IACAnT,OAAA,GAAAiS,EACAhS,KAAArN,EAAA2a,uBAEAxN,IAAAnN,EAAA+f,cAAAL,EAAAL,EACAlmB,MAAAonB,IACAnT,OAAAoS,EAAAH,EACAhS,KAAArN,EAAAigB,OAAA5S,MAIArN,EAAAwgB,SACArT,IAAA,EACAhU,MAAAonB,IACAnT,OAAA,EACAC,KAAA,GAEArN,EAAAygB,qBACAzgB,EAAAygB,oBAAAxB,EAAAE,GAGAnf,EAAA3G,MAAA2G,EAAA6f,aAAA7f,EAAAigB,OAAA5S,KAAArN,EAAAigB,OAAA9mB,MACA6G,EAAA/G,OAAA+G,EAAA+f,cAAA/f,EAAAigB,OAAA9S,IAAAnN,EAAAigB,OAAA7S,OACApN,EAAA3G,MAAA,IACA2G,EAAA3G,MAAA,GAEA2G,EAAA/G,OAAA,IACA+G,EAAA/G,OAAA,GAGA+G,EAAA0gB,OAAAxkB,EAAAoS,aAAAtO,EAAAigB,OAAA5S,KAAArN,EAAA2a,qBAAA3a,EAAA4a,sBAAA5a,EAAA3G,MACA2G,EAAA2gB,QAAAzkB,EAAAoS,aAAAtO,EAAA/G,OAAA+G,EAAA+f,cAAA/f,EAAAsgB,QAAAnT,IAAAnN,EAAAsgB,QAAAlT,OACApN,EAAA0gB,OAAA,IACA1gB,EAAA0gB,OAAA,GAEA1gB,EAAA2gB,QAAA,IACA3gB,EAAA2gB,QAAA,GAIA3gB,EAAA4gB,SAAA5gB,EAAA3G,OAAA2G,EAAAka,cAAAiF,EAAA,MACAnf,EAAA6gB,UAAA7gB,EAAA/G,QAAA+G,EAAAka,cAAA,MACAla,EAAA8gB,QAAA,WAAA5kB,EAAA6kB,mBACA/gB,EAAA6gB,WAAA7gB,EAAA/G,OAAA+G,EAAAghB,uBAEAhhB,EAAAihB,cACAjhB,EAAAihB,eAGAjhB,EAAAka,eAAAoF,IACAtf,EAAAwgB,QAAAnT,KAAArN,EAAA4gB,SAAA,MAAA5gB,EAAAkhB,iBAIAta,EAAAwX,cAAA,SAAAvO,GACA,GAAA7P,GAAA7J,IAKA6J,GAAAmhB,qBAAAtR,GAGA7P,EAAAohB,oBAAAvR,GAGA7P,EAAAqhB,qBAAAxR,GAGA7P,EAAAuf,cAAAvf,EAAAshB,qBACAthB,EAAAshB,oBAAAzR,GAKA7P,EAAAuhB,0BACAvhB,EAAAuhB,yBAAA1R,GAIA7P,EAAAwhB,eAEA5a,EAAA4a,YAAA,WACA,GAAAxhB,GAAA7J,IACA6J,GAAA2U,IAAAvI,UAAA,IAAAjL,EAAA1L,QAAAwmB,OAAA,SAAAxV,GACA,MAAAzG,GAAAyhB,eAAAhb,EAAAkK,MACSzT,aAAAyZ,SAAA3W,EAAA9D,OAAAwlB,qBAAA7kB,MAAA,cAGT+J,EAAAkQ,OAAA,SAAAhQ,EAAAiQ,GACA,GAOA4K,GAAAC,EAAAjM,EAAAkM,EAAApD,EAAAH,EAAAC,EAAAC,EAAAsD,EAAAC,EAAAC,EAAAC,EAAAC,EAEAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA5L,EAAA6L,EAAAC,EACAC,EAAAC,EAEAzjB,EACAvJ,EACAitB,EACAC,EAEAC,EACAC,EAnBA/iB,EAAA7J,KACA8X,EAAAjO,EAAAiO,KACAxP,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,OACA8mB,EAAAhjB,EAAAijB,gBAAAjjB,EAAAkjB,YACAC,EAAAnjB,EAAAijB,gBAAAjjB,EAAAojB,WACAC,EAAArjB,EAAAijB,gBAAAjjB,EAAAsjB,YAEAC,EAAAvjB,EAAAuf,aAIA9K,EAAAzU,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SAKA2T,EAAAxjB,EAAAwjB,GAAA9iB,KAAAV,EAsEA,IAlEA8G,QACA6a,EAAA9a,EAAAC,EAAA,YACA8a,EAAA/a,EAAAC,EAAA,mBACA6O,EAAA9O,EAAAC,EAAA,qBACAwX,EAAAzX,EAAAC,EAAA,oBACAyX,EAAA1X,EAAAC,EAAA,wBACA0X,EAAA3X,EAAAC,EAAA,2BACAgb,EAAAjb,EAAAC,EAAA,sBACAob,EAAArb,EAAAC,EAAA,kBAAAyX,GACAwD,EAAAlb,EAAAC,EAAA,iBACAkb,EAAAnb,EAAAC,EAAA,oBACAmb,EAAApb,EAAAC,EAAA,oBACA+a,EAAAhb,EAAAC,EAAA,wBAAA6O,GACA8I,EAAA5X,EAAAC,EAAA,wBAAA6O,GAEAgB,EAAAhB,EAAAzZ,EAAAwlB,oBAAA,EACAc,EAAAX,EAAAlL,EAAA,EACA8L,EAAAhE,EAAA9H,EAAA,EAEAI,KAAA/W,EAAAnI,KAAA6e,oBAAA+L,GAGAV,GAAA7lB,EAAAunB,YACAzjB,EAAA0jB,aAAA1jB,EAAAoc,SAAApc,EAAAvI,KAAAoY,SAAA/I,EAAAiQ,GACSkL,GAGTjiB,EAAAqe,iBAAA,GAIAre,EAAAkP,iBAAA,IAAAuF,EAAA7e,QACAoK,EAAAlI,EAAAkQ,QAAA,EAAAhI,EAAAgB,KAAAlJ,EAAAsU,UAAA,SAAApT,SAGAyb,EAAA7e,QACAoK,EAAA2jB,cAAAlP,EAAA8J,EAAAC,EAAAsD,GACA5lB,EAAAoV,qBACApS,EAAAc,EAAAnI,KAAA+X,sBAAA6E,MAGAzU,EAAAkQ,MAAAhR,eACAc,EAAAmQ,SAAAjR,gBAGAhD,EAAA0nB,eAAA9c,EAAA6b,OACAE,EAAA7iB,EAAAlI,EAAA+rB,aAGA7jB,EAAA/H,EAAA+P,OAAAhI,EAAA8U,WAAAL,EAAA,IAAAoO,IACA7iB,EAAA4O,GAAA5G,OAAAhI,EAAA8U,WAAAL,EAAA,KAAAoO,KAEA3mB,EAAAsV,oBAAAtV,EAAA4nB,mBACA9jB,EAAAyR,MAAAvS,WAAAc,EAAAnI,KAAAmY,mBAAAhQ,EAAA/H,EAAA+P,SAAA9L,EAAA4nB,qBAEA5nB,EAAAyV,qBAAAzV,EAAA6nB,oBACA/jB,EAAA4R,OAAA1S,WAAAc,EAAAnI,KAAAmY,mBAAAhQ,EAAA4O,GAAA5G,SAAA9L,EAAA6nB,qBAIA/jB,EAAAnI,KAAAif,OAAAC,EAAAwM,GAGAvjB,EAAAnI,KAAA6d,aAAAC,IAGA4I,GAAA2D,IAAAzN,EAAA7e,OACA,GAAAsG,EAAAyT,qBAAAzQ,EAAA,CACA,IAAAvJ,EAAA,EAA2BA,EAAAuJ,EAAAtJ,OAAuBD,IAClD,GAAAuJ,EAAAtJ,OAAAD,EAAAuG,EAAA8nB,wBAAA,CACApB,EAAAjtB,CACA,OAGAqK,EAAA2U,IAAAvI,UAAA,IAAAjL,EAAAkD,MAAA,eAAA8E,KAAA,SAAA8a,GACA,GAAAha,GAAA/K,EAAAuT,QAAAwR,EACAha,IAAA,GACAxL,EAAAyK,OAAA/S,MAAA0G,MAAA,UAAAoN,EAAA2Y,EAAA,sBAIA5iB,GAAA2U,IAAAvI,UAAA,IAAAjL,EAAAkD,MAAA,eAAAxH,MAAA,kBAKAslB,GAAAniB,EAAAkkB,iBAAAlkB,EAAAkkB,iBAAAlB,GAAA,OAAA5Z,GACAgZ,EAAApiB,EAAAmkB,gBAAAnkB,EAAAmkB,gBAAAhB,OAAA/Z,GACAiZ,EAAAriB,EAAAokB,iBAAApkB,EAAAokB,iBAAAf,GAAA,OAAAja,GACAkZ,EAAAtiB,EAAAqkB,kBAAArB,EAAAG,EAAAE,GAAA,GACAd,EAAAviB,EAAAqkB,kBAAArB,EAAAG,EAAAE,GAAA,GAGA1B,IACA3hB,EAAA2c,KAAA3U,OAAAhI,EAAA8U,WAAAL,EAAA,MACAzU,EAAA4c,MAAA5U,OAAAhI,EAAA8U,WAAAL,EAAA,QAIAzU,EAAAskB,mBAGArW,EAAA/E,OAAA,QAAA/H,EAAAqC,KAAA,IAAArC,EAAAoC,OAAAuE,KAAA,IAAA9H,EAAA3G,MAAA,GAAAyO,KAAA,IAAA9H,EAAA/G,OAAA,GAAAuK,KAAAtH,EAAAqoB,uBAAArnB,aAAAL,MAAA,UAAA4X,EAAA7e,OAAA,KAGAoK,EAAAwkB,WAAA7N,GAGA3W,EAAAykB,aAAA9N,GAGA3W,EAAA0kB,UAAAlC,GAGAxiB,EAAA2kB,WAAAnC,GACAxiB,EAAA4kB,WAAApC,GACAxiB,EAAA6kB,eAGA7kB,EAAA8kB,gBACA9kB,EAAA+kB,WAAAvC,GAIAxiB,EAAAglB,aACAhlB,EAAAglB,cAIAhlB,EAAAilB,WACAjlB,EAAAilB,UAAAtO,EAAA6L,EAAAlE,GAIAte,EAAAklB,gBACAllB,EAAAklB,eAAAtD,EAAA7K,EAAAJ,EAAA6L,EAAAQ,EAAAG,EAAAE,GAIApV,EAAA7B,UAAA,IAAAjL,EAAAe,iBAAA+Z,OAAAjc,EAAAojB,UAAA1iB,KAAAV,IAAAoM,UAAA,UAAAM,SAGAxQ,EAAAipB,sBAAAre,EAAA6b,MAAAX,IACAhiB,EAAAolB,kBACAplB,EAAAqlB,YACArlB,EAAAqlB,cAKArlB,EAAAslB,gBAGAxC,GAAA9iB,EAAA9D,OAAAoS,aAAAtO,EAAAulB,QAAAvlB,EAAAwlB,SAAA9kB,KAAAV,GACA+iB,GAAA/iB,EAAA9D,OAAAoS,aAAAtO,EAAAwlB,QAAAxlB,EAAAulB,SAAA7kB,KAAAV,GAEA8G,EAAA6b,OACAA,EAAA3iB,EAAAylB,cACA5V,QAAA4E,EACAkO,KAAA7b,EAAA6b,KACAhM,SAAA7P,EAAA6b,KAAAhM,SACAyL,UACAC,WACAF,WACAW,KACAC,KACAS,KACAlB,WACAC,eAIA5L,GAAAgM,IAAA3iB,EAAA0lB,eAGAjnB,EAAAvB,aAAAyZ,YAAAxN,KAAA,WACA,GAAAwc,OAGA3lB,EAAA4lB,UAAAxD,GAAA,GAAApiB,EAAA6lB,WAAAxD,GAAA,GAAAriB,EAAA8lB,WAAA3D,GAAA,GAAAniB,EAAA+lB,aAAAjD,EAAAC,GAAA,GAAA/iB,EAAAgmB,WAAA1D,EAAAC,EAAAzb,EAAA6b,MAAA,GAAA3iB,EAAAimB,cAAA,GAAAjmB,EAAAkmB,YAAA,IAAAzlB,QAAA,SAAAsW,GACAA,EAAAtW,QAAA,SAAAvD,GACAyoB,EAAAtd,KAAAnL,OAKAwlB,EAAA1iB,EAAAmmB,eACAR,EAAAllB,QAAA,SAAA2lB,GACA1D,EAAA2D,IAAAD,OAEatyB,KAAA4uB,EAAA,WACbC,GACAA,IAEAzmB,EAAAmB,YACAnB,EAAAmB,WAAAvJ,KAAAkM,MAIAA,EAAA4lB,UAAAxD,GACApiB,EAAA6lB,WAAAxD,GACAriB,EAAA8lB,WAAA3D,GACAniB,EAAA+lB,aAAAjD,EAAAC,GACA/iB,EAAAgmB,WAAA1D,EAAAC,EAAAzb,EAAA6b,MACA3iB,EAAAimB,eACAjmB,EAAAkmB,aACAhqB,EAAAmB,YACAnB,EAAAmB,WAAAvJ,KAAAkM,IAKAA,EAAAoc,SAAApc,EAAAvI,KAAAoY,SAAApP,QAAA,SAAAkQ,GACA3Q,EAAA8a,cAAAnK,IAAA,KAIA/J,EAAA0f,gBAAA,SAAAxf,GACA,GAEAiQ,GAFA/W,EAAA7J,KACA+F,EAAA8D,EAAA9D,MAEA4K,SAEAA,EAAA6O,eAAA9O,EAAAC,EAAA,qBACAA,EAAAwX,cAAAzX,EAAAC,EAAA,oBACAA,EAAAib,WAAAlb,EAAAC,EAAA,iBAEAA,EAAAyX,mBAAA,EACAzX,EAAA0X,sBAAA,EACA1X,EAAA+a,uBAAA,EACA/a,EAAAyf,2BAAA1f,EAAAC,EAAA,6BAAAA,EAAA6O,gBAEA3V,EAAAuc,cAEAzV,EAAAib,YAAA7lB,EAAAunB,cACA1M,EAAA/W,EAAAnI,KAAA6e,oBAAA5P,EAAA2X,sBAAAviB,EAAAwlB,oBAAA,GAEA1hB,EAAAwc,eACAxc,EAAAud,gBAEAvd,EAAAwmB,aAAA1f,EAAAyf,2BAAAxP,IAGA/W,EAAA8W,OAAAhQ,EAAAiQ,IAEAnQ,EAAA6f,qBAAA,WACAtwB,KAAA2gB,QACA6K,OAAA,EACAC,cAAA,EACAI,eAAA,EACAvD,uBAAA,KAIA7X,EAAA4I,aAAA,WACA,qBAAArZ,KAAA+F,OAAAwqB,aAEA9f,EAAAsI,cAAA,WACA,MAAA/Y,MAAA+F,OAAAwqB,YAAAjU,QAAA,eAEA7L,EAAA+f,UAAA,WACA,GAAA3mB,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,QAAA8D,EAAAwP,iBAAAtT,EAAA0qB,QAAAjgB,EAAAzK,EAAA2qB,WAGAjgB,EAAA0J,cAAA,WACA,qBAAAna,KAAA+F,OAAA4qB,aAGAlgB,EAAAwH,aAAA,SAAA3Y,GACA,GAEAqC,GACAG,EAHA+H,EAAA7J,KACA+F,EAAA8D,EAAA9D,MA4BA,OAzBA,SAAAzG,GACAqC,EAAAyO,EAAAvG,EAAAigB,OAAA5S,MACApV,EAAAsO,EAAAvG,EAAAigB,OAAA9S,MACS,YAAA1X,GACTqC,EAAAyO,EAAAvG,EAAAsgB,QAAAjT,MACApV,EAAAsO,EAAAvG,EAAAsgB,QAAAnT,MACS,WAAA1X,GACTqC,EAAAkI,EAAAwgB,QAAAnT,KACApV,EAAA+H,EAAAwgB,QAAArT,KACS,MAAA1X,GACTqC,EAAA,EACAG,EAAAiE,EAAAoS,aAAA,EAAAtO,EAAA/G,QACS,MAAAxD,GACTqC,EAAA,EACAG,EAAAiE,EAAAoS,aAAAtO,EAAA/G,OAAA,GACS,OAAAxD,GACTqC,EAAAoE,EAAAoS,aAAA,EAAAtO,EAAA3G,MACApB,EAAAiE,EAAAoS,aAAA,KACS,SAAA7Y,GACTqC,EAAA,EACAG,EAAAiE,EAAAoS,aAAA,EAAAtO,EAAA2gB,SACS,QAAAlrB,IACTqC,EAAAkI,EAAA4gB,SAAA,EACA3oB,EAAA+H,EAAA6gB,UAAA,GAAA7gB,EAAA8gB,QAAA,eAEA,aAAAhpB,EAAA,IAAAG,EAAA,KAEA2O,EAAAmgB,eAAA,SAAAtgB,GACA,cAAAA,EAAAlS,OAAA4B,KAAA2kB,cAAArU,EAAAkK,IAAA,KAEA/J,EAAAogB,wBAAA,SAAAvgB,GACA,cAAAA,EAAAlS,OAAA4B,KAAA2kB,cAAArU,EAAAkK,IAAAxa,KAAA8wB,iBAAAxgB,GAAA,GAEAG,EAAAqgB,iBAAA,SAAAxgB,GACA,GAAAygB,GAAArhB,EAAA1P,KAAA+F,OAAAirB,YAAAhxB,KAAA+F,OAAAirB,WAAA1gB,GAAAtQ,KAAA+F,OAAAirB,WACAC,EAAAF,EAAA,GACA,OAAAvhB,GAAAc,EAAAlS,OAAA4B,KAAAkxB,cAAA5gB,GAAA,GAAA2gB,EAAA,GAEAxgB,EAAA0gB,eAAA,WACA,MAAAnxB,MAAA2uB,eAAA,KAEAle,EAAA2gB,GAAA,SAAA9gB,GACA,MAAAA,GAAAtQ,KAAA2B,EAAA2O,EAAA3O,GAAA,MAEA8O,EAAA4c,GAAA,SAAA/c,GACA,GAAAzG,GAAA7J,KACA5B,EAAAkS,EAAAlS,KAMA,OALAyL,GAAAwP,eACAjb,EAAAyL,EAAAyP,UAAAhJ,EAAAlS,OACSyL,EAAAkP,iBAAA,iBAAAzI,GAAAlS,QACTA,EAAAyL,EAAA9D,OAAAsrB,kBAAA/U,QAAAhM,EAAAlS,QAEA8R,KAAAC,KAAAtG,EAAAlI,EAAAvD,KAEAqS,EAAA6gB,GAAA,SAAAhhB,GACA,GAAAzG,GAAA7J,KACAuxB,EAAAjhB,EAAA5O,MAAA,OAAA4O,EAAA5O,KAAAmI,EAAA4O,GAAA5O,EAAA/H,CACA,OAAAoO,MAAAC,KAAAohB,EAAAjhB,EAAAlS,SAEAqS,EAAA+gB,MAAA,SAAAlhB,GACA,MAAAA,GAAAtQ,KAAAumB,KAAAjW,EAAA3O,GAAA,MAGA8O,EAAAghB,cAAA,SAAAjS,EAAAoB,GACA,GACA7G,GACAuB,EACAG,EAHA5R,EAAA7J,IAIA4gB,MAAA1S,MACA6L,EAAA6G,EAAA1S,OAEA6L,EAAAlQ,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAkD,OACAsR,IACAzF,IAAAhT,eAGA6Z,KAAAxS,MACAkN,EAAAsF,EAAAxS,OAEAkN,EAAAzR,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAoD,OACAoR,IACAlE,IAAAvU,eAGA6Z,KAAAtS,OACAmN,EAAAmF,EAAAtS,QAEAmN,EAAA5R,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAsD,QACAkR,IACA/D,IAAA1U,gBAGAyY,EAAA3V,EAAAiO,KAAA/Q,aAAA8C,EAAAiO,MAAAnG,KAAA,YAAA9H,EAAAoO,aAAA,SACA8B,EAAApI,KAAA,YAAA9H,EAAAoO,aAAA,MACAqD,EAAA3J,KAAA,YAAA9H,EAAAoO,aAAA,MACAwD,EAAA9J,KAAA,YAAA9H,EAAAoO,aAAA,OACApO,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAQ,WAAAmG,KAAA,YAAA9H,EAAAoO,aAAA,SAEAxH,EAAA4f,aAAA,SAAA7Q,EAAAoB,GACA,GAAA/W,GAAA7J,IACA6J,GAAA4nB,cAAAjS,EAAAoB,GACA/W,EAAA9D,OAAAyjB,eACA3f,EAAA6nB,iBAAAlS,EAAAoB,GAEA/W,EAAApC,QACAoC,EAAA8nB,gBAAAnS,IAIA/O,EAAA2W,cAAA,WACA,GAAAvd,GAAA7J,KACAqM,EAAAxC,EAAA2U,IAAAzL,OAAA,wBACAlJ,GAAA2U,IAAA7M,KAAA,QAAA9H,EAAA6f,cAAA/X,KAAA,SAAA9H,EAAA+f,eACA/f,EAAA2U,IAAAvI,WAAA,IAAApM,EAAA+X,OAAA,IAAA/X,EAAAkY,gBAAAhP,OAAA,QAAApB,KAAA,QAAA9H,EAAA3G,OAAAyO,KAAA,SAAA9H,EAAA/G,QACA+G,EAAA2U,IAAAzL,OAAA,IAAAlJ,EAAAgY,gBAAA9O,OAAA,QAAApB,KAAA,IAAA9H,EAAA+nB,cAAArnB,KAAAV,IAAA8H,KAAA,IAAA9H,EAAAgoB,cAAAtnB,KAAAV,IAAA8H,KAAA,QAAA9H,EAAAioB,kBAAAvnB,KAAAV,IAAA8H,KAAA,SAAA9H,EAAAkoB,mBAAAxnB,KAAAV,IACAA,EAAA2U,IAAAzL,OAAA,IAAAlJ,EAAAiY,gBAAA/O,OAAA,QAAApB,KAAA,IAAA9H,EAAAmoB,cAAAznB,KAAAV,IAAA8H,KAAA,IAAA9H,EAAAooB,cAAA1nB,KAAAV,IAAA8H,KAAA,QAAA9H,EAAAqoB,kBAAA3nB,KAAAV,IAAA8H,KAAA,SAAA9H,EAAAsoB,mBAAA5nB,KAAAV,IACAA,EAAA2U,IAAAzL,OAAA,IAAAlJ,EAAAmY,mBAAAjP,OAAA,QAAApB,KAAA,QAAA9H,EAAA3G,OAAAyO,KAAA,SAAAtF,EAAAxJ,OAAAwJ,EAAAsF,KAAA,aACA9H,EAAA2U,IAAAzL,OAAA,IAAA/H,EAAAoB,UAAAuF,KAAA,QAAA9H,EAAA3G,OAAAyO,KAAA,SAAA9H,EAAA/G,QAEA+G,EAAA2b,YAAA9e,MAAA,aAAAmD,EAAA+f,cAAA,OAGAnZ,EAAAyX,gBAAA,SAAAkK,GACA,GAAAvoB,GAAA7J,IACAoyB,KACAvoB,EAAA9D,OAAAoS,cACAtO,EAAAgB,KAAAlJ,EAAAhE,KAAAkM,EAAAkQ,OACAlQ,EAAAgB,KAAA6V,KAAA/iB,KAAAkM,EAAAmQ,YAEAnQ,EAAAgB,KAAA/I,EAAAnE,KAAAkM,EAAAyR,OACAzR,EAAAgB,KAAA4N,GAAA9a,KAAAkM,EAAA4R,UAGA5R,EAAAuc,cACAvc,EAAAwc,eACAxc,EAAAud,gBACAvd,EAAAwmB,cAAA,IAGA5f,EAAAiV,gBAAA,SAAAhU,GACA,GACA2gB,GADAxoB,EAAA7J,IAEA,wBAAAsyB,kBAEA,WADA5nB,QAAA6nB,QAAAC,MAAA,gCAGAH,GAAA,GAAAC,kBAAA,SAAAG,GACAA,EAAAnoB,QAAA,SAAAooB,GACA,cAAAA,EAAApwB,MAAAowB,EAAAC,kBACAN,EAAAO,aAEA/oB,EAAA+a,2BAAAla,OAAAmoB,YAAA,WAEAnhB,EAAA6F,OAAAub,aACApoB,OAAAqoB,cAAAlpB,EAAA+a,4BACA/a,EAAAqe,kBACAre,EAAAwC,OACAxC,EAAAwC,MAAA2mB,SAEAnpB,EAAA9D,OAAAiB,OAAArJ,KAAAkM,GACAA,EAAA8W,QACAwH,eAAA,EACAC,mBAAA,EACAC,sBAAA,EACA7I,gBAAA,EACA4Q,4BAAA,EACAxE,YAAA,IAEAla,EAAA3K,aAAAL,MAAA,eAEqB,SAIrB2rB,EAAAY,QAAAvhB,EAAA6F,QAA4C2b,YAAA,EAAAC,WAAA,EAAAC,eAAA,KAG5C3iB,EAAA8X,WAAA,WACA,GAAA1e,GAAA7J,KACA+F,EAAA8D,EAAA9D,MA+BA,IA7BA8D,EAAAwpB,eAAAxpB,EAAAypB,iBAEAzpB,EAAAwpB,eAAAnD,IAAA,WACAnqB,EAAAsB,SAAA1J,KAAAkM,KAEA9D,EAAAwtB,aACA1pB,EAAAwpB,eAAAnD,IAAA,eACAjd,KAAApJ,EAAA2pB,eACA9oB,OAAA+oB,aAAA5pB,EAAA2pB,eAEA3pB,EAAA2pB,cAAA9oB,OAAAgpB,WAAA,iBACA7pB,GAAA2pB,cACA3pB,EAAAY,IAAAkpB,SACiB,OAGjB9pB,EAAAwpB,eAAAnD,IAAA,WACAnqB,EAAAuB,UAAA3J,KAAAkM,KAGAA,EAAA+pB,yBAAA,WAEA,MAAA/pB,EAAAY,KAAAZ,EAAAY,IAAA+d,QAAAqL,cAIAhqB,EAAAwpB,kBAGA3oB,OAAAopB,YACAppB,OAAAopB,YAAA,WAAAjqB,EAAA+pB,8BACS,IAAAlpB,OAAAqpB,iBACTrpB,OAAAqpB,iBAAA,SAAAlqB,EAAA+pB,0BAAA,OACS,CAET,GAAAI,GAAAtpB,OAAArD,QACA2sB,GAGaA,EAAA9D,KAAA8D,EAAAzd,SAEbyd,EAAAnqB,EAAAypB,iBACAU,EAAA9D,IAAAxlB,OAAArD,WAJA2sB,EAAAnqB,EAAAypB,iBAOAU,EAAA9D,IAAArmB,EAAAwpB,gBACA3oB,OAAArD,SAAA,WAEAwC,EAAAY,IAAA+d,QAAAqL,cAIAG,OAKAvjB,EAAA6iB,eAAA,WAEA,QAAAW,KACAC,EAAA5pB,QAAA,SAAA6pB,GACAA,MAHA,GAAAD,KAiBA,OAXAD,GAAA/D,IAAA,SAAAiE,GACAD,EAAAhiB,KAAAiiB,IAEAF,EAAA1d,OAAA,SAAA4d,GACA,OAAA30B,GAAA,EAA2BA,EAAA00B,EAAAz0B,OAA4BD,IACvD,GAAA00B,EAAA10B,KAAA20B,EAAA,CACAD,EAAAE,OAAA50B,EAAA,EACA,SAIAy0B,GAGAxjB,EAAA4jB,OAAA,SAAAttB,EAAAutB,GACA,GAAAv1B,GAAA,CACAgI,GAAAiM,KAAA,aACAjU,IACSiU,KAAA,mBACTjU,GACAu1B,EAAAp0B,MAAAF,KAAAG,cAIAsQ,EAAAuf,aAAA,WACA,GAAAR,MACA2E,EAAA,SAAAptB,EAAAutB,GACA,GAAAC,GAAA1B,YAAA,WACA,GAAA2B,GAAA,CACAhF,GAAAllB,QAAA,SAAA2lB,GACA,GAAAA,EAAA7iB,QAEA,YADAonB,GAAA,EAGA,KACAvE,EAAAlpB,aACqB,MAAA+mB,GACrB0G,GAAA,KAGAA,IAAAhF,EAAA/vB,SACAszB,cAAAwB,GACAD,GACAA,MAGa,IAKb,OAHAH,GAAAjE,IAAA,SAAAnpB,GACAyoB,EAAAtd,KAAAnL,IAEAotB,GAGA1jB,EAAA6I,UAAA,SAAAyB,GACA,GACA0Z,GADA5qB,EAAA7J,IAcA,OAZA+a,aAAAqF,MACAqU,EAAA1Z,EACS,iBAAAA,GACT0Z,EAAA5qB,EAAAiZ,eAAAjZ,EAAA9D,OAAA2uB,cAAAC,MAAA5Z,GACS,gCAAAA,GAAA,YAAA7L,EAAA6L,IACT0Z,EAAA,GAAArU,OAAArF,GACS,iBAAAA,IAAA6Z,MAAA7Z,KACT0Z,EAAA,GAAArU,OAAArF,IAEA0Z,IAAAG,OAAAH,IACA/pB,OAAA6nB,QAAAC,MAAA,sBAAAzX,EAAA,oBAEA0Z,GAGAhkB,EAAA8e,aAAA,WACA,GAAAsF,EAYA,OAXA,oBAAApP,UAAAoP,OAEAA,EAAA,SACS,oBAAApP,UAAAqP,UACTD,EAAA,YACS,oBAAApP,UAAAsP,SACTF,EAAA,WACS,oBAAApP,UAAAuP,eACTH,EAAA,iBAGApP,SAAAoP,IAGApkB,EAAAjB,UACAiB,EAAAf,aACAe,EAAAX,WACAW,EAAAV,cACAU,EAAAT,YACAS,EAAAR,SACAQ,EAAAL,cACAK,EAAAJ,aACAI,EAAAF,UACAE,EAAAD,WACAC,EAAAD,WACAC,EAAAC,YACAD,EAAAI,WACAJ,EAAAO,WACAP,EAAAU,aACAV,EAAAzF,QAQAiqB,SAAAj3B,UAAAuM,OACA0qB,SAAAj3B,UAAAuM,KAAA,SAAA2qB,GACA,sBAAAl1B,MAGA,SAAAxC,WAAA,uEAGA,IAAA23B,GAAAtlB,MAAA7R,UAAAsW,MAAA3W,KAAAwC,UAAA,GACAi1B,EAAAp1B,KACAq1B,EAAA,aACAC,EAAA,WACA,MAAAF,GAAAl1B,MAAAF,eAAAq1B,GAAAr1B,KAAAk1B,EAAAC,EAAA1hB,OAAA5D,MAAA7R,UAAAsW,MAAA3W,KAAAwC,aAMA,OAHAk1B,GAAAr3B,UAAAgC,KAAAhC,UACAs3B,EAAAt3B,UAAA,GAAAq3B,GAEAC,IAWA,WAEA,cAAA5qB,UAEAA,OAAA6qB,WAAA,SAAAjzB,EAAAkzB,EAAAC,GACAz1B,KAAA01B,YAAApzB,EACAtC,KAAA21B,oBAAAH,EACAx1B,KAAA41B,mBAAAH,GAGA/qB,OAAA6qB,WAAAv3B,UAAA63B,UAAA,aAEAnrB,OAAA6qB,WAAAO,gBAAA,EACAprB,OAAA6qB,WAAAQ,kBAAA,EACArrB,OAAA6qB,WAAAS,mBAAA,EACAtrB,OAAA6qB,WAAAU,mBAAA,EACAvrB,OAAA6qB,WAAAW,mBAAA,EACAxrB,OAAA6qB,WAAAY,mBAAA,EACAzrB,OAAA6qB,WAAAa,0BAAA,EACA1rB,OAAA6qB,WAAAc,0BAAA,EACA3rB,OAAA6qB,WAAAe,8BAAA,EACA5rB,OAAA6qB,WAAAgB,8BAAA,EACA7rB,OAAA6qB,WAAAiB,gBAAA,GACA9rB,OAAA6qB,WAAAkB,gBAAA,GACA/rB,OAAA6qB,WAAAmB,8BAAA,GACAhsB,OAAA6qB,WAAAoB,8BAAA,GACAjsB,OAAA6qB,WAAAqB,4BAAA,GACAlsB,OAAA6qB,WAAAsB,4BAAA,GACAnsB,OAAA6qB,WAAAuB,iCAAA,GACApsB,OAAA6qB,WAAAwB,iCAAA,GACArsB,OAAA6qB,WAAAyB,qCAAA,GACAtsB,OAAA6qB,WAAA0B,qCAAA,GAGAvsB,OAAA6qB,WAAAv3B,UAAAk5B,gBAAA,WACAl3B,KAAA41B,oBAAA51B,KAAA41B,mBAAAuB,eAAAn3B,OAGA0K,OAAA0sB,oBAAA,SAAA3B,GACA/qB,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAQ,kBAAA,IAAAN,IAEA/qB,OAAA0sB,oBAAAp5B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA0sB,oBAAAp5B,UAAAyW,SAAA,WACA,sCAEA/J,OAAA0sB,oBAAAp5B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,qBAEAjrB,OAAA0sB,oBAAAp5B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA0sB,wBAAAnkB,KAGAvI,OAAA6sB,oBAAA,SAAA9B,EAAA9zB,EAAAG,GACA4I,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAS,mBAAA,IAAAP,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,GAEA4I,OAAA6sB,oBAAAv5B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA6sB,oBAAAv5B,UAAAyW,SAAA,WACA,sCAEA/J,OAAA6sB,oBAAAv5B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAA6sB,oBAAAv5B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA6sB,wBAAAtkB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,KAEAx5B,OAAAS,eAAAgM,OAAA6sB,oBAAAv5B,UAAA,KAA8E2I,IAAA,WAC9E,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA6sB,oBAAAv5B,UAAA,KAA8E2I,IAAA,WAC9E,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IAEjBqM,OAAAitB,oBAAA,SAAAlC,EAAA9zB,EAAAG,GACA4I,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAU,mBAAA,IAAAR,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,GAEA4I,OAAAitB,oBAAA35B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAAitB,oBAAA35B,UAAAyW,SAAA,WACA,sCAEA/J,OAAAitB,oBAAA35B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAAitB,oBAAA35B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAAitB,wBAAA1kB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,KAEAx5B,OAAAS,eAAAgM,OAAAitB,oBAAA35B,UAAA,KAA8E2I,IAAA,WAC9E,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAitB,oBAAA35B,UAAA,KAA8E2I,IAAA,WAC9E,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IAEjBqM,OAAAktB,oBAAA,SAAAnC,EAAA9zB,EAAAG,GACA4I,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAW,mBAAA,IAAAT,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,GAEA4I,OAAAktB,oBAAA55B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAAktB,oBAAA55B,UAAAyW,SAAA,WACA,sCAEA/J,OAAAktB,oBAAA55B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAAktB,oBAAA55B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAAktB,wBAAA3kB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,KAEAx5B,OAAAS,eAAAgM,OAAAktB,oBAAA55B,UAAA,KAA8E2I,IAAA,WAC9E,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAktB,oBAAA55B,UAAA,KAA8E2I,IAAA,WAC9E,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IAEjBqM,OAAAmtB,oBAAA,SAAApC,EAAA9zB,EAAAG,GACA4I,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAY,mBAAA,IAAAV,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,GAEA4I,OAAAmtB,oBAAA75B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAAmtB,oBAAA75B,UAAAyW,SAAA,WACA,sCAEA/J,OAAAmtB,oBAAA75B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAAmtB,oBAAA75B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAAmtB,wBAAA5kB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,KAEAx5B,OAAAS,eAAAgM,OAAAmtB,oBAAA75B,UAAA,KAA8E2I,IAAA,WAC9E,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAmtB,oBAAA75B,UAAA,KAA8E2I,IAAA,WAC9E,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IAEjBqM,OAAAotB,0BAAA,SAAArC,EAAA9zB,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,GACA/N,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAa,0BAAA,IAAAX,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,EACA9B,KAAA+3B,IAAApP,EACA3oB,KAAAg4B,IAAAnP,EACA7oB,KAAAi4B,IAAArP,EACA5oB,KAAAk4B,IAAAzf,GAEA/N,OAAAotB,0BAAA95B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAAotB,0BAAA95B,UAAAyW,SAAA,WACA,4CAEA/J,OAAAotB,0BAAA95B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAA+3B,IAAA,IAAA/3B,KAAAg4B,IAAA,IAAAh4B,KAAAi4B,IAAA,IAAAj4B,KAAAk4B,IAAA,IAAAl4B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAAotB,0BAAA95B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAAotB,8BAAA7kB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,GAAAz3B,KAAA+3B,IAAA/3B,KAAAg4B,IAAAh4B,KAAAi4B,IAAAj4B,KAAAk4B,MAEAj6B,OAAAS,eAAAgM,OAAAotB,0BAAA95B,UAAA,KAAoF2I,IAAA,WACpF,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAotB,0BAAA95B,UAAA,KAAoF2I,IAAA,WACpF,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAotB,0BAAA95B,UAAA,MAAqF2I,IAAA,WACrF,MAAA3G,MAAA+3B,KACiBL,IAAA,SAAA/O,GACjB3oB,KAAA+3B,IAAApP,EAAkC3oB,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAotB,0BAAA95B,UAAA,MAAqF2I,IAAA,WACrF,MAAA3G,MAAAg4B,KACiBN,IAAA,SAAA7O,GACjB7oB,KAAAg4B,IAAAnP,EAAkC7oB,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAotB,0BAAA95B,UAAA,MAAqF2I,IAAA,WACrF,MAAA3G,MAAAi4B,KACiBP,IAAA,SAAA9O,GACjB5oB,KAAAi4B,IAAArP,EAAkC5oB,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAotB,0BAAA95B,UAAA,MAAqF2I,IAAA,WACrF,MAAA3G,MAAAk4B,KACiBR,IAAA,SAAAjf,GACjBzY,KAAAk4B,IAAAzf,EAAkCzY,KAAAk3B,mBACjB74B,YAAA,IAEjBqM,OAAAytB,0BAAA,SAAA1C,EAAA9zB,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,GACA/N,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAc,0BAAA,IAAAZ,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,EACA9B,KAAA+3B,IAAApP,EACA3oB,KAAAg4B,IAAAnP,EACA7oB,KAAAi4B,IAAArP,EACA5oB,KAAAk4B,IAAAzf,GAEA/N,OAAAytB,0BAAAn6B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAAytB,0BAAAn6B,UAAAyW,SAAA,WACA,4CAEA/J,OAAAytB,0BAAAn6B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAA+3B,IAAA,IAAA/3B,KAAAg4B,IAAA,IAAAh4B,KAAAi4B,IAAA,IAAAj4B,KAAAk4B,IAAA,IAAAl4B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAAytB,0BAAAn6B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAAytB,8BAAAllB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,GAAAz3B,KAAA+3B,IAAA/3B,KAAAg4B,IAAAh4B,KAAAi4B,IAAAj4B,KAAAk4B,MAEAj6B,OAAAS,eAAAgM,OAAAytB,0BAAAn6B,UAAA,KAAoF2I,IAAA,WACpF,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAytB,0BAAAn6B,UAAA,KAAoF2I,IAAA,WACpF,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAytB,0BAAAn6B,UAAA,MAAqF2I,IAAA,WACrF,MAAA3G,MAAA+3B,KACiBL,IAAA,SAAA/O,GACjB3oB,KAAA+3B,IAAApP,EAAkC3oB,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAytB,0BAAAn6B,UAAA,MAAqF2I,IAAA,WACrF,MAAA3G,MAAAg4B,KACiBN,IAAA,SAAA7O,GACjB7oB,KAAAg4B,IAAAnP,EAAkC7oB,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAytB,0BAAAn6B,UAAA,MAAqF2I,IAAA,WACrF,MAAA3G,MAAAi4B,KACiBP,IAAA,SAAA9O,GACjB5oB,KAAAi4B,IAAArP,EAAkC5oB,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAytB,0BAAAn6B,UAAA,MAAqF2I,IAAA,WACrF,MAAA3G,MAAAk4B,KACiBR,IAAA,SAAAjf,GACjBzY,KAAAk4B,IAAAzf,EAAkCzY,KAAAk3B,mBACjB74B,YAAA,IAEjBqM,OAAA0tB,8BAAA,SAAA3C,EAAA9zB,EAAAG,EAAA6mB,EAAAE,GACAne,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAe,8BAAA,IAAAb,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,EACA9B,KAAA+3B,IAAApP,EACA3oB,KAAAg4B,IAAAnP,GAEAne,OAAA0tB,8BAAAp6B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA0tB,8BAAAp6B,UAAAyW,SAAA,WACA,gDAEA/J,OAAA0tB,8BAAAp6B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAA+3B,IAAA,IAAA/3B,KAAAg4B,IAAA,IAAAh4B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAA0tB,8BAAAp6B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA0tB,kCAAAnlB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,GAAAz3B,KAAA+3B,IAAA/3B,KAAAg4B,MAEA/5B,OAAAS,eAAAgM,OAAA0tB,8BAAAp6B,UAAA,KAAwF2I,IAAA,WACxF,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA0tB,8BAAAp6B,UAAA,KAAwF2I,IAAA,WACxF,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA0tB,8BAAAp6B,UAAA,MAAyF2I,IAAA,WACzF,MAAA3G,MAAA+3B,KACiBL,IAAA,SAAA/O,GACjB3oB,KAAA+3B,IAAApP,EAAkC3oB,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA0tB,8BAAAp6B,UAAA,MAAyF2I,IAAA,WACzF,MAAA3G,MAAAg4B,KACiBN,IAAA,SAAA7O,GACjB7oB,KAAAg4B,IAAAnP,EAAkC7oB,KAAAk3B,mBACjB74B,YAAA,IAEjBqM,OAAA2tB,8BAAA,SAAA5C,EAAA9zB,EAAAG,EAAA6mB,EAAAE,GACAne,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAgB,8BAAA,IAAAd,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,EACA9B,KAAA+3B,IAAApP,EACA3oB,KAAAg4B,IAAAnP,GAEAne,OAAA2tB,8BAAAr6B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA2tB,8BAAAr6B,UAAAyW,SAAA,WACA,gDAEA/J,OAAA2tB,8BAAAr6B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAA+3B,IAAA,IAAA/3B,KAAAg4B,IAAA,IAAAh4B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAA2tB,8BAAAr6B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA2tB,kCAAAplB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,GAAAz3B,KAAA+3B,IAAA/3B,KAAAg4B,MAEA/5B,OAAAS,eAAAgM,OAAA2tB,8BAAAr6B,UAAA,KAAwF2I,IAAA,WACxF,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA2tB,8BAAAr6B,UAAA,KAAwF2I,IAAA,WACxF,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA2tB,8BAAAr6B,UAAA,MAAyF2I,IAAA,WACzF,MAAA3G,MAAA+3B,KACiBL,IAAA,SAAA/O,GACjB3oB,KAAA+3B,IAAApP,EAAkC3oB,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA2tB,8BAAAr6B,UAAA,MAAyF2I,IAAA,WACzF,MAAA3G,MAAAg4B,KACiBN,IAAA,SAAA7O,GACjB7oB,KAAAg4B,IAAAnP,EAAkC7oB,KAAAk3B,mBACjB74B,YAAA,IAEjBqM,OAAA4tB,iBAAA,SAAA7C,EAAA9zB,EAAAG,EAAAy2B,EAAAC,EAAAC,EAAAC,EAAAC,GACAjuB,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAiB,gBAAA,IAAAf,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,EACA9B,KAAA44B,IAAAL,EACAv4B,KAAA64B,IAAAL,EACAx4B,KAAA84B,OAAAL,EACAz4B,KAAA+4B,cAAAL,EACA14B,KAAAg5B,WAAAL,GAEAjuB,OAAA4tB,iBAAAt6B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA4tB,iBAAAt6B,UAAAyW,SAAA,WACA,mCAEA/J,OAAA4tB,iBAAAt6B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAA44B,IAAA,IAAA54B,KAAA64B,IAAA,IAAA74B,KAAA84B,OAAA,KAAA94B,KAAA+4B,cAAA,cAAA/4B,KAAAg5B,WAAA,aAAAh5B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAA4tB,iBAAAt6B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA4tB,qBAAArlB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,GAAAz3B,KAAA44B,IAAA54B,KAAA64B,IAAA74B,KAAA84B,OAAA94B,KAAA+4B,cAAA/4B,KAAAg5B,aAEA/6B,OAAAS,eAAAgM,OAAA4tB,iBAAAt6B,UAAA,KAA2E2I,IAAA,WAC3E,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA4tB,iBAAAt6B,UAAA,KAA2E2I,IAAA,WAC3E,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA4tB,iBAAAt6B,UAAA,MAA4E2I,IAAA,WAC5E,MAAA3G,MAAA44B,KACiBlB,IAAA,SAAAa,GACjBv4B,KAAA44B,IAAAL,EAAkCv4B,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA4tB,iBAAAt6B,UAAA,MAA4E2I,IAAA,WAC5E,MAAA3G,MAAA64B,KACiBnB,IAAA,SAAAc,GACjBx4B,KAAA64B,IAAAL,EAAkCx4B,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA4tB,iBAAAt6B,UAAA,SAA+E2I,IAAA,WAC/E,MAAA3G,MAAA84B,QACiBpB,IAAA,SAAAe,GACjBz4B,KAAA84B,OAAAL,EAAwCz4B,KAAAk3B,mBACvB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA4tB,iBAAAt6B,UAAA,gBAAsF2I,IAAA,WACtF,MAAA3G,MAAA+4B,eACiBrB,IAAA,SAAAgB,GACjB14B,KAAA+4B,cAAAL,EAAsD14B,KAAAk3B,mBACrC74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA4tB,iBAAAt6B,UAAA,aAAmF2I,IAAA,WACnF,MAAA3G,MAAAg5B,YACiBtB,IAAA,SAAAiB,GACjB34B,KAAAg5B,WAAAL,EAAgD34B,KAAAk3B,mBAC/B74B,YAAA,IAEjBqM,OAAAuuB,iBAAA,SAAAxD,EAAA9zB,EAAAG,EAAAy2B,EAAAC,EAAAC,EAAAC,EAAAC,GACAjuB,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAkB,gBAAA,IAAAhB,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,EACA9B,KAAA44B,IAAAL,EACAv4B,KAAA64B,IAAAL,EACAx4B,KAAA84B,OAAAL,EACAz4B,KAAA+4B,cAAAL,EACA14B,KAAAg5B,WAAAL,GAEAjuB,OAAAuuB,iBAAAj7B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAAuuB,iBAAAj7B,UAAAyW,SAAA,WACA,mCAEA/J,OAAAuuB,iBAAAj7B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAA44B,IAAA,IAAA54B,KAAA64B,IAAA,IAAA74B,KAAA84B,OAAA,KAAA94B,KAAA+4B,cAAA,cAAA/4B,KAAAg5B,WAAA,aAAAh5B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAAuuB,iBAAAj7B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAAuuB,qBAAAhmB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,GAAAz3B,KAAA44B,IAAA54B,KAAA64B,IAAA74B,KAAA84B,OAAA94B,KAAA+4B,cAAA/4B,KAAAg5B,aAEA/6B,OAAAS,eAAAgM,OAAAuuB,iBAAAj7B,UAAA,KAA2E2I,IAAA,WAC3E,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAuuB,iBAAAj7B,UAAA,KAA2E2I,IAAA,WAC3E,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAuuB,iBAAAj7B,UAAA,MAA4E2I,IAAA,WAC5E,MAAA3G,MAAA44B,KACiBlB,IAAA,SAAAa,GACjBv4B,KAAA44B,IAAAL,EAAkCv4B,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAuuB,iBAAAj7B,UAAA,MAA4E2I,IAAA,WAC5E,MAAA3G,MAAA64B,KACiBnB,IAAA,SAAAc,GACjBx4B,KAAA64B,IAAAL,EAAkCx4B,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAuuB,iBAAAj7B,UAAA,SAA+E2I,IAAA,WAC/E,MAAA3G,MAAA84B,QACiBpB,IAAA,SAAAe,GACjBz4B,KAAA84B,OAAAL,EAAwCz4B,KAAAk3B,mBACvB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAuuB,iBAAAj7B,UAAA,gBAAsF2I,IAAA,WACtF,MAAA3G,MAAA+4B,eACiBrB,IAAA,SAAAgB,GACjB14B,KAAA+4B,cAAAL,EAAsD14B,KAAAk3B,mBACrC74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAuuB,iBAAAj7B,UAAA,aAAmF2I,IAAA,WACnF,MAAA3G,MAAAg5B,YACiBtB,IAAA,SAAAiB,GACjB34B,KAAAg5B,WAAAL,EAAgD34B,KAAAk3B,mBAC/B74B,YAAA,IAEjBqM,OAAAwuB,8BAAA,SAAAzD,EAAA9zB,GACA+I,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAmB,8BAAA,IAAAjB,GACAz1B,KAAAw3B,GAAA71B,GAEA+I,OAAAwuB,8BAAAl7B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAAwuB,8BAAAl7B,UAAAyW,SAAA,WACA,gDAEA/J,OAAAwuB,8BAAAl7B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAw3B,IAEA9sB,OAAAwuB,8BAAAl7B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAAwuB,kCAAAjmB,GAAAjT,KAAAw3B,KAEAv5B,OAAAS,eAAAgM,OAAAwuB,8BAAAl7B,UAAA,KAAwF2I,IAAA,WACxF,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IAEjBqM,OAAAyuB,8BAAA,SAAA1D,EAAA9zB,GACA+I,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAoB,8BAAA,IAAAlB,GACAz1B,KAAAw3B,GAAA71B,GAEA+I,OAAAyuB,8BAAAn7B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAAyuB,8BAAAn7B,UAAAyW,SAAA,WACA,gDAEA/J,OAAAyuB,8BAAAn7B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAw3B,IAEA9sB,OAAAyuB,8BAAAn7B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAAyuB,kCAAAlmB,GAAAjT,KAAAw3B,KAEAv5B,OAAAS,eAAAgM,OAAAyuB,8BAAAn7B,UAAA,KAAwF2I,IAAA,WACxF,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IAEjBqM,OAAA0uB,4BAAA,SAAA3D,EAAA3zB,GACA4I,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAqB,4BAAA,IAAAnB,GACAz1B,KAAAy3B,GAAA31B,GAEA4I,OAAA0uB,4BAAAp7B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA0uB,4BAAAp7B,UAAAyW,SAAA,WACA,8CAEA/J,OAAA0uB,4BAAAp7B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAy3B,IAEA/sB,OAAA0uB,4BAAAp7B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA0uB,gCAAAnmB,GAAAjT,KAAAy3B,KAEAx5B,OAAAS,eAAAgM,OAAA0uB,4BAAAp7B,UAAA,KAAsF2I,IAAA,WACtF,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IAEjBqM,OAAA2uB,4BAAA,SAAA5D,EAAA3zB,GACA4I,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAsB,4BAAA,IAAApB,GACAz1B,KAAAy3B,GAAA31B,GAEA4I,OAAA2uB,4BAAAr7B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA2uB,4BAAAr7B,UAAAyW,SAAA,WACA,8CAEA/J,OAAA2uB,4BAAAr7B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAy3B,IAEA/sB,OAAA2uB,4BAAAr7B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA2uB,gCAAApmB,GAAAjT,KAAAy3B,KAEAx5B,OAAAS,eAAAgM,OAAA2uB,4BAAAr7B,UAAA,KAAsF2I,IAAA,WACtF,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IAEjBqM,OAAA4uB,gCAAA,SAAA7D,EAAA9zB,EAAAG,EAAA8mB,EAAAnQ,GACA/N,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAuB,iCAAA,IAAArB,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,EACA9B,KAAAi4B,IAAArP,EACA5oB,KAAAk4B,IAAAzf,GAEA/N,OAAA4uB,gCAAAt7B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA4uB,gCAAAt7B,UAAAyW,SAAA,WACA,kDAEA/J,OAAA4uB,gCAAAt7B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAi4B,IAAA,IAAAj4B,KAAAk4B,IAAA,IAAAl4B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAA4uB,gCAAAt7B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA4uB,oCAAArmB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,GAAAz3B,KAAAi4B,IAAAj4B,KAAAk4B,MAEAj6B,OAAAS,eAAAgM,OAAA4uB,gCAAAt7B,UAAA,KAA0F2I,IAAA,WAC1F,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA4uB,gCAAAt7B,UAAA,KAA0F2I,IAAA,WAC1F,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA4uB,gCAAAt7B,UAAA,MAA2F2I,IAAA,WAC3F,MAAA3G,MAAAi4B,KACiBP,IAAA,SAAA9O,GACjB5oB,KAAAi4B,IAAArP,EAAkC5oB,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA4uB,gCAAAt7B,UAAA,MAA2F2I,IAAA,WAC3F,MAAA3G,MAAAk4B,KACiBR,IAAA,SAAAjf,GACjBzY,KAAAk4B,IAAAzf,EAAkCzY,KAAAk3B,mBACjB74B,YAAA,IAEjBqM,OAAA6uB,gCAAA,SAAA9D,EAAA9zB,EAAAG,EAAA8mB,EAAAnQ,GACA/N,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAwB,iCAAA,IAAAtB,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,EACA9B,KAAAi4B,IAAArP,EACA5oB,KAAAk4B,IAAAzf,GAEA/N,OAAA6uB,gCAAAv7B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA6uB,gCAAAv7B,UAAAyW,SAAA,WACA,kDAEA/J,OAAA6uB,gCAAAv7B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAi4B,IAAA,IAAAj4B,KAAAk4B,IAAA,IAAAl4B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAA6uB,gCAAAv7B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA6uB,oCAAAtmB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,GAAAz3B,KAAAi4B,IAAAj4B,KAAAk4B,MAEAj6B,OAAAS,eAAAgM,OAAA6uB,gCAAAv7B,UAAA,KAA0F2I,IAAA,WAC1F,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA6uB,gCAAAv7B,UAAA,KAA0F2I,IAAA,WAC1F,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA6uB,gCAAAv7B,UAAA,MAA2F2I,IAAA,WAC3F,MAAA3G,MAAAi4B,KACiBP,IAAA,SAAA9O,GACjB5oB,KAAAi4B,IAAArP,EAAkC5oB,KAAAk3B,mBACjB74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA6uB,gCAAAv7B,UAAA,MAA2F2I,IAAA,WAC3F,MAAA3G,MAAAk4B,KACiBR,IAAA,SAAAjf,GACjBzY,KAAAk4B,IAAAzf,EAAkCzY,KAAAk3B,mBACjB74B,YAAA,IAEjBqM,OAAA8uB,oCAAA,SAAA/D,EAAA9zB,EAAAG,GACA4I,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAAyB,qCAAA,IAAAvB,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,GAEA4I,OAAA8uB,oCAAAx7B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA8uB,oCAAAx7B,UAAAyW,SAAA,WACA,sDAEA/J,OAAA8uB,oCAAAx7B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAA8uB,oCAAAx7B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA8uB,wCAAAvmB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,KAEAx5B,OAAAS,eAAAgM,OAAA8uB,oCAAAx7B,UAAA,KAA8F2I,IAAA,WAC9F,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA8uB,oCAAAx7B,UAAA,KAA8F2I,IAAA,WAC9F,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IAEjBqM,OAAA+uB,oCAAA,SAAAhE,EAAA9zB,EAAAG,GACA4I,OAAA6qB,WAAA53B,KAAAqC,KAAA0K,OAAA6qB,WAAA0B,qCAAA,IAAAxB,GACAz1B,KAAAw3B,GAAA71B,EACA3B,KAAAy3B,GAAA31B,GAEA4I,OAAA+uB,oCAAAz7B,UAAAC,OAAAC,OAAAwM,OAAA6qB,WAAAv3B,WACA0M,OAAA+uB,oCAAAz7B,UAAAyW,SAAA,WACA,sDAEA/J,OAAA+uB,oCAAAz7B,UAAAq5B,cAAA,WACA,MAAAr3B,MAAA21B,oBAAA,IAAA31B,KAAAw3B,GAAA,IAAAx3B,KAAAy3B,IAEA/sB,OAAA+uB,oCAAAz7B,UAAAs5B,MAAA,WACA,UAAA5sB,QAAA+uB,wCAAAxmB,GAAAjT,KAAAw3B,GAAAx3B,KAAAy3B,KAEAx5B,OAAAS,eAAAgM,OAAA+uB,oCAAAz7B,UAAA,KAA8F2I,IAAA,WAC9F,MAAA3G,MAAAw3B,IACiBE,IAAA,SAAA/1B,GACjB3B,KAAAw3B,GAAA71B,EAAgC3B,KAAAk3B,mBACf74B,YAAA,IACjBJ,OAAAS,eAAAgM,OAAA+uB,oCAAAz7B,UAAA,KAA8F2I,IAAA,WAC9F,MAAA3G,MAAAy3B,IACiBC,IAAA,SAAA51B,GACjB9B,KAAAy3B,GAAA31B,EAAgC9B,KAAAk3B,mBACf74B,YAAA,IAIjBqM,OAAAgvB,eAAA17B,UAAA27B,0BAAA,WACA,UAAAjvB,QAAA0sB,wBAAAnkB,KAEAvI,OAAAgvB,eAAA17B,UAAA47B,0BAAA,SAAAj4B,EAAAG,GACA,UAAA4I,QAAA6sB,wBAAAtkB,GAAAtR,EAAAG,IAEA4I,OAAAgvB,eAAA17B,UAAA67B,0BAAA,SAAAl4B,EAAAG,GACA,UAAA4I,QAAAitB,wBAAA1kB,GAAAtR,EAAAG,IAEA4I,OAAAgvB,eAAA17B,UAAA87B,0BAAA,SAAAn4B,EAAAG,GACA,UAAA4I,QAAAktB,wBAAA3kB,GAAAtR,EAAAG,IAEA4I,OAAAgvB,eAAA17B,UAAA+7B,0BAAA,SAAAp4B,EAAAG,GACA,UAAA4I,QAAAmtB,wBAAA5kB,GAAAtR,EAAAG,IAEA4I,OAAAgvB,eAAA17B,UAAAg8B,gCAAA,SAAAr4B,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,GACA,UAAA/N,QAAAotB,8BAAA7kB,GAAAtR,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,IAEA/N,OAAAgvB,eAAA17B,UAAAi8B,gCAAA,SAAAt4B,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,GACA,UAAA/N,QAAAytB,8BAAAllB,GAAAtR,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,IAEA/N,OAAAgvB,eAAA17B,UAAAk8B,oCAAA,SAAAv4B,EAAAG,EAAA6mB,EAAAE,GACA,UAAAne,QAAA0tB,kCAAAnlB,GAAAtR,EAAAG,EAAA6mB,EAAAE,IAEAne,OAAAgvB,eAAA17B,UAAAm8B,oCAAA,SAAAx4B,EAAAG,EAAA6mB,EAAAE,GACA,UAAAne,QAAA2tB,kCAAAplB,GAAAtR,EAAAG,EAAA6mB,EAAAE,IAEAne,OAAAgvB,eAAA17B,UAAAo8B,uBAAA,SAAAz4B,EAAAG,EAAAy2B,EAAAC,EAAAC,EAAAC,EAAAC,GACA,UAAAjuB,QAAA4tB,qBAAArlB,GAAAtR,EAAAG,EAAAy2B,EAAAC,EAAAC,EAAAC,EAAAC,IAEAjuB,OAAAgvB,eAAA17B,UAAAq8B,uBAAA,SAAA14B,EAAAG,EAAAy2B,EAAAC,EAAAC,EAAAC,EAAAC,GACA,UAAAjuB,QAAAuuB,qBAAAhmB,GAAAtR,EAAAG,EAAAy2B,EAAAC,EAAAC,EAAAC,EAAAC,IAEAjuB,OAAAgvB,eAAA17B,UAAAs8B,oCAAA,SAAA34B,GACA,UAAA+I,QAAAwuB,kCAAAjmB,GAAAtR,IAEA+I,OAAAgvB,eAAA17B,UAAAu8B,oCAAA,SAAA54B,GACA,UAAA+I,QAAAyuB,kCAAAlmB,GAAAtR,IAEA+I,OAAAgvB,eAAA17B,UAAAw8B,kCAAA,SAAA14B,GACA,UAAA4I,QAAA0uB,gCAAAnmB,GAAAnR,IAEA4I,OAAAgvB,eAAA17B,UAAAy8B,kCAAA,SAAA34B,GACA,UAAA4I,QAAA2uB,gCAAApmB,GAAAnR,IAEA4I,OAAAgvB,eAAA17B,UAAA08B,sCAAA,SAAA/4B,EAAAG,EAAA8mB,EAAAnQ,GACA,UAAA/N,QAAA4uB,oCAAArmB,GAAAtR,EAAAG,EAAA8mB,EAAAnQ,IAEA/N,OAAAgvB,eAAA17B,UAAA28B,sCAAA,SAAAh5B,EAAAG,EAAA8mB,EAAAnQ,GACA,UAAA/N,QAAA6uB,oCAAAtmB,GAAAtR,EAAAG,EAAA8mB,EAAAnQ,IAEA/N,OAAAgvB,eAAA17B,UAAA48B,0CAAA,SAAAj5B,EAAAG,GACA,UAAA4I,QAAA8uB,wCAAAvmB,GAAAtR,EAAAG,IAEA4I,OAAAgvB,eAAA17B,UAAA68B,0CAAA,SAAAl5B,EAAAG,GACA,UAAA4I,QAAA+uB,wCAAAxmB,GAAAtR,EAAAG,IAGA,sBAAA4I,QAAAgvB,eAAA17B,YAIA0M,OAAAgvB,eAAA17B,UAAA88B,mBAAA,SAAAC,GACA,OAAA9nB,KAAA8nB,IAAAC,SAAAD,GAAA,yBAEA,IAAAE,GAAAxV,SAAAyV,gBAAA,oCACAD,GAAAE,aAAA,IAAAn7B,KAAAo7B,aAAA,KACA,IAAAC,GAAAJ,EAAAzpB,YAAA8pB,cAAA,CAGA,IAAAD,GAAA,UAEA,IAEA,GADAJ,EAAAzpB,YAAA+pB,WAAAF,GACAN,EAAAE,EAAAzjB,iBAAA,KACA6jB,WACqBA,EAAA,EACrB,OAAAA,MAKA,kBAAA3wB,UAEAA,OAAA8wB,eAAA,SAAAC,GACAz7B,KAAA07B,aAAAD,EACAz7B,KAAA27B,MAAA37B,KAAA47B,WAAA57B,KAAA07B,aAAAN,aAAA,MAGAp7B,KAAA67B,yBAAgD3I,YAAA,EAAA4I,iBAAA,MAChD97B,KAAA+7B,6BAAA,GAAAzJ,kBAAAtyB,KAAAg8B,6BAAAzxB,KAAAvK,OACAA,KAAA+7B,6BAAA9I,QAAAjzB,KAAA07B,aAAA17B,KAAA67B,0BAGAnxB,OAAA8wB,eAAAx9B,UAAA63B,UAAA,iBAEA53B,OAAAS,eAAAgM,OAAA8wB,eAAAx9B,UAAA,iBACA2I,IAAA,WAEA,MADA3G,MAAAi8B,+BACAj8B,KAAA27B,MAAAl8B,QAEApB,YAAA,IAKAJ,OAAAS,eAAAgM,OAAAgvB,eAAA17B,UAAA,eACA2I,IAAA,WAEA,MADA3G,MAAAk8B,eAAAl8B,KAAAk8B,aAAA,GAAAxxB,QAAA8wB,eAAAx7B,OACAA,KAAAk8B,cAEA79B,YAAA,IAGAJ,OAAAS,eAAAgM,OAAAgvB,eAAA17B,UAAA,yBAA6F2I,IAAA,WAC7F,MAAA3G,MAAAwR,aACiBnT,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAgvB,eAAA17B,UAAA,uBAA2F2I,IAAA,WAC3F,MAAA3G,MAAAwR,aACiBnT,YAAA,IACjBJ,OAAAS,eAAAgM,OAAAgvB,eAAA17B,UAAA,iCAAqG2I,IAAA,WACrG,MAAA3G,MAAAwR,aACiBnT,YAAA,IAKjBqM,OAAA8wB,eAAAx9B,UAAAi+B,6BAAA,WACAj8B,KAAAg8B,6BAAAh8B,KAAA+7B,6BAAAI,gBAGAzxB,OAAA8wB,eAAAx9B,UAAAg+B,6BAAA,SAAAI,GACA,GAAAp8B,KAAA07B,aAAA,CACA,GAAAW,IAAA,CACAD,GAAA9xB,QAAA,SAAAgyB,GACA,KAAAA,EAAAC,gBAAAF,GAAA,KAEAA,IAAAr8B,KAAA27B,MAAA37B,KAAA47B,WAAA57B,KAAA07B,aAAAN,aAAA,SAIA1wB,OAAA8wB,eAAAx9B,UAAAw+B,iBAAA,WACAx8B,KAAA+7B,6BAAAnJ,aACA5yB,KAAA07B,aAAAP,aAAA,IAAAzwB,OAAA8wB,eAAAiB,sBAAAz8B,KAAA27B,QACA37B,KAAA+7B,6BAAA9I,QAAAjzB,KAAA07B,aAAA17B,KAAA67B,0BAIAnxB,OAAA8wB,eAAAx9B,UAAAm5B,eAAA,SAAAuF,GACA18B,KAAAw8B,oBAGA9xB,OAAA8wB,eAAAx9B,UAAA2+B,MAAA,WACA38B,KAAAi8B,+BAEAj8B,KAAA27B,MAAArxB,QAAA,SAAAoyB,GACAA,EAAA9G,mBAAA,OAEA51B,KAAA27B,SACA37B,KAAAw8B,oBAGA9xB,OAAA8wB,eAAAx9B,UAAA4+B,WAAA,SAAAC,GAMA,MALA78B,MAAAi8B,+BAEAj8B,KAAA27B,OAAAkB,GACAA,EAAAjH,mBAAA51B,KACAA,KAAAw8B,mBACAK,GAGAnyB,OAAA8wB,eAAAx9B,UAAA8+B,iBAAA,SAAAhpB,GACA,GAAA8gB,MAAA9gB,MAAA,GAAAA,GAAA9T,KAAAs7B,cAAA,uBAGA5wB,OAAA8wB,eAAAx9B,UAAAyT,QAAA,SAAAqC,GAIA,MAHA9T,MAAAi8B,+BAEAj8B,KAAA88B,iBAAAhpB,GACA9T,KAAA27B,MAAA7nB,IAGApJ,OAAA8wB,eAAAx9B,UAAA++B,iBAAA,SAAAF,EAAA/oB,GAYA,MAXA9T,MAAAi8B,+BAGAnoB,EAAA9T,KAAAs7B,gBAAAxnB,EAAA9T,KAAAs7B,eACAuB,EAAAjH,qBAEAiH,IAAAvF,SAEAt3B,KAAA27B,MAAAvH,OAAAtgB,EAAA,EAAA+oB,GACAA,EAAAjH,mBAAA51B,KACAA,KAAAw8B,mBACAK,GAGAnyB,OAAA8wB,eAAAx9B,UAAAg/B,YAAA,SAAAH,EAAA/oB,GAWA,MAVA9T,MAAAi8B,+BAEAY,EAAAjH,qBAEAiH,IAAAvF,SAEAt3B,KAAA88B,iBAAAhpB,GACA9T,KAAA27B,MAAA7nB,GAAA+oB,EACAA,EAAAjH,mBAAA51B,KACAA,KAAAw8B,mBACAK,GAGAnyB,OAAA8wB,eAAAx9B,UAAAu9B,WAAA,SAAAznB,GACA9T,KAAAi8B,+BAEAj8B,KAAA88B,iBAAAhpB,EACA,IAAAmpB,GAAAj9B,KAAA27B,MAAA7nB,EAGA,OAFA9T,MAAA27B,MAAAvH,OAAAtgB,EAAA,GACA9T,KAAAw8B,mBACAS,GAGAvyB,OAAA8wB,eAAAx9B,UAAAk/B,WAAA,SAAAL,GAWA,MAVA78B,MAAAi8B,+BAEAY,EAAAjH,qBAEAiH,IAAAvF,SAEAt3B,KAAA27B,MAAAzpB,KAAA2qB,GACAA,EAAAjH,mBAAA51B,KAEAA,KAAAw8B,mBACAK,GAGAnyB,OAAA8wB,eAAAiB,sBAAA,SAAAU,GACA,GAAAt1B,GAAA,GACAu1B,GAAA,CASA,OARAD,GAAA7yB,QAAA,SAAAoyB,GACAU,GACAA,GAAA,EACAv1B,GAAA60B,EAAArF,iBAEAxvB,GAAA,IAAA60B,EAAArF,kBAGAxvB,GAIA6C,OAAA8wB,eAAAx9B,UAAA49B,WAAA,SAAA/zB,GACA,IAAAA,GAAA,GAAAA,EAAApI,OAAA,QAEA,IAAAg2B,GAAAz1B,KAEAq9B,EAAA,WACAr9B,KAAAwR,eAGA6rB,GAAAr/B,UAAAs/B,cAAA,SAAAZ,GACA18B,KAAAwR,YAAAU,KAAAwqB,GAGA,IAAAa,GAAA,SAAA11B,GACA7H,KAAAw9B,QAAA31B,EACA7H,KAAAy9B,cAAA,EACAz9B,KAAA09B,UAAA19B,KAAAw9B,QAAA/9B,OACAO,KAAA29B,iBAAAjzB,OAAA6qB,WAAAO,gBAEA91B,KAAA49B,sBAGAL,GAAAv/B,UAAA6/B,gBAAA,WACA,GAAAC,GAAA99B,KAAAw9B,QAAAx9B,KAAAy9B,cACA,OAAAK,IAAA,WAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,IAGAP,EAAAv/B,UAAA4/B,oBAAA,WACA,KAAA59B,KAAAy9B,cAAAz9B,KAAA09B,WAAA19B,KAAA69B,mBACA79B,KAAAy9B,eACqB,OAAAz9B,MAAAy9B,cAAAz9B,KAAA09B,WAGrBH,EAAAv/B,UAAA+/B,+BAAA,WACA,QAAA/9B,KAAAy9B,cAAAz9B,KAAA09B,YAAA19B,KAAA69B,mBAAA,KAAA79B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,kBACAz9B,KAAA49B,uBACA59B,KAAAy9B,cAAAz9B,KAAA09B,WAAA,KAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,iBACAz9B,KAAAy9B,gBACAz9B,KAAA49B,uBAGA59B,KAAAy9B,cAAAz9B,KAAA09B,YAGAH,EAAAv/B,UAAAggC,YAAA,WACA,MAAAh+B,MAAAy9B,cAAAz9B,KAAA09B,WAGAH,EAAAv/B,UAAAigC,gBAAA,WACA,GAAAC,GAAAl+B,KAAAw9B,QAAAx9B,KAAAy9B,cACA,OAAAz9B,MAAAm+B,qBAAAD,IAGAX,EAAAv/B,UAAAmgC,qBAAA,SAAAD,GACA,OAAAA,GACA,QACA,QACA,MAAAxzB,QAAA6qB,WAAAQ,iBACA,SACA,MAAArrB,QAAA6qB,WAAAS,kBACA,SACA,MAAAtrB,QAAA6qB,WAAAU,kBACA,SACA,MAAAvrB,QAAA6qB,WAAAW,kBACA,SACA,MAAAxrB,QAAA6qB,WAAAY,kBACA,SACA,MAAAzrB,QAAA6qB,WAAAa,yBACA,SACA,MAAA1rB,QAAA6qB,WAAAc,yBACA,SACA,MAAA3rB,QAAA6qB,WAAAe,6BACA,SACA,MAAA5rB,QAAA6qB,WAAAgB,6BACA,SACA,MAAA7rB,QAAA6qB,WAAAiB,eACA,SACA,MAAA9rB,QAAA6qB,WAAAkB,eACA,SACA,MAAA/rB,QAAA6qB,WAAAmB,6BACA,SACA,MAAAhsB,QAAA6qB,WAAAoB,6BACA,SACA,MAAAjsB,QAAA6qB,WAAAqB,2BACA,SACA,MAAAlsB,QAAA6qB,WAAAsB,2BACA,SACA,MAAAnsB,QAAA6qB,WAAAuB,gCACA,SACA,MAAApsB,QAAA6qB,WAAAwB,gCACA,SACA,MAAArsB,QAAA6qB,WAAAyB,oCACA,SACA,MAAAtsB,QAAA6qB,WAAA0B,oCACA,SACA,MAAAvsB,QAAA6qB,WAAAO,kBAIAyH,EAAAv/B,UAAAogC,mBAAA,SAAAF,EAAAG,GAEA,YAAAH,GAAA,KAAAA,GAAA,KAAAA,MAAA,KAAAA,GAAA,MAAAG,GAAA3zB,OAAA6qB,WAAAQ,kBACAsI,GAAA3zB,OAAA6qB,WAAAS,mBAAAtrB,OAAA6qB,WAAAW,mBACAmI,GAAA3zB,OAAA6qB,WAAAU,mBAAAvrB,OAAA6qB,WAAAY,mBACAkI,EAEA3zB,OAAA6qB,WAAAO,iBAGAyH,EAAAv/B,UAAAsgC,uBAAA,WAEA,IAAAt+B,KAAAg+B,cAAA,QACA,IAAAO,GAAAv+B,KAAAi+B,iBAEA,OAAAM,IAAA7zB,OAAA6qB,WAAAS,oBAAAuI,GAAA7zB,OAAA6qB,WAAAU,oBAKAsH,EAAAv/B,UAAAwgC,aAAA,WACA,GAAAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAC,EAAA/+B,KAAAy9B,aAUA,IARAz9B,KAAA49B,sBAGA59B,KAAAy9B,cAAAz9B,KAAA09B,WAAA,KAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eAAAz9B,KAAAy9B,gBAAoIz9B,KAAAy9B,cAAAz9B,KAAA09B,WAAA,KAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,iBACpIz9B,KAAAy9B,gBACAoB,GAAA,KAGA7+B,KAAAy9B,eAAAz9B,KAAA09B,YAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eAAA,KAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eAAA,WAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,gBAAA,CAMA,IADA,GAAAuB,GAAAh/B,KAAAy9B,cACAz9B,KAAAy9B,cAAAz9B,KAAA09B,WAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,gBAAA,KAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,gBAAA,KACAz9B,KAAAy9B,eAGA,IAAAz9B,KAAAy9B,eAAAuB,EAGA,IAFA,GAAAC,GAAAj/B,KAAAy9B,cAAA,EACAyB,EAAA,EACAD,GAAAD,GACAN,GAAAQ,GAAAl/B,KAAAw9B,QAAAvpB,OAAAgrB,KAAA,KACAC,GAAA,EAKA,IAAAl/B,KAAAy9B,cAAAz9B,KAAA09B,WAAA,KAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eAAA,CAIA,KAHAz9B,KAAAy9B,eAGAz9B,KAAA09B,WAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eAAA,KAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eAAA,UACA,MAAAz9B,KAAAy9B,cAAAz9B,KAAA09B,WAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,gBAAA,KAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,gBAAA,KACAkB,GAAA,GACAC,IAAA5+B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eAAA,KAAAkB,EACA3+B,KAAAy9B,eAAA,EAKA,GAAAz9B,KAAAy9B,eAAAsB,GAAA/+B,KAAAy9B,cAAA,EAAAz9B,KAAA09B,YAAA,KAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,gBAAA,KAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,iBAAA,KAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,cAAA,SAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,cAAA,IAYA,GAXAz9B,KAAAy9B,gBAGA,KAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eACAz9B,KAAAy9B,gBACyB,KAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,iBACzBz9B,KAAAy9B,gBACAqB,GAAA,GAIA9+B,KAAAy9B,eAAAz9B,KAAA09B,WAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eAAA,KAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eAAA,UAEA,MAAAz9B,KAAAy9B,cAAAz9B,KAAA09B,WAAA19B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,gBAAA,KAAAz9B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,gBAAA,KACAgB,GAAA,GACAA,GAAAz+B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,eAAA,IACAz9B,KAAAy9B,gBAIA,GAAA0B,GAAAT,EAAAE,CAKA,IAJAO,GAAAN,EAEAJ,IAAAU,GAAAjvB,KAAAkvB,IAAA,GAAAN,EAAAL,IAEAM,GAAA/+B,KAAAy9B,cAIA,MAFAz9B,MAAA+9B,iCAEAoB,IAGA5B,EAAAv/B,UAAAqhC,cAAA,WACA,KAAAr/B,KAAAy9B,eAAAz9B,KAAA09B,WAAA,CACA,GAAA4B,IAAA,EACAC,EAAAv/B,KAAAw9B,QAAAvpB,OAAAjU,KAAAy9B,gBACA,SAAA8B,EAAAD,GAAA,MAAsD,SAAAC,EAAsC,MAAtCD,IAAA,EAGtD,MADAt/B,MAAA+9B,iCACAuB,IAGA/B,EAAAv/B,UAAAwhC,aAAA,WACA,GAAAtB,GAAAl+B,KAAAw9B,QAAAx9B,KAAAy9B,eACAc,EAAAv+B,KAAAm+B,qBAAAD,EACA,IAAAK,GAAA7zB,OAAA6qB,WAAAO,gBAAA,CAEA,GAAA91B,KAAA29B,kBAAAjzB,OAAA6qB,WAAAO,gBAAA,WAEA,KADAyI,EAAAv+B,KAAAo+B,mBAAAF,EAAAl+B,KAAA29B,oBACAjzB,OAAA6qB,WAAAO,gBAAA,gBAEA91B,MAAAy9B,eAKA,QAFAz9B,KAAA29B,iBAAAY,EAEAA,GACA,IAAA7zB,QAAA6qB,WAAAU,mBACA,UAAAvrB,QAAAitB,oBAAAlC,EAAAz1B,KAAAw+B,eAAAx+B,KAAAw+B,eACA,KAAA9zB,QAAA6qB,WAAAS,mBACA,UAAAtrB,QAAA6sB,oBAAA9B,EAAAz1B,KAAAw+B,eAAAx+B,KAAAw+B,eACA,KAAA9zB,QAAA6qB,WAAAY,mBACA,UAAAzrB,QAAAmtB,oBAAApC,EAAAz1B,KAAAw+B,eAAAx+B,KAAAw+B,eACA,KAAA9zB,QAAA6qB,WAAAW,mBACA,UAAAxrB,QAAAktB,oBAAAnC,EAAAz1B,KAAAw+B,eAAAx+B,KAAAw+B,eACA,KAAA9zB,QAAA6qB,WAAAoB,8BACA,UAAAjsB,QAAAyuB,8BAAA1D,EAAAz1B,KAAAw+B,eACA,KAAA9zB,QAAA6qB,WAAAmB,8BACA,UAAAhsB,QAAAwuB,8BAAAzD,EAAAz1B,KAAAw+B,eACA,KAAA9zB,QAAA6qB,WAAAsB,4BACA,UAAAnsB,QAAA2uB,4BAAA5D,EAAAz1B,KAAAw+B,eACA,KAAA9zB,QAAA6qB,WAAAqB,4BACA,UAAAlsB,QAAA0uB,4BAAA3D,EAAAz1B,KAAAw+B,eACA,KAAA9zB,QAAA6qB,WAAAQ,kBAEA,MADA/1B,MAAA49B,sBACA,GAAAlzB,QAAA0sB,oBAAA3B,EACA,KAAA/qB,QAAA6qB,WAAAc,0BACA,GAAAoJ,IAA0C9W,GAAA3oB,KAAAw+B,eAAA3V,GAAA7oB,KAAAw+B,eAAA5V,GAAA5oB,KAAAw+B,eAAA/lB,GAAAzY,KAAAw+B,eAAA78B,EAAA3B,KAAAw+B,eAAA18B,EAAA9B,KAAAw+B,eAC1C,WAAA9zB,QAAAytB,0BAAA1C,EAAAgK,EAAA99B,EAAA89B,EAAA39B,EAAA29B,EAAA9W,GAAA8W,EAAA5W,GAAA4W,EAAA7W,GAAA6W,EAAAhnB,GACA,KAAA/N,QAAA6qB,WAAAa,0BACA,GAAAqJ,IAA0C9W,GAAA3oB,KAAAw+B,eAAA3V,GAAA7oB,KAAAw+B,eAAA5V,GAAA5oB,KAAAw+B,eAAA/lB,GAAAzY,KAAAw+B,eAAA78B,EAAA3B,KAAAw+B,eAAA18B,EAAA9B,KAAAw+B,eAC1C,WAAA9zB,QAAAotB,0BAAArC,EAAAgK,EAAA99B,EAAA89B,EAAA39B,EAAA29B,EAAA9W,GAAA8W,EAAA5W,GAAA4W,EAAA7W,GAAA6W,EAAAhnB,GACA,KAAA/N,QAAA6qB,WAAAwB,iCACA,GAAA0I,IAA0C7W,GAAA5oB,KAAAw+B,eAAA/lB,GAAAzY,KAAAw+B,eAAA78B,EAAA3B,KAAAw+B,eAAA18B,EAAA9B,KAAAw+B,eAC1C,WAAA9zB,QAAA6uB,gCAAA9D,EAAAgK,EAAA99B,EAAA89B,EAAA39B,EAAA29B,EAAA7W,GAAA6W,EAAAhnB,GACA,KAAA/N,QAAA6qB,WAAAuB,iCACA,GAAA2I,IAA0C7W,GAAA5oB,KAAAw+B,eAAA/lB,GAAAzY,KAAAw+B,eAAA78B,EAAA3B,KAAAw+B,eAAA18B,EAAA9B,KAAAw+B,eAC1C,WAAA9zB,QAAA4uB,gCAAA7D,EAAAgK,EAAA99B,EAAA89B,EAAA39B,EAAA29B,EAAA7W,GAAA6W,EAAAhnB,GACA,KAAA/N,QAAA6qB,WAAAgB,8BACA,GAAAkJ,IAA0C9W,GAAA3oB,KAAAw+B,eAAA3V,GAAA7oB,KAAAw+B,eAAA78B,EAAA3B,KAAAw+B,eAAA18B,EAAA9B,KAAAw+B,eAC1C,WAAA9zB,QAAA2tB,8BAAA5C,EAAAgK,EAAA99B,EAAA89B,EAAA39B,EAAA29B,EAAA9W,GAAA8W,EAAA5W,GACA,KAAAne,QAAA6qB,WAAAe,8BACA,GAAAmJ,IAA0C9W,GAAA3oB,KAAAw+B,eAAA3V,GAAA7oB,KAAAw+B,eAAA78B,EAAA3B,KAAAw+B,eAAA18B,EAAA9B,KAAAw+B,eAC1C,WAAA9zB,QAAA0tB,8BAAA3C,EAAAgK,EAAA99B,EAAA89B,EAAA39B,EAAA29B,EAAA9W,GAAA8W,EAAA5W,GACA,KAAAne,QAAA6qB,WAAA0B,qCACA,UAAAvsB,QAAA+uB,oCAAAhE,EAAAz1B,KAAAw+B,eAAAx+B,KAAAw+B,eACA,KAAA9zB,QAAA6qB,WAAAyB,qCACA,UAAAtsB,QAAA8uB,oCAAA/D,EAAAz1B,KAAAw+B,eAAAx+B,KAAAw+B,eACA,KAAA9zB,QAAA6qB,WAAAkB,gBACA,GAAAgJ,IAA0C9W,GAAA3oB,KAAAw+B,eAAA3V,GAAA7oB,KAAAw+B,eAAAkB,SAAA1/B,KAAAw+B,eAAAmB,SAAA3/B,KAAAq/B,gBAAAO,SAAA5/B,KAAAq/B,gBAAA19B,EAAA3B,KAAAw+B,eAAA18B,EAAA9B,KAAAw+B,eAC1C,WAAA9zB,QAAAuuB,iBAAAxD,EAAAgK,EAAA99B,EAAA89B,EAAA39B,EAAA29B,EAAA9W,GAAA8W,EAAA5W,GAAA4W,EAAAC,SAAAD,EAAAE,SAAAF,EAAAG,SACA,KAAAl1B,QAAA6qB,WAAAiB,gBACA,GAAAiJ,IAA0C9W,GAAA3oB,KAAAw+B,eAAA3V,GAAA7oB,KAAAw+B,eAAAkB,SAAA1/B,KAAAw+B,eAAAmB,SAAA3/B,KAAAq/B,gBAAAO,SAAA5/B,KAAAq/B,gBAAA19B,EAAA3B,KAAAw+B,eAAA18B,EAAA9B,KAAAw+B,eAC1C,WAAA9zB,QAAA4tB,iBAAA7C,EAAAgK,EAAA99B,EAAA89B,EAAA39B,EAAA29B,EAAA9W,GAAA8W,EAAA5W,GAAA4W,EAAAC,SAAAD,EAAAE,SAAAF,EAAAG,SACA,SACA,+BAIA,IAAAC,GAAA,GAAAxC,GACAv4B,EAAA,GAAAy4B,GAAA11B,EAEA,KAAA/C,EAAAw5B,yBAAA,QACA,MAAAx5B,EAAAk5B,eAAA,CACA,GAAAtB,GAAA53B,EAAA06B,cACA,KAAA9C,EAAA,QACAmD,GAAAvC,cAAAZ,GAGA,MAAAmD,GAAAruB,iBASAsuB,OAAA9hC,UAAA6W,SACAirB,OAAA9hC,UAAA6W,OAAA,SAAAkrB,EAAAC,GAGA,MAFAD,KAAA,EACAC,EAAAF,OAAA,oBAAAE,KAAA,KACAhgC,KAAAP,OAAAsgC,EACAD,OAAA9/B,OAEA+/B,GAAA//B,KAAAP,OACAsgC,EAAAC,EAAAvgC,SACAugC,KAAAC,OAAAF,EAAAC,EAAAvgC,SAEAqgC,OAAA9/B,MAAAggC,EAAA1rB,MAAA,EAAAyrB,MAOAv1B,EAAA9I,KAAA,aACA8I,EAAA9I,KAAAw+B,OAAA,SAAAA,GACA,GAAAr2B,GAAA7J,KAAAqI,QACAlI,WAAAV,SACAxB,OAAAoM,KAAA61B,GAAA51B,QAAA,SAAAqR,GACA9R,EAAAnI,KAAAua,aAAAN,EAAAukB,EAAAvkB,MAEA9R,EAAAnI,KAAA6d,iBAIA/U,EAAA9I,KAAAK,IAAA,SAAAA,GACA,GAAA8H,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MACA,KAAA5F,UAAAV,OAgBA,OACAkC,EAAAoE,EAAAo6B,WACAr+B,EAAAiE,EAAAq6B,WACA3nB,GAAA1S,EAAAs6B,YAlBA,iCAAAt+B,GAAA,YAAAmN,EAAAnN,KACAyN,EAAAzN,EAAAJ,KACAoE,EAAAo6B,WAAAp+B,EAAAJ,GAEA6N,EAAAzN,EAAAD,KACAiE,EAAAq6B,WAAAr+B,EAAAD,GAEA0N,EAAAzN,EAAA0W,MACA1S,EAAAs6B,YAAAt+B,EAAA0W,KAGA1S,EAAAq6B,WAAAr6B,EAAAs6B,YAAAt+B,EAEA8H,EAAA8W,QAAuB0H,sBAAA,EAAAD,mBAAA,KASvB5d,EAAA9I,KAAAM,IAAA,SAAAA,GACA,GAAA6H,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MACA,KAAA5F,UAAAV,OAgBA,OACAkC,EAAAoE,EAAAu6B,WACAx+B,EAAAiE,EAAAw6B,WACA9nB,GAAA1S,EAAAy6B,YAlBA,iCAAAx+B,GAAA,YAAAkN,EAAAlN,KACAwN,EAAAxN,EAAAL,KACAoE,EAAAu6B,WAAAt+B,EAAAL,GAEA6N,EAAAxN,EAAAF,KACAiE,EAAAw6B,WAAAv+B,EAAAF,GAEA0N,EAAAxN,EAAAyW,MACA1S,EAAAy6B,YAAAx+B,EAAAyW,KAGA1S,EAAAw6B,WAAAx6B,EAAAy6B,YAAAx+B,EAEA6H,EAAA8W,QAAuB0H,sBAAA,EAAAD,mBAAA,KASvB5d,EAAA9I,KAAA+G,MAAA,SAAAA,GACA,IAAAtI,UAAAV,OAQA,OACAsC,IAAA/B,KAAA0B,KAAAK,MACAC,IAAAhC,KAAA0B,KAAAM,MATAgO,GAAAvH,EAAA1G,MACA/B,KAAA0B,KAAAK,IAAA0G,EAAA1G,KAEAiO,EAAAvH,EAAAzG,MACAhC,KAAA0B,KAAAM,IAAAyG,EAAAzG,MAUAwI,EAAAi2B,SAAA,SAAAjhC,EAAAihC,GACA,GAAA52B,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MAKA,OAJA5F,WAAAV,OAAA,IACAsG,EAAAsrB,kBAAA7xB,GAAAihC,EACA52B,EAAA8W,UAEA5a,EAAAsrB,kBAAA7xB,IAEAgL,EAAAk2B,WAAA,SAAAA,GACA,GAAA72B,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MACA,OAAA5F,WAAAV,QAGAsG,EAAAsrB,kBAAAqP,EACA72B,EAAA8W,SACA5a,EAAAsrB,mBAJAtrB,EAAAsrB,mBAOA7mB,EAAAm2B,OAAA,SAAA99B,GACA,GAAAgH,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MACAA,GAAA66B,WAAA/9B,IAAAK,MAAA,KACA6C,EAAA86B,YAAAh+B,IAAAC,OAAA,KACA9C,KAAA2zB,SAGAnpB,EAAAmpB,MAAA,WACA3zB,KAAAqI,SACA8nB,iBAA4BvE,YAAA,EAAApM,gBAAA,EAAA4Q,4BAAA,KAG5B5lB,EAAA7E,QAAA,WACA,GAAAkE,GAAA7J,KAAAqI,QAQA,IANAqC,OAAAqoB,cAAAlpB,EAAA+a,gCAEA3R,KAAApJ,EAAA2pB,eACA9oB,OAAA+oB,aAAA5pB,EAAA2pB,eAGA9oB,OAAAo2B,YACAp2B,OAAAo2B,YAAA,WAAAj3B,EAAA+pB,8BACS,IAAAlpB,OAAAq2B,oBACTr2B,OAAAq2B,oBAAA,SAAAl3B,EAAA+pB,8BACS,CACT,GAAAI,GAAAtpB,OAAArD,QAEA2sB,MAAA9D,KAAA8D,EAAAzd,QACAyd,EAAAzd,OAAA1M,EAAAwpB,gBAcA,MATAxpB,GAAAwpB,eAAA9c,SAEA1M,EAAA2b,YAAAlG,QAAA,SAAAqG,KAAA,IAGA1nB,OAAAoM,KAAAR,GAAAS,QAAA,SAAA3K,GACAkK,EAAAlK,GAAA,OAGA,MAIA6K,EAAAhJ,MAAA,SAAAgZ,GAEA,MADAxa,MAAAqI,SACA7G,MAAAgZ,IAGAhQ,EAAAlJ,KAAA,SAAA0/B,GACA,GAAAtnB,GAAA1Z,KAAAqI,SAAA/G,KAAAoY,OACA,2BAAAsnB,GAAAtnB,IAAAoM,OAAA,SAAAmK,GACA,SAAAxc,OAAAutB,GAAA1kB,QAAA2T,EAAAzV,KAAA,KAGAhQ,EAAAlJ,KAAA2/B,MAAA,SAAAD,GACA,MAAAhhC,MAAAqI,SAAAqW,oBAAA1e,KAAAsB,KAAA0/B,KAEAx2B,EAAAlJ,KAAAY,OAAA,SAAAg/B,GACA,GAAAxnB,GACAxX,EAAA,IAOA,OANAg/B,KACAxnB,EAAA1Z,KAAAsB,KAAA4/B,GACAh/B,EAAAwX,EAAA,GAAAA,EAAA,GAAAxX,OAAA0R,IAAA,SAAAtD,GACA,MAAAA,GAAAlS,QACa,MAEb8D,GAEAsI,EAAAlJ,KAAA6/B,MAAA,SAAAA,GAEA,MADAnhC,MAAAqI,SAAA+4B,8BACAphC,KAAAqI,SAAAg5B,qBAAA,QAAAF,IAEA32B,EAAAlJ,KAAAN,OAAA,SAAAA,GACA,MAAAhB,MAAAqI,SAAAg5B,qBAAA,SAAArgC,IAEAwJ,EAAAlJ,KAAAuJ,KAAA,SAAAA,GACA,MAAA7K,MAAAqI,SAAAg5B,qBAAA,OAAAx2B,IAGAL,EAAAgiB,KAAA,SAAA8U,GACA,GACA5nB,GACApY,EAIAuQ,EACA0vB,EACAC,EAGAC,EACAC,EAZA73B,EAAA7J,KAAAqI,SAGAs5B,KACAC,EAAA/3B,EAAAg4B,kBAKApiC,EAAA,EACAqiC,EAAA,CAIA,IAAAR,EAAAS,KACAzgC,EAAAuI,EAAA0X,kBAAA+f,EAAAS,KAAAT,EAAAj3B,UACS,IAAAi3B,EAAAU,KACT1gC,EAAAuI,EAAA4X,kBAAA6f,EAAAU,UACS,KAAAV,EAAA//B,QAGT,MAFAD,GAAAuI,EAAA8X,qBAAA2f,EAAA//B,SAIAmY,EAAA7P,EAAA+b,qBAAAtkB,GAAA,GAGAuI,EAAAvI,KAAAoY,QAAApP,QAAA,SAAA2lB,GACA,GACAzwB,GACAyiC,EAFAlxB,GAAA,CAGA,KAAAvR,EAAA,EAAuBA,EAAAka,EAAAja,OAAoBD,IAC3C,GAAAywB,EAAAzV,KAAAd,EAAAla,GAAAgb,GAAA,CAQA,IAPAzJ,GAAA,EAEAkf,EAAA/tB,OAAA+tB,EAAA/tB,OAAAzC,OAAA,KACAqiC,EAAA7R,EAAA/tB,OAAA+tB,EAAA/tB,OAAAzC,OAAA,GAAAqU,MAAA,GAEArU,EAAAia,EAAAla,GAAA0C,OAAAzC,OAEAwiC,EAAA,EAA+BA,EAAAxiC,EAAYwiC,IAC3CvoB,EAAAla,GAAA0C,OAAA+/B,GAAAnuB,MAAAguB,EAAAG,EACAp4B,EAAAwP,iBACAK,EAAAla,GAAA0C,OAAA+/B,GAAAtgC,EAAAmgC,EAAAG,EAGAhS,GAAA/tB,OAAA+tB,EAAA/tB,OAAAuR,OAAAiG,EAAAla,GAAA0C,QAEAwX,EAAA0a,OAAA50B,EAAA,EACA,OAGAuR,GACA4wB,EAAAzvB,KAAA+d,EAAAzV,MAKA3Q,EAAAvI,KAAAoY,QAAApP,QAAA,SAAA2lB,GACA,GAAAzwB,GAAAyiC,CACA,KAAAziC,EAAA,EAAuBA,EAAAmiC,EAAAliC,OAAwBD,IAC/C,GAAAywB,EAAAzV,KAAAmnB,EAAAniC,GAEA,IADAsiC,EAAA7R,EAAA/tB,OAAA+tB,EAAA/tB,OAAAzC,OAAA,GAAAqU,MAAA,EACAmuB,EAAA,EAA+BA,EAAAxiC,EAAYwiC,IAC3ChS,EAAA/tB,OAAAgQ,MACAsI,GAAAyV,EAAAzV,GACA1G,MAAAguB,EAAAG,EACAtgC,EAAAkI,EAAAwP,eAAAxP,EAAAq4B,gBAAAJ,EAAAG,GAAAH,EAAAG,EACA7jC,MAAA,SAQAyL,EAAAvI,KAAAoY,QAAAja,QACAia,EAAApP,QAAA,SAAA2lB,GACA,GAAAzwB,GACA2iC,IACA,KAAA3iC,EAAAqK,EAAAvI,KAAAoY,QAAA,GAAAxX,OAAA,GAAA4R,MAA4DtU,EAAAsiC,EAAUtiC,IACtE2iC,EAAAjwB,MACAsI,GAAAyV,EAAAzV,GACA1G,MAAAtU,EACAmC,EAAAkI,EAAAwP,eAAAxP,EAAAq4B,gBAAA1iC,KACApB,MAAA,MAGA6xB,GAAA/tB,OAAAoI,QAAA,SAAAmF,GACAA,EAAAqE,OAAAguB,EACAj4B,EAAAwP,iBACA5J,EAAA9N,GAAAmgC,KAGA7R,EAAA/tB,OAAAigC,EAAA1uB,OAAAwc,EAAA/tB,UAGA2H,EAAAvI,KAAAoY,QAAA7P,EAAAvI,KAAAoY,QAAAjG,OAAAiG,GAGA7P,EAAAg4B,kBACAN,EAAA13B,EAAAvI,KAAAoY,QAAA,GACA8nB,EAAAD,EAAAr/B,OAAA,GAGA8N,EAAAsxB,EAAAI,KACAjiC,EAAA,EACAiiC,EAAA73B,EAAAwP,eAAAxP,EAAAyP,UAAAgoB,EAAAI,IAAAJ,EAAAI,GACAH,EAAAr/B,OAAAoI,QAAA,SAAAmF,GACAA,EAAA9N,EAAA+/B,GACAjiC,OAGSuQ,EAAAsxB,EAAA7hC,UACTA,EAAA6hC,EAAA7hC,QAIAmiC,EAYS,IAAAA,GACT/3B,EAAAwP,iBACAooB,GAAAF,EAAAr/B,OAAAq/B,EAAAr/B,OAAAzC,OAAA,GAAAkC,EAAA6/B,EAAA7/B,GAAA,EACAkQ,GAAA,GAAAuO,OAAAohB,EAAA7/B,EAAA8/B,GAAA,GAAArhB,OAAAohB,EAAA7/B,EAAA8/B,IACA53B,EAAA2jB,cAAA,cAAA3b,KAbA4vB,EAFA53B,EAAAwP,eACAkoB,EAAAr/B,OAAAzC,OAAA,EACA8hC,EAAAr/B,OAAAq/B,EAAAr/B,OAAAzC,OAAA,GAAAkC,EAAA6/B,EAAA7/B,EAEA6/B,EAAA7/B,EAAAkI,EAAAqV,WAAArV,EAAAvI,KAAAoY,SAAA,GAGA,EAEA7H,GAAA2vB,EAAA7/B,EAAA8/B,EAAAD,EAAA7/B,GACAkI,EAAA2jB,cAAA,cAAA3b,IAUAhI,EAAAoe,cAAApe,EAAAvI,KAAAoY,SAGA7P,EAAA8W,QACA6L,MACA1Y,MAAA0tB,EAAA1tB,MACArU,SACA+gB,SAAAhR,EAAA8xB,EAAA9gB,UAAA8gB,EAAA9gB,SAAA3W,EAAA9D,OAAAwlB,oBACAiJ,KAAA8M,EAAA9M,KACAoN,gBAEAhW,YAAA,EACApM,eAAAoiB,EAAA,EACAjW,iBAAA,EACAI,iBAAA,KAIAtb,EAAA6e,aAAA,SAAAgS,GACA,GAAAz3B,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAuC,EAAAuB,EAAAvB,EAEA,mBACA,GAYA85B,GAEAC,EAMAxwB,EApBA6H,EAAA4nB,EAAA5nB,QACA8S,EAAA8U,EAAA9U,KACAP,EAAAqV,EAAArV,QACAC,EAAAoV,EAAApV,SACAF,EAAAsV,EAAAtV,SACAW,EAAA2U,EAAA3U,GACAC,EAAA0U,EAAA1U,GACAS,EAAAiU,EAAAjU,GACAlB,EAAAmV,EAAAnV,SACAC,EAAAkV,EAAAlV,SACA5L,EAAA8gB,EAAA9gB,SAGA8hB,EAAA,EAEAC,EAAA/V,EAAA1Y,MACA0uB,EAAAhW,EAAA/sB,OACAgjC,EAAA54B,EAAA64B,gBAAA74B,EAAAvI,KAAAoY,QAAA,GAAAxX,OAAAqgC,GACAI,EAAA94B,EAAA64B,gBAAA74B,EAAAvI,KAAAoY,QAAA,GAAAxX,OAAAqgC,EAAAC,GACA9U,EAAA7jB,EAAAlI,EAAAkQ,SAEA+wB,EAAApW,EAAAhM,YACAgU,EAAAhI,EAAAgI,MAAA,aACAqO,EAAAh5B,EAAAmmB,eAEAviB,EAAA5D,EAAA4D,OAAAnF,EAAA2N,cACArI,EAAA/D,EAAA+D,YAAAtF,EAAA2N,cACA6sB,EAAAj5B,EAAAi5B,YAAAx6B,EAAA2N,cACA8sB,EAAAl5B,EAAAk5B,UAAAz6B,EAAA2N,cACA+sB,EAAAn5B,EAAAm5B,SAAA16B,EAAA2N,cACAgtB,EAAAp5B,EAAAo5B,UAAA36B,EAAA2N,cACAitB,EAAAr5B,EAAAq5B,UAAA56B,EAAA2N,cACAktB,EAAAt5B,EAAAs5B,YAAA76B,EAAA2N,aAGApM,GAAA0Y,SAAA,EAGA1Y,EAAAvI,KAAAoY,QAAApP,QAAA,SAAAgG,GACAA,EAAApO,OAAAkyB,OAAA,EAAAoO,KAIA3wB,EAAAhI,EAAA2jB,cAAA9T,GAAA,MAEA7P,EAAAu5B,aACAv5B,EAAAu5B,aAAA,GAIA5W,EAAAoV,aAcAQ,EADa,IAAA5V,EAAAoV,eAAAa,KAAA9gC,MAAAghC,KAAAhhC,GACbkI,EAAAlI,EAAA+rB,EAAA,IAAA7jB,EAAAlI,EAAAkQ,EAAA,IAEAhI,EAAAwP,eACAxP,EAAAlI,EAAA+rB,EAAA,IAAA7jB,EAAAlI,EAAAkQ,EAAA,IAEAhI,EAAAlI,EAAA8gC,EAAA9gC,GAAAkI,EAAAlI,EAAAghC,EAAAhhC,GAjBA,IAAAkI,EAAAvI,KAAAoY,QAAA,GAAAxX,OAAAzC,OACA2iC,EAAAv4B,EAAAlI,EAAA+rB,EAAA,IAAA7jB,EAAAlI,EAAAkQ,EAAA,IAEAhI,EAAAwP,gBACAopB,EAAA54B,EAAA64B,gBAAA74B,EAAAvI,KAAAoY,QAAA,GAAAxX,OAAA,GACAygC,EAAA94B,EAAA64B,gBAAA74B,EAAAvI,KAAAoY,QAAA,GAAAxX,OAAA2H,EAAAvI,KAAAoY,QAAA,GAAAxX,OAAAzC,OAAA,GACA2iC,EAAAv4B,EAAAlI,EAAA8gC,EAAA9gC,GAAAkI,EAAAlI,EAAAghC,EAAAhhC,IAEAygC,EAAA/xB,EAAAwB,GAAA,EAYAywB,EAAAjyB,EAAAqd,GAAArd,EAAAwB,GACAwwB,EAAA,aAAAD,EAAA,aAAAE,EAAA,MAEAz4B,EAAAw5B,iBAEA/6B,EAAAvB,aAAAu8B,KAAA,UAAA9iB,SAAAoiB,GAAA5vB,KAAA,WACA6vB,EAAA3S,IAAArmB,EAAAgB,KAAAlJ,EAAAoF,aAAApJ,KAAAkM,EAAAkQ,QACA8oB,EAAA3S,IAAA8S,EAAAj8B,aAAA4K,KAAA,YAAA0wB,IACAQ,EAAA3S,IAAA+S,EAAAl8B,aAAA4K,KAAA,YAAA0wB,IACAQ,EAAA3S,IAAAgT,EAAAn8B,aAAA4K,KAAA,YAAA0wB,IACAQ,EAAA3S,IAAAiT,EAAAp8B,aAAA4K,KAAA,YAAA0wB,IACAQ,EAAA3S,IAAA6S,EAAAh8B,aAAA4K,KAAA,YAAA0wB,IACAQ,EAAA3S,IAAA4S,EAAAhd,OAAAjc,EAAA05B,aAAAx8B,aAAA4K,KAAA,YAAA0wB,IACAQ,EAAA3S,IAAAziB,EAAA1G,aAAA4K,KAAA,YAAA0wB,IACAQ,EAAA3S,IAAAtiB,EAAA7G,aAAA4K,KAAA,YAAA0wB,MACa1kC,KAAAklC,EAAA,WACb,GAAArjC,GACAoN,KACAU,KACArB,IAGA,IAAAu2B,EAAA,CACA,IAAAhjC,EAAA,EAA+BA,EAAAgjC,EAAgBhjC,IAC/CoN,EAAAsF,KAAA,IAAAlH,EAAA2B,MAAA,KAAA41B,EAAA/iC,IACA8N,EAAA4E,KAAA,IAAAlH,EAAAqC,KAAA,KAAAk1B,EAAA/iC,IACAyM,EAAAiG,KAAA,IAAAlH,EAAAgB,UAAA,KAAAu2B,EAAA/iC,GAEAqK,GAAA2U,IAAAvI,UAAA,IAAAjL,EAAA4B,QAAAqJ,UAAArJ,GAAA2J,SACA1M,EAAA2U,IAAAvI,UAAA,IAAAjL,EAAAsC,OAAA2I,UAAA3I,GAAAiJ,SACA1M,EAAA2U,IAAAvI,UAAA,IAAAjL,EAAAiB,YAAAgK,UAAAhK,GAAAsK,SACA1M,EAAA2U,IAAAzL,OAAA,IAAA/H,EAAAyC,OAAA8I,SAIA9I,EAAAkE,KAAA,kBAAAA,KAAA9H,EAAA25B,WACA51B,EAAA+D,KAAA,kBACA/D,EAAAmF,OAAA,QAAApB,KAAA,KAAA5L,EAAAoS,aAAA,EAAAkV,GAAA1b,KAAA,KAAA5L,EAAAoS,aAAAtO,EAAA3G,MAAAmqB,GACAzf,EAAAmF,OAAA,QAAApB,KAAA,IAAA5L,EAAAoS,aAAAtO,EAAA3G,MAAA,GAAAyO,KAAA,IAAA0b,GACA2V,EAAArxB,KAAA,kBAAAA,KAAA,IAAAsa,GACAgX,EAAAtxB,KAAA,kBAAAA,KAAA,IAAAua,GACAgX,EAAAvxB,KAAA,kBAAAA,KAAA,IAAAqa,GACAmX,EAAAxxB,KAAA,kBAAAA,KAAA,KAAAgb,GAAAhb,KAAA,KAAAib,GACAmW,EAAApxB,KAAA,kBAAAA,KAAA,IAAAwa,GAAAxa,KAAA,IAAAya,GAAA1lB,MAAA,eAAAmD,EAAAsnB,eAAA5mB,KAAAV,IACAi5B,EAAAnxB,KAAA,kBACAmxB,EAAA/vB,OAAA,QAAA+S,OAAAjc,EAAA05B,aAAA5xB,KAAA,IAAA9H,EAAA45B,QAAAl5B,KAAAV,IAAA8H,KAAA,QAAA9H,EAAA65B,YAAAn5B,KAAAV,IAEA9D,EAAAipB,qBACAnlB,EAAAolB,kBAIAuF,IAEA3qB,EAAA0Y,SAAA,MAKA/X,EAAAm5B,MAAA,SAAA3C,GACA,GACA4C,GADA/5B,EAAA7J,KAAAqI,QAGA24B,GAAAn3B,EAAAg6B,eAAA7C,GACA4C,EAAA/5B,EAAA2U,IAAAvI,UAAApM,EAAAi6B,gBAAA9C,EAAAlb,OAAAjc,EAAAyhB,eAAAzhB,KAAA7J,KAAA+jC,SACA/jC,KAAAgkC,UACAJ,EAAAtkB,QAAAtU,EAAAsB,SAAA,GAAAgT,QAAAtU,EAAAuB,WAAA,GACA1C,EAAAuf,cACAvf,EAAAo6B,UAAAjD,GAEAn3B,EAAAq6B,kBAAAlD,GAAA,GAEAn3B,EAAA+Z,iBAAAod,EACAn3B,EAAAga,mBAAAha,EAAAga,mBAAAiC,OAAA,SAAAtL,GACA,MAAAwmB,GAAA1kB,QAAA9B,GAAA,KAIAhQ,EAAAw5B,QAAA,SAAAhD,GACA,GACA4C,GADA/5B,EAAA7J,KAAAqI,QAGA24B,GAAAn3B,EAAAg6B,eAAA7C,GACA4C,EAAA/5B,EAAA2U,IAAAvI,UAAApM,EAAAi6B,gBAAA9C,EAAAlb,OAAAjc,EAAAyhB,eAAAzhB,KAAA+5B,EAAAtkB,QAAAtU,EAAAsB,SAAA,GAAAgT,QAAAtU,EAAAuB,WAAA,GACA1C,EAAAuf,cACAvf,EAAAs6B,YAAAnD,GAEAn3B,EAAAq6B,kBAAAlD,GAAA,GAEAn3B,EAAA+Z,iBAAA/Z,EAAA+Z,iBAAAkC,OAAA,SAAAtL,GACA,MAAAwmB,GAAA1kB,QAAA9B,GAAA,IAEA3Q,EAAAga,mBAAAmd,GAGAx2B,EAAAu5B,OAAA,SAAA/C,GACA,GACA4C,GADA/5B,EAAA7J,KAAAqI,QAGA24B,GAAAn3B,EAAAg6B,eAAA7C,GACA4C,EAAA/5B,EAAA2U,IAAAvI,UAAApM,EAAAi6B,gBAAA9C,IAEA4C,EAAAtkB,QAAAtU,EAAAsB,SAAA,GAAAgT,QAAAtU,EAAAuB,WAAA,GACA1C,EAAAuf,cACAvf,EAAAs6B,YAAAnD,GAEAn3B,EAAA9D,OAAAunB,cACAzjB,EAAAu6B,WAAApD,EAAAlb,OAAAjc,EAAAw6B,eAAA95B,KAAAV,KACAA,EAAApC,OAAAwO,UAAApM,EAAAy6B,gBAAAtD,IAAAlb,OAAA,WACA,MAAAjc,GAAAvB,GAAAyK,OAAA/S,MAAAsf,QAAAtU,EAAA6D,qBACayQ,QAAAtU,EAAA6D,mBAAA,IAGbhF,EAAA+Z,oBACA/Z,EAAAga,uBAGArZ,EAAAkD,OAAA,SAAA62B,GACA,GAAA16B,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MACA,OAAAw+B,IAGAx+B,EAAAy+B,aAAAD,EACA16B,EAAAymB,uBACAvqB,EAAAy+B,cAJAz+B,EAAAy+B,cAMAh6B,EAAAkD,OAAAwiB,IAAA,SAAAqU,GACA,GAAA16B,GAAA7J,KAAAqI,QACA,OAAArI,MAAA0N,OAAA7D,EAAA9D,OAAAy+B,aAAA/wB,OAAA8wB,SAEA/5B,EAAAkD,OAAA6I,OAAA,SAAAnO,GAEApI,KAAAqI,SACAo8B,gBAAAr8B,GAAA,IAGAoC,EAAAuD,OAAA,SAAAw2B,GACA,GAAA16B,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MACA,OAAAw+B,IAGAx+B,EAAA2+B,aAAAH,EACA16B,EAAAymB,uBACAvqB,EAAA2+B,cAJA3+B,EAAA2+B,cAMAl6B,EAAAuD,OAAAmiB,IAAA,SAAAqU,GACA,GAAA16B,GAAA7J,KAAAqI,QACA,OAAArI,MAAA+N,OAAAlE,EAAA9D,OAAA2+B,aAAAjxB,OAAA8wB,SAEA/5B,EAAAuD,OAAAwI,OAAA,SAAAnO,GAEApI,KAAAqI,SACAo8B,gBAAAr8B,GAAA,IAGAoC,EAAApH,OAAA,SAAAA,GACA,GAAAyG,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MACA,OAAAgK,GAAA3M,GACA2C,EAAA4+B,aAEA5+B,EAAA4+B,YAAAvhC,EACAyG,EAAA8W,SACA5a,EAAA4+B,cAGAn6B,EAAA/C,OAAA,aACA+C,EAAA/C,OAAArF,KAAA,SAAA4+B,GACA,GAAAn3B,GAAA7J,KAAAqI,QACAwB,GAAAu6B,WAAAv6B,EAAAg6B,eAAA7C,IACAn3B,EAAAsmB,iBAA4BvE,YAAA,KAE5BphB,EAAA/C,OAAAm9B,KAAA,SAAA5D,GACA,GAAAn3B,GAAA7J,KAAAqI,QACAwB,GAAAg7B,WAAAh7B,EAAAg6B,eAAA7C,IACAn3B,EAAAsmB,iBAA4BvE,YAAA,KAG5BphB,EAAArE,KAAA,SAAAm7B,GACA,GAAAz3B,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MAgCA,IA9BAu7B,EAAA9+B,IACAqH,EAAAi7B,MAAAxD,EAAA9+B,IAGA,SAAA8+B,IACA92B,EAAAlJ,KAAA6/B,MAAA52B,KAAAvK,MAAAshC,EAAAH,OAGA,WAAAG,IACArjC,OAAAoM,KAAAi3B,EAAAyD,SAAAz6B,QAAA,SAAAkQ,GACAzU,EAAAi/B,aAAAxqB,GAAA8mB,EAAAyD,QAAAvqB,KAIA,cAAA8mB,IAAAz3B,EAAAkP,kBACAhT,EAAAsrB,kBAAAiQ,EAAAZ,YAGA,QAAAY,IACArjC,OAAAoM,KAAAi3B,EAAAz2B,MAAAP,QAAA,SAAAkQ,GACAzU,EAAA0U,UAAAD,GAAA8mB,EAAAz2B,KAAA2P,KAIA,UAAA8mB,IACArjC,OAAAoM,KAAAi3B,EAAAtgC,QAAAsJ,QAAA,SAAAkQ,GACAzU,EAAAk/B,YAAAzqB,GAAA8mB,EAAAtgC,OAAAwZ,KAIA,YAAA8mB,IAAAz3B,EAAAq7B,UAAA5D,EAAA6D,UAEA,WADAt7B,GAAA1D,KAAA0D,EAAAu7B,UAAA9D,EAAA6D,UAAA7D,EAAA9M,KAIA,WAAA8M,GAEAz3B,EAAAzD,OAAAyD,EAAAg6B,eAAA,kBAAAvC,GAAAl7B,QAAAk7B,EAAAl7B,OAAA,KAAAk7B,EAAAl7B,QAAA,WACAyD,EAAAw7B,aAAA/D,KAGAz3B,EAAAw7B,aAAA/D,IAIA92B,EAAApE,OAAA,SAAAk7B,GACA,GAAAz3B,GAAA7J,KAAAqI,QACAi5B,SACAA,YAAAzxB,OACAyxB,GAAoBgE,IAAAhE,GACX,iBAAAA,KACTA,GAAoBgE,KAAAhE,KAEpBz3B,EAAAzD,OAAAyD,EAAAg6B,eAAAvC,EAAAgE,KAAA,WACAz7B,EAAA8W,QAAuB0H,sBAAA,EAAAD,mBAAA,EAAAwD,YAAA,IACvB0V,EAAA9M,MACA8M,EAAA9M,UAKAhqB,EAAAjD,QAAA,SAAAA,GACA,GAAAsC,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MACA,OAAAwB,IAGAxB,EAAAwB,UACAsC,EAAAymB,uBACAvqB,EAAAwB,SAJAxB,EAAAwB,SAMAiD,EAAAjD,QAAA2oB,IAAA,SAAA3oB,GACA,GAAAsC,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MACA,OAAAwB,IAGAxB,EAAAwB,QAAAxB,EAAAwB,QAAAkM,OAAAlM,GACAsC,EAAAymB,uBACAvqB,EAAAwB,SAJAxB,EAAAwB,SAMAiD,EAAAjD,QAAAgP,OAAA,SAAA5F,GACA,GAEA6P,GACAukB,EACAx9B,EAJAsC,EAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,MA2BA,OAtBA4K,SACA6P,EAAA3W,EAAA6G,UAAAC,EAAA,WAAA5K,EAAAwlB,qBACAwZ,EAAAl7B,EAAA6G,UAAAC,EAAA,WAAA3F,EAAAwB,SAEAjF,EAAAsC,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAzD,SAAA0O,UAAA8uB,EAAAnxB,IAAA,SAAA2xB,GACA,UAAAA,MAEA/kB,EAAAjZ,EAAAR,aAAAyZ,YAAAjZ,GAAAb,MAAA,aAAA6P,SAEAxQ,EAAAwB,QAAAxB,EAAAwB,QAAAue,OAAA,SAAAtZ,GACA,GAAAuE,IAAA,CACA,QAAAvE,EAAA,QAGAA,EAAA,MAAAuH,MAAA,KAAAzJ,QAAA,SAAAi7B,GACAR,EAAAzoB,QAAAipB,IAAA,IACAx0B,GAAA,MAGAA,KAGAhL,EAAAwB,SAGAiD,EAAAg7B,SAAA,SAAAtE,GACA,GAAAr3B,GAAA7J,KAAAqI,SACAC,EAAAuB,EAAAvB,EACA,OAAAA,GAAAm9B,MAAA57B,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA4B,OAAA/C,EAAA67B,wBAAAxE,IAAAjrB,UAAA,IAAAjL,EAAA2B,OAAAmZ,OAAA,WACA,MAAAxd,GAAAyK,OAAA/S,MAAAsf,QAAAtU,EAAAgE,YACS4E,IAAA,SAAAtD,GACT,MAAAA,GAAAsD,IAAA,SAAAtD,GACA,GAAAhP,GAAAgP,EAAAq1B,QAAsC,OAAArkC,uBAItCkJ,EAAAuI,OAAA,SAAAuyB,EAAAM,EAAAC,GACA,GAAAh8B,GAAA7J,KAAAqI,SACAC,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,MACAA,GAAA+/B,wBAGAj8B,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA4B,QAAAqJ,UAAA,IAAAjL,EAAA2B,OAAAqG,KAAA,SAAA1C,EAAA9Q,GACA,GAAAmN,GAAArE,EAAAyK,OAAA/S,MACAwa,EAAAlK,EAAAhP,KAAAgP,EAAAhP,KAAAkZ,GAAAlK,EAAAkK,GACAurB,EAAAl8B,EAAAm8B,UAAAhmC,KAAAsQ,GAAA/F,KAAAV,GACAo8B,EAAAlgC,EAAAmgC,yBAAAZ,KAAAhpB,QAAA9B,IAAA,EACA2rB,GAAAP,KAAAtpB,QAAA9c,IAAA,EACA4mC,EAAAz5B,EAAA2S,QAAAtU,EAAAgE,SAEArC,GAAA2S,QAAAtU,EAAA3J,OAAAsL,EAAA2S,QAAAtU,EAAA9G,QAGA+hC,GAAAE,EACApgC,EAAAsgC,4BAAA/1B,KAAA81B,GACAL,GAAA,EAAAp5B,EAAA2S,QAAAtU,EAAAgE,UAAA,GAAAsB,EAAA9Q,GAEawQ,EAAA61B,OACbO,GACAL,GAAA,EAAAp5B,EAAA2S,QAAAtU,EAAAgE,UAAA,GAAAsB,EAAA9Q,OAKAgL,EAAA87B,SAAA,SAAAhB,EAAAM,GACA,GAAA/7B,GAAA7J,KAAAqI,SACAC,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,MACAA,GAAA+/B,wBAGAj8B,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA4B,QAAAqJ,UAAA,IAAAjL,EAAA2B,OAAAqG,KAAA,SAAA1C,EAAA9Q,GACA,GAAAmN,GAAArE,EAAAyK,OAAA/S,MACAwa,EAAAlK,EAAAhP,KAAAgP,EAAAhP,KAAAkZ,GAAAlK,EAAAkK,GACAurB,EAAAl8B,EAAAm8B,UAAAhmC,KAAAsQ,GAAA/F,KAAAV,GACAo8B,EAAAlgC,EAAAmgC,yBAAAZ,KAAAhpB,QAAA9B,IAAA,EACA2rB,GAAAP,KAAAtpB,QAAA9c,IAAA,EACA4mC,EAAAz5B,EAAA2S,QAAAtU,EAAAgE,SAEArC,GAAA2S,QAAAtU,EAAA3J,OAAAsL,EAAA2S,QAAAtU,EAAA9G,OAGA+hC,GAAAE,GACApgC,EAAAsgC,4BAAA/1B,IACA81B,GACAL,GAAA,EAAAp5B,EAAA2S,QAAAtU,EAAAgE,UAAA,GAAAsB,EAAA9Q,MAOAgL,EAAApI,KAAA,SAAA4+B,EAAArwB,GACA,GACA+I,GADA7P,EAAA7J,KAAAqI,QAGA24B,GAAAn3B,EAAAg6B,eAAA7C,GACArwB,QAEA9G,EAAA08B,sBAAAvF,GACAtnB,EAAA7P,EAAA2U,IAAAvI,UAAApM,EAAAi6B,gBAAA9C,IAEAtnB,EAAA3S,aAAAL,MAAA,yBAAA/I,KAAAkM,EAAAwqB,OAAA,WACA3a,EAAAhT,MAAA,gBAAAA,MAAA,eAGAiK,EAAAib,YACA/hB,EAAAu6B,WAAApD,GAGAn3B,EAAA8W,QAAmB0H,sBAAA,EAAAD,mBAAA,EAAAwD,YAAA,KAGnBphB,EAAAo6B,KAAA,SAAA5D,EAAArwB,GACA,GACA+I,GADA7P,EAAA7J,KAAAqI,QAGA24B,GAAAn3B,EAAAg6B,eAAA7C,GACArwB,QAEA9G,EAAAmc,mBAAAgb,GACAtnB,EAAA7P,EAAA2U,IAAAvI,UAAApM,EAAAi6B,gBAAA9C,IAEAtnB,EAAA3S,aAAAL,MAAA,yBAAA/I,KAAAkM,EAAAwqB,OAAA,WACA3a,EAAAhT,MAAA,gBAAAA,MAAA,eAGAiK,EAAAib,YACA/hB,EAAAg7B,WAAA7D,GAGAn3B,EAAA8W,QAAmB0H,sBAAA,EAAAD,mBAAA,EAAAwD,YAAA,KAGnBphB,EAAAu7B,OAAA,SAAA/E,EAAArwB,GACA,GAAA61B,GAAAxmC,KACA6J,EAAA7J,KAAAqI,QACAwB,GAAAg6B,eAAA7C,GAAA12B,QAAA,SAAA42B,GACAr3B,EAAAyhB,eAAA4V,GAAAsF,EAAA5B,KAAA1D,EAAAvwB,GAAA61B,EAAApkC,KAAA8+B,EAAAvwB,MAIAnG,EAAA9C,QAAA,aACA8C,EAAA9C,QAAAtF,KAAA,SAAAk/B,GACA,GACAxtB,GACA2yB,EAFA58B,EAAA7J,KAAAqI,QAKAi5B,GAAAmF,QACAA,EAAAnF,EAAAmF,OAIAnF,EAAAhgC,KACAuI,EAAA68B,eAEAD,GAAA58B,EAAAlI,EAAA2/B,EAAAhgC,KAAAK,GAAAkI,EAAA88B,UAAArF,EAAAhgC,KAAAkZ,IAAA8mB,EAAAhgC,KAAAlD,QACA0V,EAAA,MAGAA,EAAAtE,EAAA8xB,EAAAhgC,KAAAwS,OAAAwtB,EAAAhgC,KAAAwS,MAAAjK,EAAA+8B,YAAAtF,EAAAhgC,KAAAK,GAES,oBAAA2/B,GAAA3/B,EACTmS,EAAAjK,EAAA+8B,YAAAtF,EAAA3/B,GACS,oBAAA2/B,GAAAxtB,QACTA,EAAAwtB,EAAAxtB,OAIAjK,EAAAg9B,cAAA,YAAA/yB,EAAA2yB,GACA58B,EAAAg9B,cAAA,YAAA/yB,EAAA2yB,GAEA58B,EAAA9D,OAAA+gC,eAAAnpC,KAAAkM,EAAAy3B,EAAAhgC,OAEAkJ,EAAA9C,QAAAk9B,KAAA,WAEA5kC,KAAAqI,SAAAw+B,cAAA,cAEA7mC,KAAAqI,SAAAtC,OAAAghC,eAAAppC,KAAAqC,OAGAwK,EAAA63B,UAAA,SAAA//B,EAAA0+B,GACA,GAAAn3B,GAAA7J,KAAAqI,SACAsI,GAAA,eAAA2L,QAAAha,IAAA,GAA6D6lB,eAAA,GAAsB,IACnFte,GAAAm9B,YAAAhG,EAAA1+B,EAAAqO,IAGAF,EAAAu2B,YAAA,SAAAhG,EAAA1+B,EAAA2kC,GACA,GAAAp9B,GAAA7J,KACAsoB,GAAAze,EAAAuf,aACAzY,EAAAs2B,IAA2C3e,wBAC3C3X,GAAAyf,4BAAA,EACAvmB,EAAA6Y,YAAA,EACA7Y,EAAAq9B,cAAAlG,EAAA1+B,GACAuH,EAAAoe,cAAApe,EAAAvI,KAAAoY,SACA7P,EAAAsmB,gBAAAxf,IAGAnG,EAAA7I,EAAA,SAAAA,GACA,GAAAkI,GAAA7J,KAAAqI,QAKA,OAJAlI,WAAAV,SACAoK,EAAAs9B,cAAAt9B,EAAAvI,KAAAoY,QAAA/X,GACAkI,EAAA8W,QAAuB0H,sBAAA,EAAAD,mBAAA,KAEvBve,EAAAvI,KAAAkB,IAEAgI,EAAAhI,GAAA,SAAAA,GACA,GAAAqH,GAAA7J,KAAAqI,QAKA,OAJAlI,WAAAV,SACAoK,EAAAu9B,eAAAv9B,EAAAvI,KAAAoY,QAAAlX,GACAqH,EAAA8W,QAAuB0H,sBAAA,EAAAD,mBAAA,KAEvBve,EAAAvI,KAAAkB,IAGAgI,EAAA5G,KAAA,SAAAiO,GACA,GAAAhI,GAAA7J,KAAAqI,QAWA,OAVAwJ,KACAhI,EAAAwP,iBACAxH,IAAA+B,IAAA,SAAAjS,GACA,MAAAkI,GAAAyP,UAAA3X,MAGAkI,EAAAwC,MAAAia,OAAAzU,GACAhI,EAAA8W,QAAuByH,mBAAA,EAAAoD,MAAA3hB,EAAA9D,OAAA0nB,eACvB5jB,EAAA9D,OAAAshC,YAAA1pC,KAAAqC,KAAA6J,EAAAlI,EAAA+rB,cAEA7jB,EAAAwC,MAAAia,UAEA9b,EAAA5G,KAAA0jC,OAAA,SAAAxjC,GACA,GAAA+F,GAAA7J,KAAAqI,QACAwB,GAAA9D,OAAA4gB,aAAA7iB,EACA+F,EAAAsmB,mBAEA3lB,EAAA+8B,OAAA,WACA,GAAA19B,GAAA7J,KAAAqI,QACAwB,GAAAwC,MAAAswB,QAAA3J,SACAnpB,EAAA8W,QAAmByH,mBAAA,KAGnB5d,EAAA5G,KAAA7B,IAAA,SAAAA,GACA,GAAA8H,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,OACAuC,EAAAuB,EAAAvB,EACA,QAAAvG,MAGA,MAAAgE,GAAAyhC,UAFAzhC,GAAAyhC,WAAAl/B,EAAAvG,KAAA8H,EAAA6c,WAAA,GAAA3kB,KAMAyI,EAAA5G,KAAA5B,IAAA,SAAAA,GACA,GAAA6H,GAAA7J,KAAAqI,SACAtC,EAAA8D,EAAA9D,OACAuC,EAAAuB,EAAAvB,EACA,QAAAtG,MAGA,MAAA+D,GAAA0hC,UAFA1hC,GAAA0hC,WAAAn/B,EAAAtG,KAAA6H,EAAA6c,WAAA,GAAA1kB,KAMAwI,EAAA5G,KAAA6E,MAAA,SAAAA,GACA,IAAAtI,UAAAV,OAQA,OACAsC,IAAA/B,KAAA6R,OAAA9P,MACAC,IAAAhC,KAAA6R,OAAA7P,MATAgO,GAAAvH,EAAA1G,MACA/B,KAAA6R,OAAA9P,IAAA0G,EAAA1G,KAEAiO,EAAAvH,EAAAzG,MACAhC,KAAA6R,OAAA7P,IAAAyG,EAAAzG,MAUAyO,EAAA4U,QAAA,WACA,GAAAxb,GAAA7J,KACAsI,EAAAuB,EAAAvB,EACAuB,GAAA9F,IAAAuE,EAAAo/B,OAAA3jC,MAAA3F,MAAA,SAAAkS,GACA,MAAAA,GAAApO,OAAAylC,OAAA,SAAAvnC,EAAAkgB,GACA,MAAAlgB,GAAAkgB,EAAAliB,OACa,KAEbyL,EAAA9F,IAAAsc,KAAAxW,EAAA+9B,oBAAA,OAGAn3B,EAAAqa,aAAA,WACA,GAAAjhB,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA+M,EAAA/M,EAAA8hC,aAAA9hC,EAAA+hC,YACAC,EAAAl+B,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SAAAja,OAAAoK,EAAA9D,OAAAiiC,mBACAn+B,GAAAkhB,eAAA7a,KAAAlO,IAAA6H,EAAA4gB,SAAA5gB,EAAA6gB,WAAA,GAAA7gB,EAAA8gB,QAAA,gBACA9gB,EAAAo+B,OAAA,IAAAp+B,EAAAkhB,eACAlhB,EAAAq+B,iBAAAp1B,GAAAjJ,EAAAo+B,OAAAn1B,GAAAjJ,EAAAo+B,OAAA,GACAp+B,EAAAs+B,YAAAt+B,EAAA8gB,QAAA,UAAA9gB,EAAA8gB,QAAA,SAAA9gB,EAAAo+B,OAAAp+B,EAAAq+B,iBAAA,EACAr+B,EAAAk+B,cAAAj1B,IAAAi1B,GAAAl+B,EAAAo+B,OAAAp+B,EAAAs+B,YAAAt+B,EAAAo+B,OAAAp+B,EAAAs+B,YAAAJ,GAAAl+B,EAAAo+B,OAAAF,EAAAl+B,EAAAo+B,SAGAx3B,EAAA23B,UAAA,WACA,GAAAv+B,GAAA7J,IACA6J,GAAAw+B,OAAAx+B,EAAAy+B,YACAz+B,EAAA0+B,eAAA1+B,EAAA2+B,oBACA3+B,EAAA4+B,kBAAA5+B,EAAA2+B,kBAAA,MAGA/3B,EAAAi4B,YAAA,SAAAp4B,GACA,GAIAq4B,GACAC,EACAC,EACAC,EAPAj/B,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACAgL,GAAA,EACA+C,EAAA,CAMA,OAAA/N,IAIA8D,EAAA9F,IAAA8F,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,UAAApP,QAAA,SAAA2lB,GACAlf,GAAAkf,EAAA3uB,KAAAkZ,KAAAlK,EAAAhP,KAAAkZ,KACAzJ,GAAA,EACAT,EAAA2f,EACA3f,EAAAwD,SAEAA,MAEA8gB,MAAAtkB,EAAAy4B,cACAz4B,EAAAy4B,WAAA,GAEAnU,MAAAtkB,EAAA04B,YACA14B,EAAA04B,SAAA14B,EAAAy4B,YAEAl/B,EAAAo/B,YAAA34B,EAAAhP,QACAqnC,EAAA5iC,EAAAmjC,UACAN,EAAA7iC,EAAAojC,UACAN,EAAA34B,KAAAqF,IAAAxP,EAAA6kB,iBAAA,MAAAge,EAAAD,GACAG,EAAAx4B,EAAAlS,MAAAuqC,EAAA,EAAAr4B,EAAAlS,MAAAwqC,EAAAt4B,EAAAlS,MAAAuqC,EAAAC,EAAAD,EACAr4B,EAAAy4B,WAAAhjC,EAAAqjC,oBACA94B,EAAA04B,SAAA14B,EAAAy4B,WAAAF,EAAAC,GAEA/3B,EAAAT,EAAA,MAzBA,MA4BAG,EAAA63B,UAAA,WACA,GAAAz+B,GAAA7J,KACAqpC,EAAAx/B,EAAA8gB,QAAA,SACA2e,EAAAz/B,EAAAk+B,cAAAl+B,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SAAAja,OACAuN,EAAAnD,EAAAvB,GAAAkW,IAAAxR,MAAAu8B,YAAA,SAAAj5B,GACA,MAAA+4B,GAAAx/B,EAAAo+B,OAAAqB,EAAAh5B,EAAAwD,MAAAjK,EAAAo+B,SACSE,YAAA,SAAA73B,GACT,MAAA+4B,GAAAx/B,EAAAo+B,OAAAqB,GAAAh5B,EAAAwD,MAAA,GAAAjK,EAAAs+B,cAEAqB,EAAA,SAAAl5B,EAAAm5B,GACA,GAAAC,EACA,OAAAD,GACAz8B,EAAAsD,IAEAo5B,EAAA7/B,EAAA6+B,YAAAp4B,GACAo5B,EAAA18B,EAAA08B,GAAA,SAIA,OADAF,GAAAG,SAAA38B,EAAA28B,SACAH,GAGA/4B,EAAA+3B,kBAAA,SAAAoB,GACAA,KAAA,CACA,IAAA//B,GAAA7J,KACAqpC,EAAAx/B,EAAA8gB,QAAA,SACA2e,EAAAz/B,EAAAk+B,cAAAl+B,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SAAAja,OACAoqC,EAAA35B,KAAAlO,IAAA6H,EAAAkhB,eAAA6e,EAAA//B,EAAAo+B,OAAA,GAAAqB,EAAA,OAAAM,IACA58B,EAAAnD,EAAAvB,GAAAkW,IAAAxR,MAAAu8B,YAAA,SAAAj5B,GACA,MAAA+4B,GAAAx/B,EAAAo+B,OAAAqB,EAAAh5B,EAAAwD,MAAA+1B,EAAAhgC,EAAAkhB,eAAA6e,IACSzB,YAAA,SAAA73B,GACT,MAAA+4B,GAAAx/B,EAAAo+B,OAAAqB,GAAAh5B,EAAAwD,MAAA,GAAAjK,EAAAs+B,aAEA,iBAAA73B,GACA,GAAAo5B,GAAA7/B,EAAA6+B,YAAAp4B,EACA,OAAAo5B,GAAA18B,EAAA08B,GAAA,UAIAj5B,EAAAq5B,OAAA,SAAAx5B,EAAAm5B,EAAAM,GACA,MAAAA,IAAA/pC,KAAAgqC,UAAA15B,EAAAhP,MAAAtB,KAAAqoC,OAAA/3B,EAAAm5B,GAAA,SAGAh5B,EAAAw5B,qBAAA,SAAA35B,GACA,GAGAi1B,GACA5jC,EACAG,EACA+Q,EACAq3B,EAPArgC,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACA2jC,EAAA7/B,EAAA6+B,YAAAp4B,GAMA65B,EAAA,GACAC,EAAAvgC,EAAA8gB,QAAA,QACA,IAAA+e,IAAAU,EACA7E,EAAAvlC,KAAAqoC,OAAAsB,SAAAD,GACA/nC,EAAAizB,MAAA2Q,EAAA,MAAAA,EAAA,GACAzjC,EAAA8yB,MAAA2Q,EAAA,MAAAA,EAAA,GACA1yB,EAAA3C,KAAAm6B,KAAA1oC,IAAAG,KAEAooC,EADArgC,EAAA8gB,QAAA,UAAA5kB,EAAAukC,kBACA56B,EAAA3J,EAAAukC,mBAAAvkC,EAAAukC,kBAAAh6B,EAAAzG,EAAAo+B,OAAAp1B,GAAA9M,EAAAukC,kBACazgC,EAAA8gB,QAAA,QAAA5kB,EAAAwkC,gBACb76B,EAAA3J,EAAAwkC,iBAAAxkC,EAAAwkC,gBAAAj6B,EAAAzG,EAAAo+B,OAAAp1B,GAAA9M,EAAAwkC,gBAEA1gC,EAAAo+B,QAAAp1B,GAAA,GAAAhJ,EAAAo+B,OAAA,cAAAp+B,EAAAo+B,OAAA,IAAAp+B,EAAAo+B,OAAAp1B,EAAA,EAEAs3B,EAAA,aAAAxoC,EAAAuoC,EAAA,IAAApoC,EAAAooC,EAAA,QACS,IAAAR,GAAAU,GAAAvgC,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SAAAja,OAAA,GACT,GAAAopB,GAAA3Y,KAAAoF,IAAAo0B,EAAAV,SAAA94B,KAAAqF,GAAA,EACA5T,GAAAuO,KAAAs6B,IAAAd,EAAAV,SAAA94B,KAAAqF,GAAA,IAAA1L,EAAAkhB,eAAA,IACAjpB,EAAA+mB,GAAAhf,EAAAkhB,eAAA,GAAA7a,KAAAu6B,IAAA,GAAA5hB,IAAA,EACAshB,EAAA,aAAAxoC,EAAA,IAAAG,EAAA,IAEA,MAAAqoC,IAGA15B,EAAAi6B,YAAA,SAAAp6B,GACA,GAAAzG,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA4kC,EAAAz6B,KAAAqF,IAAA1L,EAAA8gB,QAAA,WAAA5kB,EAAA6kB,iBAAA,IACA,OAAAta,MAAA04B,SAAA14B,EAAAy4B,YAAA4B,EAAA,MAGAl6B,EAAAm6B,iBAAA,SAAAt6B,GACA,MAAAtQ,MAAA6qC,SACArwB,GAAAlK,EAAAhP,KAAAkZ,GACApc,MAAAkS,EAAAlS,MACA8rC,MAAAlqC,KAAA0qC,YAAAp6B,GACAwD,MAAAxD,EAAAwD,SAIArD,EAAAq6B,gBAAA,SAAAx6B,GACA,GACAo5B,GACAtrC,EACA8rC,EACA1vB,EACArD,EALAtN,EAAA7J,IAMA,OAAA6J,GAAAkhC,sBAGArB,EAAA7/B,EAAA6+B,YAAAp4B,GACAlS,EAAAsrC,IAAAtrC,MAAA,KACA8rC,EAAArgC,EAAA6gC,YAAAhB,GACAlvB,EAAAlK,EAAAhP,KAAAkZ,GACA3Q,EAAA8gB,QAAA,UAAA9gB,EAAAmhC,uBAAAd,IAGA/yB,EAAAtN,EAAAohC,oBACA9zB,IAAA/Y,EAAA8rC,EAAA1vB,GAAA3Q,EAAAqhC,sBAAA9sC,EAAA8rC,IAHA,IAPA,IAaAz5B,EAAA06B,mBAAA,SAAA/sC,EAAAgtC,GACA,GAAAvhC,GAAA7J,KACAmX,EAAAtN,EAAAwhC,sBAEA,OAAAl0B,KAAA/Y,EAAAgtC,GAAAhtC,GAGAqS,EAAAwzB,UAAA,SAAAjD,GACA,GACA1pB,GADAzN,EAAA7J,IAIA,IAAA6J,EAAA6Y,WASA,YARApL,EAAA5M,OAAAmoB,YAAA,WACAhpB,EAAA6Y,aACAhY,OAAAqoB,cAAAzb,GACAzN,EAAApC,OAAAwO,UAAA,2BAAApT,OAAA,GACAgH,EAAAo6B,UAAAjD,KAGa,IAIbA,GAAAn3B,EAAAg6B,eAAA7C,GAEAn3B,EAAA2U,IAAAvI,UAAApM,EAAAi6B,gBAAA9C,EAAA,IAAAh2B,EAAAO,WAAAyH,KAAA,SAAA1C,GACAzG,EAAAyhC,aAAAh7B,EAAAhP,KAAAkZ,KAGA3Q,EAAAvB,GAAAyK,OAAA/S,MAAAiW,UAAA,QAAAlP,aAAAyZ,SAAA3W,EAAA0hC,eAAAj7B,EAAAhP,KAAAkZ,KAAA7I,KAAA,IAAA9H,EAAA0+B,gBAAAxhC,aAAAyZ,SAAA,EAAA3W,EAAA0hC,eAAAj7B,EAAAhP,KAAAkZ,KAAA7I,KAAA,IAAA9H,EAAA4+B,mBAAAz1B,KAAA,SAAA1C,GACAzG,EAAA2hC,YAAAl7B,EAAAhP,WAOAmP,EAAA0zB,YAAA,SAAAnD,GACA,GAAAn3B,GAAA7J,IAEA6J,GAAA6Y,aAIAse,EAAAn3B,EAAAg6B,eAAA7C,GAEAn3B,EAAA2U,IAAAvI,UAAApM,EAAAi6B,gBAAA9C,EAAA,IAAAh2B,EAAAO,WAAA0K,UAAA,QAAAlP,aAAAyZ,SAAA,SAAAlQ,GACA,MAAAzG,GAAA0hC,eAAAj7B,EAAAhP,KAAAkZ,MACS7I,KAAA,IAAA9H,EAAAw+B,QACTx+B,EAAA2U,IAAAvI,UAAA,IAAAjL,EAAAgC,OAGAyD,EAAA86B,eAAA,SAAA/wB,GACA,GAAA3Q,GAAA7J,KACA+F,EAAA8D,EAAA9D,MAEA,OAAA8D,GAAA2hC,YAAAhxB,GACAzU,EAAA0lC,sBACS5hC,EAAAo/B,YAAAzuB,GACTzU,EAAA2lC,sBACS7hC,EAAA8hC,UAAAnxB,GACTzU,EAAA6lC,oBAEA,IAIAn7B,EAAA66B,aAAA,SAAA9wB,GACA,GAAA3Q,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,OAAA8D,GAAA2hC,YAAAhxB,IAAAzU,EAAA8lC,cAAAhiC,EAAAo/B,YAAAzuB,IAAAzU,EAAA+lC,cAAAjiC,EAAA8hC,UAAAnxB,IAAAzU,EAAAgmC,YAGAt7B,EAAAs6B,mBAAA,WACA,GAAAlhC,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAimC,GAAA,CAOA,OANAniC,GAAA8gB,QAAA,SACAqhB,EAAAjmC,EAAAkmC,iBACSpiC,EAAA8gB,QAAA,SACTqhB,EAAAjmC,EAAAmmC,gBAGAF,GAGAv7B,EAAAu6B,uBAAA,SAAAd,GACA,GAAArgC,GAAA7J,KACA+F,EAAA8D,EAAA9D,MAEA,OAAAmkC,KADArgC,EAAA8gB,QAAA,SAAA5kB,EAAAomC,sBAAApmC,EAAAqmC,sBAIA37B,EAAAw6B,kBAAA,WACA,GAAAphC,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAoR,EAAApR,EAAAsmC,gBAMA,OALAxiC,GAAA8gB,QAAA,SACAxT,EAAApR,EAAAumC,mBACSziC,EAAA8gB,QAAA,WACTxT,EAAApR,EAAAwmC,oBAEAp1B,GAGA1G,EAAA46B,qBAAA,WAGA,MAFArrC,MACA+F,OACAymC,qBAGA/7B,EAAAg8B,YAAA,WACA,GAAA5iC,GAAA7J,IACA,OAAA6J,GAAA8gB,QAAA,SAAA9gB,EAAA9D,OAAA2mC,YAAA,IAGAj8B,EAAA0a,oBAAA,SAAAzR,GACA,GAEAizB,GACAC,EAHA/iC,EAAA7J,KACA8X,EAAAjO,EAAAiO,KAGA+0B,EAAAhjC,EAAAgjC,cAAAtiC,KAAAV,GACAijC,EAAAjjC,EAAAijC,UAAAviC,KAAAV,GACAkjC,EAAAljC,EAAAkjC,WAAAxiC,KAAAV,EACA8iC,GAAA70B,EAAA/E,OAAA,IAAA/H,EAAAQ,WAAAyK,UAAA,IAAAjL,EAAAO,UAAAjK,KAAAuI,EAAA9F,IAAA2V,IAAA/H,KAAA,iBAAArB,GACA,MAAAu8B,GAAAv8B,GAAAy8B,EAAAz8B,EAAAhP,QAEAsrC,EAAAD,EAAAx2B,QAAAM,OAAA,KAAA9E,KAAA,QAAAk7B,GACAD,EAAAn2B,OAAA,KAAA9E,KAAA,QAAAm7B,GACAF,EAAAn2B,OAAA,QAAA9E,KAAA,KAAA9H,EAAA8gB,QAAA,0BAAAjkB,MAAA,aAAAA,MAAA,wBAAAA,MAAA,0BAKA+J,EAAAuU,QAAA,WACA,GAAAnb,GAAA7J,IACA6J,GAAAqD,KAAArD,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAtF,OAAA+Q,OAAA,KAAA9E,KAAA,QAAA3G,EAAAQ,WAAAmG,KAAA,YAAA9H,EAAAoO,aAAA,QACApO,EAAAqD,KAAAuJ,OAAA,QAAA9E,KAAA,QAAA3G,EAAAS,gBAAA/E,MAAA,wBAAA2G,KAAAxD,EAAA4iC,gBAGAh8B,EAAAqe,UAAA,SAAAtO,EAAA6L,EAAAlE,GACA,GAIA6kB,GACAC,EACAC,EANArjC,EAAA7J,KACAsI,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,OACA+R,EAAAjO,EAAAiO,KAIAuxB,EAAAx/B,EAAA8gB,QAAA,QA2IA,IA1IAqiB,EAAAl1B,EAAA7B,UAAA,IAAAjL,EAAAkC,MAAA+I,UAAA,IAAAjL,EAAAgC,KAAA1L,KAAAuI,EAAAsjC,QAAA5iC,KAAAV,IACAmjC,EAAA72B,QAAAM,OAAA,QAAA9E,KAAA,QAAA9H,EAAAujC,SAAA7iC,KAAAV,IAAAnD,MAAA,gBAAA4J,GACA,MAAAzG,GAAArI,MAAA8O,EAAAhP,QACSoF,MAAA,kBAAA4J,GACT,MAAAvK,GAAAipB,qBAAAjpB,EAAAsgC,4BAAA/1B,GAAA,iBACS0C,KAAA,SAAA1C,GACTzG,EAAAo/B,YAAA34B,EAAAhP,QACAgP,EAAAy4B,WAAAz4B,EAAA04B,SAAAjjC,EAAAqjC,qBAEAppC,KAAAqtC,SAAA/8B,IAEA+4B,IACA6D,EAAAp1B,EAAA7B,UAAA,IAAAjL,EAAAkC,MAAA+I,UAAA,IAAAjL,EAAAiC,cAAA3L,KAAAuI,EAAAsjC,QAAA5iC,KAAAV,IACAqjC,EAAA/2B,QAAAM,OAAA,QAAA9E,KAAA,iBAAArB,GACA,MAAAtF,GAAAiC,aAAA,IAAAjC,EAAA1L,OAAA,IAAA0L,EAAA1L,OAAA,IAAAgR,EAAAhP,KAAAkZ,KAEA,IAAA3Q,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SAAAja,OACAytC,EAAAxmC,MAAA,kBAEAwmC,EAAAxmC,MAAA,gBAAA4J,GACA,MAAAvK,GAAAunC,cAAA7tC,OAAA,EAAAoK,EAAA+Y,WAAAtS,EAAAhP,KAAAY,OAAA,GAAA9D,OAAAyL,EAAArI,MAAA8O,EAAAhP,QACiBoF,MAAA,UAAAX,EAAAwnC,qBAAA,WAAAv6B,KAAA,SAAA1C,GACjB,GAAAk9B,GAAA,EAEA7rC,EAAA,EACAG,EAAA,EACAugC,EAAA,EACA,IAAAx4B,EAAA6Z,gBAAApH,QAAAhM,EAAAhP,KAAAkZ,IAAA,GACA,GAAAkvB,GAAA7/B,EAAA6+B,YAAAp4B,GACAm9B,EAAA5jC,EAAAk+B,cAAAl+B,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SAAAja,QAAAiqC,EAAA51B,MAAA,GACA45B,EAAAhE,EAAAV,SAAA94B,KAAAqF,GAAA,EACAo4B,EAAA9jC,EAAAo+B,OAAAwF,EACAG,EAAAF,GAAA,IAAAC,EAAA,IAAAA,EACAH,GAAA3jC,EAAAkhB,eAAAlhB,EAAAo+B,OAAAwF,EACA9rC,EAAAuO,KAAAs6B,IAAAoD,GAAAD,EACA7rC,EAAAoO,KAAAoF,IAAAs4B,GAAAD,EACAtL,EAAA,cAAAqL,EAAAx9B,KAAAqF,GAAA,KAAA5T,EAAA,KAAAG,EAAA,IAEAwG,EAAAyK,OAAA/S,MAAA2R,MAA0ChQ,IAAAG,IAAAoB,MAAAsqC,EAAA1qC,OAf1C,EAe0Cu/B,cAA6E37B,MAAA,0BAAA8mC,EAfvH,GAeuH,UAIvHR,EAAAr7B,KAAA,qBAAArB,GACA,OAAAzG,EAAAo/B,YAAA34B,EAAAhP,OAAA6mB,EAAA,gBACSvB,GAAA,YAAA7gB,EAAAipB,oBAAA,SAAA1e,GACT,GAAAo5B,GAAAyD,CACAtjC,GAAA6Y,aAIAgnB,EAAA7/B,EAAA6+B,YAAAp4B,MAEA68B,EAAAtjC,EAAA+gC,iBAAAlB,GAEA7/B,EAAAo6B,UAAAyF,EAAApoC,KAAAkZ,IACA3Q,EAAAY,IAAAk5B,MAAA+F,EAAApoC,KAAAkZ,IACA3Q,EAAAq6B,kBAAAwF,EAAApoC,KAAAkZ,IAAA,GACA3Q,EAAA9D,OAAA8nC,iBAAAV,EAAAntC,QAES,MAAA4mB,GAAA,YAAA7gB,EAAAipB,oBAAA,SAAA1e,GACT,GACA68B,GACAW,EAFApE,EAAA7/B,EAAA6+B,YAAAp4B,EAGAo5B,KACAyD,EAAAtjC,EAAA+gC,iBAAAlB,GAAAoE,GAAAX,GACAtjC,EAAAkkC,YAAAD,EAAA9tC,QAES,MAAA4mB,GAAA,WAAA7gB,EAAAipB,oBAAA,SAAA1e,GACT,GAAAo5B,GAAAyD,CACAtjC,GAAA6Y,aAIAgnB,EAAA7/B,EAAA6+B,YAAAp4B,MAEA68B,EAAAtjC,EAAA+gC,iBAAAlB,GAEA7/B,EAAAs6B,YAAAuF,EAAApoC,KAAAkZ,IACA3Q,EAAAY,IAAAs5B,SACAl6B,EAAAmkC,eACAnkC,EAAAokC,cACApkC,EAAA9D,OAAAmoC,gBAAAf,EAAAntC,QAES,MAAA4mB,GAAA,QAAA7gB,EAAAipB,oBAAA,SAAA1e,EAAA9Q,GACT,GACA2tC,GADAzD,EAAA7/B,EAAA6+B,YAAAp4B,EAEAo5B,KACAyD,EAAAtjC,EAAA+gC,iBAAAlB,GACA7/B,EAAAskC,aACAtkC,EAAAskC,YAAAnuC,KAAAmtC,EAAA3tC,GAEAqK,EAAA9D,OAAAqoC,aAAAzwC,KAAAkM,EAAAY,IAAA0iC,EAAAntC,QAES,MAAAgT,KAAA,WACTnJ,EAAA6Y,YAAA,IACS3b,aAAAyZ,YAAA6tB,UAAA,aAAA/9B,GACT,GACAg+B,GADA5E,EAAA7/B,EAAA6+B,YAAAp4B,EAEA,OAAAo5B,IAWA9U,MAAA50B,KAAAqtC,SAAAtE,cACA/oC,KAAAqtC,SAAAtE,WAAA,GAEAnU,MAAA50B,KAAAqtC,SAAArE,YACAhpC,KAAAqtC,SAAArE,SAAAhpC,KAAAqtC,SAAAtE,YAEAuF,EAAAhmC,EAAAgmC,YAAAtuC,KAAAqtC,SAAA3D,GACA1pC,KAAAqtC,SAAAiB,EAAA,GACA,SAAAre,GACA,GAAAse,GAAAD,EAAAre,EAEA,OADAse,GAAAjtC,KAAAgP,EAAAhP,KACAuI,EAAAigC,OAAAyE,GAAA,KArBA,WACA,iBAsBS58B,KAAA,YAAAwW,EAAA,eAAAzhB,MAAA,gBAAA4J,GACT,MAAAzG,GAAA+Y,WAAA/Y,EAAA+Y,WAAAtS,EAAAhP,KAAAY,OAAA,GAAA9D,OAAAyL,EAAArI,MAAA8O,EAAAhP,KAAAkZ,MAEA7c,KAAAkM,EAAAwqB,OAAA,WACAxqB,EAAA6Y,YAAA,IAEAsqB,EAAA12B,OAAAvP,aAAAyZ,SAAA6L,GAAA3lB,MAAA,aAAA6P,SACAuB,EAAA7B,UAAA,IAAAjL,EAAAO,UAAAwH,OAAA,QAAArM,MAAA,aAAAiL,KAAA,iBAAArB,GACA,MAAAzG,GAAAo/B,YAAA34B,EAAAhP,MAAA0J,EAAAuC,WAAA,KACSF,KAAAxD,EAAAihC,gBAAAvgC,KAAAV,IAAA8H,KAAA,YAAA9H,EAAAogC,qBAAA1/B,KAAAV,IAAAnD,MAAA,qBAAA4J,GACT,MAAAzG,GAAAo/B,YAAA34B,EAAAhP,OAAA,IAAAuI,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SAAAja,OAAAyQ,KAAAs+B,MAAA3kC,EAAAo+B,OAAA,aACSlhC,aAAAyZ,YAAA9Z,MAAA,mBAAA4J,GACT,MAAAzG,GAAAyhB,eAAAhb,EAAAhP,KAAAkZ,KAAA3Q,EAAAmgC,UAAA15B,EAAAhP,MAAA,MAEAwW,EAAA/E,OAAA,IAAA/H,EAAAS,gBAAA/E,MAAA,UAAAmD,EAAA8gB,QAAA,UAAA0e,EAAA,KAEAA,EAAA,CACA,GAAAv1B,GAAA,CACAm5B,GAAApjC,EAAAqD,KAAA6F,OAAA,KAAA/H,EAAAU,qBAAAuK,UAAA,QAAAjL,EAAAU,qBAAApK,KAAAuI,EAAAvI,KAAAoY,SACAuzB,EAAA92B,QAAAM,OAAA,QACAw2B,EAAAt7B,KAAA,iBAAArB,EAAA9Q,GACA,MAAAwL,GAAAU,oBAAA,IAAAV,EAAAU,oBAAA,IAAAlM,IACamS,KAAA,aAAA88B,GACb,GAAA5kC,EAAA6Z,gBAAApH,QAAAmyB,EAAAj0B,KAAA,EACA,aAGA,IAAAlK,IACAhP,OAA4BlD,MAAA2H,EAAAojC,YAC5BJ,WAAAhjC,EAAAqjC,oBACAJ,UAAA,EAAAjjC,EAAAqjC,qBAAArjC,EAAA6kB,iBAAA1a,KAAAqF,GAAA,GACAzB,UAEA,OAAAjK,GAAAigC,OAAAx5B,GAAA,QAEA28B,EAAA32B,OAAAC,SAEA1M,EAAAqD,KAAA6F,OAAA,IAAA/H,EAAAW,oBAAAgG,KAAA,cAAAtE,KAAAtH,EAAA2oC,iBAAA3oC,EAAA4oC,YAAA,IACA9kC,EAAAqD,KAAA6F,OAAA,IAAA/H,EAAAa,mBAAA8F,KAAA,SAAA9H,EAAAs+B,aAAAt+B,EAAAo+B,OAAAp+B,EAAAs+B,cAAApiC,EAAA6kB,iBAAA,YAAAjZ,KAAA,cAAAtE,KAAAtH,EAAA2oC,iBAAA7kC,EAAAshC,mBAAAplC,EAAAmjC,WAAA,OACAr/B,EAAAqD,KAAA6F,OAAA,IAAA/H,EAAAY,mBAAA+F,KAAA,KAAA9H,EAAAs+B,aAAAt+B,EAAAo+B,OAAAp+B,EAAAs+B,cAAApiC,EAAA6kB,iBAAA,WAAAjZ,KAAA,cAAAtE,KAAAtH,EAAA2oC,iBAAA7kC,EAAAshC,mBAAAplC,EAAAojC,WAAA,SAGA14B,EAAAwU,UAAA,WACA,GAAA/X,GAAAlN,KAAAkN,IACAlN,MAAA2qB,QAAA,WACAzd,EAAAuJ,OAAA,KAAA9E,KAAA,QAAA3G,EAAAU,qBACAwB,EAAAuJ,OAAA,QAAA9E,KAAA,QAAA3G,EAAAW,oBAAAjF,MAAA,wBAAAA,MAAA,yBACAwG,EAAAuJ,OAAA,QAAA9E,KAAA,QAAA3G,EAAAa,mBAAAnF,MAAA,wBAAAA,MAAA,yBACAwG,EAAAuJ,OAAA,QAAA9E,KAAA,QAAA3G,EAAAY,mBAAAlF,MAAA,wBAAAA,MAAA,2BAGA+J,EAAAoa,oBAAA,WACA,MAAA7qB,MAAA+F,OAAA2oC,iBAAA,MAGAj+B,EAAAy0B,UAAA,SAAAI,GACA,OAAA9lC,GAAA,EAAuBA,EAAA8lC,EAAA7lC,OAAgBD,IACvC,KAAA8lC,EAAA9lC,IAAAQ,MAAA4K,OACA,QAGA,WAEA6F,EAAAm+B,SAAA,SAAAp0B,EAAAlb,GACAU,KAAA4K,MAAA4P,GAAAxa,KAAA6uC,YAAAvvC,IAEAmR,EAAA20B,UAAA,SAAAE,GACA,GACA9lC,GADAka,IAEA,KAAAla,EAAA,EAAmBA,EAAA8lC,EAAA7lC,OAAgBD,IACnC8lC,EAAA9lC,IAAAQ,MAAA4K,OACA8O,EAAAxH,KAAAlS,KAAA6uC,YAAA7uC,KAAA4K,MAAA06B,EAAA9lC,KAGA,OAAAka,IAGAjJ,EAAAmK,aAAA,SAAApb,GACA,GAAAuG,GAAA/F,KAAA+F,MACA,OAAAvG,GAAAuG,EAAAsrB,kBAAA5xB,OAAAsG,EAAAsrB,kBAAA7xB,MAGAiR,EAAAq+B,cAAA,SAAAC,EAAA7N,GACA,UAAA6N,EAAA,IAAAA,EAAA/uC,KAAA0lC,wBAAAxE,IAEAzwB,EAAAu+B,UAAA,SAAA1+B,GACA,MAAAtQ,MAAA8uC,cAAA9jC,EAAAqC,KAAAiD,EAAAwD,QAEArD,EAAAw+B,WAAA,SAAA3+B,GACA,MAAAtQ,MAAA8uC,cAAA9jC,EAAAsC,MAAAgD,EAAAkK,KAEA/J,EAAAy+B,WAAA,SAAA5+B,GACA,MAAAtQ,MAAA8uC,cAAA9jC,EAAA2B,MAAA2D,EAAAwD,QAEArD,EAAA0+B,YAAA,SAAA7+B,GACA,MAAAtQ,MAAA8uC,cAAA9jC,EAAA4B,OAAA0D,EAAAkK,KAEA/J,EAAA2+B,UAAA,SAAA9+B,GACA,MAAAtQ,MAAAkvC,WAAA5+B,GAAAtQ,KAAA8uC,cAAA9jC,EAAA3J,KAAAiP,EAAAkK,KAEA/J,EAAA4+B,WAAA,SAAA/+B,GACA,MAAAtQ,MAAAmvC,YAAA7+B,GAAAtQ,KAAA8uC,cAAA9jC,EAAA3H,MAAAiN,EAAAkK,KAEA/J,EAAA6+B,YAAA,SAAAh/B,GACA,MAAAtQ,MAAAkvC,WAAA5+B,GAAAtQ,KAAA8uC,cAAA9jC,EAAA8B,OAAAwD,EAAAwD,QAEArD,EAAA8+B,aAAA,SAAAj/B,GACA,MAAAtQ,MAAAmvC,YAAA7+B,GAAAtQ,KAAA8uC,cAAA9jC,EAAA+B,QAAAuD,EAAAkK,KAEA/J,EAAA++B,SAAA,SAAAl/B,GACA,MAAAtQ,MAAAkvC,WAAA5+B,GAAAtQ,KAAA8uC,cAAA9jC,EAAA/H,IAAAqN,EAAAwD,QAEArD,EAAAg/B,UAAA,SAAAn/B,GACA,MAAAtQ,MAAAmvC,YAAA7+B,GAAAtQ,KAAA8uC,cAAA9jC,EAAA6B,KAAAyD,EAAAkK,KAEA/J,EAAA28B,SAAA,SAAA98B,GACA,MAAAtQ,MAAAkvC,WAAA5+B,EAAAhP,MAAAtB,KAAA8uC,cAAA9jC,EAAAgC,IAAAsD,EAAAhP,KAAAkZ,KAEA/J,EAAAq8B,UAAA,SAAAx8B,GACA,MAAAtQ,MAAAmvC,YAAA7+B,EAAAhP,MAAAtB,KAAA8uC,cAAA9jC,EAAAkC,KAAAoD,EAAAhP,KAAAkZ,KAEA/J,EAAAi/B,UAAA,SAAAp/B,GACA,MAAAtQ,MAAAkvC,WAAA5+B,GAAAtQ,KAAA8uC,cAAA9jC,EAAA9G,KAAAoM,EAAAkK,KAEA/J,EAAAk/B,WAAA,SAAAr/B,GACA,MAAAtQ,MAAAmvC,YAAA7+B,GAAAtQ,KAAA8uC,cAAA9jC,EAAAmC,MAAAmD,EAAAkK,KAEA/J,EAAAm/B,YAAA,SAAAt/B,EAAA9Q,GACA,MAAAQ,MAAA8uC,cAAA9jC,EAAAwB,OAAAhN,GAAA,cAAA8Q,KAAA,WAEAG,EAAAo/B,WAAA,SAAAv/B,GACA,MAAAtQ,MAAA8uC,cAAA9jC,EAAAgB,UAAAsE,EAAAwD,QAEArD,EAAAq/B,YAAA,SAAAt1B,GACA,GAAA3Q,GAAA7J,KACA+vC,EAAAlmC,EAAA9D,OAAAi/B,aAAAxqB,GACAw1B,EAAA,EAIA,OAHAD,KACAC,EAAA,IAAAhlC,EAAA1L,OAAA,IAAAywC,GAEAlmC,EAAAilC,cAAA9jC,EAAA1L,OAAAkb,GAAAw1B,GAEAv/B,EAAAs8B,WAAA,SAAAz8B,GACA,MAAAtQ,MAAAiwC,aAAA3/B,GAAAtQ,KAAAkwC,eAAA5/B,IAEAG,EAAAw/B,aAAA,SAAA3/B,GACA,WAAAtQ,KAAA4jB,iBAAAtH,QAAAhM,EAAAkK,KAAA,EAAAxP,EAAAsB,QAAA,KAEAmE,EAAAy/B,eAAA,SAAA5/B,GACA,WAAAtQ,KAAA6jB,mBAAAvH,QAAAhM,EAAAkK,KAAA,EAAAxP,EAAAuB,UAAA,KAEAkE,EAAA0/B,eAAA,SAAA7/B,GACA,MAAAtF,GAAAK,UAAArL,KAAA8vC,YAAAx/B,EAAAkK,KAEA/J,EAAA2/B,eAAA,SAAA9/B,GACA,MAAAtF,GAAAC,UAAAjL,KAAA8vC,YAAAx/B,EAAAkK,KAEA/J,EAAA4/B,cAAA,SAAA//B,GACA,MAAAtF,GAAAG,SAAAnL,KAAA8vC,YAAAx/B,EAAAkK,KAEA/J,EAAAo8B,cAAA,SAAAv8B,GACA,MAAAtF,GAAAO,SAAAvL,KAAA8vC,YAAAx/B,EAAAhP,KAAAkZ,KAEA/J,EAAAi1B,wBAAA,SAAAxE,GACA,MAAAA,IAAA,IAAAA,GAAA,IAAAA,GAAAhwB,QAAA,2CAA0G,SAE1GT,EAAA6/B,eAAA,SAAA91B,EAAAu0B,GACA,OAAAA,GAAA,QAAA/jC,EAAA1L,OAAAU,KAAA0lC,wBAAAlrB,IAEA/J,EAAAqzB,gBAAA,SAAAwB,EAAAyJ,GACA,GAAAllC,GAAA7J,IAEA,OADAslC,SACAA,EAAA7lC,OAAA6lC,EAAA1xB,IAAA,SAAA4G,GACA,MAAA3Q,GAAAymC,eAAA91B,EAAAu0B,KACS,MAETt+B,EAAA8/B,eAAA,SAAA/1B,GACA,UAAAxP,EAAAyD,WAAAzO,KAAA0lC,wBAAAlrB,IAEA/J,EAAA6zB,gBAAA,SAAAgB,GACA,GAAAz7B,GAAA7J,IACA,OAAAslC,MAAA7lC,OAAA6lC,EAAA1xB,IAAA,SAAA4G,GACA,MAAA3Q,GAAA0mC,eAAA/1B,KACS,MAGT/J,EAAAyR,YAAA,SAAA1H,GAEA,cADA9P,OAAA8lC,UAAAC,WAAAC,cAAAp0B,QAAA,cACA,GAAAmJ,SAAAkrB,IAAA58B,MAAA,aAAAyG,EAAA,KAEA/J,EAAAsW,WAAA,SAAA6pB,EAAAp2B,GACA,MAAAo2B,GAAAn6B,OAAA,YAAA9E,KAAA,KAAA6I,GAAA/D,OAAA,SAEAhG,EAAAogC,aAAA,SAAAvzB,GAEA,GAAApG,GAAAhH,KAAAnO,IAAA,GAAA/B,KAAA8pB,OAAA5S,KACA,OAAAoG,KAAA,EAAApG,OAAA,IAEAzG,EAAAqgC,aAAA,SAAAxzB,GACA,MAAAA,IAAA,IAAAtd,KAAA8pB,OAAA9S,KAEAvG,EAAAmhB,cAAA,WACA,GAAA/nB,GAAA7J,IACA,OAAA6J,GAAAgnC,cAAAhnC,EAAA9D,OAAAoS,eAEA1H,EAAAohB,cAAA,WACA,GAAAhoB,GAAA7J,IACA,OAAA6J,GAAAinC,cAAAjnC,EAAA9D,OAAAoS,eAEA1H,EAAAuhB,cAAA,WACA,GAAAnoB,GAAA7J,IACA,OAAA6J,GAAA9D,OAAAsS,cAAA,EAAAxO,EAAAgnC,aAAAhnC,EAAA9D,OAAAoS,eAEA1H,EAAAwhB,cAAA,WACA,GAAApoB,GAAA7J,IACA,OAAA6J,GAAAinC,aAAAjnC,EAAA9D,OAAAoS,eAEA1H,EAAAsgC,iBAAA,SAAAzzB,GACA,GAAAzT,GAAA7J,KACAkX,EAAAhH,KAAAnO,IAAA,GAAA8H,EAAAigB,OAAA5S,MACAlU,EAAAkN,KAAAnO,IAAA,GAAA8H,EAAAigB,OAAA9mB,MAEA,OAAAsa,GAAAzT,EAAA3G,MAAA,EAAAgU,EAAAlU,EAAA6G,EAAAigB,OAAA5S,KAAA,IAEAzG,EAAAugC,kBAAA,SAAA1zB,GAEA,OAAAA,EAAAtd,KAAA8pB,OAAA7S,OAAAjX,KAAA8pB,OAAA9S,IAAAhX,KAAA8C,QAAA,IAEA2N,EAAAqhB,kBAAA,WACA,GAAAjoB,GAAA7J,IACA,OAAA6J,GAAAknC,kBAAAlnC,EAAA9D,OAAAoS,eAEA1H,EAAAshB,mBAAA,WACA,GAAAloB,GAAA7J,IACA,OAAA6J,GAAAmnC,mBAAAnnC,EAAA9D,OAAAoS,eAEA1H,EAAAyhB,kBAAA,WACA,GAAAroB,GAAA7J,IACA,OAAA6J,GAAAknC,iBAAAlnC,EAAA9D,OAAAoS,eAAAtO,EAAA9D,OAAAsS,aAAA,OAEA5H,EAAA0hB,mBAAA,WACA,GAAAtoB,GAAA7J,IACA,OAAA6J,GAAAmnC,kBAAAnnC,EAAA9D,OAAAoS,eAGA1H,EAAAkS,cAAA,WACA,GAAA9Y,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAuC,EAAAuB,EAAAvB,GACAtH,EAAA+E,EAAAk/B,YACAxjC,EAAA+O,EAAAzK,EAAAunC,eAAAvnC,EAAAunC,cAAAhlC,EAAAC,MAAA0oC,aAAAxoC,QACA6rB,EAAAvuB,EAAAmrC,WACA5L,IAEA,iBAAAh1B,GACA,GACA9O,GADAgZ,EAAAlK,EAAAkK,IAAAlK,EAAAhP,MAAAgP,EAAAhP,KAAAkZ,IAAAlK,CAmBA,OAfAtP,GAAAwZ,YAAAya,UACAzzB,EAAAR,EAAAwZ,GAAAlK,GAGAtP,EAAAwZ,GACAhZ,EAAAR,EAAAwZ,IAIA8qB,EAAAhpB,QAAA9B,GAAA,GACA8qB,EAAApzB,KAAAsI,GAEAhZ,EAAAC,EAAA6jC,EAAAhpB,QAAA9B,GAAA/Y,EAAAhC,QACAuB,EAAAwZ,GAAAhZ,GAEA8yB,YAAAW,UAAAX,EAAA9yB,EAAA8O,GAAA9O,IAGAiP,EAAAoS,mBAAA,WACA,GAAAhZ,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA/E,EAAA+E,EAAAunC,cACA6D,EAAAprC,EAAAqrC,gBACAC,EAAA,UAAAF,EAAAvxB,KACA1d,EAAAivC,EAAAjvC,QAAAivC,EAAAjvC,OAAAzC,OAAA0xC,EAAAjvC,UACAH,EAAAovC,EAAApvC,KAAA,GACA,OAAAyO,GAAAzK,EAAAqrC,iBAAA,SAAAhzC,GACA,GAAAoB,GAEAgC,EAAAR,IAAAvB,OAAA,EACA,KAAAD,EAAA,EAAuBA,EAAA0C,EAAAzC,OAAmBD,IAE1C,IADA6xC,EAAAjzC,EAAA,IAAAA,EAAA2D,GACAG,EAAA1C,GAAA,CACAgC,EAAAR,EAAAxB,EACA,OAGA,MAAAgC,IACS,MAGTiP,EAAA9F,iBAAA,WACA,GAAA5E,IACAE,OAAA,SACA4gB,kBAAA5T,GACA2tB,eAAA3tB,GACA4tB,gBAAA5tB,GACAq+B,iBAAAr+B,GACAs+B,kBAAAt+B,GACAu+B,gBAAAv+B,GACAw+B,mBAAAx+B,GACAsgB,aAAA,EACA5M,cAAA,EACA+qB,gBAAAz+B,GACA6U,iBAAA,EACA2F,cAAA,EACA4Z,YAAA,aACAsK,iBAAA,aACAC,eAAA,aACAnK,eAAAx0B,GACAu0B,eAAAv0B,GACA4+B,sBAAA,EACA7iB,qBAAA,EACA7nB,YAAA,aACAC,WAAA,aACAC,SAAA,aACAC,UAAA,aACAN,OAAA,aACAE,WAAA,aACAqkB,oBAAA,IACAkF,WAAAxd,GACAyd,WACAgE,aAAA,WACA3R,iBAAA,EACA+uB,YAAA,EACAC,iBAAA,SAAAv3B,GACA,MAAAA,IAEAw3B,cACAhN,gBACAL,eACAlqB,aACAw3B,cAAAh/B,GACAi/B,cACAC,eACAC,WAAA,OACAC,gBACAnB,eAAAj+B,GACAgyB,eACAlf,WAAA,EACAF,gBAAA5S,GACA6yB,wBAAA,EACAI,wBAAA,EACAG,4BAAA,WACA,UAEAiM,yBAAA,EACAC,0BAAA,EACAnE,aAAA,aACAP,iBAAA,aACAK,gBAAA,aACAsE,gBAAA,aACAC,kBAAA,aACAzxB,aAAA/N,GACAkO,iBAAAlO,GACAqO,cAAArO,GACAuO,cAAAvO,GACAyO,iBAAAzO,GACAiO,kBAAAjO,GACAmO,cAAAnO,GAEAmb,sBAAA,GAEA5E,eAAA,EACAC,qBAAA,GACAipB,sBAAA,EACAC,iBAAA,aAEArF,iBACA8D,mBAEA9jB,aAAA,EACApH,aAAA,EACAlC,gBAAA,SACAG,oBAAA,WACAyuB,eAAA,GACAC,eAAA,EACAC,sBAAA7/B,GACA8/B,wBAAA9/B,GACA+/B,4BAAA//B,GACAggC,2BAAAhgC,GACAigC,gBAAA,EACAC,eAAA,EACAC,uBAAA,GACAC,wBAAA,GAEAl7B,cAAA,EACAD,aAAA,EACAqY,YAAA,UACAtN,kBAAA,EACAoO,qBACA9X,sBAAA,EACAuB,uBAAA7H,GACAuG,uBACAqU,wBAAA,GACAjU,sBAAA3G,GACA0G,iBAAA,EACAwB,mBAAA,KACA/B,mBAAA,EACAk6B,mBAAA,EACAt6B,uBAAA,EACAE,yBAAA,EACAC,kBAAA,KACAgnB,eAAAltB,GACAqtB,eAAArtB,GACAsgC,kBACAt1B,kBAAAhL,GACA8U,kBAAA9U,GACA8I,gBACAhE,iBAAA9E,GACAsF,aAAA,EACAoY,gBAAA1d,GACAmtB,eAAAntB,GACAstB,eAAAttB,GACAugC,iBAAA,EACAC,kBAAAxgC,GACAoF,iBAAApF,GACA4I,gBACAgD,uBAAA5L,GACAygC,mBAAA,EACAr4B,mBAAA,KACAnB,mBAAA,EACAyT,sBAAA1a,GACAoH,2BAAApH,GACAqH,8BAAArH,GACA0gC,kBACAC,mBAAA3gC,GACAyF,cAAA,EACA2nB,gBAAAptB,GACAutB,gBAAAvtB,GACA4gC,kBAAA,EACAC,mBAAA7gC,GACAmL,kBAAAnL,GACA6I,iBACAkD,wBAAA/L,GACA8gC,oBAAA,EACAv4B,oBAAA,KACAoS,uBAAA3a,GACA+gC,mBACAC,oBAAAhhC,GAEAihC,aAAA,EACAC,YAAA,OACA3P,gBACA4P,aAAA,EAGA1P,gBACA2P,aAAA,GACAC,iBAAA,EACA3sB,kBAAA,EAEAqJ,YAAA,EACAujB,QAAA,IACAC,kBAAA,GACAC,4BAAA,EACAC,yBAAAzhC,GACA0hC,mBAAA1hC,GAEA2hC,kBAAA,EACAC,eAAA,OAEAC,cAAA7hC,GACA8hC,gBAAA,GACAC,kBAAA/hC,GACAgiC,eAAA,EACAC,UAAA,EAEAC,gBAAA,EACAC,YAAA,EAEAlJ,gBAAA,EACAG,qBAAAp5B,GACAm5B,oBAAA,IACA7B,oBAAAt3B,GACA84B,cACAH,oBAAA,GAEAhhB,kBAAA,EACA8jB,kBAAA,EACAnB,sBAAA,EACAjB,uBAAAr5B,GACAi2B,UAAA,EACAC,UAAA,IACAC,qBAAA,EAAAl5B,KAAAqF,GAAA,EACAi3B,wBAAAv5B,GACA07B,gBAAA17B,GACA40B,gBAAA50B,GACA+0B,oBAAA,EACA8D,gBACAJ,sBAAA,GAEAO,kBAAA,EACAM,uBAAAt5B,GACAk5B,sBAAA,IACA7B,sBAAAr3B,GACA60B,gBAAA70B,GACAy5B,YAAA,GACAb,gBACAJ,sBAAA,GAEA4J,0BAAA,WAEA9tC,WAEA+tC,cAAA,EACAC,iBAAA,EACAC,kBAAAviC,GACAwiC,yBAAAxiC,GACAyiC,wBAAAziC,GACA0iC,yBAAA1iC,GACA2iC,qBAAA3iC,GACA4iC,iBAAA,SAAAvlC,EAAAwlC,EAAAC,EAAAv0C,GACA,MAAAxB,MAAAg2C,kBAAAh2C,KAAAg2C,kBAAA1lC,EAAAwlC,EAAAC,EAAAv0C,GAAA,IAEAy0C,mBAAA,EACAC,eAAA,EACAC,uBAAoCn/B,IAAA,MAAAE,KAAA,QACpC4vB,eAAA,aACAC,eAAA,aAEAqP,eAAAnjC,GACAojC,eACAr/B,IAAA,EACAhU,MAAA,EACAiU,OAAA,EACAC,KAAA,GAEAo/B,eAAA,aAOA,OAJAr4C,QAAAoM,KAAArK,KAAAu2C,kBAAAjsC,QAAA,SAAA3K,GACAoG,EAAApG,GAAAK,KAAAu2C,iBAAA52C,IACSK,MAET+F,GAEA0K,EAAA8lC,oBAEA9lC,EAAA1G,WAAA,SAAAhE,GAKA,QAAAywC,KACA,GAAA72C,GAAA0K,EAAAosC,OAEA,OAAA92C,IAAAL,GAAA,gCAAAA,GAAA,YAAA4P,EAAA5P,KAAAK,IAAAL,IACAA,IAAAK,GACA62C,KACa72C,MAGb,GAFAL,EAXA,GACAA,GACA+K,EACAqsC,EAHAC,EAAA32C,KAAA+F,MAgBA9H,QAAAoM,KAAAssC,GAAArsC,QAAA,SAAA3K,GACAL,EAAAyG,EACAsE,EAAA1K,EAAAoU,MAAA,KACA2iC,EAAAF,IAEAxmC,EAAA0mC,KACAC,EAAAh3C,GAAA+2C,MAKAjmC,EAAAwQ,iBAAA,SAAA21B,EAAAC,EAAAC,EAAAzsC,EAAAmqB,GACA,GAAA3qB,GAAA7J,KACAsC,EAAAu0C,GAAA,MACAE,EAAAltC,EAAAvB,GAAA0uC,IAAAJ,EACAE,IACA74C,OAAAoM,KAAAysC,GAAAxsC,QAAA,SAAA2sC,GACAF,EAAAE,SAAAH,EAAAG,MAGAF,EAAApwC,IAAA,SAAA6rB,EAAAlxB,GACA,GAAAgP,GACA4mC,EAAA51C,EAAA61C,UAAA71C,EAAA81C,YACA,KAAA91C,EACA,SAAAuE,OAAA2sB,EAAA6kB,YAAA,IAAA7kB,EAAA8kB,OAAA,KAAA9kB,EAAA+kB,WAAA,IAGAjnC,GADA,SAAAhO,EACAuH,EAAA0X,kBAAAi2B,KAAA7iB,MAAAuiB,GAAA7sC,GACa,QAAA/H,EACbuH,EAAA4tC,iBAAAP,GAEArtC,EAAA6tC,iBAAAR,GAEA1iB,EAAA72B,KAAAkM,EAAAyG,MAGAG,EAAAknC,iBAAA,SAAAC,EAAAC,GACA,GACAvnC,GADA0xB,EAAA6V,EAAAC,UAAAF,EAUA,OARA,KAAA5V,EAAAviC,QACA6Q,OACA0xB,EAAA,GAAA13B,QAAA,SAAAkQ,GACAlK,EAAA,GAAAkK,GAAA,QAGAlK,EAAAunC,EAAAljB,MAAAijB,GAEAtnC,GAEAG,EAAAinC,iBAAA,SAAAK,GACA,MAAA/3C,MAAA23C,iBAAAI,EAAA/3C,KAAAsI,GAAAyvC,MAEAtnC,EAAAgnC,iBAAA,SAAAO,GACA,MAAAh4C,MAAA23C,iBAAAK,EAAAh4C,KAAAsI,GAAA0vC,MAEAvnC,EAAA8Q,kBAAA,SAAAwgB,EAAA13B,GACA,GAEA4tC,GACA32C,EAHAuI,EAAA7J,KACAk4C,IA+BA,OA5BA7tC,IAEAA,EAAA1I,GACAs2C,EAAA5tC,EAAAjM,MAAAqV,OAAApJ,EAAA1I,GACAkI,EAAA9D,OAAA0qB,OAAApmB,EAAA1I,GAEAs2C,EAAA5tC,EAAAjM,MAEA85C,EAAAhmC,KAAA+lC,GACAlW,EAAAz3B,QAAA,SAAAqF,GACA,GAAAwoC,KACAF,GAAA3tC,QAAA,SAAA3K,GAEA,GAAA8P,GAAA5F,EAAAuuC,gBAAAzoC,EAAAhQ,EACAoQ,GAAAN,KACAA,EAAA,MAEA0oC,EAAAjmC,KAAAzC,KAEAyoC,EAAAhmC,KAAAimC,KAEA72C,EAAAuI,EAAA4X,kBAAAy2B,KAEAj6C,OAAAoM,KAAA03B,GAAAz3B,QAAA,SAAA3K,GACAu4C,EAAAhmC,MAAAvS,GAAA8T,OAAAsuB,EAAApiC,OAEA2B,EAAAuI,EAAA8X,qBAAAu2B,IAEA52C,GAEAmP,EAAA2nC,gBAAA,SAAAxxC,EAAAwK,GACAA,IAAAF,QAAA,oBACAE,IAAAF,QAAA,SAEA,QADAmnC,GAAAjnC,EAAA2C,MAAA,KACAvU,EAAA,EAAuBA,EAAA64C,EAAA54C,SAAsBD,EAAA,CAC7C,GAAA84C,GAAAD,EAAA74C,EACA,MAAA84C,IAAA1xC,IAGA,MAFAA,KAAA0xC,GAKA,MAAA1xC,IAQA6J,EAAAgR,kBAAA,SAAAugB,GAIA,OAHAuW,MACAluC,EAAA23B,EAAA,GAEAxiC,EAAA,EAAuBA,EAAAwiC,EAAAviC,OAAiBD,IAAA,CAExC,OADAg5C,MACAvW,EAAA,EAA2BA,EAAAD,EAAAxiC,GAAAC,OAAoBwiC,IAAA,CAC/C,GAAAlyB,EAAAiyB,EAAAxiC,GAAAyiC,IACA,SAAAp8B,OAAA,0CAAArG,EAAA,IAAAyiC,EAAA,KAEAuW,GAAAnuC,EAAA43B,IAAAD,EAAAxiC,GAAAyiC,GAEAsW,EAAArmC,KAAAsmC,GAEA,MAAAD,IAQA9nC,EAAAkR,qBAAA,SAAApgB,GAGA,OAFAg3C,MAEA/4C,EAAA,EAAuBA,EAAA+B,EAAA9B,OAAoBD,IAE3C,OADAG,GAAA4B,EAAA/B,GAAA,GACAyiC,EAAA,EAA2BA,EAAA1gC,EAAA/B,GAAAC,OAAuBwiC,IAAA,CAIlD,GAHAlyB,EAAAwoC,EAAAtW,EAAA,MACAsW,EAAAtW,EAAA,OAEAlyB,EAAAxO,EAAA/B,GAAAyiC,IACA,SAAAp8B,OAAA,0CAAArG,EAAA,IAAAyiC,EAAA,KAEAsW,GAAAtW,EAAA,GAAAtiC,GAAA4B,EAAA/B,GAAAyiC,GAIA,MAAAsW,IAGA9nC,EAAAmV,qBAAA,SAAAtkB,EAAAm3C,GACA,GAIA/+B,GAJA7P,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACAu/B,EAAAz7B,EAAAvB,GAAA+B,KAAA/I,EAAA,IAAAwkB,OAAAjc,EAAA6uC,OAAA7uC,GACArH,EAAAqH,EAAAvB,GAAA+B,KAAA/I,EAAA,IAAAwkB,OAAAjc,EAAA8uC,IAAA9uC,EAgHA,OA5GAy7B,GAAAh7B,QAAA,SAAAkQ,GACA,GAAAo+B,GAAA/uC,EAAAgvC,QAAAr+B,EAEA3Q,GAAA2mB,aAAA3mB,EAAAwP,eAEA7W,EAAA8Z,QAAAs8B,IAAA,EACA/uC,EAAAvI,KAAAkB,GAAAgY,IAAAi+B,GAAA5uC,EAAAvI,KAAAkB,GAAAgY,GAAA3Q,EAAAvI,KAAAkB,GAAAgY,OAAA/G,OAAAnS,EAAAsS,IAAA,SAAAtD,GACA,MAAAA,GAAAsoC,KACqB9yB,OAAAtW,GAAAoE,IAAA,SAAAklC,EAAAt5C,GACrB,MAAAqK,GAAAkvC,gBAAAD,EAAAt+B,EAAAhb,MAIAuG,EAAA0qB,OACA5mB,EAAAvI,KAAAkB,GAAAgY,GAAA3Q,EAAAmvC,mBAGAxoC,EAAAzK,EAAA2qB,WACA7mB,EAAAvI,KAAAkB,GAAAgY,GAAA3Q,EAAAovC,iBAAAL,EAAA/uC,EAAAvI,KAAAoY,UAIA7P,EAAAvI,KAAAkB,GAAAgY,GAAAlZ,EAAAsS,IAAA,SAAAtD,EAAA9Q,GACA,MAAAA,OAMA8lC,EAAAh7B,QAAA,SAAAkQ,GACA,IAAA3Q,EAAAvI,KAAAkB,GAAAgY,GACA,SAAA3U,OAAA,8BAAA2U,EAAA,QAKAd,EAAA4rB,EAAA1xB,IAAA,SAAA4G,EAAA1G,GACA,GAAAolC,GAAAnzC,EAAAgsC,iBAAAv3B,EACA,QACAA,GAAA0+B,EACAC,OAAA3+B,EACAtY,OAAAZ,EAAAsS,IAAA,SAAAtD,EAAA9Q,GACA,GAGAmC,GAHAi3C,EAAA/uC,EAAAgvC,QAAAr+B,GACAs+B,EAAAxoC,EAAAsoC,GACAx6C,EAAA,OAAAkS,EAAAkK,IAAAoa,MAAAtkB,EAAAkK,IAAA,MAAAlK,EAAAkK,EAmBA,OAhBA3Q,GAAA2mB,aAAA3mB,EAAAkP,kBAAAhJ,EAAA+oC,IACA,IAAAhlC,GAAA,IAAAtU,IACAuG,EAAAsrB,uBAGA,KADA1vB,EAAAoE,EAAAsrB,kBAAA/U,QAAAw8B,MAEAn3C,EAAAoE,EAAAsrB,kBAAA5xB,OACAsG,EAAAsrB,kBAAAnf,KAAA4mC,KAGAn3C,EAAAkI,EAAAkvC,gBAAAD,EAAAt+B,EAAAhb,IAGAuQ,EAAAO,EAAAkK,KAAA3Q,EAAAvI,KAAAkB,GAAAgY,GAAA/a,QAAAD,KACAmC,MAAAsR,KAE4BtR,IAAAvD,QAAAoc,GAAA0+B,KACXpzB,OAAA,SAAArW,GACjB,MAAAO,GAAAP,EAAA9N,QAMA+X,EAAApP,QAAA,SAAA2lB,GACA,GAAAzwB,EAEAuG,GAAA+rC,aACA7hB,EAAA/tB,OAAA+tB,EAAA/tB,OAAAme,KAAA,SAAA+4B,EAAAC,GAGA,OAFAD,EAAAz3C,GAAA,IAAAy3C,EAAAz3C,EAAAy3C,EAAAz3C,EAAA8V,MACA4hC,EAAA13C,GAAA,IAAA03C,EAAA13C,EAAA03C,EAAA13C,EAAA8V,QAKAjY,EAAA,EACAywB,EAAA/tB,OAAAoI,QAAA,SAAAmF,GACAA,EAAAqE,MAAAtU,MAGAqK,EAAAvI,KAAAkB,GAAAytB,EAAAzV,IAAA6F,KAAA,SAAA+4B,EAAAC,GACA,MAAAD,GAAAC,MAKAxvC,EAAAyvC,iBAAAzvC,EAAA0vC,0BAAA7/B,GACA7P,EAAA2vC,iBAAA3vC,EAAA4vC,0BAAA//B,GAGA3T,EAAAksC,WACApoC,EAAAq9B,cAAAr9B,EAAAoc,SAAAvM,GAAAoM,OAAA,SAAAtL,GACA,QAAAA,IAAAzU,GAAAmsC,cACansC,EAAAksC,WAIbv4B,EAAApP,QAAA,SAAAgG,GACAzG,EAAA+kC,SAAAt+B,EAAA6oC,OAAA7oC,KAGAoJ,GAGAjJ,EAAAkoC,IAAA,SAAAh5C,GACA,GAAAkK,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,OAAAA,GAAA0qB,QAAA9wB,IAAAoG,EAAA0qB,QAAAjgB,EAAAzK,EAAA2qB,UAAA7f,EAAA9K,EAAA2qB,QAAA/wB,IAEA8Q,EAAAioC,OAAA,SAAA/4C,GACA,OAAAK,KAAA24C,IAAAh5C,IAEA8Q,EAAAooC,QAAA,SAAAr+B,GACA,GAAA3Q,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,OAAAA,GAAA0qB,OAAA1qB,EAAA0qB,OAAAjgB,EAAAzK,EAAA2qB,SAAA3qB,EAAA2qB,QAAAlW,GAAA,MAEA/J,EAAAwoC,iBAAA,SAAAt5C,EAAA+Z,GACA,GACAggC,GADA7vC,EAAA7J,IAQA,QANA0Z,GAAAlJ,EAAAkJ,GAAA7P,EAAAoc,SAAAvM,OACApP,QAAA,SAAAkQ,GACA3Q,EAAAgvC,QAAAr+B,KAAA7a,IACA+5C,EAAA7vC,EAAAvI,KAAAkB,GAAAgY,MAGAk/B,GAEAjpC,EAAAm2B,YAAA,SAAAjlC,GACA,GAAAkI,GAAA7J,KACAsB,EAAAuI,EAAA8vC,UAAA9vC,EAAAvI,KAAAoY,QAAA/X,EACA,OAAAL,GAAA7B,OAAA6B,EAAA,GAAAwS,MAAA,MAEArD,EAAAmpC,UAAA,SAAAp/B,EAAAhb,GACA,GAAAqK,GAAA7J,IACA,OAAAwa,KAAA3Q,GAAAvI,KAAAkB,IAAAqH,EAAAvI,KAAAkB,GAAAgY,IAAAhL,EAAA3F,EAAAvI,KAAAkB,GAAAgY,GAAAhb,IAAAqK,EAAAvI,KAAAkB,GAAAgY,GAAAhb,MAEAiR,EAAAuoC,iBAAA,WACA,GAAAnvC,GAAA7J,KACA65C,EAAA57C,OAAAoM,KAAAR,EAAAvI,KAAAkB,GACA,OAAAq3C,GAAAp6C,OAAAoK,EAAAvI,KAAAkB,GAAAq3C,EAAA,UAEAppC,EAAAyxB,gBAAA,SAAApuB,GACA,GAAAtR,GAAAxC,KAAAg5C,kBACA,OAAAx2C,IAAAsR,EAAAtR,EAAA/C,OAAA+C,EAAAsR,GAAA,MAEArD,EAAAq0B,MAAA,SAAAtiC,GACA,GAAAqH,GAAA7J,IACA/B,QAAAoM,KAAA7H,GAAA8H,QAAA,SAAAkQ,GACA3Q,EAAA9D,OAAA2qB,QAAAlW,GAAAhY,EAAAgY,MAGA/J,EAAAqpC,aAAA,SAAAt3C,GACA,MAAAxC,MAAAsI,GAAAovB,IAAAz5B,OAAAoM,KAAA7H,GAAAoR,IAAA,SAAA4G,GACA,MAAAhY,GAAAgY,MACS3X,OAAA,GAET4N,EAAAi2B,YAAA,WACA,MAAAl2B,GAAAxQ,KAAA+F,OAAA2qB,WAAA1wB,KAAA+F,OAAA+rC,YAAA9xC,KAAA2qB,QAAA,YAEAla,EAAAo6B,QAAA,SAAAvpC,GACA,GACAy4C,GADAlwC,EAAA7J,IAMA,OAJAsB,KACAy4C,EAAAlwC,EAAA9D,OAAAisC,WAAA1wC,EAAAkZ,IACAlZ,EAAAy4C,SAAA9mC,KAAA8mC,IAAAz4C,EAAAkZ,IAEAlZ,GAEAmP,EAAAiyB,gBAAA,SAAAxgC,EAAA4R,GACA,GAAAkmC,GAAA93C,EAAA4jB,OAAA,SAAArW,GACA,MAAAA,GAAAqE,WAEA,OAAAkmC,GAAAv6C,OAAAu6C,EAAA,SAEAvpC,EAAA02B,cAAA,SAAAztB,EAAA/X,GACA,GAAAkI,GAAA7J,IACA0Z,GAAApP,QAAA,SAAA2lB,GACAA,EAAA/tB,OAAAoI,QAAA,SAAAmF,EAAAjQ,GACAiQ,EAAA9N,EAAAkI,EAAAkvC,gBAAAp3C,EAAAnC,GAAAywB,EAAAzV,GAAAhb,KAEAqK,EAAAvI,KAAAkB,GAAAytB,EAAAzV,IAAA7Y,KAGA8O,EAAA22B,eAAA,SAAA1tB,EAAAlX,GACA,GAAAqH,GAAA7J,IACA0Z,GAAApP,QAAA,SAAA2lB,GACAztB,EAAAytB,EAAAzV,KACA3Q,EAAAs9B,eAAAlX,GAAAztB,EAAAytB,EAAAzV,QAIA/J,EAAAsoC,gBAAA,SAAAD,EAAAt+B,EAAA1G,GACA,GAAAjK,GAAA7J,IASA,OAPA6J,GAAAwP,eACAy/B,EAAAjvC,EAAAyP,UAAAw/B,GAAAjvC,EAAAyP,UAAAzP,EAAA+vC,UAAAp/B,EAAA1G,IACSjK,EAAA2mB,cAAA3mB,EAAAkP,gBACTvJ,EAAAspC,MAAAjvC,EAAA+vC,UAAAp/B,EAAA1G,GAEAA,GAIArD,EAAAo+B,YAAA,SAAAvvC,GACA,OACAkb,GAAAlb,EAAAkb,GACA2+B,OAAA75C,EAAA65C,OACAj3C,OAAA5C,EAAA4C,OAAA0R,IAAA,SAAAtD,GACA,OAAwB3O,EAAA2O,EAAA3O,EAAAvD,MAAAkS,EAAAlS,MAAAoc,GAAAlK,EAAAkK,QAIxB/J,EAAAwpC,SAAA,WACA,GAAApwC,GAAA7J,IACA6J,GAAAvI,KAAAoY,QAAAja,SACAoK,EAAArH,MACAqH,EAAAvI,KAAAoY,QAAA,GAAAxX,OAAAoI,QAAA,SAAAmF,GACA5F,EAAArH,GAAAiN,EAAAqE,OAAArE,EAAA9N,MAIA8O,EAAAypC,SAAA,SAAA16C,GACA,GAAAmC,GAAA3B,KAAAwC,GAAAhD,EAAA,EACA,2BAAAmC,KAAA,MAEA8O,EAAA0pC,SAAA,SAAA36C,GACA,GAAAmC,GAAA3B,KAAAwC,GAAAhD,EAAA,EACA,2BAAAmC,KAAA,MAEA8O,EAAAoxB,gBAAA,WACA,GAAAh4B,GAAA7J,IACA,OAAA6J,GAAAvB,GAAAvG,IAAA8H,EAAAvI,KAAAoY,QAAA,SAAAuW,GACA,MAAAA,GAAA/tB,OAAAzC,UAGAgR,EAAA2pC,sBAAA,SAAA1gC,GACA,GAEA2gC,GAFA56C,EAAAia,EAAAja,OACAsC,EAAA,CAYA,OAVAtC,GAAA,EACAia,EAAApP,QAAA,SAAA2lB,GACAA,EAAA/tB,OAAAzC,OAAAsC,IACAs4C,EAAApqB,EACAluB,EAAAkuB,EAAA/tB,OAAAzC,UAIA46C,EAAA56C,EAAAia,EAAA,QAEA2gC,GAEA5pC,EAAA6pC,SAAA,SAAA5gC,GACA,GAAA7P,GAAA7J,IACA,OAAA0Z,GAAAja,QAAAoK,EAAAvB,GAAAtG,IAAA0X,EAAA,SAAAuW,GACA,MAAAA,GAAA/tB,OAAA,GAAAP,IACSkI,EAAAvB,GAAAvG,IAAA2X,EAAA,SAAAuW,GACT,MAAAA,GAAA/tB,OAAA+tB,EAAA/tB,OAAAzC,OAAA,GAAAkC,MAHA,MAMA8O,EAAAwV,SAAA,SAAAvM,GACA,MAAAA,GAAA9F,IAAA,SAAAtD,GACA,MAAAA,GAAAkK,MAGA/J,EAAAozB,eAAA,SAAAyB,GACA,GAAAz7B,GAAA7J,IACA,OAAAslC,MAAA7xB,OAAA6xB,GAAAz7B,EAAAoc,SAAApc,EAAAvI,KAAAoY,UAEAjJ,EAAA8pC,UAAA,SAAA7gC,EAAAc,GACA,GACAhb,GADA8lC,EAAAtlC,KAAAimB,SAAAvM,EAEA,KAAAla,EAAA,EAAmBA,EAAA8lC,EAAA7lC,OAAgBD,IACnC,GAAA8lC,EAAA9lC,KAAAgb,EACA,QAGA,WAEA/J,EAAA6a,eAAA,SAAA4V,GACA,MAAAlhC,MAAA0jB,gBAAApH,QAAA4kB,GAAA,GAEAzwB,EAAA4zB,eAAA,SAAAnD,GACA,MAAAlhC,MAAA2jB,gBAAArH,QAAA4kB,GAAA,GAEAzwB,EAAAiO,oBAAA,SAAAhF,GACA,GAAA7P,GAAA7J,IACA,OAAA0Z,GAAAoM,OAAA,SAAAmK,GACA,MAAApmB,GAAAyhB,eAAA2E,EAAAzV,OAGA/J,EAAAqJ,qBAAA,SAAAJ,GACA,GAAA7P,GAAA7J,KACAwC,EAAAqH,EAAAvB,GAAAovB,IAAA7tB,EAAAvB,GAAAm9B,MAAA/rB,EAAA9F,IAAA,SAAAqc,GACA,MAAAA,GAAA/tB,OAAA0R,IAAA,SAAAnE,GACA,OAAAA,EAAA9N,QAESO,QAMT,OALAM,GAAAqH,EAAAwP,eAAA7W,EAAAoR,IAAA,SAAAjS,GACA,UAAAye,OAAAze,KACSa,EAAAoR,IAAA,SAAAjS,GACT,OAAAA,IAEAa,EAAA6d,KAAA,SAAAjgB,EAAAkgB,GACA,MAAAlgB,GAAAkgB,GAAA,EAAAlgB,EAAAkgB,EAAA,EAAAlgB,GAAAkgB,EAAA,EAAA8J,OAGA3Z,EAAAuV,mBAAA,SAAAgb,GACAA,cAAAnxB,OAAAmxB,EAAA,GAAAnxB,OAAAmxB,EACA,QAAAxhC,GAAA,EAAuBA,EAAAwhC,EAAAvhC,OAAsBD,IAC7CQ,KAAA0jB,gBAAApH,QAAA0kB,EAAAxhC,IAAA,IACAQ,KAAA0jB,gBAAA1jB,KAAA0jB,gBAAAjQ,OAAAutB,EAAAxhC,MAIAiR,EAAA81B,sBAAA,SAAAvF,GACAhhC,KAAA0jB,gBAAA1jB,KAAA0jB,gBAAAoC,OAAA,SAAAtL,GACA,MAAAwmB,GAAA1kB,QAAA9B,GAAA,KAGA/J,EAAA0V,mBAAA,SAAA6a,GACAA,cAAAnxB,OAAAmxB,EAAA,GAAAnxB,OAAAmxB,EACA,QAAAxhC,GAAA,EAAuBA,EAAAwhC,EAAAvhC,OAAsBD,IAC7CQ,KAAA2jB,gBAAArH,QAAA0kB,EAAAxhC,IAAA,IACAQ,KAAA2jB,gBAAA3jB,KAAA2jB,gBAAAlQ,OAAAutB,EAAAxhC,MAIAiR,EAAA+pC,sBAAA,SAAAxZ,GACAhhC,KAAA2jB,gBAAA3jB,KAAA2jB,gBAAAmC,OAAA,SAAAtL,GACA,MAAAwmB,GAAA1kB,QAAA9B,GAAA,KAGA/J,EAAAgqC,mBAAA,SAAA/gC,GACA,GAAAghC,KAOA,OANAhhC,GAAApP,QAAA,SAAA2lB,GACAyqB,EAAAzqB,EAAAzV,OACAyV,EAAA/tB,OAAAoI,QAAA,SAAAmF,GACAirC,EAAAzqB,EAAAzV,IAAAtI,KAAAzC,EAAArR,WAGAs8C,GAEAjqC,EAAAkqC,oBAAA,SAAAjhC,EAAAkhC,GACA,GACAp7C,GACAyiC,EACA//B,EAHAojC,EAAArnC,OAAAoM,KAAAqP,EAIA,KAAAla,EAAA,EAAmBA,EAAA8lC,EAAA7lC,OAAgBD,IAEnC,IADA0C,EAAAwX,EAAA4rB,EAAA9lC,IAAA0C,OACA+/B,EAAA,EAAuBA,EAAA//B,EAAAzC,OAAmBwiC,IAC1C,GAAA2Y,EAAA14C,EAAA+/B,GAAA7jC,OACA,QAIA,WAEAqS,EAAA8oC,0BAAA,SAAA7/B,GACA,MAAA1Z,MAAA26C,oBAAAjhC,EAAA,SAAAjK,GACA,MAAAA,GAAA,KAGAgB,EAAAgpC,0BAAA,SAAA//B,GACA,MAAA1Z,MAAA26C,oBAAAjhC,EAAA,SAAAjK,GACA,MAAAA,GAAA,KAGAgB,EAAAoqC,YAAA,WACA,GAAA90C,GAAA/F,KAAA+F,MACA,wBAAAA,GAAAqsC,YAAA,SAAArsC,EAAAqsC,WAAA1B,eAEAjgC,EAAAqqC,WAAA,WACA,GAAA/0C,GAAA/F,KAAA+F,MACA,wBAAAA,GAAAqsC,YAAA,QAAArsC,EAAAqsC,WAAA1B,eAEAjgC,EAAAm3B,iBAAA,WACA,GAAA/9B,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAg1C,EAAAlxC,EAAAixC,aACAE,EAAAnxC,EAAAgxC,aACA,IAAAE,GAAAC,EACA,gBAAAC,EAAAC,GACA,GAAAC,GAAA,SAAAx7B,EAAA4lB,GACA,MAAA5lB,GAAAzP,KAAAu6B,IAAAlF,EAAAnnC,QAEAg9C,EAAAH,EAAA/4C,OAAAylC,OAAAwT,EAAA,GACAE,EAAAH,EAAAh5C,OAAAylC,OAAAwT,EAAA,EACA,OAAAH,GAAAK,EAAAD,IAAAC,EAES,IAAA3rC,EAAA3J,EAAAqsC,YACT,MAAArsC,GAAAqsC,UACS,IAAAxiC,EAAA7J,EAAAqsC,YAAA,CACT,GAAAkJ,GAAAv1C,EAAAqsC,UACA,iBAAA6I,EAAAC,GACA,MAAAI,GAAAh/B,QAAA2+B,EAAAzgC,IAAA8gC,EAAAh/B,QAAA4+B,EAAA1gC,OAIA/J,EAAA8qC,aAAA,SAAA7hC,GACA,GAAA8hC,GAAAx7C,KAAA4nC,kBAOA,OANA4T,KACA9hC,EAAA2G,KAAAm7B,IACAx7C,KAAA86C,cAAA96C,KAAA66C,gBACAnhC,EAAA+hC,WAGA/hC,GAEAjJ,EAAAkpC,UAAA,SAAAjgC,EAAA/X,GACA,MAAA3B,MAAAsI,GAAAm9B,MAAA/rB,EAAA9F,IAAA,SAAAqc,GACA,MAAAA,GAAA/tB,UACS4jB,OAAA,SAAArW,GACT,MAAAA,GAAA9N,MAAA,KAGA8O,EAAAirC,iBAAA,SAAAp6C,GACA,MAAAA,GAAAwkB,OAAA,SAAAxV,GACA,MAAAd,GAAAc,EAAAlS,UAGAqS,EAAAkrC,gBAAA,SAAAjiC,EAAAkiC,GACA,MAAAliC,GAAA9F,IAAA,SAAAqc,GACA,OACAzV,GAAAyV,EAAAzV,GACA2+B,OAAAlpB,EAAAkpB,OACAj3C,OAAA+tB,EAAA/tB,OAAA4jB,OAAA,SAAArW,GACA,MAAAmsC,GAAA,IAAAnsC,EAAA9N,GAAA8N,EAAA9N,GAAAi6C,EAAA,SAKAnrC,EAAAke,aAAA,WACA,GAAA5oB,GAAA/F,KAAA+F,MACA,2BAAAA,GAAAosC,cAAApsC,EAAAosC,gBAES,WAAAjjC,EAAAnJ,EAAAosC,eAAA3hC,EAAAzK,EAAAosC,eAKT1hC,EAAAorC,mBAAA,SAAA75C,EAAAD,EAAApC,GACA,GAAAkK,GAAA7J,KACA87C,GAAA,IAOA,OALAjyC,GAAA2b,YAAAzS,OAAA,OAAAkD,UAAA,UAAA3U,MAAAU,EAAAD,IAAAoU,QAAAM,OAAA,QAAApJ,KAAA,SAAAiD,GACA,MAAAzG,GAAAkyC,gBAAAzrC,EAAAkK,IAAAlK,KACS0C,KAAA,SAAA1C,EAAA9Q,GACTs8C,EAAAt8C,GAJA,IAIAQ,KAAAsR,wBAAA3R,KACS4W,SACTulC,GAEArrC,EAAAurC,UAAA,SAAA1rC,GACA,MAAAtQ,MAAAu6C,UAAAv6C,KAAAsB,KAAAoY,QAAApJ,EAAAkK,KACK/J,EAAAwrC,MAAA,SAAA3rC,GACL,cAAAA,IAAAtQ,KAAAu6C,UAAAv6C,KAAAsB,KAAAoY,QAAApJ,EAAAhP,KAAAkZ,KAEA/J,EAAAyrC,kBAAA,SAAAh6C,EAAA4R,GACA,GAAAtU,GACA28C,EAAAj6C,EAAA4R,GAAAnS,EACAy6C,IACA,KAAA58C,EAAAsU,EAAA,EAA2BtU,GAAA,GAC3B28C,IAAAj6C,EAAA1C,GAAAmC,EADmCnC,IAInC48C,EAAAlqC,KAAAhQ,EAAA1C,GAEA,KAAAA,EAAAsU,EAAuBtU,EAAA0C,EAAAzC,QACvB08C,IAAAj6C,EAAA1C,GAAAmC,EAD0CnC,IAI1C48C,EAAAlqC,KAAAhQ,EAAA1C,GAEA,OAAA48C,IAGA3rC,EAAA4rC,uBAAA,SAAA3iC,EAAA4iC,GACA,GACA1Y,GADA/5B,EAAA7J,IASA,OALA4jC,GAAAlqB,EAAA9F,IAAA,SAAAtU,GACA,MAAAuK,GAAA0yC,YAAAj9C,EAAA4C,OAAAo6C,KAIAzyC,EAAA0yC,YAAA3Y,EAAA0Y,IAEA7rC,EAAA8rC,YAAA,SAAAr6C,EAAAo6C,GACA,GAEAE,GAFA3yC,EAAA7J,KACAy8C,EAAA5yC,EAAA9D,OAAAyuC,iBAwBA,OApBAtyC,GAAA4jB,OAAA,SAAArW,GACA,MAAAA,IAAA5F,EAAAojB,UAAAxd,EAAA+K,MACSlQ,QAAA,SAAAmF,GACT,GAAA9C,GAAA9C,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAA6B,KAAAhD,EAAA67B,wBAAAj2B,EAAA+K,IAAA,KAAAxP,EAAA/H,IAAA,IAAAwM,EAAAqE,OAAAyD,QACAilC,GAAA3yC,EAAA6yC,YAAA/vC,KACA6vC,EAAA/sC,KAKAvN,EAAA4jB,OAAA,SAAArW,GACA,MAAAA,KAAA5F,EAAAojB,UAAAxd,EAAA+K,MACSlQ,QAAA,SAAAmF,GACT,GAAAa,GAAAzG,EAAA8yC,KAAAltC,EAAA6sC,EACAhsC,GAAAmsC,IACAA,EAAAnsC,EACAksC,EAAA/sC,KAIA+sC,GAEA/rC,EAAAksC,KAAA,SAAAr7C,EAAAg7C,GACA,GAAAzyC,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA62C,EAAA72C,EAAAoS,aAAA,IACA0kC,EAAA92C,EAAAoS,aAAA,IACArW,EAAA+H,EAAAulB,QAAA9tB,IAAAwS,OACAnS,EAAAkI,EAAAlI,EAAAL,EAAAK,EACA,OAAAuO,MAAAm6B,KAAAn6B,KAAAkvB,IAAAz9B,EAAA26C,EAAAM,GAAA,GAAA1sC,KAAAkvB,IAAAt9B,EAAAw6C,EAAAO,GAAA,KAEApsC,EAAAqsC,oBAAA,SAAA56C,GACA,GACA1C,GADAu9C,KAAAtpC,OAAAvR,EAGA,KAAAlC,KAAA+Y,gBACA,MAAA7W,EAGA,KAAA1C,EAAA0C,EAAAzC,OAAA,EAAmC,EAAAD,EAAOA,IAC1Cu9C,EAAAv9C,GAAAu9C,EAAAv9C,EAAA,EAcA,OAXAu9C,GAAA,IACAp7C,EAAAo7C,EAAA,GAAAp7C,EAAA,EACAvD,MAAA2+C,EAAA,GAAA3+C,MACAoc,GAAAuiC,EAAA,GAAAviC,IAEAuiC,EAAA76C,EAAAzC,OAAA,IACAkC,EAAAo7C,EAAA76C,EAAAzC,QAAAkC,EAAA,EACAvD,MAAA2+C,EAAA76C,EAAAzC,QAAArB,MACAoc,GAAAuiC,EAAA76C,EAAAzC,QAAA+a,IAGAuiC,GAEAtsC,EAAA4wB,qBAAA,SAAA0Y,EAAAiD,GACA,GAAAnzC,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAk3C,EAAAl3C,EAAA,QAAAg0C,EACA,2BAAAiD,GACAC,GAEAh/C,OAAAoM,KAAA2yC,GAAA1yC,QAAA,SAAAkQ,GACAyiC,EAAAziC,GAAAwiC,EAAAxiC,KAEA3Q,EAAA8W,QAAmBiL,YAAA,IACnBqxB,IAGAxsC,EAAAtK,KAAA,SAAAuT,EAAA4nB,GACA,GAAAz3B,GAAA7J,IACA0Z,KAEA4nB,EAAAxb,SACApM,IAAAoM,OAAAwb,EAAAxb,UAGAwb,EAAAh/B,MAAAg/B,EAAA/9B,QACAmW,EAAApP,QAAA,SAAA2lB,GACA,GAAA3tB,GAAAg/B,EAAA/9B,OAAA+9B,EAAA/9B,MAAA0sB,EAAAzV,IAAA8mB,EAAA/9B,MAAA0sB,EAAAzV,IAAA8mB,EAAAh/B,IACAuH,GAAAq9B,cAAAjX,EAAAzV,GAAAlY,KAIAuH,EAAAvI,KAAAoY,QAAApP,QAAA,SAAAgG,GACA,OAAA9Q,GAAA,EAA+BA,EAAAka,EAAAja,OAAoBD,IACnD,GAAA8Q,EAAAkK,KAAAd,EAAAla,GAAAgb,GAAA,CACAlK,EAAApO,OAAAwX,EAAAla,GAAA0C,OACAwX,EAAA0a,OAAA50B,EAAA,EACA,UAIAqK,EAAAvI,KAAAoY,QAAA7P,EAAAvI,KAAAoY,QAAAjG,OAAAiG,IAIA7P,EAAAoe,cAAApe,EAAAvI,KAAAoY,SAGA7P,EAAA8W,QAAmB0H,sBAAA,EAAAD,mBAAA,EAAAwD,YAAA,IAEnB0V,EAAA9M,MACA8M,EAAA9M,QAGA/jB,EAAA40B,aAAA,SAAA/D,GACA,GAAAz3B,GAAA7J,IACAshC,GAAAhgC,KACAuI,EAAA1D,KAAA0D,EAAA+b,qBAAA0b,EAAAhgC,MAAAggC,GACSA,EAAAsV,IACT/sC,EAAAoX,iBAAAqgB,EAAAsV,IAAAtV,EAAAuV,SAAAvV,EAAAwV,QAAAxV,EAAAj3B,KAAA,SAAA/I,GACAuI,EAAA1D,KAAA0D,EAAA+b,qBAAAtkB,GAAAggC,KAESA,EAAAS,KACTl4B,EAAA1D,KAAA0D,EAAA+b,qBAAA/b,EAAA0X,kBAAA+f,EAAAS,KAAAT,EAAAj3B,OAAAi3B,GACSA,EAAAU,KACTn4B,EAAA1D,KAAA0D,EAAA+b,qBAAA/b,EAAA4X,kBAAA6f,EAAAU,OAAAV,GACSA,EAAA//B,QACTsI,EAAA1D,KAAA0D,EAAA+b,qBAAA/b,EAAA8X,qBAAA2f,EAAA//B,UAAA+/B,GAEAz3B,EAAA1D,KAAA,KAAAm7B,IAGA7wB,EAAArK,OAAA,SAAA46B,EAAAxM,GACA,GAAA3qB,GAAA7J,IASA,IARAw0B,IACAA,EAAA,gBAGAwM,IAAAlb,OAAA,SAAAtL,GACA,MAAA3Q,GAAA0wC,UAAA1wC,EAAAvI,KAAAoY,QAAAc,OAGA,IAAAwmB,EAAAvhC,OAEA,WADA+0B,IAGA3qB,GAAA2U,IAAAvI,UAAA+qB,EAAAptB,IAAA,SAAA4G,GACA,MAAA3Q,GAAAymC,eAAA91B,MACSzT,aAAAL,MAAA,aAAA6P,SAAA5Y,KAAAkM,EAAAwqB,OAAAG,GACTwM,EAAA12B,QAAA,SAAAkQ,GAEA3Q,EAAA8a,cAAAnK,IAAA,EAEA3Q,EAAApC,QACAoC,EAAApC,OAAAwO,UAAA,IAAAjL,EAAAyD,WAAA5E,EAAA67B,wBAAAlrB,IAAAjE,SAGA1M,EAAAvI,KAAAoY,QAAA7P,EAAAvI,KAAAoY,QAAAoM,OAAA,SAAAmK,GACA,MAAAA,GAAAzV,YAKA/J,EAAAysC,cAAA,SAAAxjC,GACA,GAIAuoB,GACAqW,EACA6E,EACAC,EACA5iC,EACA8+B,EATAzvC,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACAu/B,EAAAz7B,EAAAoc,SAAAvM,GACAghC,EAAA7wC,EAAA4wC,mBAAA/gC,EAOA,IAAA3T,EAAA4+B,YAAAllC,OAAA,EAEA,IADA65C,EAAAzvC,EAAA0vC,0BAAA7/B,GACAuoB,EAAA,EAAuBA,EAAAl8B,EAAA4+B,YAAAllC,OAA+BwiC,IAKtD,GAHAmb,EAAAr3C,EAAA4+B,YAAA1C,GAAAnc,OAAA,SAAAtL,GACA,MAAA8qB,GAAAhpB,QAAA9B,IAAA,IAEA,IAAA4iC,EAAA39C,OAWA,IARA09C,EAAAC,EAAA,GAEA9D,GAAAoB,EAAAyC,IACAzC,EAAAyC,GAAA7yC,QAAA,SAAAmF,EAAAjQ,GACAk7C,EAAAyC,GAAA39C,GAAAiQ,EAAA,EAAAA,EAAA,IAIA6oC,EAAA,EAA2BA,EAAA8E,EAAA39C,OAAuB64C,IAClD99B,EAAA4iC,EAAA9E,GACAoC,EAAAlgC,IAGAkgC,EAAAlgC,GAAAlQ,QAAA,SAAAmF,EAAAjQ,GACAqK,EAAAnI,KAAA6Y,MAAAC,KAAA3Q,EAAAnI,KAAA6Y,MAAA4iC,KAAAzC,EAAAyC,IAAA7D,IAAA7pC,EAAA,IACAirC,EAAAyC,GAAA39C,KAAAiQ,IAMA,OAAA5F,GAAAvB,GAAAtG,IAAA/D,OAAAoM,KAAAqwC,GAAA9mC,IAAA,SAAAjU,GACA,MAAAkK,GAAAvB,GAAAtG,IAAA04C,EAAA/6C,QAGA8Q,EAAA4sC,cAAA,SAAA3jC,GACA,GAIAuoB,GACAqW,EACA6E,EACAC,EACA5iC,EACAg/B,EATA3vC,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACAu/B,EAAAz7B,EAAAoc,SAAAvM,GACAghC,EAAA7wC,EAAA4wC,mBAAA/gC,EAOA,IAAA3T,EAAA4+B,YAAAllC,OAAA,EAEA,IADA+5C,EAAA3vC,EAAA4vC,0BAAA//B,GACAuoB,EAAA,EAAuBA,EAAAl8B,EAAA4+B,YAAAllC,OAA+BwiC,IAKtD,GAHAmb,EAAAr3C,EAAA4+B,YAAA1C,GAAAnc,OAAA,SAAAtL,GACA,MAAA8qB,GAAAhpB,QAAA9B,IAAA,IAEA,IAAA4iC,EAAA39C,OAWA,IARA09C,EAAAC,EAAA,GAEA5D,GAAAkB,EAAAyC,IACAzC,EAAAyC,GAAA7yC,QAAA,SAAAmF,EAAAjQ,GACAk7C,EAAAyC,GAAA39C,GAAAiQ,EAAA,EAAAA,EAAA,IAIA6oC,EAAA,EAA2BA,EAAA8E,EAAA39C,OAAuB64C,IAClD99B,EAAA4iC,EAAA9E,GACAoC,EAAAlgC,IAGAkgC,EAAAlgC,GAAAlQ,QAAA,SAAAmF,EAAAjQ,GACAqK,EAAAnI,KAAA6Y,MAAAC,KAAA3Q,EAAAnI,KAAA6Y,MAAA4iC,KAAAzC,EAAAyC,IAAA3D,IAAA/pC,EAAA,IACAirC,EAAAyC,GAAA39C,KAAAiQ,IAMA,OAAA5F,GAAAvB,GAAAvG,IAAA9D,OAAAoM,KAAAqwC,GAAA9mC,IAAA,SAAAjU,GACA,MAAAkK,GAAAvB,GAAAvG,IAAA24C,EAAA/6C,QAGA8Q,EAAAkO,WAAA,SAAAjF,EAAAiC,EAAAigC,GACA,GAUA/pC,GACA6N,EAEA8xB,EACAC,EAEA6L,EACAxB,EACAra,EACAyI,EACAqT,EACAC,EArBA3zC,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACA03C,EAAA/jC,EAAAoM,OAAA,SAAAmK,GACA,MAAApmB,GAAAnI,KAAA6Y,MAAA0V,EAAAzV,MAAAmB,IAEA+hC,EAAA9B,EAAA/xC,EAAA8xC,gBAAA8B,EAAA7B,GAAA6B,EACAE,EAAA,OAAAhiC,EAAA5V,EAAAy6B,YAAAz6B,EAAAw6B,WACAqd,EAAA,OAAAjiC,EAAA5V,EAAAs6B,YAAAt6B,EAAAq6B,WACAyd,EAAAh0C,EAAAqzC,cAAAQ,GACAI,EAAAj0C,EAAAwzC,cAAAK,GAMAK,EAAA,OAAApiC,EAAA5V,EAAA+tC,eAAA/tC,EAAA0tC,cAOAuK,EAAAn0C,EAAA8gB,QAAA,MAAA+yB,IAAA33C,EAAAkvC,eAAAprC,EAAA8gB,QAAA,OAAA+yB,IAAA33C,EAAAovC,eACA8I,EAAA,OAAAtiC,EAAA5V,EAAA8tC,iBAAA9tC,EAAAytC,gBACA0K,EAAAr0C,EAAA8kB,gBAAA5oB,EAAAoS,aACAgmC,EAAAt0C,EAAA8kB,iBAAA5oB,EAAAoS,YAMA,OAHA0lC,GAAAruC,EAAAmuC,KAAAnuC,EAAAouC,GAAAC,EAAAD,EAAAC,EAAAD,EAAA,GAAAC,EACAC,EAAAtuC,EAAAouC,KAAApuC,EAAAmuC,KAAAG,IAAAH,EAAA,GAAAG,EAEA,IAAAJ,EAAAj+C,OAEA,OAAAkc,EAAA9R,EAAA4O,GAAA5G,SAAAhI,EAAA/H,EAAA+P,UAEA+iB,MAAAipB,KAEAA,EAAA,GAEAjpB,MAAAkpB,KAEAA,EAAAD,GAEAA,IAAAC,IACAD,EAAA,EAAAC,EAAA,EAAAD,EAAA,GAEAN,EAAAM,GAAA,GAAAC,GAAA,EACAN,EAAAK,GAAA,GAAAC,GAAA,GAGAtuC,EAAAmuC,IAAAJ,GAAA/tC,EAAAouC,IAAAJ,KACAQ,GAAA,GAIAA,IACAT,IACAM,EAAA,GAEAL,IACAM,EAAA,IAIAp+B,EAAAxP,KAAAu6B,IAAAqT,EAAAD,GACArM,EAAAC,EAAA,GAAA/xB,EAEA,oBAAAq+B,KACAT,EAAAptC,KAAAnO,IAAAmO,KAAAu6B,IAAAoT,GAAA3tC,KAAAu6B,IAAAqT,IACAA,EAAAC,EAAAT,EACAO,EAAAE,EAAAT,GAGAY,GACApC,EAAAjyC,EAAAgyC,mBAAAgC,EAAAC,EAAA,SACArc,EAAApxB,EAAAxG,EAAA/H,EAAA2G,SACAyhC,GAAA4R,EAAA,GAAAra,EAAAqa,EAAA,GAAAra,GACA+P,GAAA9xB,GAAAwqB,EAAA,MAAAA,EAAA,GAAAA,EAAA,KACAuH,GAAA/xB,GAAAwqB,EAAA,MAAAA,EAAA,GAAAA,EAAA,MACSiU,IACTrC,EAAAjyC,EAAAgyC,mBAAAgC,EAAAC,EAAA,UACAtM,GAAA3nC,EAAAnI,KAAAme,2BAAAi8B,EAAA,GAAAp8B,GACA+xB,GAAA5nC,EAAAnI,KAAAme,2BAAAi8B,EAAA,GAAAp8B,IAEA,MAAA/D,GAAAnL,EAAAzK,EAAA4tC,kBACAnC,EAAA3nC,EAAAnI,KAAA+d,WAAA1Z,EAAA4tC,eAAA,MAAAnC,EAAA9xB,GACA+xB,EAAA5nC,EAAAnI,KAAA+d,WAAA1Z,EAAA4tC,eAAA,SAAAlC,EAAA/xB,IAEA,OAAA/D,GAAAnL,EAAAzK,EAAAiuC,mBACAxC,EAAA3nC,EAAAnI,KAAA+d,WAAA1Z,EAAAiuC,gBAAA,MAAAxC,EAAA9xB,GACA+xB,EAAA5nC,EAAAnI,KAAA+d,WAAA1Z,EAAAiuC,gBAAA,SAAAvC,EAAA/xB,IAGAs+B,IACAT,IACA9L,EAAAoM,GAEAL,IACAhM,GAAAsM,IAGAjsC,GAAAgsC,EAAApM,EAAAqM,EAAAtM,GACAyM,EAAApsC,EAAA4pC,UAAA5pC,IAEApB,EAAA2tC,cAAA,SAAA1kC,GACA,GAAA7P,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,OAAAiK,GAAAjK,EAAAu6B,YAAAz2B,EAAAwP,eAAArZ,KAAAsZ,UAAAvT,EAAAu6B,YAAAv6B,EAAAu6B,WAAAz2B,EAAAvB,GAAAtG,IAAA0X,EAAA,SAAAuW,GACA,MAAApmB,GAAAvB,GAAAtG,IAAAiuB,EAAA/tB,OAAA,SAAAuN,GACA,MAAAA,GAAA9N,OAIA8O,EAAA4tC,cAAA,SAAA3kC,GACA,GAAA7P,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,OAAAiK,GAAAjK,EAAAo6B,YAAAt2B,EAAAwP,eAAArZ,KAAAsZ,UAAAvT,EAAAo6B,YAAAp6B,EAAAo6B,WAAAt2B,EAAAvB,GAAAvG,IAAA2X,EAAA,SAAAuW,GACA,MAAApmB,GAAAvB,GAAAvG,IAAAkuB,EAAA/tB,OAAA,SAAAuN,GACA,MAAAA,GAAA9N,OAIA8O,EAAA6tC,kBAAA,SAAAzsC,GACA,GAGA0sC,GACAx7C,EACAy7C,EACAC,EANA50C,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACA07B,EAAA5vB,EAAA,GAAAA,EAAA,EAqBA,OAhBAhI,GAAAkP,gBACAhW,EAAA,EACS8G,EAAA8gB,QAAA,QACT4zB,EAAA10C,EAAAg4B,kBACA9+B,EAAAw7C,EAAA,EAAA9c,GAAA8c,EAAA,SAEAx7C,EAAA,IAAA0+B,EAEA,WAAAvyB,EAAAnJ,EAAAwtC,iBAAA/iC,EAAAzK,EAAAwtC,iBACAiL,EAAAhvC,EAAAzJ,EAAAwtC,eAAAr8B,MAAAnR,EAAAwtC,eAAAr8B,KAAAnU,EACA07C,EAAAjvC,EAAAzJ,EAAAwtC,eAAAvwC,OAAA+C,EAAAwtC,eAAAvwC,MAAAD,GAEAy7C,EAAAC,EADS,iBAAA14C,GAAAwtC,eACTxtC,EAAAwtC,eAEAxwC,GAEgBmU,KAAAsnC,EAAAx7C,MAAAy7C,IAEhBhuC,EAAAyO,WAAA,SAAAxF,GACA,GAAA7P,GAAA7J,KACA47C,GAAA/xC,EAAAu0C,cAAA1kC,GAAA7P,EAAAw0C,cAAA3kC,IACAglC,EAAA9C,EAAA,GACA+C,EAAA/C,EAAA,GACA74C,EAAA8G,EAAAy0C,kBAAA1C,GACA55C,EAAA,EACAD,EAAA,CAiBA,OAfA28C,GAAAC,IAAA,GAAA90C,EAAAkP,kBACAlP,EAAAwP,gBACAqlC,EAAA,GAAAt+B,MAAA,GAAAs+B,EAAAE,WACAD,EAAA,GAAAv+B,MAAA,IAAAu+B,EAAAC,aAEAF,EAAA,IAAAA,EAAA,KAAAA,EACAC,EAAA,IAAAA,GAAA,MAAAA,KAGAD,GAAA,IAAAA,KACA18C,EAAA6H,EAAAwP,eAAA,GAAA+G,MAAAs+B,EAAAE,UAAA77C,EAAAmU,MAAAwnC,EAAA37C,EAAAmU,OAEAynC,GAAA,IAAAA,KACA58C,EAAA8H,EAAAwP,eAAA,GAAA+G,MAAAu+B,EAAAC,UAAA77C,EAAAC,OAAA27C,EAAA57C,EAAAC,QAEAhB,EAAAD,IAEA0O,EAAA+c,cAAA,SAAA9T,EAAA0O,EAAAC,EAAAw2B,EAAAhtC,GACA,GAAAhI,GAAA7J,KACA+F,EAAA8D,EAAA9D,MAyBA,OAvBAsiB,KACAxe,EAAAlI,EAAAkQ,UAAAhI,EAAAvB,GAAAge,OAAAzc,EAAAqV,WAAAxF,KACA7P,EAAA6c,WAAA7c,EAAAlI,EAAAkQ,SACA9L,EAAA4gB,cACA9c,EAAAjG,KAAA2E,MAAAsB,EAAAlI,GAAAm9C,oBAEAj1C,EAAA0c,KAAA1U,OAAAhI,EAAAlI,EAAAkQ,UACAhI,EAAAwC,OACAxC,EAAAwC,MAAA9D,MAAAsB,EAAA0c,OAGA6B,IACAve,EAAAlI,EAAAkQ,YAAAhI,EAAAwC,OAAAxC,EAAAwC,MAAAe,QAAAvD,EAAA6c,WAAA7c,EAAAwC,MAAAia,WACAvgB,EAAA4gB,cACA9c,EAAAjG,KAAA2E,MAAAsB,EAAAlI,GAAAm9C,qBAKAD,GACAh1C,EAAAlI,EAAAkQ,OAAAhI,EAAAk1C,YAAAl1C,EAAAlI,EAAA+rB,cAGA7jB,EAAAlI,EAAAkQ,UAEApB,EAAAsuC,YAAA,SAAAltC,GACA,GAAAmtC,GAAAh/C,KAAAi/C,gBACAj9C,EAAAg9C,EAAA,GACAj9C,EAAAi9C,EAAA,EASA,OARAntC,GAAA,IAAA7P,IACA6P,EAAA,IAAAA,EAAA,IAAA7P,EAAA6P,EAAA,IACAA,EAAA,GAAA7P,GAEAD,GAAA8P,EAAA,KACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAA9P,GACA8P,EAAA,GAAA9P,GAEA8P,GAGApB,EAAAyuC,KAAA,SAAAzY,GACA,GAIA0Y,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAJA71C,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACA+R,EAAAjO,EAAAiO,KACAxP,EAAAuB,EAAAvB,EAGAuB,GAAAuf,cAGArjB,EAAA+/B,yBAGA//B,EAAA4gB,eAAA9c,EAAAjG,KAAA+7C,WAGA55C,EAAAusC,0BAIA6M,EAAAt1C,EAAAwY,UAAA,GACA+8B,EAAAv1C,EAAAwY,UAAA,GACAg9B,EAAA5Y,EAAA,GACA6Y,EAAA7Y,EAAA,GACA8Y,EAAArvC,KAAAlO,IAAAm9C,EAAAE,GACAG,EAAAtvC,KAAAnO,IAAAo9C,EAAAE,GACAI,EAAA15C,EAAAmgC,uBAAAr8B,EAAAigB,OAAA9S,IAAA9G,KAAAlO,IAAAo9C,EAAAE,GACAI,EAAA35C,EAAAmgC,uBAAAr8B,EAAA/G,OAAAoN,KAAAnO,IAAAq9C,EAAAE,GAEAxnC,EAAA/E,OAAA,IAAA/H,EAAA8D,UAAA6C,KAAA,IAAA4tC,GAAA5tC,KAAA,IAAA8tC,GAAA9tC,KAAA,QAAA6tC,EAAAD,GAAA5tC,KAAA,SAAA+tC,EAAAD,GAEA3nC,EAAA7B,UAAA,IAAAjL,EAAA4B,QAAAqJ,UAAA,IAAAjL,EAAA2B,OAAAmZ,OAAA,SAAAxV,GACA,MAAAvK,GAAAsgC,4BAAA/1B,KACS0C,KAAA,SAAA1C,EAAA9Q,GACT,GAGAg4B,GACAC,EACAmoB,EACAC,EACA9Z,EAEA10B,EATA1E,EAAArE,EAAAyK,OAAA/S,MACAomC,EAAAz5B,EAAA2S,QAAAtU,EAAAgE,UACA8wC,EAAAnzC,EAAA2S,QAAAtU,EAAAiE,UAMA8wC,GAAA,CAEA,IAAApzC,EAAA2S,QAAAtU,EAAA8B,QACA0qB,EAAA,EAAA7qB,EAAAgF,KAAA,MACA8lB,EAAA,EAAA9qB,EAAAgF,KAAA,MACAo0B,EAAAl8B,EAAAm2C,YACAD,EAAAR,EAAA/nB,KAAAgoB,GAAAC,EAAAhoB,KAAAioB,MACa,KAAA/yC,EAAA2S,QAAAtU,EAAA/H,KAUb,MATAoO,GAAAF,EAAAnR,MACAw3B,EAAAnmB,EAAA1P,EACA81B,EAAApmB,EAAAvP,EACA89C,EAAAvuC,EAAAnO,MACA28C,EAAAxuC,EAAAvO,OACAijC,EAAAl8B,EAAAo2C,WACAF,IAAAP,EAAAhoB,KAAAooB,EAAAL,MAAAG,EAAAjoB,KAAAooB,EAAAJ,GAKAM,EAAAD,IACAnzC,EAAA2S,QAAAtU,EAAAiE,UAAA6wC,GAEAnzC,EAAA2S,QAAAtU,EAAAgE,UAAAo3B,GACAL,EAAApoC,KAAAkM,GAAAu8B,EAAAz5B,EAAA2D,EAAA9Q,SAKAiR,EAAAyvC,UAAA,SAAAzZ,GACA,GAAA58B,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA8D,GAAAuf,cAGArjB,EAAA+/B,yBAGAj8B,EAAAwY,UAAAokB,EACA58B,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAtF,OAAA+Q,OAAA,QAAA9E,KAAA,QAAA3G,EAAA8D,UAAApI,MAAA,cACAmD,EAAAyY,UAAA,IAGA7R,EAAA0vC,QAAA,WACA,GAAAt2C,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA8D,GAAAuf,cAGArjB,EAAA+/B,yBAGAj8B,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAA8D,UAAA/H,aAAAyZ,SAAA,KAAA9Z,MAAA,aAAA6P,SACA1M,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA2B,OAAA2S,QAAAtU,EAAAiE,UAAA,GACApF,EAAAyY,UAAA,IAGA7R,EAAA2vC,WAAA,SAAAC,GACA,GAAAx2C,GAAA7J,KACAsgD,EAAAD,IAAAx2C,EAAA8gB,QAAA,SAAA9gB,EAAAqhC,sBAAArhC,EAAA02C,QACAC,EAAAH,IAAAx2C,EAAA8gB,QAAA,SAAA9gB,EAAAqhC,sBAAArhC,EAAA42C,QACA,iBAAAhxC,EAAAy6B,EAAA1vB,GAEA,OADA,OAAA3Q,EAAAnI,KAAA6Y,MAAAC,GAAAgmC,EAAAF,GACA3iD,KAAAkM,EAAA4F,EAAAy6B,KAGAz5B,EAAA8vC,QAAA,SAAA9wC,GACA,GAAA5F,GAAA7J,KACA+F,EAAA8D,EAAA9D,MAEA,QADAA,EAAA8Y,mBAAA9Y,EAAA8Y,mBAAAhV,EAAAksC,oBACAtmC,IAEAgB,EAAAgwC,SAAA,SAAAhxC,GACA,GAAA5F,GAAA7J,KACA+F,EAAA8D,EAAA9D,MAEA,QADAA,EAAAiZ,oBAAAjZ,EAAAiZ,oBAAAnV,EAAAksC,oBACAtmC,IAEAgB,EAAAslC,mBAAA,SAAAtmC,GACA,MAAAD,GAAAC,MAAA,IAEAgB,EAAAy6B,sBAAA,SAAAz7B,EAAAy6B,GACA,WAAAA,GAAArvB,QAAA,QAEApK,EAAAsrC,gBAAA,SAAA7a,GACA,GAAAr3B,GAAA7J,KACAmyC,EAAAtoC,EAAA9D,OAAAosC,YAEAuO,EAAA,SAAAjxC,GACA,MAAAD,GAAAC,MAAA,GAgBA,OAbA,mBAAA0iC,GAAAh7B,OACAg7B,EAAAh7B,OACS,WAAAjI,EAAAijC,EAAAh7B,QACTg7B,EAAAh7B,OAAA+pB,IACA,IAAAiR,EAAAh7B,OAAA+pB,GAAAwf,EAAAvO,EAAAh7B,OAAA+pB,GAEA,WACA,UAIAwf,GAKAjwC,EAAAiX,SAAA,WACA,GAAA7d,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAuC,EAAAuB,EAAAvB,EACAuB,GAAA1H,KAAA0H,EAAAiO,KAAArB,OAAA,KAAA9E,KAAA,YAAA9H,EAAAsY,iBAAAxQ,KAAA,QAAA3G,EAAA7I,MACA4D,EAAAmuC,aACArqC,EAAA1H,KAAAsU,OAAA,KAAA9E,KAAA,QAAA3G,EAAA0C,QAEA3H,EAAAquC,aACAvqC,EAAA1H,KAAAsU,OAAA,KAAA9E,KAAA,QAAA3G,EAAA+C,QAEAhI,EAAAuuC,iBACAzqC,EAAA1H,KAAAsU,OAAA,KAAA9E,KAAA,QAAA3G,EAAA6C,YAAA4I,OAAA,QAAA9E,KAAA,QAAA3G,EAAA6C,YAEAhE,EAAA4D,MAAAnF,EAAA2N,cACAlQ,EAAA4hB,kBACA9d,EAAA+d,iBAGAnX,EAAAmX,cAAA,WACA,GAAA/d,GAAA7J,KACAsI,EAAAuB,EAAAvB,EACAuB,GAAA2D,UAAA3D,EAAAiO,KAAArB,OAAA,KAAA9E,KAAA,YAAA9H,EAAAsY,iBAAAxQ,KAAA,QAAA3G,EAAA7I,KAAA,IAAA6I,EAAAwC,WACA3D,EAAA2D,UAAAiJ,OAAA,KAAA9E,KAAA,QAAA3G,EAAA4C,YACA/D,EAAA2D,UAAAiJ,OAAA,KAAA9E,KAAA,QAAA3G,EAAAiD,YACApE,EAAA+D,WAAAtF,EAAA2N,eAEAxF,EAAA2yB,YAAA,SAAAqG,GACA,GAAA5/B,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAuC,EAAAuB,EAAAvB,GACAq4C,EAAA92C,EAAA+2C,iBAAA76C,EAAAouC,YAAAtqC,EAAAlI,GACAuH,EAAAW,EAAAkP,gBAAAlP,EAAAkQ,MAAA7Q,aAAA,CAEAW,GAAA25B,UAAAz9B,EAAAoS,cACAwQ,GAAA,EACAC,GAAA/e,EAAA3G,MACA2lB,GAAA,SAAAvY,GACA,MAAAzG,GAAAlI,EAAA2O,GAAApH,GAEAuP,GAAA,SAAAnI,GACA,MAAAzG,GAAAlI,EAAA2O,GAAApH,KAGAyf,GAAA,SAAArY,GACA,MAAAzG,GAAAlI,EAAA2O,GAAApH,GAEA0f,GAAA,SAAAtY,GACA,MAAAzG,GAAAlI,EAAA2O,GAAApH,GAEA2f,GAAA,EACApQ,GAAA5O,EAAA/G,QAGA+G,EAAA4D,MAAA5D,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAA0C,QAAAuI,UAAA,IAAAjL,EAAAyC,OAAAnM,KAAAq/C,GACA92C,EAAA4D,MAAA0I,QAAAM,OAAA,QAAA9E,KAAA,QAAA3G,EAAAyC,OACAg8B,GACA5/B,EAAA4D,MAAAkE,KAAA9H,EAAA25B,WAAA98B,MAAA,qBACA,OAAA4B,EAAAyK,OAAA/S,MAAA2R,KAAA5L,EAAAoS,aAAA,cAAApS,EAAAoS,aAAAtO,EAAA/G,OAAA,SAGA+G,EAAA4D,MAAA6I,OAAAC,UAGA9F,EAAAowC,YAAA,WACA,GAAAh3C,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA+6C,EAAAj3C,EAAAyR,MAAAvS,cAAAc,EAAA/H,EAAAmQ,MAAAlM,EAAAsuC,aACAxqC,GAAAiE,MAAAjE,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAA+C,QAAAkI,UAAA,IAAAjL,EAAA8C,OAAAxM,KAAAw/C,GACAj3C,EAAAiE,MAAAqI,QAAAM,OAAA,QAAA9E,KAAA,QAAA3G,EAAA8C,OACAjE,EAAAiE,MAAA6D,KAAA,KAAA5L,EAAAoS,aAAAtO,EAAA/H,EAAA,GAAA6P,KAAA,KAAA5L,EAAAoS,aAAAtO,EAAA/H,EAAA+H,EAAA3G,OAAAyO,KAAA,KAAA5L,EAAAoS,aAAA,EAAAtO,EAAA/H,GAAA6P,KAAA,KAAA5L,EAAAoS,aAAAtO,EAAA/G,OAAA+G,EAAA/H,GACA+H,EAAAiE,MAAAwI,OAAAC,SACA1M,EAAA4e,YAAA5e,EAAAiE,MAAA,SAGA2C,EAAAswC,eAAA,SAAAzwC,GACA,MAAAA,GAAA8L,SAAA9L,EAAA8L,SAAA,OAEA3L,EAAAuwC,WAAA,SAAA1wC,GACA,gBAAAA,EAAA8L,SAAA,aAAA9L,EAAA8L,SAAA,MAEA3L,EAAAwwC,WAAA,SAAA3wC,GACA,gBAAAA,EAAA8L,UAAApc,KAAA8C,OAAA,WAAAwN,EAAA8L,UAAApc,KAAA8C,OAAA,KAEA2N,EAAAywC,WAAA,SAAA5wC,GACA,gBAAAA,EAAA8L,SAAA,aAAA9L,EAAA8L,SAAApc,KAAAkD,MAAA,EAAAlD,KAAAkD,OAEAuN,EAAA4d,WAAA,SAAA7N,GACA,GAGA7S,GACAK,EACAsjB,EALAznB,EAAA7J,KACA8X,EAAAjO,EAAAiO,KACA/R,EAAA8D,EAAA9D,MAMA8D,GAAA1H,KAAAuE,MAAA,aAAAmD,EAAAuf,aAAA,oBAEAtR,EAAA/E,OAAA,QAAA/H,EAAA6C,YAAAnH,MAAA,uBACAX,EAAAmuC,aACArqC,EAAAu5B,cAEAv5B,EAAA+D,WAAAkK,EAAA/E,OAAA,IAAA/H,EAAA4C,YAAAqI,UAAA,IAAAjL,EAAA2C,WAAArM,KAAAyE,EAAAy+B,cAEA72B,EAAA9D,EAAA+D,WAAAuI,QAAAM,OAAA,KAAA9E,KAAA,iBAAArB,GACA,MAAAtF,GAAA2C,WAAA2C,EAAA,UAAAA,EAAA,YAEA3C,EAAA8I,OAAA,QAAA/P,MAAA,aACAiH,EAAA8I,OAAA,QAAA9E,KAAA,cAAA9H,EAAAk3C,gBAAApvC,KAAA,YAAA5L,EAAAoS,aAAA,kBAAAxG,KAAA,KAAA9H,EAAAm3C,YAAArvC,KAAA,SAAAjL,MAAA,aAIAmD,EAAA+D,WAAA0I,OAAAvP,aAAAyZ,YAAA9Z,MAAA,aAAA6P,SAGAxQ,EAAAquC,aACAvqC,EAAAg3C,cAEAh3C,EAAAoE,WAAA6J,EAAA/E,OAAA,IAAA/H,EAAAiD,YAAAgI,UAAA,IAAAjL,EAAAgD,WAAA1M,KAAAyE,EAAA2+B,cAEA12B,EAAAnE,EAAAoE,WAAAkI,QAAAM,OAAA,KAAA9E,KAAA,iBAAArB,GACA,MAAAtF,GAAAgD,WAAAsC,EAAA,UAAAA,EAAA,YAEAtC,EAAAyI,OAAA,QAAA/P,MAAA,aACAsH,EAAAyI,OAAA,QAAA9E,KAAA,cAAA9H,EAAAk3C,gBAAApvC,KAAA,YAAA5L,EAAAoS,aAAA,kBAAAxG,KAAA,KAAA9H,EAAAm3C,YAAArvC,KAAA,SAAAjL,MAAA,aAEA4qB,EAAAznB,EAAAynB,GAAA/mB,KAAAV,GACAA,EAAAoE,WAAA8E,OAAA,QAAAhM,aAAAyZ,YAAA7O,KAAA,KAAA5L,EAAAoS,aAAAmZ,EAAA,GAAA3f,KAAA,KAAA5L,EAAAoS,aAAAmZ,EAAAznB,EAAA3G,OAAAyO,KAAA,KAAA5L,EAAAoS,aAAA,EAAAmZ,GAAA3f,KAAA,KAAA5L,EAAAoS,aAAAtO,EAAA/G,OAAAwuB,GAAA5qB,MAAA,aACAmD,EAAAoE,WAAA8E,OAAA,QAAAhM,aAAAyZ,YAAA7O,KAAA,IAAA5L,EAAAoS,aAAAtO,EAAAo3C,WAAA12C,KAAAV,KAAAq3C,WAAA32C,KAAAV,IAAA8H,KAAA,IAAA2f,GAAAjkB,KAAA,SAAAiD,GACA,MAAAA,GAAAjD,OACS3G,MAAA,aAETmD,EAAAoE,WAAAqI,OAAAvP,aAAAyZ,YAAA9Z,MAAA,aAAA6P,UAEA9F,EAAAsf,WAAA,SAAAvQ,GACA,GAAA3V,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAsnB,EAAAxjB,EAAAwjB,GAAA9iB,KAAAV,GACAxG,EAAAwG,EAAA+D,WAAAmF,OAAA,QACAzF,EAAAzD,EAAA+D,WAAAmF,OAAA,OACA,SAAAyM,EAAAnc,EAAA0D,aAAA1D,GAAAsO,KAAA,KAAA5L,EAAAoS,aAAA,EAAAkV,GAAA1b,KAAA,KAAA5L,EAAAoS,aAAAtO,EAAA3G,MAAAmqB,GAAA1b,KAAA,KAAA5L,EAAAoS,aAAAkV,EAAA,GAAA1b,KAAA,KAAA5L,EAAAoS,aAAAkV,EAAAxjB,EAAA/G,QAAA4D,MAAA,cAAA8Y,EAAAlS,EAAAvG,aAAAuG,GAAAqE,KAAA,IAAA5L,EAAAoS,aAAAtO,EAAAq3C,WAAA32C,KAAAV,KAAAo3C,WAAA12C,KAAAV,IAAA8H,KAAA,IAAA0b,GAAAhgB,KAAA,SAAAiD,GACA,MAAAA,GAAAjD,OACS3G,MAAA,eAET+J,EAAA0wC,eAAA,SAAArT,GACA,GAAAjkC,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAq7C,EAAAtT,EAAAhoB,OAAA,SAAAxV,GACA,MAAAA,IAAAd,EAAAc,EAAAlS,SAEAijD,EAAAx3C,EAAAiO,KAAA7B,UAAA,QAAAjL,EAAA6C,YACAujB,EAAAvnB,EAAAunB,GAAA7mB,KAAAV,EACA9D,GAAAuvC,eAIAzrC,EAAA8gB,QAAA,YAAA9gB,EAAAuf,eAGAi4B,EAAA36C,MAAA,wBAAApF,MAAA8/C,EAAA,KAAAzvC,KAAA5L,EAAAoS,aAAA,UAAAiZ,GAAAzf,KAAA5L,EAAAoS,aAAA,UAAAiZ,GACAvnB,EAAA4e,YAAA44B,EAAA,WAEA5wC,EAAA4yB,eAAA,WACArjC,KAAA8X,KAAA/E,OAAA,QAAA/H,EAAA6C,YAAAnH,MAAA,wBAEA+J,EAAA0d,iBAAA,WACA,GAAAtkB,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA8D,GAAAiO,KAAA/E,OAAA,QAAA/H,EAAA6C,YAAA8D,KAAA,KAAA5L,EAAAoS,aAAA,OAAAxG,KAAA,KAAA5L,EAAAoS,aAAAtO,EAAA3G,OAAA,IAAAyO,KAAA,KAAA5L,EAAAoS,cAAA,MAAAxG,KAAA,KAAA5L,EAAAoS,cAAA,GAAAtO,EAAA/G,SAEA2N,EAAAmwC,iBAAA,SAAAt+C,EAAAiG,GACA,GAEAqzC,GACA0F,EACAC,EACA/hD,EALAqK,EAAA7J,KACAwhD,KAKAC,EAAA53C,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAkD,OAAA+H,UAAA,SAAApT,MACA,aAAAP,EAIA,IAHAs5C,EAAA/xC,EAAAqV,aACAoiC,EAAA1F,EAAA,GAAA8F,cACAH,EAAA3F,EAAA,GAAA8F,cACAliD,EAAA8hD,EAA+B9hD,GAAA+hD,EAAe/hD,IAC9CgiD,EAAAtvC,KAAA,GAAAkO,MAAA5gB,EAAA,wBAGAgiD,GAAAj5C,EAAA0J,MAAA,IACAuvC,EAAA/hD,OAAAgiD,IAEAD,IAAA17B,OAAA,SAAAxV,GACA,UAAAA,GAAAgM,QAAA,SAIA,OAAAklC,IAEA/wC,EAAAkxC,sBAAA,SAAAv5C,GACA,MAAAA,GAAA,SAAA/G,GACA,GAAA0P,IAAA,CAMA,UALA0C,OAAArL,GAAAkC,QAAA,SAAAs3C,IACA,SAAAA,IAAAvgD,EAAAjD,QAAAwjD,EAAAxjD,OAAA,SAAAwjD,IAAAvgD,EAAA,QAAAugD,EAAA,SACA7wC,GAAA,KAGAA,GACS,WACT,WAGAN,EAAAg0B,gBAAA,SAAAr8B,EAAAy5C,GACA,GAAAh4C,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA+7C,EAAAj4C,EAAA83C,sBAAAv5C,GACA25C,EAAA,SAAA1gD,GACA,OAAAygD,EAAAzgD,IAEAguC,EAAAwS,EAAA72C,EAAA4C,WAAA5C,EAAAiD,WACAmhC,EAAAyS,EAAA72C,EAAA2C,UAAA3C,EAAAgD,SACAnE,GAAAiO,KAAA/E,OAAA,IAAAs8B,GAAAp5B,UAAA,IAAAm5B,GAAAtpB,OAAAg8B,GAAA/6C,aAAAyZ,SAAAza,EAAAwlB,qBAAA7kB,MAAA,aAAA6P,SACAsrC,EACA97C,EAAAy+B,aAAAz+B,EAAAy+B,aAAA1e,OAAAi8B,GAEAh8C,EAAA2+B,aAAA3+B,EAAA2+B,aAAA5e,OAAAi8B,IAIAtxC,EAAAoX,cAAA,WACA7nB,KACA8X,KAAA/E,OAAA,IAAA/H,EAAAtF,OAAA+Q,OAAA,KAAA9E,KAAA,QAAA3G,EAAAiB,YAAAvF,MAAA,mBAEA+J,EAAAwe,gBAAA,WACA,GAEA+yB,GACAC,EAHAp4C,EAAA7J,KACA+F,EAAA8D,EAAA9D,OAGA2gC,EAAA78B,EAAA68B,cAGAz6B,EAAApC,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAiB,YAAAvF,MAAA,SAAAX,EAAA4gB,aAAA5gB,EAAAoS,aAAA,8BAAAmH,QAAAtU,EAAAmB,mBAAAu6B,GAAApnB,QAAAtU,EAAAkB,kBAAAw6B,EAGAz6B,GAAAgK,UAAA,IAAAjL,EAAAgB,WAAAuK,SAGA1M,EAAAmC,UAAAC,EAAAgK,UAAA,IAAAjL,EAAAgB,WAEA06B,GACAsb,EAAAn4C,EAAAmC,UAAA1K,MAAA,IAEAuI,EAAAq4C,gCAAAF,EAAA7rC,SAEAtM,EAAAs4C,gBAAAH,KAIAC,EAAAp4C,EAAAuwC,sBAAAvwC,EAAAvI,KAAAoY,SACAzN,EAAAm2C,MAAAH,IAAA//C,WACA2H,EAAAmC,UAAAC,EAAAgK,UAAA,IAAAjL,EAAAgB,WACAg2C,EAAAn4C,EAAAmC,UAAA1K,KAAA,SAAAgP,GACA,MAAAA,KAGAzG,EAAAw4C,6BAAAL,EAAA7rC,SAEAtM,EAAAs4C,gBAAAH,GAEAA,EAAA1rC,OAAAC,WAGA9F,EAAA0xC,gBAAA,SAAAH,GACA,GAEArgD,GACAG,EACAgR,EACAD,EACAyvC,EACAC,EAPA14C,EAAA7J,KACA+F,EAAA8D,EAAA9D,MASAi8C,MAAAn4C,EAAAmC,UAAA1K,KAAA,SAAAgP,GACA,MAAAA,KAGAzG,EAAA68B,eAEA/kC,EAAA,EACAG,EAAA,EACAgR,EAAAjJ,EAAA3G,MACA2P,EAAAhJ,EAAA/G,UAEA+G,EAAA2mB,cAAA3mB,EAAAwP,gBAAAxP,EAAAkP,iBAwCAupC,EAAAz4C,EAAA24C,oBACAD,EAAA,SAAAjyC,GACA,MAAAzG,GAAAlI,EAAA2O,EAAA3O,GAAA2gD,EAAA,KAvCAz4C,EAAAowC,WAEAqI,EAAA,SAAAhyC,GACA,GAAAmyC,GAAA54C,EAAAqwC,SAAA5pC,EAAAwD,OACA4uC,EAAA74C,EAAAswC,SAAA7pC,EAAAwD,MAGA,eAAA2uC,GAAA,OAAAC,EACA38C,EAAAoS,aAAAtO,EAAA/G,OAAA+G,EAAA3G,OAGA,OAAAu/C,IACAA,EAAA54C,EAAAlI,EAAAkQ,SAAA,IAEA,OAAA6wC,IACAA,EAAA74C,EAAAlI,EAAAkQ,SAAA,IAGA3B,KAAAnO,IAAA,GAAA8H,EAAAlI,EAAA+gD,GAAA74C,EAAAlI,EAAA8gD,IAAA,KAEAF,EAAA,SAAAjyC,GACA,GAAAmyC,GAAA54C,EAAAqwC,SAAA5pC,EAAAwD,OACA4uC,EAAA74C,EAAAswC,SAAA7pC,EAAAwD,OACA6uC,EAAA94C,EAAAvI,KAAAkB,GAAA8N,EAAAkK,IAAAlK,EAAAwD,MAGA,eAAA2uC,GAAA,OAAAC,EACA,GAGA,OAAAD,IACAA,EAAA54C,EAAAlI,EAAAkQ,SAAA,KAGAhI,EAAAlI,EAAAghD,GAAA94C,EAAAlI,EAAA8gD,IAAA,KAQA9gD,EAAAoE,EAAAoS,aAAA,EAAAoqC,EACAzgD,EAAAiE,EAAAoS,aAAAoqC,EAAA,EACAzvC,EAAA/M,EAAAoS,aAAAtO,EAAA3G,MAAAo/C,EACAzvC,EAAA9M,EAAAoS,aAAAmqC,EAAAz4C,EAAA/G,QAGAk/C,EAAArwC,KAAA,QAAA9H,EAAAgmC,WAAAtlC,KAAAV,IAAA8H,KAAA,IAAAhQ,GAAAgQ,KAAA,IAAA7P,GAAA6P,KAAA,QAAAmB,GAAAnB,KAAA,SAAAkB,IAEApC,EAAA4xC,6BAAA,SAAAO,GACA,GAAA/4C,GAAA7J,KACAsI,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,MACA68C,GAAAnsC,OAAA,QAAA9E,KAAA,QAAA9H,EAAAgmC,WAAAtlC,KAAAV,IAAAnD,MAAA,SAAAX,EAAA+/B,wBAAA//B,EAAAmgC,uBAAA,gBAAAtf,GAAA,qBAAAtW,GACA,GAAAwD,GAAAxD,EAAAwD,KAEAjK,GAAAyY,UAAAzY,EAAA0Y,SAGA1Y,EAAAuf,eAKArjB,EAAA0uC,4BACA5qC,EAAAg5C,cAAA/uC,EAAA,SAEAjK,EAAAi5C,WAAAhvC,EAAA,SAGAjK,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA2B,MAAA,IAAAmH,GAAAd,KAAA,SAAA1C,GACAvK,EAAA8nC,iBAAAlwC,KAAAkM,EAAAY,IAAA6F,QAESsW,GAAA,oBAAAtW,GACT,GAAAwD,GAAAxD,EAAAwD,KACAjK,GAAA9D,SAGA8D,EAAAuf,eAGAvf,EAAAw5B,iBACAx5B,EAAAokC,cAEApkC,EAAAk5C,kBACAl5C,EAAAm5C,eAEAn5C,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA2B,MAAA,IAAAmH,GAAAd,KAAA,SAAA1C,GACAvK,EAAAmoC,gBAAAvwC,KAAAkM,EAAAY,IAAA6F,SAESsW,GAAA,qBAAAtW,GACT,GAAAw9B,GACAh6B,EAAAxD,EAAAwD,MACA9H,EAAAnC,EAAA2U,IAAAzL,OAAA,IAAA/H,EAAAgB,UAAA,IAAA8H,EAEAjK,GAAAyY,UAAAzY,EAAA0Y,SAGA1Y,EAAAuf,eAIAvf,EAAAo5C,WAAA3yC,IAAA,eAAAzG,EAAA9D,OAAA8uC,gBAAAvsC,EAAAm+B,MAAAzmC,MAAA,GAAA6J,EAAAlI,EAAAkI,EAAA+vC,UAAAtpC,EAAAkK,GAAA1G,MACAA,GAAA,GAIAg6B,EAAAjkC,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SAAA9F,IAAA,SAAAqc,GACA,MAAApmB,GAAAghC,QAAAhhC,EAAA64B,gBAAAzS,EAAA/tB,OAAA4R,MAGA/N,EAAAwvC,kBACA1rC,EAAAkkC,YAAAD,EAAA9tC,MACA6J,EAAAs3C,eAAArT,MAGA/nC,EAAAwvC,iBAAAxvC,EAAA+/B,yBAAA//B,EAAAmgC,yBAIAr8B,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA2B,MAAA,IAAAmH,GAAAd,KAAA,WACA1K,EAAAyK,OAAA/S,MAAAsf,QAAAtU,EAAA+D,UAAA,GACAhJ,EAAA+/B,wBACA95B,EAAAtF,MAAA,SAAAX,EAAAmgC,uBAAA,gBAEAngC,EAAAwvC,kBACA1rC,EAAAw5B,iBACAx5B,EAAAokC,cACAloC,EAAAmgC,yBACAr8B,EAAAk5C,gBAAAjvC,GACAjK,EAAAm5C,aAAAlvC,OAGagS,OAAA,SAAAxV,GACb,MAAAzG,GAAAq5C,cAAAljD,KAAAsQ,KACa0C,KAAA,SAAA1C,GACbvK,EAAA+/B,yBAAA//B,EAAAmgC,wBAAAngC,EAAAsgC,4BAAA/1B,KACAtE,EAAAtF,MAAA,oBAEAX,EAAAwvC,kBACA1rC,EAAAkkC,aAAAz9B,GAAAtQ,MACA6J,EAAAs3C,gBAAA7wC,IACAvK,EAAA0uC,4BACA5qC,EAAAg5C,cAAA/uC,EAAAxD,EAAAkK,IAAA,GAEA3Q,EAAAi5C,WAAAhvC,EAAAxD,EAAAkK,IAAA,SAGSoM,GAAA,iBAAAtW,GACT,GAAAwD,GAAAxD,EAAAwD,KACA,KAAAjK,EAAAuf,cAAAvf,EAAAskC,YAAA,CAGA,GAAAtkC,EAAA2Y,YAEA,YADA3Y,EAAA2Y,aAAA,EAGA3Y,GAAAo5C,WAAA3yC,IAAA,eAAAvK,EAAA8uC,gBAAAvsC,EAAAm+B,MAAAzmC,MAAA,GAAA6J,EAAAlI,EAAAkI,EAAA+vC,UAAAtpC,EAAAkK,GAAA1G,MACAA,GAAA,GAEAjK,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA2B,MAAA,IAAAmH,GAAAd,KAAA,SAAA1C,IACAvK,EAAAmgC,wBAAAr8B,EAAAq5C,cAAAljD,KAAAsQ,MACAzG,EAAAskC,YAAAnuC,KAAAsQ,EAAAwD,GACAjK,EAAA9D,OAAAqoC,aAAAzwC,KAAAkM,EAAAY,IAAA6F,EAAAtQ,YAGSrC,KAAAoI,EAAAwsC,0BAAA1oC,EAAAq1C,KAAA52C,EAAA66C,SAAAjE,OAAAkE,OAAAnlD,QAAA2oB,GAAA,kBACT/c,EAAAq1C,KAAA52C,EAAAm+B,MAAAzmC,SACS4mB,GAAA,uBACT/c,EAAAq2C,UAAA53C,EAAAm+B,MAAAzmC,SACS4mB,GAAA,qBACT/c,EAAAs2C,YACS,eAGT1vC,EAAAyxC,gCAAA,SAAAU,GAKA,QAAAS,KACAx5C,EAAA2U,IAAAzL,OAAA,IAAA/H,EAAAgB,WAAAtF,MAAA,eACAmD,EAAAw5B,iBACAx5B,EAAAokC,cACApkC,EAAAk5C,kBACAl5C,EAAAm5C,eATA,GAAAn5C,GAAA7J,KACAsI,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,MAUA68C,GAAAnsC,OAAA,QAAA9E,KAAA,OAAAA,KAAA,OAAAA,KAAA,QAAA9H,EAAA3G,OAAAyO,KAAA,SAAA9H,EAAA/G,QAAA6O,KAAA,QAAA3G,EAAAgB,WAAA4a,GAAA,sBACA/c,EAAA9D,SAGA8D,EAAAuf,cAGAi6B,OACSz8B,GAAA,uBACT,GACA6f,GAAA+V,EAAA8G,EAAAxV,EADAxvB,EAAAzU,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,QAGA,KAAA7P,EAAAyY,WAGAzY,EAAAuf,WAAA9K,GAAA,CAYA,GARAmoB,EAAAn+B,EAAAm+B,MAAAzmC,MACAw8C,EAAA3yC,EAAAwyC,uBAAA/9B,EAAAmoB,IAEA58B,EAAA4Y,WAAA+5B,KAAAhiC,KAAA3Q,EAAA4Y,UAAAjI,KACAzU,EAAAmoC,gBAAAvwC,KAAAkM,EAAAY,IAAAZ,EAAA4Y,WACA5Y,EAAA4Y,cAAAxP,KAGAupC,EAEA,WADA6G,IAKAC,GADAz5C,EAAAqnB,cAAAsrB,KAAAz2C,EAAAwvC,iBACAiH,GAEA3yC,EAAA8vC,UAAAr7B,EAAAk+B,EAAA76C,GAIAmsC,EAAAwV,EAAA1vC,IAAA,SAAAtD,GACA,MAAAzG,GAAAghC,QAAAv6B,KAEAzG,EAAAkkC,YAAAD,EAAA9tC,MAGA+F,EAAA0uC,4BACA5qC,EAAAg5C,cAAArG,EAAA1oC,MAAA0oC,EAAAhiC,IAAA,GAEA3Q,EAAAi5C,WAAAtG,EAAA1oC,MAAA0oC,EAAAhiC,IAAA,GAGA3Q,EAAAs3C,eAAArT,IAGAjkC,EAAAojB,UAAAuvB,EAAAhiC,KAAA3Q,EAAA8yC,KAAAH,EAAA/V,GAAA1gC,EAAAyuC,qBACA3qC,EAAA2U,IAAAzL,OAAA,IAAA/H,EAAAgB,WAAAtF,MAAA,oBACAmD,EAAA4Y,YACA1c,EAAA8nC,iBAAAlwC,KAAAkM,EAAAY,IAAA+xC,GACA3yC,EAAA4Y,UAAA+5B,OAGS51B,GAAA,mBACT,GACA6f,GAAA+V,EADAl+B,EAAAzU,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,QAEA7P,GAAAuf,WAAA9K,KAIAmoB,EAAAn+B,EAAAm+B,MAAAzmC,OACAw8C,EAAA3yC,EAAAwyC,uBAAA/9B,EAAAmoB,MAKA58B,EAAAojB,UAAAuvB,EAAAhiC,KAAA3Q,EAAA8yC,KAAAH,EAAA/V,GAAA1gC,EAAAyuC,oBACA3qC,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA4B,OAAA/C,EAAA67B,wBAAA8W,EAAAhiC,KAAAvE,UAAA,IAAAjL,EAAA2B,MAAA,IAAA6vC,EAAA1oC,OAAAd,KAAA,YACAjN,EAAAmgC,wBAAAr8B,EAAAq5C,cAAAljD,KAAAw8C,MACA3yC,EAAAskC,YAAAnuC,KAAAw8C,IAAA1oC,OACAjK,EAAA9D,OAAAqoC,aAAAzwC,KAAAkM,EAAAY,IAAA+xC,EAAAx8C,YAISrC,KAAAoI,EAAAwsC,0BAAA1oC,EAAAq1C,KAAA52C,EAAA66C,SAAAjE,OAAAkE,OAAAnlD,QAAA2oB,GAAA,kBACT/c,EAAAq1C,KAAA52C,EAAAm+B,MAAAzmC,SACS4mB,GAAA,uBACT/c,EAAAq2C,UAAA53C,EAAAm+B,MAAAzmC,SACS4mB,GAAA,qBACT/c,EAAAs2C,YACS,eAET1vC,EAAAo2B,cAAA,SAAAvkC,EAAAwR,EAAA2yB,GACA,GAAA58B,GAAA7J,KACAujD,EAAA,IAAAv4C,EAAAgB,WAAAnC,EAAA68B,cAAA,OAAA5yB,GACA9H,EAAAnC,EAAAiO,KAAA/E,OAAAwwC,GAAAhsC,OACAlG,EAAArF,EAAAsF,wBACA3P,EAAA0P,EAAA6F,MAAAuvB,IAAA,MACA3kC,EAAAuP,EAAA2F,KAAAyvB,IAAA,MACA+c,EAAA/9B,SAAAg+B,YAAA,cAEAD,GAAAE,eAAAphD,GAAA,KAAAoI,OAAA,EAAA/I,EAAAG,EAAAH,EAAAG,GAAA,mBACAkK,EAAA66B,cAAA2c,IAGA/yC,EAAA8W,WAAA,WACA,GAAA1d,GAAA7J,IAIA,IAHA6J,EAAA85C,qBACA95C,EAAA+5C,mBAAA,EACA/5C,EAAApC,OAAAoC,EAAA2U,IAAA/H,OAAA,KAAA9E,KAAA,YAAA9H,EAAAoO,aAAA,YACApO,EAAA9D,OAAAunB,YAGA,MAFAzjB,GAAApC,OAAAf,MAAA,4BACAmD,EAAA8Z,gBAAA9Z,EAAAoc,SAAApc,EAAAvI,KAAAoY,SAKA7P,GAAAg6C,4BAEApzC,EAAAozC,yBAAA,WACA,GAAAh6C,GAAA7J,IACA6J,GAAA0jB,aAAA1jB,EAAAoc,SAAApc,EAAAvI,KAAAoY,UAAuDyO,eAAA,EAAAiI,4BAAA,EAAA5Q,gBAAA,KAEvD/O,EAAA6Z,oBAAA,SAAAxB,EAAAE,GACA,GAAAnf,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA+9C,GACA9sC,IAAAnN,EAAAqa,YAAAra,EAAAkgB,uBAAAhkB,EAAA8sC,eAAA,IAAAhpC,EAAA+f,cAAAd,EAAAjf,EAAAogB,0BAAAlkB,EAAA8sC,eACA37B,KAAArN,EAAAua,aAAAva,EAAAqgB,wBAAAnkB,EAAA6sC,eAAA,GAAA/oC,EAAA6f,aAAAV,EAAAnf,EAAAmgB,yBAAAjkB,EAAA6sC,eAAA,GAGA/oC,GAAAwgB,SACArT,IAAAnN,EAAAka,cAAA,EAAAla,EAAAoa,cAAA6/B,EAAA9sC,IAAAnN,EAAA+f,cAAAd,EACA9lB,MAAAonB,IACAnT,OAAA,EACAC,KAAArN,EAAAka,cAAAla,EAAA6f,aAAAV,EAAAnf,EAAAoa,cAAA6/B,EAAA5sC,KAAA,IAGAzG,EAAAkhB,gBAAA,SAAAnS,GACA,GAAA3V,GAAA7J,MACAwf,EAAA3V,EAAApC,OAAAV,aAAA8C,EAAApC,QAAAkK,KAAA,YAAA9H,EAAAoO,aAAA,YAEAxH,EAAAszC,iBAAA,SAAA9/C,GACAjE,KAAAqkB,WAAApgB,GAEAwM,EAAAuzC,sBAAA,SAAAlxC,GACA9S,KAAAskB,gBAAAxR,GAEArC,EAAAwzC,uBAAA,SAAApxC,GACA7S,KAAAukB,iBAAA1R,GAEApC,EAAAwY,eAAA,WACA,GAAApf,GAAA7J,IACA,OAAA6J,GAAA9D,OAAAunB,YAAAzjB,EAAAka,eAAAla,EAAAoa,cAAApa,EAAAya,iBAAAza,EAAAwa,WAAA,GAAAxa,EAAA6f,aAAA,GAEAjZ,EAAAsY,gBAAA,WACA,GAAAlf,GAAA7J,KACA6S,EAAA,CAQA,OAPAhJ,GAAA9D,OAAAunB,cAEAza,EADAhJ,EAAAka,cACAla,EAAA+f,cAEA1Z,KAAAnO,IAAA,GAAA8H,EAAA0a,mBAAA1a,EAAAwa,WAAA,IAGAxR,GAEApC,EAAAyzC,iBAAA,SAAAz1C,GACA,MAAAA,GAAA6Q,QAAAtU,EAAA4D,kBAAA,QAEA6B,EAAA0zC,0BAAA,SAAA11C,GACA,MAAAA,GAAA6Q,QAAAtU,EAAA4D,kBAAA,SAEA6B,EAAAyzB,kBAAA,SAAAlD,EAAA2C,GACA,GAAA95B,GAAA7J,IACAghC,GAAAn3B,EAAAg6B,eAAA7C,GACAn3B,EAAApC,OAAAwO,UAAA,IAAAjL,EAAAyD,YAAAqX,OAAA,SAAAtL,GACA,MAAAwmB,GAAA1kB,QAAA9B,IAAA,IACS8E,QAAAtU,EAAA6D,kBAAA80B,GAAA58B,aAAAyZ,SAAA,KAAA9Z,MAAA,qBAET,OADAi9B,EAAA95B,EAAAq6C,iBAAAr6C,EAAAs6C,2BACAxmD,KAAAkM,IAAAvB,GAAAyK,OAAA/S,UAGAyQ,EAAAu9B,aAAA,WACA,GAAAnkC,GAAA7J,KACAsI,EAAAuB,EAAAvB,EACAuB,GAAApC,OAAAwO,UAAA,IAAAjL,EAAAyD,YAAA6Q,QAAAtU,EAAA6D,mBAAA,GAAA9H,aAAAyZ,SAAA,KAAA9Z,MAAA,qBACA,MAAAmD,GAAAq6C,iBAAA57C,EAAAyK,OAAA/S,UAGAyQ,EAAA2zB,WAAA,SAAApD,GACA,GAAAn3B,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACAA,GAAAunB,cACAvnB,EAAAunB,aAAA,EACAzjB,EAAApC,OAAAf,MAAA,wBACAmD,EAAA+5C,mBACA/5C,EAAAg6C,4BAGAh6C,EAAA2wC,sBAAAxZ,GACAn3B,EAAApC,OAAAwO,UAAApM,EAAAy6B,gBAAAtD,IAAAt6B,MAAA,wBAAAK,aAAAL,MAAA,qBACA,MAAAmD,GAAAq6C,iBAAAr6C,EAAAvB,GAAAyK,OAAA/S,UAGAyQ,EAAAo0B,WAAA,SAAA7D,GACA,GAAAn3B,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACAA,GAAAunB,aAAA/c,EAAAywB,KACAj7B,EAAAunB,aAAA,EACAzjB,EAAApC,OAAAf,MAAA,wBAEAmD,EAAAsc,mBAAA6a,GACAn3B,EAAApC,OAAAwO,UAAApM,EAAAy6B,gBAAAtD,IAAAt6B,MAAA,aAAAA,MAAA,wBAEA+J,EAAA2wB,4BAAA,WACAphC,KAAA2jD,sBAEAlzC,EAAA8c,aAAA,SAAAyT,EAAArwB,EAAAiQ,GA8BA,QAAAwjC,GAAAC,EAAA7pC,GAIA,MAHA3Q,GAAA85C,kBAAAnpC,KACA3Q,EAAA85C,kBAAAnpC,GAAA3Q,EAAAy6C,YAAAD,EAAAE,YAAAv5C,EAAAyD,WAAA41C,IAEAx6C,EAAA85C,kBAAAnpC,GAGA,QAAAgqC,GAAAH,EAAA7pC,EAAA1G,GAYA,QAAA2wC,GAAAjqC,EAAAkqC,GACAA,IACA56B,GAAA66B,EAAAC,EAAAC,GAAA,GACAC,IACAh7B,GAAA66B,EAAAE,GAAA,EACAD,EAAA,EACA3gD,KAGA8gD,EAAAvqC,GAAAvW,EACA+gD,EAAA/gD,GAAA4F,EAAAoa,cAAA,GAAA6F,EACAm7B,EAAAzqC,GAAAoqC,EACAA,GAAAC,EAvBA,GAOA/6B,GACAo7B,EARAC,EAAA,IAAArxC,EACAsxC,EAAAtxC,IAAAktB,EAAAvhC,OAAA,EACA4R,EAAA+yC,EAAAC,EAAA7pC,GACA6qC,EAAAh0C,EAAAnO,MAAAoiD,IAAAF,GAAAv7C,EAAAka,eAAAla,EAAAoa,cAAAw6B,EAAA,GAAA14C,EAAAotC,eACAoS,EAAAl0C,EAAAvO,OAAA0iD,EACAX,EAAAh7C,EAAAka,eAAAla,EAAAoa,cAAAshC,EAAAF,EACAV,EAAA96C,EAAAka,eAAAla,EAAAoa,cAAApa,EAAAkf,kBAAAlf,EAAAof,gBA2BA,IAPAk8B,IACAP,EAAA,EACA3gD,EAAA,EACAoQ,EAAA,EACAoxC,EAAA,GAGA1/C,EAAAunB,cAAAzjB,EAAAw6B,eAAA7pB,GAEA,YADAkrC,EAAAlrC,GAAAmrC,EAAAnrC,GAAAuqC,EAAAvqC,GAAAyqC,EAAAzqC,GAAA,EAIAkrC,GAAAlrC,GAAA6qC,EACAM,EAAAnrC,GAAA+qC,IAEAlxC,GAAAgxC,GAAAhxC,KACAA,EAAAgxC,KAEAI,GAAAF,GAAAE,KACAA,EAAAF,GAEAL,EAAAr7C,EAAAka,eAAAla,EAAAoa,cAAAwhC,EAAApxC,EAEAtO,EAAAmtC,gBACAj1C,OAAAoM,KAAAq7C,GAAAp7C,QAAA,SAAAkQ,GACAkrC,EAAAlrC,GAAAnG,IAEApW,OAAAoM,KAAAs7C,GAAAr7C,QAAA,SAAAkQ,GACAmrC,EAAAnrC,GAAAirC,IAEA37B,GAAA66B,EAAAO,EAAAlkB,EAAAvhC,QAAA,EACAqqB,EAAAg7B,GACAF,EAAA,EACA3gD,EAAA,EACA+8B,EAAA12B,QAAA,SAAAkQ,GACAiqC,EAAAjqC,MAGAiqC,EAAAjqC,GAAA,IAGAiqC,EAAAjqC,GAxGA,GAEAorC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAOAC,EAQA7mC,EAAA4Q,EACA9iB,EAAAg5C,EAAAC,EAAAC,EAlBA38C,EAAA7J,KACA+F,EAAA8D,EAAA9D,OAEAy/C,EAAA,EACA/G,EAAA,GACApqC,EAAA,EACAoxC,EAAA,EACAX,EAAA,GACAQ,EAAAv/C,EAAAqtC,uBAAA,EAEAwR,EAAA,EACAK,KACAS,KACAC,KACAX,GAAA,GACAD,KACA9gD,EAAA,CAKA+8B,KAAAlb,OAAA,SAAAtL,GACA,OAAAxK,EAAAjK,EAAAisC,WAAAx3B,KAAA,OAAAzU,EAAAisC,WAAAx3B,KAGA7J,QACA6O,EAAA9O,EAAAC,EAAA,qBACAyf,EAAA1f,EAAAC,EAAA,iCAiFA9G,EAAAoa,gBACAhgB,EAAA8B,EAAA+sC,kBAAA/sC,EAAA+sC,kBAAA9R,EAAAvhC,OACAoK,EAAAk6C,iBAAA9/C,IAGA4F,EAAAka,eACA6hC,EAAA,SAAAprC,GACA,MAAAnG,GAAA0wC,EAAAvqC,IAEAurC,EAAA,SAAAvrC,GACA,MAAAwqC,GAAAD,EAAAvqC,IAAAyqC,EAAAzqC,KAES3Q,EAAAoa,eACT2hC,EAAA,SAAAprC,GACA,MAAAnG,GAAA0wC,EAAAvqC,GAAA,IAEAurC,EAAA,SAAAvrC,GACA,MAAAwqC,GAAAD,EAAAvqC,IAAAyqC,EAAAzqC,MAGAorC,EAAA,SAAAprC,GACA,MAAAwqC,GAAAD,EAAAvqC,IAAAyqC,EAAAzqC,IAEAurC,EAAA,SAAAvrC,GACA,MAAAirC,GAAAV,EAAAvqC,KAGAqrC,EAAA,SAAArrC,EAAAhb,GACA,MAAAomD,GAAAprC,EAAAhb,GAAA,EAAAuG,EAAAqtC,wBAEA4S,EAAA,SAAAxrC,EAAAhb,GACA,MAAAumD,GAAAvrC,EAAAhb,GAAA,GAEAsmD,EAAA,SAAAtrC,EAAAhb,GACA,MAAAomD,GAAAprC,EAAAhb,IAEAymD,EAAA,SAAAzrC,EAAAhb,GACA,MAAAumD,GAAAvrC,EAAAhb,GAAA,GAEA0mD,EAAA,SAAA1rC,EAAAhb,GACA,MAAAomD,GAAAprC,EAAAhb,GAAA,GAEA2mD,EAAA,SAAA3rC,EAAAhb,GACA,MAAAomD,GAAAprC,EAAAhb,GAAA,EAAAuG,EAAAqtC,wBAEAgT,EAAA,SAAA5rC,EAAAhb,GACA,MAAAumD,GAAAvrC,EAAAhb,GAAA,GAIA6mD,EAAAx8C,EAAApC,OAAAwO,UAAA,IAAAjL,EAAAyD,YAAAnN,KAAA0/B,GAAA7qB,QAAAM,OAAA,KAAA9E,KAAA,iBAAA6I,GACA,MAAA3Q,GAAAilC,cAAA9jC,EAAAyD,WAAA+L,KACS9T,MAAA,sBAAA8T,GACT,MAAA3Q,GAAAw6B,eAAA7pB,GAAA,qBACS9T,MAAA,oBAAAkgB,GAAA,iBAAApM,GACTzU,EAAAgtC,oBACAhtC,EAAAgtC,oBAAAp1C,KAAAkM,EAAA2Q,GAEA3Q,EAAAvB,GAAAk7C,MAAAiD,QACA58C,EAAAY,IAAAm6B,OACA/6B,EAAAY,IAAArI,KAAAoY,KAEA3Q,EAAAY,IAAAs7B,OAAAvrB,GACA3Q,EAAAyhB,eAAA9Q,GAAA3Q,EAAAY,IAAAk5B,MAAAnpB,GAAA3Q,EAAAY,IAAAs5B,YAGSnd,GAAA,qBAAApM,GACTzU,EAAAitC,wBACAjtC,EAAAitC,wBAAAr1C,KAAAkM,EAAA2Q,IAEA3Q,EAAAvB,GAAAyK,OAAA/S,MAAAsf,QAAAtU,EAAA6D,mBAAA,IACAhF,EAAA6Y,YAAA7Y,EAAAyhB,eAAA9Q,IACA3Q,EAAAY,IAAAk5B,MAAAnpB,MAGSoM,GAAA,oBAAApM,GACTzU,EAAAktC,uBACAltC,EAAAktC,uBAAAt1C,KAAAkM,EAAA2Q,IAEA3Q,EAAAvB,GAAAyK,OAAA/S,MAAAsf,QAAAtU,EAAA6D,mBAAA,GACAhF,EAAAY,IAAAs5B,YAGAsiB,EAAA5vC,OAAA,QAAApJ,KAAA,SAAAmN,GACA,MAAAxK,GAAAjK,EAAAisC,WAAAx3B,IAAAzU,EAAAisC,WAAAx3B,OACSxH,KAAA,SAAAwH,EAAAhb,GACTglD,EAAAxkD,KAAAwa,EAAAhb,KACSkH,MAAA,yBAAAiL,KAAA,IAAA9H,EAAAka,eAAAla,EAAAoa,cAAA4hC,GAAA,KAAAl0C,KAAA,IAAA9H,EAAAka,eAAAla,EAAAoa,eAAA,IAAA+hC,GACTK,EAAA5vC,OAAA,QAAA9E,KAAA,QAAA3G,EAAA0D,iBAAAhI,MAAA,kBAAAiL,KAAA,IAAA9H,EAAAka,eAAAla,EAAAoa,cAAA6hC,GAAA,KAAAn0C,KAAA,IAAA9H,EAAAka,eAAAla,EAAAoa,eAAA,IAAAgiC,GACAI,EAAA5vC,OAAA,QAAA9E,KAAA,QAAA3G,EAAA2D,gBAAAjI,MAAA,SAAAmD,EAAArI,OAAAkF,MAAA,yBAAAiL,KAAA,KAAA9H,EAAAka,eAAAla,EAAAoa,cAAAiiC,GAAA,KAAAv0C,KAAA,KAAA9H,EAAAka,eAAAla,EAAAoa,eAAA,IAAAmiC,GAAAz0C,KAAA,KAAA9H,EAAAka,eAAAla,EAAAoa,cAAAkiC,GAAA,KAAAx0C,KAAA,KAAA9H,EAAAka,eAAAla,EAAAoa,eAAA,IAAAmiC,GAAAz0C,KAAA,eAAA5L,EAAAstC,yBAGAmT,EAAA38C,EAAApC,OAAAsL,OAAA,IAAA/H,EAAAwD,iBAAA,SACA3E,EAAAoa,eAAA5P,EAAA,OAAAmyC,EAAA3jD,SACA2jD,EAAA38C,EAAApC,OAAA2O,OAAA,QAAApL,EAAAyD,YAAAkD,KAAA,QAAA3G,EAAAwD,kBAAAiI,OAAA,SAGAnJ,EAAAzD,EAAApC,OAAAwO,UAAA,QAAA3U,KAAA0/B,GAAA3zB,KAAA,SAAAmN,GACA,MAAAxK,GAAAjK,EAAAisC,WAAAx3B,IAAAzU,EAAAisC,WAAAx3B,OAEAxH,KAAA,SAAAwH,EAAAhb,GACAglD,EAAAxkD,KAAAwa,EAAAhb,MAEAggB,EAAAlS,EAAAvG,aAAAuG,GAAAqE,KAAA,IAAAk0C,GAAAl0C,KAAA,IAAAq0C,GAEAM,EAAAz8C,EAAApC,OAAAwO,UAAA,QAAAjL,EAAA0D,iBAAApN,KAAA0/B,IACAxhB,EAAA8mC,EAAAv/C,aAAAu/C,GAAA30C,KAAA,iBAAA6I,GACA,MAAAkrC,GAAAlrC,KACS7I,KAAA,kBAAA6I,GACT,MAAAmrC,GAAAnrC,KACS7I,KAAA,IAAAm0C,GAAAn0C,KAAA,IAAAs0C,GAETM,EAAA18C,EAAApC,OAAAwO,UAAA,QAAAjL,EAAA2D,gBAAArN,KAAA0/B,IACAxhB,EAAA+mC,EAAAx/C,aAAAw/C,GAAA7/C,MAAA,SAAAmD,EAAA+Y,WAAA,SAAApI,GACA,MAAA3Q,GAAA+Y,WAAA/Y,EAAAe,MAAA4P,GAAAtY,OAAA,GAAA9D,QACSyL,EAAArI,OAAAmQ,KAAA,KAAAu0C,GAAAv0C,KAAA,KAAAy0C,GAAAz0C,KAAA,KAAAw0C,GAAAx0C,KAAA,KAAAy0C,GAETI,IACAhnC,EAAAgnC,EAAAz/C,aAAAy/C,GAAA70C,KAAA,SAAA9H,EAAAkf,kBAAA,IAAApX,KAAA,QAAA0C,GAAApQ,EAAA,OAIA4F,EAAApC,OAAAwO,UAAA,IAAAjL,EAAAyD,YAAA6Q,QAAAtU,EAAA4D,iBAAA,SAAA4L,GACA,OAAA3Q,EAAAyhB,eAAA9Q,KAIA3Q,EAAAm6C,sBAAA3vC,GACAxK,EAAAo6C,uBAAAwB,GACA57C,EAAAk6C,iBAAA9/C,GAEA4F,EAAAuc,cACAvc,EAAAwc,eACAxc,EAAAud,gBAEAvd,EAAAwmB,aAAAD,EAAAxP,GACA/W,EAAA+5C,mBAAA,GAGAnzC,EAAAgX,WAAA,WACA,GAAA5d,GAAA7J,IACA6J,GAAA2C,OAAA3C,EAAAiO,KAAArB,OAAA,KAAA9E,KAAA,YAAA9H,EAAAoY,UAAAtQ,KAAA,QAAA3G,EAAAzD,UAEAkJ,EAAA6d,aAAA,SAAA9N,GACA,GAAA3W,GAAA7J,KACA+F,EAAA8D,EAAA9D,MAGA8D,GAAA2C,OAAA9F,MAAA,aAAAmD,EAAAuf,aAAA,oBAEAvf,EAAAi5B,WAAAj5B,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAzD,SAAA0O,UAAA,IAAAjL,EAAAwB,QAAAlL,KAAAyE,EAAAwB,SACAsC,EAAAi5B,WAAA3sB,QAAAM,OAAA,KAAAA,OAAA,QAAA/P,MAAA,kBACAmD,EAAAi5B,WAAAnxB,KAAA,QAAA9H,EAAA+lC,YAAArlC,KAAAV,IACAA,EAAAi5B,WAAAxsB,OAAAvP,aAAAyZ,YAAA9Z,MAAA,aAAA6P,UAEA9F,EAAAqf,aAAA,SAAAtQ,GACA,GAAA3V,GAAA7J,KACAuH,EAAAsC,EAAAi5B,WAAA7sB,UAAA,QAAAjD,KAAA,WAIA,GAAA0zC,GAAA78C,EAAAvB,GAAAyK,OAAA/S,KAAA8yB,YAAAsvB,OACAv4C,GAAAvB,GAAAyK,OAAA/S,MAAAoiD,MAAAsE,KAEA/kD,EAAAkI,EAAA45B,QAAAl5B,KAAAV,GACA/H,EAAA+H,EAAA88C,QAAAp8C,KAAAV,GACAiJ,EAAAjJ,EAAA65B,YAAAn5B,KAAAV,GACAgJ,EAAAhJ,EAAA+8C,aAAAr8C,KAAAV,EACA,SAAA2V,EAAAjY,EAAAR,aAAAQ,GAAAoK,KAAA,IAAAhQ,GAAAgQ,KAAA,IAAA7P,GAAA6P,KAAA,QAAAmB,GAAAnB,KAAA,SAAAkB,GAAAnM,MAAA,wBAAA4J,GACA,MAAAd,GAAAc,EAAA2gB,SAAA3gB,EAAA2gB,QAAA,OAGAxgB,EAAAgzB,QAAA,SAAAnzB,GACA,GAAAzG,GAAA7J,KACA+F,EAAA8D,EAAA9D,OAEAwrB,EAAA,MAAAjhB,EAAA5O,KAAAmI,EAAA/H,EAAA+H,EAAA4O,EAMA,OALA,MAAAnI,EAAA5O,MAAA,OAAA4O,EAAA5O,KACAqE,EAAAoS,cAAA,SAAA7H,GAAAihB,EAAAjhB,EAAAwB,OAAA,EAEA/L,EAAAoS,aAAA,WAAA7H,GAAAzG,EAAAlI,EAAAkI,EAAAwP,eAAAxP,EAAAyP,UAAAhJ,EAAAwB,OAAAxB,EAAAwB,OAAA,GAIArB,EAAAk2C,QAAA,SAAAr2C,GACA,GAAAzG,GAAA7J,KACA+F,EAAA8D,EAAA9D,OAEAwrB,EAAA,MAAAjhB,EAAA5O,KAAAmI,EAAA/H,EAAA+H,EAAA4O,EAMA,OALA,MAAAnI,EAAA5O,MAAA,OAAA4O,EAAA5O,KACAqE,EAAAoS,aAAA,SAAA7H,GAAAihB,EAAAjhB,EAAA4P,KAAA,EAEAna,EAAAoS,cAAA,SAAA7H,GAAAzG,EAAAlI,EAAAkI,EAAAwP,eAAAxP,EAAAyP,UAAAhJ,EAAAwB,OAAAxB,EAAAwB,OAAA,GAIArB,EAAAizB,YAAA,SAAApzB,GACA,GAGA4P,GAHArW,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACA+L,EAAAjI,EAAA45B,QAAAnzB,GAEAihB,EAAA,MAAAjhB,EAAA5O,KAAAmI,EAAA/H,EAAA+H,EAAA4O,EAMA,OAJAyH,GADA,MAAA5P,EAAA5O,MAAA,OAAA4O,EAAA5O,KACAqE,EAAAoS,cAAA,OAAA7H,GAAAihB,EAAAjhB,EAAA4P,KAAArW,EAAA3G,MAEA6C,EAAAoS,aAAAtO,EAAA3G,MAAA,OAAAoN,GAAAzG,EAAAlI,EAAAkI,EAAAwP,eAAAxP,EAAAyP,UAAAhJ,EAAA4P,KAAA5P,EAAA4P,KAAArW,EAAA3G,MAEAgd,EAAApO,EAAA,EAAAoO,EAAApO,GAEArB,EAAAm2C,aAAA,SAAAt2C,GACA,GAGA4P,GAHArW,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACA+L,EAAA9R,KAAA2mD,QAAAr2C,GAEAihB,EAAA,MAAAjhB,EAAA5O,KAAAmI,EAAA/H,EAAA+H,EAAA4O,EAMA,OAJAyH,GADA,MAAA5P,EAAA5O,MAAA,OAAA4O,EAAA5O,KACAqE,EAAAoS,aAAAtO,EAAA/G,OAAA,SAAAwN,GAAAihB,EAAAjhB,EAAAwB,OAAAjI,EAAA/G,OAEAiD,EAAAoS,cAAA,OAAA7H,GAAAzG,EAAAlI,EAAAkI,EAAAwP,eAAAxP,EAAAyP,UAAAhJ,EAAA4P,KAAA5P,EAAA4P,KAAArW,EAAA/G,OAEAod,EAAApO,EAAA,EAAAoO,EAAApO,GAEArB,EAAA8yB,YAAA,SAAAjzB,GACA,OAAAA,EAAA5O,MAAA,MAAA4O,EAAA5O,MAGA+O,EAAAo2C,SAAA,SAAA7kD,EAAAD,EAAA+kD,GACA,OAAAA,EAAA9mD,KAAAsI,GAAA8R,KAAA7R,QAAAvI,KAAAsI,GAAAC,MAAAC,UAAAC,OAAAzG,EAAAD,KAEA0O,EAAAs2C,KAAA,SAAA/kD,EAAAD,EAAA8P,EAAAm1C,GACA,GAGArnD,GAHAkK,EAAA7J,KACAuI,EAAAsB,EAAAg9C,SAAA7kD,EAAAD,EAAA8H,EAAAwP,gBACA4tC,EAAAp1C,EAAAtJ,EAAAsJ,UAAAtJ,CAGAsB,GAAAkP,iBACAiuC,KAAA,WACA,UAEAz+C,EAAA,SAAA+H,EAAA42C,GACA,GAAAz3C,GAAAw3C,EAAA32C,GAAA02C,EAAA12C,EACA,OAAA42C,GAAAz3C,EAAAS,KAAAC,KAAAV,KAGAlH,EAAA,SAAA+H,EAAA42C,GACA,GAAAz3C,GAAAw3C,EAAA32C,EACA,OAAA42C,GAAAz3C,EAAAS,KAAAC,KAAAV,GAIA,KAAA9P,IAAAsnD,GACA1+C,EAAA5I,GAAAsnD,EAAAtnD,EAgBA,OAdA4I,GAAAmlB,UAAA,WACA,MAAAu5B,GAAAp1C,UAGAhI,EAAAkP,kBACAxQ,EAAAsJ,OAAA,SAAAA,GACA,MAAA1R,WAAAV,QAIAwnD,EAAAp1C,UACAtJ,IAJAsJ,EAAA7R,KAAA0tB,aACA7b,EAAA,GAAAA,EAAA,SAMAtJ,GAEAkI,EAAA02C,KAAA,SAAAnlD,EAAAD,EAAA8P,GACA,GAAAtJ,GAAAvI,KAAA6mD,SAAA7kD,EAAAD,EAAA/B,KAAAma,gBAIA,OAHAtI,IACAtJ,EAAAsJ,UAEAtJ,GAEAkI,EAAAk2B,UAAA,SAAAnsB,GACA,aAAAxa,KAAA0B,KAAA6Y,MAAAC,GAAAxa,KAAAyY,GAAAzY,KAAA8B,GAEA2O,EAAA22C,aAAA,SAAA5sC,GACA,aAAAxa,KAAA0B,KAAA6Y,MAAAC,GAAAxa,KAAAymB,MAAAzmB,KAAAwmB,MAEA/V,EAAA4V,aAAA,WACA,GAAAxc,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAshD,GAAAx9C,EAAAlI,CAEAkI,GAAAy9C,KAAAvhD,EAAAoS,aAAA,IACAtO,EAAA09C,KAAAxhD,EAAAoS,aAAAtO,EAAA/G,OAAA+G,EAAA3G,MACA2G,EAAA8zC,KAAA53C,EAAAoS,aAAA,EAAAtO,EAAA/G,OACA+G,EAAA+zC,KAAA73C,EAAAoS,aAAAtO,EAAA3G,MAAA,EACA2G,EAAA29C,QAAA39C,EAAAy9C,KACAz9C,EAAA49C,QAAA59C,EAAA09C,KACA19C,EAAA69C,QAAA3hD,EAAAoS,aAAA,EAAAtO,EAAA2gB,QACA3gB,EAAA89C,QAAA5hD,EAAAoS,aAAAtO,EAAA0gB,OAAA,EAEA1gB,EAAAlI,EAAAkI,EAAAk9C,KAAAl9C,EAAAy9C,KAAAz9C,EAAA09C,KAAAF,MAAAp0C,GAAApJ,EAAAlI,EAAA+rB,YAAA,WACA,MAAA7jB,GAAAkQ,MAAA7Q,eAEAW,EAAA/H,EAAA+H,EAAAs9C,KAAAt9C,EAAA8zC,KAAA9zC,EAAA+zC,KAAAyJ,EAAAthD,EAAA6tC,eAAA/pC,EAAA/H,EAAA+P,UACAhI,EAAA4O,GAAA5O,EAAAs9C,KAAAt9C,EAAA8zC,KAAA9zC,EAAA+zC,KAAAyJ,EAAAthD,EAAAkuC,gBAAApqC,EAAA4O,GAAA5G,UACAhI,EAAA0c,KAAA1c,EAAAk9C,KAAAl9C,EAAAy9C,KAAAz9C,EAAA09C,KAAA19C,EAAA6c,WAAA,SAAApW,GACA,MAAAA,GAAA,IAAAzG,EAAAmQ,SAAA9Q,eAEAW,EAAA2c,KAAA3c,EAAAs9C,KAAAt9C,EAAA69C,QAAA79C,EAAA89C,QAAAN,EAAAthD,EAAA6tC,eAAA/pC,EAAA2c,KAAA3U,UACAhI,EAAA4c,MAAA5c,EAAAs9C,KAAAt9C,EAAA69C,QAAA79C,EAAA89C,QAAAN,EAAAthD,EAAAkuC,gBAAApqC,EAAA4c,MAAA5U,UAEAhI,EAAAuV,gBAAAvV,EAAAnI,KAAAgZ,qBACA7Q,EAAAwV,gBAAAxV,EAAAnI,KAAAwZ,qBACArR,EAAAiV,gBAAAjV,EAAAnI,KAAA0Z,qBACAvR,EAAAoV,iBAAApV,EAAAnI,KAAA6Z,sBAEA1R,EAAAkQ,MAAAlQ,EAAAnI,KAAAkX,SAAA/O,EAAAlI,EAAAkI,EAAAsV,QAAAtV,EAAAuV,gBAAAvV,EAAAwV,gBAAAtZ,EAAAutC,mBACAzpC,EAAAmQ,SAAAnQ,EAAAnI,KAAAkX,SAAA/O,EAAA0c,KAAA1c,EAAAia,WAAAja,EAAAuV,gBAAAvV,EAAAwV,gBAAAtZ,EAAAutC,mBACAzpC,EAAAyR,MAAAzR,EAAAnI,KAAAuY,SAAApQ,EAAA/H,EAAA+H,EAAA+U,QAAA7Y,EAAA8Y,mBAAAhV,EAAAiV,gBAAA/Y,EAAA2tC,mBACA7pC,EAAA4R,OAAA5R,EAAAnI,KAAAuY,SAAApQ,EAAA4O,GAAA5O,EAAAkV,SAAAhZ,EAAAiZ,oBAAAnV,EAAAoV,iBAAAlZ,EAAAguC,oBAGAsT,IACAx9C,EAAAwC,OACAxC,EAAAwC,MAAA9D,MAAAsB,EAAA0c,MAEAxgB,EAAA4gB,cACA9c,EAAAjG,KAAA2E,MAAAsB,EAAAlI,IAIAkI,EAAAu+B,WACAv+B,EAAAu+B,aAIA33B,EAAAm3C,YAAA,SAAAtoD,EAAAgR,EAAA9Q,GACA,GAAAqK,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA4mB,GAAA5mB,EAAAoS,aAAAtO,EAAAulB,QAAAvlB,EAAAwlB,SAAA9kB,KAAAV,GACA+iB,GAAA7mB,EAAAoS,aAAAtO,EAAAwlB,QAAAxlB,EAAAulB,SAAA7kB,KAAAV,GACAg+C,EAAAh+C,EAAAi+C,aAAAv9C,KAAAV,EACA9D,GAAAysC,gBAAA70C,KAAAkM,EAAAY,IAAA6F,EAAAhR,EAAAiY,QAEA1N,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAe,gBAAAlC,EAAA67B,wBAAAp1B,EAAAkK,KAAAvE,UAAA,IAAAjL,EAAAc,eAAA,IAAAtM,GAAA8B,MAAAgP,IAAA6F,QAAAM,OAAA,UAAA9E,KAAA,mBACA,MAAA9H,GAAAilC,cAAA9jC,EAAAc,eAAAtM,KACSmS,KAAA,KAAAgb,GAAAhb,KAAA,KAAAib,GAAAjb,KAAA,oBACT,MAAA9H,GAAArI,MAAA8O,KACSqB,KAAA,aAAArB,GACT,WAAAzG,EAAAi+C,aAAAx3C,KACSvJ,aAAAyZ,SAAA,KAAA7O,KAAA,IAAAk2C,IAETp3C,EAAAs3C,cAAA,SAAAzoD,EAAAgR,EAAA9Q,GACA,GAAAqK,GAAA7J,IACA6J,GAAA9D,OAAA0sC,kBAAA90C,KAAAkM,EAAAY,IAAA6F,EAAAhR,EAAAiY,QAEA1N,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAe,gBAAAlC,EAAA67B,wBAAAp1B,EAAAkK,KAAAvE,UAAA,IAAAjL,EAAAc,eAAA,IAAAtM,GAAAuH,aAAAyZ,SAAA,KAAA7O,KAAA,OAAA4E,UAEA9F,EAAAuvC,YAAA,SAAAxa,EAAAlmC,EAAAgR,EAAA9Q,GACAgmC,EAAAxlC,KAAA4nD,YAAAtoD,EAAAgR,EAAA9Q,GAAAQ,KAAA+nD,cAAAzoD,EAAAgR,EAAA9Q,IAEAiR,EAAAu3C,WAAA,SAAA1oD,EAAAgR,GACA,GAAAzG,GAAA7J,IACA6J,GAAA9D,OAAAysC,gBAAA70C,KAAAkM,EAAAyG,EAAAhR,EAAAiY,QACA1N,EAAA9D,OAAA8rC,sBACAvyC,EAAAyH,aAAAyZ,SAAA,KAAA9Z,MAAA,kBACA,MAAAmD,GAAAvB,GAAA2/C,IAAAp+C,EAAArI,MAAA8O,IAAA43C,SAAA,QAIAz3C,EAAA03C,aAAA,SAAA7oD,EAAAgR,GACA,GAAAzG,GAAA7J,IACA6J,GAAA9D,OAAA0sC,kBAAA90C,KAAAkM,EAAAyG,EAAAhR,EAAAiY,QACA1N,EAAA9D,OAAA8rC,sBACAvyC,EAAAyH,aAAAyZ,SAAA,KAAA9Z,MAAA,kBACA,MAAAmD,GAAArI,MAAA8O,MAIAG,EAAAwvC,WAAA,SAAAza,EAAAlmC,EAAAgR,EAAA9Q,GACAgmC,EAAAxlC,KAAAgoD,WAAA1oD,EAAAgR,EAAA9Q,GAAAQ,KAAAmoD,aAAA7oD,EAAAgR,EAAA9Q,IAEAiR,EAAAu1B,UAAA,SAAAQ,EAAAl2B,GACA,GACAy1B,GADAl8B,EAAA7J,IAYA,OAVA,WAAAwmC,EAAA4hB,SAGAriB,EAFAl8B,EAAAo5C,WAAA3yC,GAEA,aAEAzG,EAAAm2C,YAES,SAAAxZ,EAAA4hB,WACTriB,EAAAl8B,EAAAo2C,YAEAla,GAEAt1B,EAAA09B,YAAA,SAAA3H,EAAAl2B,EAAA9Q,GACA,GAAAqK,GAAA7J,KACAsI,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,OACA4G,EAAArE,EAAAyK,OAAAyzB,GACAJ,EAAAz5B,EAAA2S,QAAAtU,EAAAgE,UACA+2B,EAAAl8B,EAAAm8B,UAAAQ,EAAAl2B,GAAA/F,KAAAV,EAEA9D,GAAA+/B,wBAAA//B,EAAAsgC,4BAAA/1B,KACAvK,EAAAusC,yBACAzoC,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA4B,QAAA7G,EAAAmgC,uBAAAr8B,EAAA67B,wBAAAp1B,EAAAkK,IAAA,KAAAvE,UAAA,IAAAjL,EAAA2B,OAAAqG,KAAA,SAAA1C,EAAA9Q,GACA,GAAAmN,GAAArE,EAAAyK,OAAA/S,KACA2M,GAAA2S,QAAAtU,EAAAgE,WACA+2B,GAAA,EAAAp5B,EAAA2S,QAAAtU,EAAAgE,UAAA,GAAAsB,EAAA9Q,KAIAmN,EAAA2S,QAAAtU,EAAAgE,UAAAo3B,GACAL,GAAAK,EAAAz5B,EAAA2D,EAAA9Q,KAIAiR,EAAAqU,QAAA,WACA9kB,KACA8X,KAAA/E,OAAA,IAAA/H,EAAAtF,OAAA+Q,OAAA,KAAA9E,KAAA,QAAA3G,EAAAI,YAEAqF,EAAAwa,oBAAA,SAAAvR,GACA,GAEA2uC,GACAC,EAHAz+C,EAAA7J,KACA+F,EAAA8D,EAAA9D,OAGAsqC,EAAAxmC,EAAAwmC,cAAA9lC,KAAAV,GACA4lC,EAAA5lC,EAAA4lC,UAAAllC,KAAAV,GACAkjC,EAAAljC,EAAAkjC,WAAAxiC,KAAAV,EACAw+C,GAAAx+C,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAI,WAAA6K,UAAA,IAAAjL,EAAAG,UAAA7J,KAAAoY,GAAA/H,KAAA,iBAAArB,GACA,MAAA+/B,GAAA//B,GAAAy8B,EAAAz8B,KAEAg4C,EAAAD,EAAAlyC,QAAAM,OAAA,KAAA9E,KAAA,QAAA0+B,GAAA3pC,MAAA,yBAEA4hD,EAAA7xC,OAAA,KAAA9E,KAAA,QAAA89B,GAAA/oC,MAAA,kBAAA4J,GACA,MAAAvK,GAAAsgC,4BAAA/1B,GAAA,kBAGAG,EAAA8d,UAAA,SAAAlC,GACA,GAAAxiB,GAAA7J,KACAuoD,EAAA1+C,EAAA0+C,QAAAh+C,KAAAV,GACA2lC,EAAA3lC,EAAA2lC,SAAAjlC,KAAAV,GACA+mB,EAAA/mB,EAAA+mB,eAAArmB,KAAAV,GACArI,EAAA,SAAA8O,GACA,MAAAzG,GAAArI,MAAA8O,EAAAkK,IAEA3Q,GAAAm5B,QAAAn5B,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA6B,MAAAoJ,UAAA,IAAAjL,EAAA/H,KAAA3B,KAAAinD,GACA1+C,EAAAm5B,QAAA7sB,QAAAM,OAAA,QAAA9E,KAAA,QAAA69B,GAAA9oC,MAAA,SAAAlF,GAAAkF,MAAA,OAAAlF,GACAqI,EAAAm5B,QAAAt8B,MAAA,UAAAkqB,GACA/mB,EAAAm5B,QAAA1sB,OAAAvP,aAAAyZ,SAAA6L,GAAA9V,UAEA9F,EAAAgf,UAAA,SAAAxD,EAAAzM,GACA,QAAAA,EAAAxf,KAAAgjC,QAAAj8B,WAAAmJ,KAAAs4C,SAAA/zC,YAAAzU,KAAAgjC,SAAArxB,KAAA,IAAAsa,GAAAvlB,MAAA,SAAA1G,KAAAwB,OAAAkF,MAAA,OAAA1G,KAAAwB,OAAAkF,MAAA,eAEA+J,EAAAg4C,QAAA,SAAA/mD,EAAAgnD,GACA,GAAA7+C,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA+M,EAAA,iBAAA/M,GAAA+uC,UAAA/uC,EAAA+uC,UAAA4T,EAAAhnD,EAAA2V,eAAAtR,EAAAgvC,gBAAA2T,EAAA,CACA,OAAA3iD,GAAAivC,eAAAliC,EAAA/M,EAAAivC,cAAAjvC,EAAAivC,cAAAliC,GAEArC,EAAAk4C,QAAA,SAAAnpD,EAAAgb,GACA,GAAA3Q,GAAA7J,IACA,QAAAwa,EAAA3Q,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA6B,KAAAhD,EAAA67B,wBAAAlrB,IAAA3Q,EAAAiO,MAAA7B,UAAA,IAAAjL,EAAA/H,KAAAuM,EAAAhQ,GAAA,IAAAA,EAAA,MAEAiR,EAAAqyC,WAAA,SAAAtjD,EAAAgb,EAAA2qC,GACA,GAAAt7C,GAAA7J,IACAmlD,IACAt7C,EAAAm5C,eAEAn5C,EAAA8+C,QAAAnpD,EAAAgb,GAAA8E,QAAAtU,EAAA+D,UAAA,IAEA0B,EAAAuyC,aAAA,SAAAxjD,GACAQ,KACA2oD,QAAAnpD,GAAA8f,QAAAtU,EAAA+D,UAAA,IAEA0B,EAAAud,gBAAA,SAAAhB,EAAA47B,GACA,GAAA/+C,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA8iD,EAAAh/C,EAAAi/C,qBAAA97B,EAAA47B,EACA,iBAAAt4C,EAAA9Q,GAEA,GAAAigC,GAAAopB,EAAAv4C,EAAA9Q,GAGAupD,EAAAhjD,EAAAoS,aAAA,IACA6wC,EAAAjjD,EAAAoS,aAAA,GAIA,OAFA,KAAAsnB,EAAA,GAAAspB,GAAA,IAAAtpB,EAAA,GAAAupB,GAAA,KAAAvpB,EAAA,GAAAspB,GAAA,IAAAtpB,EAAA,GAAAupB,GAAA,KAAAvpB,EAAA,GAAAspB,GAAA,IAAAtpB,EAAA,GAAAupB,GAAA,KAAAvpB,EAAA,GAAAspB,GAAA,IAAAtpB,EAAA,GAAAupB,GAAA,OAKAv4C,EAAAq4C,qBAAA,SAAA97B,EAAA47B,GACA,GAAA/+C,GAAA7J,KACA0B,EAAAknD,EAAA/+C,EAAAmQ,SAAAnQ,EAAAkQ,MACA2uC,EAAA17B,EAAAi8B,QAAA,EACAC,EAAAr/C,EAAA4+C,QAAA/mD,EAAAgnD,GACAS,EAAAt/C,EAAAu/C,UAAAF,EAAAR,EAAA17B,IAAA47B,GACAS,EAAAx/C,EAAAy/C,YAAAV,GACAW,EAAA1/C,EAAA2/C,eAAA3/C,EAAAojB,UAAAD,IAAA47B,GACAa,EAAAP,GAAAr/C,EAAA9D,OAAAmvC,UAAA,GACA3jB,EAAAq3B,EAAA/+C,EAAAu9C,aAAAv9C,EAAA88B,SACA,iBAAAr2B,EAAA9Q,GACA,GAAAkqD,GAAAn4B,EAAA5zB,KAAAkM,EAAAyG,EAAAkK,IAAA,GACAwsC,EAAAuC,EAAAj5C,EAAA9Q,IAAAkqD,EAEAC,EAAAR,EAAA74C,GACAs5C,EAAAP,EAAA/4C,EAQA,OANAzG,GAAA9D,OAAAoS,eACA,EAAA7H,EAAAlS,OAAAwrD,EAAAF,GAAAp5C,EAAAlS,MAAA,GAAAsrD,EAAAE,KACAA,EAAAF,KAIAC,EAAAF,EAAAzC,IAAA2C,EAAAF,EAAAG,GAAAF,EAAA1C,KAAA2C,EAAAT,EAAAO,EAAAG,GAAAF,EAAA1C,KAAA2C,EAAAT,EAAAO,EAAAzC,MAGAv2C,EAAAisC,YAAA,SAAAlW,GACA,GAAAC,GAAAzmC,KAAAsI,GAAAm+B,MAAAD,GACAn1B,EAAAm1B,EAAAl1B,wBACAu4C,EAAArjB,EAAAh1B,YAAAC,QAAA,GACAq4C,EAAAtjB,EAAAh1B,YAAAC,QAAA,GACA9P,EAAAuO,KAAAlO,IAAA6nD,EAAAloD,EAAAmoD,EAAAnoD,GACAG,EAAAoO,KAAAlO,IAAA6nD,EAAA/nD,EAAAgoD,EAAAhoD,GACAgR,EAAAzB,EAAAnO,MACA2P,EAAAxB,EAAAvO,OAEAq8C,EAAAx9C,EADA,EAEAooD,EAAApoD,EAAAmR,EAFA,EAGAssC,EAAAt9C,EAAA+Q,EAHA,EAIAm3C,EAAAloD,EAJA,CAKA,OAAAq9C,GAAA1Y,EAAA,IAAAA,EAAA,GAAAsjB,GAAAC,EAAAvjB,EAAA,IAAAA,EAAA,GAAA2Y,GAGA3uC,EAAAqc,gBAAA,SAAAm9B,GACA,GAIAhoB,GACAqW,EALAzuC,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACA6/B,KACApmC,EAAA,CAoBA,OAjBAqK,GAAA6U,oBAAA7U,EAAAvI,KAAAoY,QAAAoM,OAAAmkC,EAAApgD,IAAAS,QAAA,SAAAgG,GACA,IAAA2xB,EAAA,EAAuBA,EAAAl8B,EAAA4+B,YAAAllC,OAA+BwiC,IACtD,KAAAl8B,EAAA4+B,YAAA1C,GAAA3lB,QAAAhM,EAAAkK,IAAA,GAGA,IAAA89B,EAAA,EAA2BA,EAAAvyC,EAAA4+B,YAAA1C,GAAAxiC,OAAkC64C,IAC7D,GAAAvyC,EAAA4+B,YAAA1C,GAAAqW,IAAA1S,GAAA,CACAA,EAAAt1B,EAAAkK,IAAAorB,EAAA7/B,EAAA4+B,YAAA1C,GAAAqW,GACA,OAIAvoC,EAAA61B,EAAAt1B,EAAAkK,OACAorB,EAAAt1B,EAAAkK,IAAAhb,OAGAomC,EAAAqjB,QAAAzpD,EAAA,EACAomC,GAEAn1B,EAAA24C,UAAA,SAAApC,EAAAkD,EAAAtkB,EAAAgjB,GACA,GAAA/+C,GAAA7J,KACAuI,EAAAqgD,EAAA/+C,EAAA0c,KAAA1c,EAAAlI,CACA,iBAAA2O,GACA,GAAAwD,GAAAxD,EAAAkK,KAAAorB,KAAAt1B,EAAAkK,IAAA,CACA,OAAAlK,GAAA3O,GAAA,IAAA2O,EAAA3O,EAAA4G,EAAA+H,EAAA3O,GAAAqlD,GAAAkD,EAAA,EAAAp2C,GAAA,IAGArD,EAAA64C,UAAA,SAAAV,GACA,GAAA/+C,GAAA7J,IACA,iBAAAsQ,GAEA,OADAs4C,EAAA/+C,EAAAu9C,aAAA92C,EAAAkK,IAAA3Q,EAAA88B,UAAAr2B,EAAAkK,KACAlK,EAAAlS,SAGAqS,EAAA+4C,eAAA,SAAAS,EAAArkB,EAAAgjB,GACA,GAAA/+C,GAAA7J,KACA0Z,EAAA7P,EAAA0xC,aAAA1xC,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,QAAAoM,OAAAmkC,EAAApgD,KACAm3B,EAAAtnB,EAAA9F,IAAA,SAAAqc,GACA,MAAAA,GAAAzV,IAEA,iBAAAlK,EAAA9Q,GACA,GAAA+I,GAAAqgD,EAAA/+C,EAAAu9C,aAAA92C,EAAAkK,IAAA3Q,EAAA88B,UAAAr2B,EAAAkK,IACAkvC,EAAAnhD,EAAA,GACAy+C,EAAA0C,CAuBA,OAtBAhwC,GAAApP,QAAA,SAAA2lB,GACA,GAAA/tB,GAAA2H,EAAAo5C,WAAA3yC,GAAAzG,EAAAizC,oBAAA7sB,EAAA/tB,QAAA+tB,EAAA/tB,MACA+tB,GAAAzV,KAAAlK,EAAAkK,IAAAorB,EAAA3V,EAAAzV,MAAAorB,EAAAt1B,EAAAkK,KAGAwmB,EAAA1kB,QAAA2T,EAAAzV,IAAAwmB,EAAA1kB,QAAAhM,EAAAkK,MAEA,oBAAAtY,GAAA1C,KAAA0C,EAAA1C,GAAAmC,KAAA2O,EAAA3O,IAGAnC,GAAA,EACA0C,EAAAoI,QAAA,SAAAmF,EAAAwyB,GACAxyB,EAAA9N,IAAA2O,EAAA3O,IACAnC,EAAAyiC,MAIAziC,IAAA0C,MAAA1C,GAAApB,MAAAkS,EAAAlS,OAAA,IACA4oD,GAAAz+C,EAAArG,EAAA1C,GAAApB,OAAAsrD,MAIA1C,IAGAv2C,EAAAyyC,cAAA,SAAA1c,EAAAl2B,GACA,GAEAyvC,GAFAl2C,EAAA7J,KACA2M,EAAA9C,EAAAvB,GAAAyK,OAAAyzB,EASA,OAPA38B,GAAAyhB,eAAAhb,EAAAkK,IAES,WAAAgsB,EAAA4hB,SACTrI,EAAAl2C,EAAAo5C,WAAA3yC,GAAAzG,EAAAsgD,aAAA3jB,EAAA38B,EAAA88B,UAAAr2B,EAAAkK,IAAAlK,EAAAlS,QAAAyL,EAAAugD,eAAA5jB,EAAA,IAAA38B,EAAAi+C,aAAAx3C,IACS,SAAAk2B,EAAA4hB,WACTrI,GAAApzC,EAAA2S,QAAAtU,EAAA/H,MAAA4G,EAAA6yC,YAAAlW,IAJAuZ,GAAA,EAMAA,GAGAtvC,EAAA45C,eAAA,SAAA/5C,GACA,GAAAzG,GAAA7J,KACAsqD,EAAAzgD,EAAA0gD,oBAAA1gD,EAAA9D,OAAAsvC,2BAAAxrC,EAAA9D,OAAAsvC,0BAAA,UACA,OAAAxrC,GAAA2gD,aAAAl6C,GAAAg6C,EAAAzgD,EAAAo5C,WAAA3yC,GAAAzG,EAAA9D,OAAA8uC,eAAA,UAGApkC,EAAAsU,SAAA,WACA/kB,KACA8X,KAAA/E,OAAA,IAAA/H,EAAAtF,OAAA+Q,OAAA,KAAA9E,KAAA,QAAA3G,EAAAE,aAEAuF,EAAAya,qBAAA,SAAAxR,GACA,GAEA+wC,GACAC,EAHA7gD,EAAA7J,KACA+F,EAAA8D,EAAA9D,OAGAqqC,EAAAvmC,EAAAumC,eAAA7lC,KAAAV,GACAwlC,EAAAxlC,EAAAwlC,WAAA9kC,KAAAV,GACA8lC,EAAA9lC,EAAA8lC,WAAAplC,KAAAV,GACA0lC,EAAA1lC,EAAA0lC,aAAAhlC,KAAAV,GACAkjC,EAAAljC,EAAAkjC,WAAAxiC,KAAAV,EACA4gD,GAAA5gD,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAE,YAAA+K,UAAA,IAAAjL,EAAAC,WAAA3J,KAAAoY,GAAA/H,KAAA,iBAAArB,GACA,MAAA8/B,GAAA9/B,GAAAy8B,EAAAz8B,KAEAo6C,EAAAD,EAAAt0C,QAAAM,OAAA,KAAA9E,KAAA,QAAAy+B,GAAA1pC,MAAA,aAAAA,MAAA,yBAEAgkD,EAAAj0C,OAAA,KAAA9E,KAAA,QAAA09B,GAEAqb,EAAAj0C,OAAA,KAAA9E,KAAA,QAAAg+B,GAEA+a,EAAAj0C,OAAA,KAAA9E,KAAA,iBAAArB,GACA,MAAAzG,GAAAilC,cAAA9jC,EAAAe,gBAAAuE,EAAAkK,MAEAkwC,EAAAj0C,OAAA,KAAA9E,KAAA,QAAA49B,GAAA7oC,MAAA,kBAAA4J,GACA,MAAAvK,GAAAsgC,4BAAA/1B,GAAA,iBAGAoJ,EAAApP,QAAA,SAAA2lB,GACApmB,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAAe,gBAAAlC,EAAA67B,wBAAAzV,EAAAzV,KAAAvE,UAAA,IAAAjL,EAAAc,gBAAAkH,KAAA,SAAA1C,GACAA,EAAAlS,MAAA6xB,EAAA/tB,OAAAoO,EAAAwD,OAAA1V,WAMAqS,EAAA+d,WAAA,SAAAnC,GACA,GAAAxiB,GAAA7J,IACA6J,GAAAo5B,SAAAp5B,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA3H,OAAA4S,UAAA,IAAAjL,EAAA3J,MAAAC,KAAAuI,EAAA8gD,SAAApgD,KAAAV,IACAA,EAAAo5B,SAAA9sB,QAAAM,OAAA,QAAA9E,KAAA,QAAA9H,EAAAulC,UAAA7kC,KAAAV,IAAAnD,MAAA,SAAAmD,EAAArI,OACAqI,EAAAo5B,SAAAv8B,MAAA,UAAAmD,EAAA+mB,eAAArmB,KAAAV,IAAAnD,MAAA,2BAAA4J,GACA,MAAAzG,GAAAo5C,WAAA3yC,GAAA,kBACSqB,KAAA,kBACT9H,EAAAo5B,SAAA3sB,OAAAvP,aAAAyZ,SAAA6L,GAAA3lB,MAAA,aAAA6P,UAEA9F,EAAAif,WAAA,SAAAxD,EAAA1M,GACA,QAAAA,EAAAxf,KAAAijC,SAAAl8B,WAAAmJ,KAAAs4C,SAAA/zC,YAAAzU,KAAAijC,UAAAtxB,KAAA,IAAAua,GAAAxlB,MAAA,SAAA1G,KAAAwB,OAAAkF,MAAA,eAEA+J,EAAAwd,iBAAA,SAAAf,EAAA07B,GACA,GAAA/+C,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA1E,EAAAwI,EAAAvB,GAAAkW,IAAAnd,OACAwnD,EAAAh/C,EAAA+gD,sBAAA19B,EAAA07B,GACAiC,EAAAjC,EAAA/+C,EAAAu9C,aAAAv9C,EAAA88B,UACAmkB,EAAA,SAAAx6C,GACA,OAAAs4C,EAAA/+C,EAAA2nB,MAAA3nB,EAAAunB,IAAAzzB,KAAAkM,EAAAyG,IAEAy6C,EAAA,SAAAz6C,EAAA9Q,GACA,MAAAuG,GAAA4+B,YAAAllC,OAAA,EAAAopD,EAAAv4C,EAAA9Q,GAAA,MAAAqrD,EAAAltD,KAAAkM,EAAAyG,EAAAkK,IAAAlK,EAAAlS,OASA,OANAiD,GAAA0E,EAAAoS,aAAA9W,EAAAM,EAAAopD,GAAAjpD,EAAAgpD,GAAAzpD,EAAAM,EAAAmpD,GAAAhpD,EAAAipD,GACAhlD,EAAA6uC,mBACAvzC,IAAA2pD,QAAA,SAAA16C,GACA,aAAAA,EAAAlS,SAGA,SAAAkS,GACA,GAKAc,GALAlP,EAAA6D,EAAA6uC,iBAAA/qC,EAAA6xC,iBAAAprC,EAAApO,QAAAoO,EAAApO,OACAP,EAAAinD,EAAA/+C,EAAAlI,EAAAkI,EAAA0c,KACAzkB,EAAA+oD,EAAAltD,KAAAkM,EAAAyG,EAAAkK,IACAywC,EAAA,EACAvB,EAAA,CAkBA,OAhBA7/C,GAAAsjB,WAAA7c,GACAvK,EAAAssC,aAAA/hC,EAAAkK,IACApJ,EAAAvH,EAAAqhD,gBAAAhpD,EAAAP,EAAAG,EAAAiE,EAAAssC,aAAA/hC,EAAAkK,MAEA3Q,EAAAo5C,WAAA3yC,KACApO,EAAA2H,EAAAizC,oBAAA56C,IAEAkP,EAAA/P,EAAAitC,YAAAzkC,EAAAwgD,eAAA/5C,IAAApO,KAGAA,EAAA,KACA+oD,EAAAtpD,EAAAO,EAAA,GAAAP,GACA+nD,EAAA5nD,EAAAI,EAAA,GAAA9D,QAEAgT,EAAArL,EAAAoS,aAAA,KAAAuxC,EAAA,IAAAuB,EAAA,KAAAA,EAAA,IAAAvB,GAEAt4C,GAAA,UAGAX,EAAAm6C,sBAAA,SAAA19B,EAAA07B,GAEA,GAAA/+C,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAolD,EAAAj+B,EAAA+7B,QAAA,EACAtnD,EAAAkI,EAAAu/C,UAAA,EAAA+B,EAAAj+B,IAAA07B,GACA9mD,EAAA+H,EAAAy/C,YAAAV,GACAwC,EAAAvhD,EAAA2/C,eAAA3/C,EAAAsjB,WAAAD,IAAA07B,GACAr3B,EAAAq3B,EAAA/+C,EAAAu9C,aAAAv9C,EAAA88B,SACA,iBAAAr2B,EAAA9Q,GACA,GAAAkqD,GAAAn4B,EAAA5zB,KAAAkM,EAAAyG,EAAAkK,IAAA,GACAwsC,EAAAoE,EAAA96C,EAAA9Q,IAAAkqD,EAEAC,EAAAhoD,EAAA2O,GACAs5C,EAAA9nD,EAAAwO,EAQA,OANAvK,GAAAoS,eACA,EAAA7H,EAAAlS,OAAAwrD,EAAAF,GAAAp5C,EAAAlS,MAAA,GAAAsrD,EAAAE,KACAA,EAAAF,KAIAC,EAAAC,GAAAF,EAAA1C,KAAA2C,EAAAC,GAAAF,EAAA1C,KACA2C,EAAAC,GAAAF,EAAA1C,KACA2C,EAAAC,GAAAF,EAAA1C,OAKAv2C,EAAAy6C,gBAAA,SAAA56C,EAAA3O,EAAAG,EAAAupD,GA4DA,QAAAC,GAAA7rB,GACA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,MA5DA,GAGAjgC,GACAyiC,EAEAspB,EACAC,EACAC,EACA10C,EACAtB,EACAi2C,EACAjqB,EACAkqB,EAEAb,EACAC,EAhBAlhD,EAAA7J,KACA+F,EAAA8D,EAAA9D,OAIA8N,EAAA,IASA+3C,EAAA/hD,EAAAkP,gBAAA,KAGAxR,IAaA,IAAAyI,EAAAq7C,GACA,IAAA7rD,EAAA,EAAuBA,EAAA6rD,EAAA5rD,OAAqBD,IAC5C+H,EAAA/H,MACAuQ,EAAAs7C,EAAA7rD,GAAAsS,OACAvK,EAAA/H,GAAAsS,MAAAxB,EAAA,GAAA3O,EAEA4F,EAAA/H,GAAAsS,MAAAjI,EAAAwP,eAAAxP,EAAAyP,UAAA+xC,EAAA7rD,GAAAsS,OAAAu5C,EAAA7rD,GAAAsS,MAEA/B,EAAAs7C,EAAA7rD,GAAA0gB,KACA3Y,EAAA/H,GAAA0gB,IAAA5P,IAAA7Q,OAAA,GAAAkC,EAEA4F,EAAA/H,GAAA0gB,IAAArW,EAAAwP,eAAAxP,EAAAyP,UAAA+xC,EAAA7rD,GAAA0gB,KAAAmrC,EAAA7rD,GAAA0gB,GAgDA,KA1CA4qC,EAAA/kD,EAAAoS,aAAA,SAAA7H,GACA,MAAAxO,GAAAwO,EAAAlS,QACS,SAAAkS,GACT,MAAA3O,GAAA2O,EAAA3O,IAEAopD,EAAAhlD,EAAAoS,aAAA,SAAA7H,GACA,MAAA3O,GAAA2O,EAAA3O,IACS,SAAA2O,GACT,MAAAxO,GAAAwO,EAAAlS,QAQAmtD,EADA1hD,EAAAwP,eACA,SAAAwyC,EAAApd,EAAAxM,EAAAR,GACA,GAIAhC,GAJAwrB,EAAAY,EAAAlqD,EAAAi9C,UACAkN,EAAArd,EAAA9sC,EAAAkqD,EAAAlqD,EACAoqD,EAAA,GAAA3rC,MAAA6qC,EAAAa,EAAA7pB,GACA+pB,EAAA,GAAA5rC,MAAA6qC,EAAAa,GAAA7pB,EAAAR,GAOA,OAJAhC,GADA15B,EAAAoS,eACArW,EAAA2pD,EAAAxpB,IAAAtgC,EAAAoqD,KAAAjqD,EAAA2pD,EAAAxpB,EAAAR,IAAA9/B,EAAAqqD,OAEArqD,EAAAoqD,GAAAjqD,EAAA2pD,EAAAxpB,MAAAtgC,EAAAqqD,GAAAlqD,EAAA2pD,EAAAxpB,EAAAR,MAEA6pB,EAAA7rB,IAGA,SAAAosB,EAAApd,EAAAxM,EAAAR,GACA,GAAAhC,EAMA,OAJAA,GADA15B,EAAAoS,eACArW,EAAA2pD,EAAAxpB,IAAA,GAAAtgC,EAAA6pD,EAAAvpB,MAAAngC,EAAA2pD,EAAAxpB,EAAAR,IAAA,GAAA9/B,EAAA6pD,EAAAvpB,EAAAR,QAEA9/B,EAAA6pD,EAAAvpB,IAAA,GAAAngC,EAAA2pD,EAAAxpB,MAAAtgC,EAAA6pD,EAAAvpB,EAAAR,IAAA,GAAA3/B,EAAA2pD,EAAAxpB,EAAAR,MAEA6pB,EAAA7rB,IAKAjgC,EAAA,EAAmBA,EAAA8Q,EAAA7Q,OAAcD,IAAA,CAGjC,GAAAuQ,EAAAxI,KAzEA,SAAA5F,EAAA4F,GACA,GAAA/H,EACA,KAAAA,EAAA,EAAuBA,EAAA+H,EAAA9H,OAAoBD,IAC3C,GAAA+H,EAAA/H,GAAAsS,MAAAnQ,MAAA4F,EAAA/H,GAAA0gB,IACA,QAGA,WAkEA5P,EAAA9Q,GAAAmC,EAAA4F,GACAsM,GAAA,IAAAi3C,EAAAx6C,EAAA9Q,IAAA,IAAAurD,EAAAz6C,EAAA9Q,QAaA,KATAgsD,EAAA3hD,EAAAg9C,SAAAv2C,EAAA9Q,EAAA,GAAAmC,EAAAiqD,EAAAt7C,EAAA9Q,GAAAmC,EAAAiqD,EAAA/hD,EAAAwP,gBACAoyC,EAAA5hD,EAAAg9C,SAAAv2C,EAAA9Q,EAAA,GAAApB,MAAAkS,EAAA9Q,GAAApB,OAEA2Y,EAAApV,EAAA2O,EAAA9Q,GAAAmC,KAAA2O,EAAA9Q,EAAA,GAAAmC,GACA8T,EAAA3T,EAAAwO,EAAA9Q,GAAApB,OAAA0D,EAAAwO,EAAA9Q,EAAA,GAAApB,OACAstD,EAAAx7C,KAAAm6B,KAAAn6B,KAAAkvB,IAAAroB,EAAA,GAAA7G,KAAAkvB,IAAA3pB,EAAA,IACAgsB,EAAA,EAAAiqB,EACAC,EAAA,EAAAlqB,EAEAQ,EAAAR,EAAkCQ,GAAA,EAAQA,GAAA0pB,EAC1C93C,GAAA03C,EAAAj7C,EAAA9Q,EAAA,GAAA8Q,EAAA9Q,GAAAyiC,EAAAR,EAGAnxB,GAAA9Q,GAAAmC,EAGA,MAAAkS,IAGApD,EAAAge,WAAA,SAAApC,GACA,GAAAxiB,GAAA7J,KACAsI,EAAAuB,EAAAvB,EACAuB,GAAAq5B,SAAAr5B,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAAmC,OAAA8I,UAAA,IAAAjL,EAAA9G,MAAA5C,KAAAuI,EAAA8gD,SAAApgD,KAAAV,IACAA,EAAAq5B,SAAA/sB,QAAAM,OAAA,QAAA9E,KAAA,QAAA9H,EAAA6lC,UAAAnlC,KAAAV,IAAAnD,MAAA,OAAAmD,EAAArI,OAAAkF,MAAA,qBACkE,MAAlEmD,GAAAoiD,gBAAA3jD,EAAAyK,OAAA/S,MAAA0G,MAAA,WAAkE,IAElEmD,EAAAq5B,SAAAx8B,MAAA,UAAAmD,EAAAoiD,gBACApiD,EAAAq5B,SAAA5sB,OAAAvP,aAAAyZ,SAAA6L,GAAA3lB,MAAA,aAAA6P,UAEA9F,EAAAkf,WAAA,SAAA3D,EAAAxM,GACA,QAAAA,EAAAxf,KAAAkjC,SAAAn8B,WAAAmJ,KAAAs4C,SAAA/zC,YAAAzU,KAAAkjC,UAAAvxB,KAAA,IAAAqa,GAAAtlB,MAAA,OAAA1G,KAAAwB,OAAAkF,MAAA,UAAA1G,KAAAisD,kBAEAx7C,EAAAsd,iBAAA,SAAAlB,EAAA+7B,GACA,GAAA/+C,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA7B,EAAA2F,EAAAvB,GAAAkW,IAAAta,OACA2kD,EAAAh/C,EAAAqiD,sBAAAr/B,EAAA+7B,GACAiC,EAAAjC,EAAA/+C,EAAAu9C,aAAAv9C,EAAA88B,UACAmkB,EAAA,SAAAx6C,GACA,OAAAs4C,EAAA/+C,EAAA2nB,MAAA3nB,EAAAunB,IAAAzzB,KAAAkM,EAAAyG,IAEA67C,EAAA,SAAA77C,EAAA9Q,GACA,MAAAuG,GAAA4+B,YAAAllC,OAAA,EAAAopD,EAAAv4C,EAAA9Q,GAAA,MAAAqrD,EAAAltD,KAAAkM,EAAAyG,EAAAkK,IAAA3Q,EAAAuiD,iBAAA97C,EAAAkK,MAEA6xC,EAAA,SAAA/7C,EAAA9Q,GACA,MAAAuG,GAAA4+B,YAAAllC,OAAA,EAAAopD,EAAAv4C,EAAA9Q,GAAA,MAAAqrD,EAAAltD,KAAAkM,EAAAyG,EAAAkK,IAAAlK,EAAAlS,OAUA,OAPA8F,GAAA6B,EAAAoS,aAAAjU,EAAA+mD,GAAAkB,GAAAxjC,GAAA0jC,GAAAvqD,EAAAgpD,GAAA5mD,EAAAvC,EAAAmpD,GAAApB,GAAA3jD,EAAAqvC,WAAA,EAAA+W,GAAAtjC,GAAAwjC,GACAtmD,EAAA6uC,mBACA1wC,IAAA8mD,QAAA,SAAA16C,GACA,cAAAA,EAAAlS,SAIA,SAAAkS,GACA,GAGAc,GAHAlP,EAAA6D,EAAA6uC,iBAAA/qC,EAAA6xC,iBAAAprC,EAAApO,QAAAoO,EAAApO,OACA+oD,EAAA,EACAvB,EAAA,CAcA,OAZA7/C,GAAAkjB,WAAAzc,IACAzG,EAAAo5C,WAAA3yC,KACApO,EAAA2H,EAAAizC,oBAAA56C,IAEAkP,EAAAlN,EAAAoqC,YAAAzkC,EAAAwgD,eAAA/5C,IAAApO,KAEAA,EAAA,KACA+oD,EAAAphD,EAAAlI,EAAAO,EAAA,GAAAP,GACA+nD,EAAA7/C,EAAA88B,UAAAr2B,EAAAkK,IAAAtY,EAAA,GAAA9D,QAEAgT,EAAArL,EAAAoS,aAAA,KAAAuxC,EAAA,IAAAuB,EAAA,KAAAA,EAAA,IAAAvB,GAEAt4C,GAAA,UAGAX,EAAA27C,iBAAA,WACA,UAEA37C,EAAAy7C,sBAAA,SAAAr/B,EAAA+7B,GAEA,GAAA/+C,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAumD,EAAAz/B,EAAAo8B,QAAA,EACAtnD,EAAAkI,EAAAu/C,UAAA,EAAAkD,EAAAz/B,IAAA+7B,GACA9mD,EAAA+H,EAAAy/C,YAAAV,GACA2D,EAAA1iD,EAAA2/C,eAAA3/C,EAAAkjB,WAAAF,IAAA+7B,GACAr3B,EAAAq3B,EAAA/+C,EAAAu9C,aAAAv9C,EAAA88B,SACA,iBAAAr2B,EAAA9Q,GACA,GAAAkqD,GAAAn4B,EAAA5zB,KAAAkM,EAAAyG,EAAAkK,IAAA,GACAwsC,EAAAuF,EAAAj8C,EAAA9Q,IAAAkqD,EAEAC,EAAAhoD,EAAA2O,GACAs5C,EAAA9nD,EAAAwO,EAQA,OANAvK,GAAAoS,eACA,EAAA7H,EAAAlS,OAAAwrD,EAAAF,GAAAp5C,EAAAlS,MAAA,GAAAsrD,EAAAE,KACAA,EAAAF,KAIAC,EAAA3C,IAAA2C,EAAAC,GAAAF,EAAA1C,KAAA2C,EAAAC,GAAAF,EAAA1C,KACA2C,EAAA3C,MAKAv2C,EAAAie,aAAA,WACA,GAAA7kB,GAAA7J,IACA6J,GAAAs5B,WAAAt5B,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA+B,SAAAkJ,UAAA,IAAAjL,EAAA8B,QAAAxL,KAAAuI,EAAA2iD,kBAAAjiD,KAAAV,IACAA,EAAAs5B,WAAAhtB,QAAAM,OAAA,UAAA9E,KAAA,QAAA9H,EAAAylC,YAAA/kC,KAAAV,IAAA8H,KAAA,IAAA9H,EAAA4iD,OAAAliD,KAAAV,IAAAnD,MAAA,OAAAmD,EAAArI,OACAqI,EAAAs5B,WAAAz8B,MAAA,UAAAmD,EAAAgnB,wBAAAtmB,KAAAV,IACAA,EAAAs5B,WAAA7sB,OAAAC,UAEA9F,EAAAmf,aAAA,SAAAjD,EAAAC,EAAApN,GACA,GAAAzT,GAAA/L,KAAA8X,KAAA7B,UAAA,IAAAjL,EAAAc,eACA,SAAA0T,EAAAxf,KAAAmjC,WAAAp8B,WAAAmJ,KAAAs4C,SAAA/zC,YAAAzU,KAAAmjC,YAAAz8B,MAAA,UAAA1G,KAAA8wB,iBAAAvmB,KAAAvK,OAAA0G,MAAA,OAAA1G,KAAAwB,OAAAmQ,KAAA,KAAAgb,GAAAhb,KAAA,KAAAib,IAAApN,EAAAzT,EAAAhF,WAAAmJ,KAAAs4C,SAAA/zC,YAAA1I,GAAA4F,KAAA,KAAAgb,GAAAhb,KAAA,KAAAib,KAEAnc,EAAA4e,QAAA,SAAA/e,GACA,MAAAA,GAAA3O,GAAA,IAAA2O,EAAA3O,EAAA3B,KAAA2B,EAAA2O,EAAA3O,GAAA,MAEA8O,EAAA0e,cAAA,WACA,GACAjC,GACA27B,EAFAh/C,EAAA7J,IAGA6J,GAAA9D,OAAA4+B,YAAAllC,OAAA,GACAytB,EAAArjB,EAAAijB,gBAAAjjB,EAAAsjB,YAAA07B,EAAAh/C,EAAA+gD,sBAAA19B,GACArjB,EAAAulB,QAAA,SAAA9e,EAAA9Q,GACA,MAAAqpD,GAAAv4C,EAAA9Q,GAAA,QAGAqK,EAAAulB,QAAA,SAAA9e,GACA,MAAAzG,GAAA88B,UAAAr2B,EAAAkK,IAAAlK,EAAAlS,SAIAqS,EAAAi8C,WAAA,SAAAltD,EAAAgb,GACA,GAAA3Q,GAAA7J,IACA,QAAAwa,EAAA3Q,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAA+B,QAAAlD,EAAA67B,wBAAAlrB,IAAA3Q,EAAAiO,MAAA7B,UAAA,IAAAjL,EAAA8B,QAAA0C,EAAAhQ,GAAA,IAAAA,EAAA,MAEAiR,EAAAoyC,cAAA,SAAArjD,EAAAgb,EAAA2qC,GACA,GAAAt7C,GAAA7J,KACA6nD,EAAAh+C,EAAA8iD,eAAApiD,KAAAV,EACAs7C,IACAt7C,EAAAk5C,kBAEAl5C,EAAA6iD,WAAAltD,EAAAgb,GAAA8E,QAAAtU,EAAA+D,UAAA,GAAA4C,KAAA,IAAAk2C,IAEAp3C,EAAAsyC,gBAAA,SAAAvjD,GACA,GAAAqK,GAAA7J,KACA6nD,EAAAh+C,EAAA4iD,OAAAliD,KAAAV,EACAA,GAAA6iD,WAAAltD,GAAAsmB,OAAA,WACA,MAAAjc,GAAAvB,GAAAyK,OAAA/S,MAAAsf,QAAAtU,EAAA+D,YACSuQ,QAAAtU,EAAA+D,UAAA,GAAA4C,KAAA,IAAAk2C,IAETp3C,EAAAg8C,OAAA,SAAAn8C,GACA,GAAAzG,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,OAAA8D,GAAAo5C,WAAA3yC,GAAA,EAAAZ,EAAA3J,EAAAwuC,SAAAxuC,EAAAwuC,QAAAjkC,GAAAvK,EAAAwuC,SAEA9jC,EAAAk8C,eAAA,SAAAr8C,GACA,GAAAzG,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,OAAAA,GAAA0uC,2BACA/kC,EAAA3J,EAAA2uC,sBAAA3uC,EAAA2uC,qBAAApkC,GAAAvK,EAAA2uC,qBAAA3uC,EAAA2uC,qBAAA,KAAA7qC,EAAA4iD,OAAAn8C,GAEAzG,EAAA4iD,OAAAn8C,IAGAG,EAAAq3C,aAAA,SAAAx3C,GACA,GAAAzG,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,OAAA2J,GAAA3J,EAAA4uC,gBAAA5uC,EAAA4uC,eAAArkC,GAAAvK,EAAA4uC,eAAA5uC,EAAA4uC,eAAA,EAAA9qC,EAAA4iD,OAAAn8C,IAEAG,EAAA25C,eAAA,SAAA5jB,EAAAqhB,GACA,GAAAv/C,GAAAtI,KAAAsI,GACAm+B,EAAAn+B,EAAAm+B,MAAAD,GACAomB,EAAAtkD,EAAAyK,OAAAyzB,GACA7Z,GAAAigC,EAAAj7C,KAAA,MACAib,GAAAggC,EAAAj7C,KAAA,KACA,OAAAzB,MAAAm6B,KAAAn6B,KAAAkvB,IAAAzS,EAAA8Z,EAAA,MAAAv2B,KAAAkvB,IAAAxS,EAAA6Z,EAAA,OAAAohB,GAEAp3C,EAAA05C,aAAA,SAAA3jB,EAAA1kC,GACA,MAAAoO,MAAAu6B,IAAA3oC,EAAA9B,KAAAsI,GAAAm+B,MAAAD,GAAA,QAGA/1B,EAAAkZ,gBAAA,WACA,GAAA9f,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,OAAAA,GAAA66B,WAAA76B,EAAA66B,WAAA/2B,EAAAgjD,kBAEAp8C,EAAAoZ,iBAAA,WACA,GAAAhgB,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA8M,EAAA9M,EAAA86B,YAAA96B,EAAA86B,YAAAh3B,EAAAijD,iBACA,OAAAj6C,GAAA,EAAAA,EAAA,KAAAhJ,EAAA8gB,QAAA,WAAA5kB,EAAA6kB,iBAAA,MAEAna,EAAAsZ,qBAAA,WACA,GAAAlgB,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAhD,EAAAyM,EAAAzJ,EAAAyrC,aAAAzrC,EAAAyrC,YAAA,CAIA,OAHA3nC,GAAAvJ,OAAAuJ,EAAAvJ,MAAAiX,SACAxU,GAAA8G,EAAAkjD,mBAEAhqD,GAEA0N,EAAAwZ,wBAAA,WACA,GAAAlkB,GAAA/F,KAAA+F,MACA,OAAAyJ,GAAAzJ,EAAA0rC,gBAAA1rC,EAAA0rC,eAAA,GAEAhhC,EAAAyZ,sBAAA,SAAA7L,GACA,GAAAxU,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA,OAAAyJ,GAAAzJ,EAAAurC,cACAvrC,EAAAurC,aACSvrC,EAAAoS,cACTpS,EAAAmS,aAAAnS,EAAAgS,aAAA,EAAA7H,KAAAnO,IAAAkO,EAAApG,EAAAmjD,qBAAA,IAAA3uC,IAAA,KACStY,EAAAwS,aAAAxS,EAAAsS,aAETxO,EAAAnI,KAAAqb,wBAAAR,QAAA,KAEAtM,EAAApG,EAAAmjD,qBAAA,IAAA3uC,KAGA5N,EAAAuZ,uBAAA,WACA,GAAAngB,GAAA7J,KACA+F,EAAA8D,EAAA9D,OAEAknD,EAAApjD,EAAAka,cAAAla,EAAAof,iBAAA,IACA,OAAAzZ,GAAAzJ,EAAAwrC,eACAxrC,EAAAwrC,cAAA,EACSxrC,EAAAoS,aAJT,GAKA80C,GACSlnD,EAAA2S,cAAA3S,EAAAqY,cAET,EAAA6uC,GAAApjD,EAAAnI,KAAAsb,yBAAAT,QAAA,MAEAtM,EAAApG,EAAAmjD,qBAAA,OAAAC,GAIAx8C,EAAAy8C,mBAAA,SAAAvtD,GAGA,IAFA,GACA8P,GADAmhC,EAAA5wC,KAAAwlB,YAAAjO,OAEAq5B,GAAA,SAAAA,EAAAuc,SAAA,CACA,IACA19C,EAAAmhC,EAAAt/B,wBAAA3R,GACa,MAAAmuB,GACb,UAAAnuB,IAGA8P,EAAAmhC,EAAAwc,aAGA,GAAA39C,EACA,KAEAmhC,KAAA9d,WAEA,MAAArjB,IAEAgB,EAAAo8C,eAAA,WACA,MAAA7sD,MAAAktD,mBAAA,UAEAz8C,EAAAq8C,gBAAA,WACA,GAAAj6C,GAAA7S,KAAAwlB,YAAA9e,MAAA,SACA,OAAAmM,GAAAyJ,QAAA,SAAAzJ,EAAA3B,QAAA,YAGAT,EAAA48C,WAAA,SAAAhvC,GACA,GAAAxU,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAunD,EAAAvnD,EAAAoS,eAAApS,EAAAoS,eAAApS,EAAAsS,aACAk1C,EAAAxnD,EAAAoS,aAAAnN,EAAAkD,MAAAlD,EAAAoD,MACAo/C,EAAA3jD,EAAAiO,KAAA/E,OAAA,IAAAw6C,GAAAh2C,OACAk2C,EAAAD,GAAAF,EAAAE,EAAAl8C,yBAAwFtO,MAAA,GACxF0qD,EAAA7jD,EAAA2b,YAAAjO,OAAAjG,wBACA6X,EAAAtf,EAAAuf,aACAukC,EAAAF,EAAAzqD,MAAA0qD,EAAAx2C,MAAAiS,EAAA,EAAAtf,EAAAqgB,sBAAA7L,GACA,OAAAsvC,GAAA,EAAAA,EAAA,GAGAl9C,EAAAu8C,qBAAA,SAAAxyC,EAAA6D,GACA,GAAAxU,GAAA7J,KACAoc,EAAAvS,EAAAnI,KAAAub,qBAAAzC,EACA,OAAA3Q,GAAAnI,KAAAsc,gBAAAxD,EAAA6D,IAAAjC,EAAAC,QAAA,QAEA5L,EAAA6Y,wBAAA,SAAA3N,GACA,GAAA9R,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA8M,EAAA,EACA,aAAA8I,GAAA5V,EAAAmS,YAGA,MAAAyD,GAAA5V,EAAAkY,cACAlY,EAAAkY,cAEA,MAAAtC,GAAA5V,EAAAwS,YAGA,OAAAoD,GAAA5V,EAAA2S,cAIA,MAAAiD,IAAA5V,EAAAoS,cAAApS,EAAAqT,qBACAvG,EAAA,GAAAhJ,EAAAnI,KAAAsc,gBAAArC,GAAAzL,KAAAs6B,IAAAt6B,KAAAqF,IAAA,GAAAxP,EAAAqT,oBAAA,MAGA,MAAAuC,GAAA5V,EAAAoS,cAAApS,EAAAmU,qBACArH,EAAA,GAAAhJ,EAAAnI,KAAAsc,gBAAArC,GAAAzL,KAAAs6B,IAAAt6B,KAAAqF,IAAA,GAAAxP,EAAAmU,oBAAA,MAEArH,GAAAhJ,EAAAnI,KAAAub,qBAAAtB,GAAAU,QAAA,cAAAV,GAAA,OAVA9R,EAAA6a,qBAHA3e,EAAAunB,aAAAzjB,EAAAka,eAAAla,EAAAoa,cAAA,KANA,GAsBAxT,EAAA+xC,kBAAA,WACA,MAAAtyC,MAAAnO,IAAA,EAAA/B,KAAA+Z,MAAA1C,iBAGA5G,EAAA6U,UAAA,WACA,GAAAzb,GAAA7J,KACAsI,EAAAuB,EAAAvB,EACAuB,GAAAwC,MAAA/D,EAAAkW,IAAAnS,QAAAua,GAAA,mBACA/c,EAAA+jD,mBAEA/jD,EAAAwC,MAAA2mB,OAAA,WAIA,MAHAnpB,GAAAgkD,SACAhkD,EAAAgkD,QAAA96C,OAAA,IAAA/H,EAAAqB,OAAA1O,KAAAqC,MAEAA,MAEA6J,EAAAwC,MAAA9D,MAAA,SAAAA,GACA,MAAAsB,GAAA9D,OAAAoS,aAAAnY,KAAA8B,EAAAyG,GAAAvI,KAAA2B,EAAA4G,KAGAkI,EAAA4W,aAAA,WACA,GAAAxd,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACA8nD,EAAAhkD,EAAAgkD,QAAAhkD,EAAA2U,IAAA/H,OAAA,KAAA9E,KAAA,YAAA9H,EAAAoO,aAAA,YACA61C,EAAA/nD,EAAAyjB,cAAA,kBAEAqkC,GAAAnnD,MAAA,aAAAonD,GAGAD,EAAAp3C,OAAA,KAAA9E,KAAA,YAAA9H,EAAAuY,qBAAAzQ,KAAA,QAAA3G,EAAAtF,OAGAmoD,EAAA96C,OAAA,IAAA/H,EAAAtF,OAAA+Q,OAAA,KAAA9E,KAAA,QAAA3G,EAAAI,WAGAyiD,EAAA96C,OAAA,IAAA/H,EAAAtF,OAAA+Q,OAAA,KAAA9E,KAAA,QAAA3G,EAAAE,YAGA2iD,EAAAp3C,OAAA,KAAA9E,KAAA,YAAA9H,EAAAoY,UAAAtQ,KAAA,QAAA3G,EAAAqB,OAAA1O,KAAAkM,EAAAwC,OAIAxC,EAAAgB,KAAA6V,KAAAmtC,EAAAp3C,OAAA,KAAA9E,KAAA,QAAA3G,EAAAkD,OAAAyD,KAAA,YAAA9H,EAAAoO,aAAA,SAAAtG,KAAA,YAAA5L,EAAAoS,aAAA,GAAAtO,EAAAmO,kBAAAtR,MAAA,aAAAX,EAAA2sC,qBAAAob,EAAA,WAEAr9C,EAAA2a,yBAAA,SAAA1R,GACA,GAGAq0C,GACAC,EACAC,EACAC,EANArkD,EAAA7J,KACA6tD,EAAAhkD,EAAAgkD,QACA9nD,EAAA8D,EAAA9D,OAKAsqC,EAAAxmC,EAAAwmC,cAAA9lC,KAAAV,GACA4lC,EAAA5lC,EAAA4lC,UAAAllC,KAAAV,GACAumC,EAAAvmC,EAAAumC,eAAA7lC,KAAAV,GACAwlC,EAAAxlC,EAAAwlC,WAAA9kC,KAAAV,GACA8lC,EAAA9lC,EAAA8lC,WAAAplC,KAAAV,EAEA9D,GAAAyjB,gBAEA0kC,EAAAL,EAAA96C,OAAA,IAAA/H,EAAAI,WAAA6K,UAAA,IAAAjL,EAAAG,UAAA7J,KAAAoY,GAAA/H,KAAA,QAAA0+B,GACA4d,EAAAC,EAAA/3C,QAAAM,OAAA,KAAA/P,MAAA,aAAAiL,KAAA,QAAA0+B,GAEA4d,EAAAx3C,OAAA,KAAA9E,KAAA,QAAA89B,GAGAue,EAAAH,EAAA96C,OAAA,IAAA/H,EAAAE,YAAA+K,UAAA,IAAAjL,EAAAC,WAAA3J,KAAAoY,GAAA/H,KAAA,QAAAy+B,GACA2d,EAAAC,EAAA73C,QAAAM,OAAA,KAAA/P,MAAA,aAAAiL,KAAA,QAAAy+B,GAEA2d,EAAAt3C,OAAA,KAAA9E,KAAA,QAAA09B,GAEA0e,EAAAt3C,OAAA,KAAA9E,KAAA,QAAAg+B,GAGAke,EAAA53C,UAAA,IAAAjL,EAAAqB,MAAA,SAAAsF,KAAA5L,EAAAoS,aAAA,iBAAApS,EAAAoS,aAAAtO,EAAA0gB,OAAA1gB,EAAA2gB,WAGA/Z,EAAA09C,qBAAA,SAAA9hC,GACA,GAAAxiB,GAAA7J,IACA6J,GAAAukD,WAAAvkD,EAAAgkD,QAAA53C,UAAA,IAAAjL,EAAA6B,MAAAoJ,UAAA,IAAAjL,EAAA/H,KAAA3B,KAAAuI,EAAA0+C,QAAAh+C,KAAAV,IACAA,EAAAukD,WAAAj4C,QAAAM,OAAA,QAAA9E,KAAA,QAAA9H,EAAA2lC,SAAAjlC,KAAAV,IAAAnD,MAAA,iBAAAA,MAAA,OAAAmD,EAAArI,OACAqI,EAAAukD,WAAA1nD,MAAA,UAAAmD,EAAA+mB,eAAArmB,KAAAV,IACAA,EAAAukD,WAAA93C,OAAAvP,aAAAyZ,SAAA6L,GAAA3lB,MAAA,aAAA6P,UAEA9F,EAAA49C,qBAAA,SAAAC,EAAA9uC,EAAAgB,IACAhB,EAAAxf,KAAAouD,WAAArnD,WAAAmJ,KAAAs4C,SAAA/zC,YAAA+L,YAAAxgB,KAAAouD,YAAAz8C,KAAA,IAAA28C,GAAA5nD,MAAA,cAEA+J,EAAA89C,sBAAA,SAAAliC,GACA,GAAAxiB,GAAA7J,IACA6J,GAAA2kD,YAAA3kD,EAAAgkD,QAAA53C,UAAA,IAAAjL,EAAA3H,OAAA4S,UAAA,IAAAjL,EAAA3J,MAAAC,KAAAuI,EAAA8gD,SAAApgD,KAAAV,IACAA,EAAA2kD,YAAAr4C,QAAAM,OAAA,QAAA9E,KAAA,QAAA9H,EAAAulC,UAAA7kC,KAAAV,IAAAnD,MAAA,SAAAmD,EAAArI,OACAqI,EAAA2kD,YAAA9nD,MAAA,UAAAmD,EAAA+mB,eAAArmB,KAAAV,IACAA,EAAA2kD,YAAAl4C,OAAAvP,aAAAyZ,SAAA6L,GAAA3lB,MAAA,aAAA6P,UAEA9F,EAAAg+C,sBAAA,SAAAC,EAAAlvC,EAAAgB,IACAhB,EAAAxf,KAAAwuD,YAAAznD,WAAAmJ,KAAAs4C,SAAA/zC,YAAA+L,YAAAxgB,KAAAwuD,aAAA78C,KAAA,IAAA+8C,GAAAhoD,MAAA,cAEA+J,EAAAk+C,sBAAA,SAAAtiC,GACA,GAAAxiB,GAAA7J,KACAsI,EAAAuB,EAAAvB,EACAuB,GAAA+kD,YAAA/kD,EAAAgkD,QAAA53C,UAAA,IAAAjL,EAAAmC,OAAA8I,UAAA,IAAAjL,EAAA9G,MAAA5C,KAAAuI,EAAA8gD,SAAApgD,KAAAV,IACAA,EAAA+kD,YAAAz4C,QAAAM,OAAA,QAAA9E,KAAA,QAAA9H,EAAA6lC,UAAAnlC,KAAAV,IAAAnD,MAAA,OAAAmD,EAAArI,OAAAkF,MAAA,qBACkE,MAAlEmD,GAAAoiD,gBAAA3jD,EAAAyK,OAAA/S,MAAA0G,MAAA,WAAkE,IAElEmD,EAAA+kD,YAAAloD,MAAA,aACAmD,EAAA+kD,YAAAt4C,OAAAvP,aAAAyZ,SAAA6L,GAAA3lB,MAAA,aAAA6P,UAEA9F,EAAAo+C,sBAAA,SAAAC,EAAAtvC,EAAAgB,IACAhB,EAAAxf,KAAA4uD,YAAA7nD,WAAAmJ,KAAAs4C,SAAA/zC,YAAA+L,YAAAxgB,KAAA4uD,aAAAj9C,KAAA,IAAAm9C,GAAApoD,MAAA,OAAA1G,KAAAwB,OAAAkF,MAAA,UAAA1G,KAAAisD,iBAEAx7C,EAAAse,eAAA,SAAAtD,EAAA7K,EAAAJ,EAAA6L,EAAAQ,EAAAG,EAAAE,GACA,GAGA4hC,GACAR,EACAI,EALA7kD,EAAA7J,KACAsI,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,MAKA8D,GAAAgkD,QAAAnnD,MAAA,aAAAX,EAAAyjB,cAAA,oBAGAzjB,EAAAyjB,gBAEAlhB,EAAAk7C,OAAA,SAAAl7C,EAAAk7C,MAAAlhD,MACAuH,EAAAwC,MAAAia,OAAAzc,EAAAlI,EAAA+rB,aAAAsF,SAGAvH,IAGA5hB,EAAAwC,MAAAe,SACAvD,EAAAwC,MAAAia,OAAAzc,EAAAlI,EAAA+rB,aAAAsF,SAGA87B,EAAAjlD,EAAAkkB,iBAAAlB,GAAA,GACAyhC,EAAAzkD,EAAAmkB,gBAAAhB,GAAA,GACA0hC,EAAA7kD,EAAAokB,iBAAAf,GAAA,GAEArjB,EAAAskD,qBAAA3tC,GACA3W,EAAA0kD,sBAAA/tC,GACA3W,EAAA8kD,sBAAAnuC,GAEA3W,EAAAwkD,qBAAAC,EAAA9tC,KACA3W,EAAA4kD,sBAAAC,EAAAluC,KACA3W,EAAAglD,sBAAAC,EAAAtuC,QAIA/P,EAAAm9C,eAAA,WACA,GAAA/jD,GAAA7J,KACA2B,EAAAkI,EAAAlI,CACAkI,GAAA8W,QACAnB,gBAAA,EACAgM,MAAA3hB,EAAA9D,OAAA0nB,aACAhC,cAAA,EACArD,mBAAA,EACA0D,eAAA,IAEAjiB,EAAA9D,OAAA4sC,iBAAAh1C,KAAAkM,EAAAY,IAAA9I,EAAA+rB,cAEAjd,EAAAihB,iBAAA,SAAAlS,EAAAoB,GACA,GACA5G,GADAnQ,EAAA7J,IAEA4gB,MAAAH,SACAzG,EAAA4G,EAAAH,UAEAzG,EAAAnQ,EAAAgkD,QAAA96C,OAAA,IAAA/H,EAAAkD,OACAsR,IACAxF,IAAAjT,eAGA8C,EAAAgkD,QAAAl8C,KAAA,YAAA9H,EAAAoO,aAAA,YACA+B,EAAArI,KAAA,YAAA9H,EAAAoO,aAAA,UAEAxH,EAAAuX,iBAAA,WACA,GAAAne,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAugB,EAAA5W,EAAA3J,EAAAgiB,eAAAhiB,EAAAgiB,cAAAle,EAAAqV,WAAArV,EAAAvI,KAAAoY,UAAA3T,EAAAgiB,aAIA,OAHAle,GAAAwP,iBACAiN,GAAAzc,EAAAyP,UAAAgN,EAAA,IAAAzc,EAAAyP,UAAAgN,EAAA,MAEAA,GAGA7V,EAAAyU,SAAA,WACA,GAAArb,GAAA7J,IACA6J,GAAAiO,KAAA/E,OAAA,IAAA/H,EAAAtF,OAAA+Q,OAAA,KAAA9E,KAAA,QAAA3G,EAAAM,YACAzB,EAAAk5B,SAAAl5B,EAAAvB,GAAA2N,eAEAxF,EAAAua,qBAAA,SAAAtR,GACA,GACAq1C,GACAC,EAFAnlD,EAAA7J,KAGAmwC,EAAAtmC,EAAAsmC,eAAA5lC,KAAAV,GACAolC,EAAAplC,EAAAolC,WAAA1kC,KAAAV,GACAkjC,EAAAljC,EAAAkjC,WAAAxiC,KAAAV,EACAklD,GAAAllD,EAAAiO,KAAA/E,OAAA,IAAA/H,EAAAM,YAAA2K,UAAA,IAAAjL,EAAAK,WAAA/J,KAAAoY,GAAA/H,KAAA,iBAAArB,GACA,MAAA6/B,GAAA7/B,GAAAy8B,EAAAz8B,KAEA0+C,EAAAD,EAAA54C,QAAAM,OAAA,KAAA9E,KAAA,QAAAw+B,GAAAzpC,MAAA,aAAAA,MAAA,yBACAsoD,EAAAv4C,OAAA,KAAA9E,KAAA,QAAAs9B,IAEAx+B,EAAAme,WAAA,SAAAvC,GACA,GAAAxiB,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAkpD,EAAAplD,EAAAolD,cAAA1kD,KAAAV,GACAmlC,EAAAnlC,EAAAmlC,UAAAzkC,KAAAV,EACAA,GAAAk5B,SAAAl5B,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAAsC,OAAA2I,UAAA,IAAAjL,EAAAqC,MAAA/L,KAAA2tD,GACAplD,EAAAk5B,SAAA5sB,QAAAM,OAAA,QAAA9E,KAAA,QAAAq9B,GAAAr9B,KAAA,uBAAArB,GACA,MAAAvK,GAAAoS,aAAA7H,EAAAlS,MAAA,2BACSsI,MAAA,iBAAAA,MAAA,gBAAA4J,GACT,MAAAzG,GAAArI,MAAA8O,KACS5J,MAAA,kBACTmD,EAAAk5B,SAAA11B,KAAA,SAAAiD,EAAA9Q,EAAAyiC,GACA,MAAAp4B,GAAAkyC,gBAAAzrC,EAAAkK,IAAAlK,EAAAlS,MAAAkS,EAAAkK,GAAAhb,EAAAyiC,KAEAp4B,EAAAk5B,SAAAzsB,OAAAvP,aAAAyZ,SAAA6L,GAAA3lB,MAAA,kBAAA6P,UAEA9F,EAAAof,WAAA,SAAA1D,EAAAC,EAAA8iC,EAAA1vC,GACA,QAAAA,EAAAxf,KAAA+iC,SAAAh8B,aAAA/G,KAAA+iC,UAAApxB,KAAA,IAAAwa,GAAAxa,KAAA,IAAAya,GAAA1lB,MAAA,OAAA1G,KAAAwB,OAAAkF,MAAA,eAAAwoD,EAAA,EAAAlvD,KAAAmxB,eAAA5mB,KAAAvK,SAEAyQ,EAAA6zC,YAAA,SAAAj3C,EAAA8hD,EAAA3mC,GACA,GAGA4mC,GAHA7wC,EAAAve,KAAAsI,GAAAyK,OAAA,QAAA0D,OAAA,OAAA6I,QAAA,SACAd,EAAAD,EAAA9H,OAAA,OAAA/P,MAAA,uBAAAA,MAAA,oBAAAA,MAAA,SAAAA,MAAA,UACA2oD,EAAArvD,KAAAsI,GAAAyK,OAAAyV,GAAA9hB,MAAA,OAMA,OAJA8X,GAAAvI,UAAA,UAAA3U,MAAA+L,IAAA8I,QAAAM,OAAA,QAAA6I,QAAA6vC,GAAA,OAAAzoD,MAAA,OAAA2oD,GAAAhiD,QAAA2F,KAAA,WACAo8C,EAAApvD,KAAAsR,0BAEAiN,EAAAhI,SACA64C,GAEA3+C,EAAAyd,kBAAA,SAAArB,EAAAG,EAAAE,EAAA20B,GACA,GAAAh4C,GAAA7J,KACAsvD,EAAAzlD,EAAAqiD,sBAAAr/B,GAAA,GACA0iC,EAAA1lD,EAAAi/C,qBAAA97B,GAAA,GACAwiC,EAAA3lD,EAAA+gD,sBAAA19B,GAAA,GACAuiC,EAAA5N,EAAAh4C,EAAA6lD,YAAA7lD,EAAA8lD,WACA,iBAAAr/C,EAAA9Q,GACA,GAAAqpD,GAAAh/C,EAAAkjB,WAAAzc,GAAAg/C,EAAAzlD,EAAAojB,UAAA3c,GAAAi/C,EAAAC,CACA,OAAAC,GAAA9xD,KAAAkM,EAAAg/C,EAAAv4C,EAAA9Q,GAAA8Q,EAAAtQ,QAGAyQ,EAAAi/C,YAAA,SAAAjwB,EAAAnvB,EAAA+zC,GACA,GAEAuL,GACA7sD,EAHA8G,EAAA7J,KACAqR,EAAAgzC,EAAA/yC,uBAiBA,OAdAzH,GAAA9D,OAAAoS,cACApV,EAAA8G,EAAAojB,UAAA3c,GAAA,IACAs/C,EAAAnwB,EAAA,MAAA18B,GAAAuN,EAAAlS,MAAA,SAEAwxD,EAAA/lD,EAAA8gB,QAAA,QAAA8U,EAAA,MAAAA,EAAA,SAAAA,EAAA,MAGA,OAAAnvB,EAAAlS,QACAwxD,EAAA/lD,EAAA3G,MACA0sD,EAAA/lD,EAAA3G,MAAAmO,EAAAnO,MACa0sD,EAAA,IACbA,EAAA,IAGAA,GAEAn/C,EAAAk/C,YAAA,SAAAlwB,EAAAnvB,EAAA+zC,GACA,GAEAwL,GAFAhmD,EAAA7J,KACAqR,EAAAgzC,EAAA/yC,uBAyBA,OAvBAzH,GAAA9D,OAAAoS,aACA03C,GAAApwB,EAAA,MAAAA,EAAA,SAAApuB,EAAAvO,QAAA,GAEA+sD,EAAApwB,EAAA,MACAnvB,EAAAlS,MAAA,OAAAkS,EAAAlS,QAAAyL,EAAA2vC,kBACAqW,GAAAx+C,EAAAvO,OACA+G,EAAAojB,UAAA3c,IAAAzG,EAAAimD,WACAD,GAAA,GACiBhmD,EAAAojB,UAAA3c,IAAAzG,EAAAkmD,aACjBF,GAAA,IAGAA,GAAAhmD,EAAAojB,UAAA3c,IAAA,MAIA,OAAAA,EAAAlS,OAAAyL,EAAA9D,OAAAoS,eACA03C,EAAAx+C,EAAAvO,OACA+sD,EAAAx+C,EAAAvO,OACa+sD,EAAA7vD,KAAA8C,SACb+sD,EAAA7vD,KAAA8C,OAAA,IAGA+sD,GAGAp/C,EAAA+W,UAAA,WACA,GAAA3d,GAAA7J,IACA6J,GAAAvJ,MAAAuJ,EAAA2U,IAAA/H,OAAA,QAAApJ,KAAAxD,EAAA9D,OAAAqwC,YAAAzkC,KAAA,QAAA9H,EAAAmB,MAAA1K,QAEAmQ,EAAAoe,YAAA,WACA,GAAAhlB,GAAA7J,IACA6J,GAAAvJ,MAAAqR,KAAA,IAAA9H,EAAAmmD,UAAAzlD,KAAAV,IAAA8H,KAAA,IAAA9H,EAAAomD,UAAA1lD,KAAAV,KAEA4G,EAAAu/C,UAAA,WACA,GAAAnmD,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAqW,EAAArW,EAAAuwC,gBAAA,MAUA,OARAl6B,GAAAE,QAAA,YACAzS,EAAA6f,aAAA7f,EAAAy6C,YAAAz6C,EAAAvJ,MAAAiX,OAAAgtC,YAAA16C,EAAAmB,MAAA1K,MAAAuJ,EAAAvJ,MAAAiX,QAAArU,MAAA6C,EAAAswC,cAAArzC,MACSoZ,EAAAE,QAAA,cACTzS,EAAA6f,aAAA7f,EAAAy6C,YAAAz6C,EAAAvJ,MAAAiX,OAAAgtC,YAAA16C,EAAAmB,MAAA1K,MAAAuJ,EAAAvJ,MAAAiX,QAAArU,OAAA,EAGA6C,EAAAswC,cAAAn/B,MAIAzG,EAAAw/C,UAAA,WACA,GAAApmD,GAAA7J,IACA,OAAA6J,GAAA9D,OAAAswC,cAAAr/B,IAAAnN,EAAAy6C,YAAAz6C,EAAAvJ,MAAAiX,OAAAgtC,YAAA16C,EAAAmB,MAAA1K,MAAAuJ,EAAAvJ,MAAAiX,QAAAzU,QAEA2N,EAAAs8C,gBAAA,WACA,GAAAljD,GAAA7J,IACA,OAAA6J,GAAAomD,YAAApmD,EAAA9D,OAAAswC,cAAAp/B,QAGAxG,EAAA6W,YAAA,WACA,GAEA9nB,GAFAqK,EAAA7J,KACA+F,EAAA8D,EAAA9D,MAIA,IAFA8D,EAAAnC,QAAAmC,EAAA2b,YAAA9e,MAAA,uBAAA+P,OAAA,OAAA9E,KAAA,QAAA3G,EAAAyB,kBAAA/F,MAAA,uBAAAA,MAAA,yBAAAA,MAAA,kBAEAX,EAAAkwC,kBAAA,CACA,GAAApsC,EAAAwP,gBAAAvJ,EAAA/J,EAAAmwC,gBAAA,CAEA,IADAnwC,EAAAmwC,eAAArsC,EAAAyP,UAAAvT,EAAAmwC,gBACA12C,EAAA,EAA2BA,EAAAqK,EAAAvI,KAAAoY,QAAA,GAAAxX,OAAAzC,QAC3BoK,EAAAvI,KAAAoY,QAAA,GAAAxX,OAAA1C,GAAAmC,EAAAoE,EAAAmwC,iBAAA,EADiE12C,KAKjEuG,EAAAmwC,eAAA12C,EAEAqK,EAAAnC,QAAAie,KAAA5f,EAAA8vC,iBAAAl4C,KAAAkM,IAAAvI,KAAAoY,QAAA9F,IAAA,SAAAtD,GACA,MAAAzG,GAAAghC,QAAAv6B,EAAApO,OAAA6D,EAAAmwC,mBACarsC,EAAAnI,KAAAgZ,qBAAA7Q,EAAAu2C,WAAAv2C,EAAAuf,cAAAvf,EAAArI,QACbqI,EAAAnC,QAAAhB,MAAA,MAAAX,EAAAowC,sBAAAn/B,KAAAtQ,MAAA,OAAAX,EAAAowC,sBAAAj/B,MAAAxQ,MAAA,qBAGA+J,EAAAy/C,uBAAA,WACA,GAAArmD,GAAA7J,KACA+F,EAAA8D,EAAA9D,MAEA,QAAAA,EAAA4+B,YAAAllC,YAAAwT,KAAAlN,EAAAyvC,cAgDS,CAET,GAAAlQ,GAAAz7B,EAAA0xC,aAAA1xC,EAAAvI,KAAAoY,SAAA9F,IAAA,SAAApU,GACA,MAAAA,GAAAgb,IASA,QAJA3Q,EAAAixC,cAAAjxC,EAAAgxC,iBACAvV,IAAAmW,WAGA,SAAAr7C,EAAAkgB,GACA,MAAAglB,GAAAhpB,QAAAlc,EAAAoa,IAAA8qB,EAAAhpB,QAAAgE,EAAA9F,KAzDA,GAAA8gC,GAAAv1C,EAAAyvC,kBACAviC,KAAAqoC,IACAA,EAAAv1C,EAAAqsC,WAGA,IAAA+d,GAAA,SAAA1rD,GACA,MAAAA,KAAArG,MAAA,KAIA,IAAA0R,EAAAwrC,IAAA,QAAAA,EAAA5K,cACA,gBAAAtwC,EAAAkgB,GACA,MAAA6vC,GAAA/vD,GAAA+vD,EAAA7vC,GAEa,IAAAxQ,EAAAwrC,IAAA,SAAAA,EAAA5K,cACb,gBAAAtwC,EAAAkgB,GACA,MAAA6vC,GAAA7vC,GAAA6vC,EAAA/vD,GAEa,IAAAsP,EAAA4rC,GAAA,CAMb,GAAA8U,GAAA9U,CAcA,YAZAroC,KAAAlN,EAAAyvC,gBACA4a,EAAA,SAAAhwD,EAAAkgB,GACA,MAAAg7B,GAAAl7C,GACAoa,GAAApa,EAAAoa,GACAtY,QAAA9B,IACyB,KAAAkgB,GACzB9F,GAAA8F,EAAA9F,GACAtY,QAAAoe,IACyB,QAIzB8vC,EACa,MAAAxgD,GAAA0rC,GACb,SAAAl7C,EAAAkgB,GACA,MAAAg7B,GAAAh/B,QAAAlc,EAAAoa,IAAA8gC,EAAAh/B,QAAAgE,EAAA9F,SAFa,IAsBb/J,EAAAulC,kBAAA,SAAA1lC,EAAAwlC,EAAAC,EAAAv0C,GACA,GAOA6L,GACA7N,EACAc,EACAlC,EACA27C,EACAsW,EAZAxmD,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACAuqD,EAAAvqD,EAAA0vC,sBAAAK,EACAya,EAAAxqD,EAAA2vC,qBAAA,SAAAqE,GACA,MAAAA,IAEAyW,EAAAzqD,EAAA4vC,sBAAAI,EAQA0a,EAAAzwD,KAAAkwD,wBAKA,KAJAO,GACAngD,EAAA+P,KAAAowC,GAGAjxD,EAAA,EAAmBA,EAAA8Q,EAAA7Q,OAAcD,IACjC,GAAA8Q,EAAA9Q,KAAA8Q,EAAA9Q,GAAApB,OAAA,IAAAkS,EAAA9Q,GAAApB,SAIAiP,IACA/M,EAAA0Q,EAAAs/C,IAAAhgD,EAAA9Q,GAAAmC,GAAA2O,EAAA9Q,GAAAmC,GACA0L,EAAA,iBAAAxD,EAAAmB,MAAAtD,QAAA,MAAApH,GAAA,IAAAA,EAAA,uBAAAA,EAAA,sBAIA2S,MADA7U,EAAA4S,EAAAw/C,EAAAlgD,EAAA9Q,GAAApB,MAAAkS,EAAA9Q,GAAA0qC,MAAA55B,EAAA9Q,GAAAgb,GAAAlK,EAAA9Q,GAAAsU,MAAAxD,MACA,CAEA,UAAAA,EAAA9Q,GAAAu6C,KACA,QAEAA,GAAA/oC,EAAAu/C,EAAAjgD,EAAA9Q,GAAAu6C,KAAAzpC,EAAA9Q,GAAA0qC,MAAA55B,EAAA9Q,GAAAgb,GAAAlK,EAAA9Q,GAAAsU,QACAu8C,EAAAxmD,EAAA+Y,WAAA/Y,EAAA+Y,WAAAtS,EAAA9Q,GAAApB,OAAAoD,EAAA8O,EAAA9Q,GAAAgb,IAEAnN,GAAA,cAAAxD,EAAAmB,MAAA0B,YAAA,IAAA7C,EAAA67B,wBAAAp1B,EAAA9Q,GAAAgb,IAAA,KACAnN,GAAA,kDAAAgjD,EAAA,YAAAtW,EAAA,QACA1sC,GAAA,qBAAAjP,EAAA,QACAiP,GAAA,QAGA,MAAAA,GAAA,YAEAoD,EAAAigD,gBAAA,SAAAtP,EAAAuP,EAAAC,EAAApoC,GACA,GAGAmlC,GAAAkD,EAAAC,EAAAC,EAAAC,EAHAnnD,EAAA7J,KACA+F,EAAA8D,EAAA9D,OACAuC,EAAAuB,EAAAvB,GAEA+3C,EAAAx2C,EAAAuf,aACAqd,EAAAn+B,EAAAm+B,MAAAje,EA8BA,OA5BA63B,IACAwQ,GAAAhnD,EAAA3G,OAAA2G,EAAAka,cAAAla,EAAAof,iBAAA,MAAAwd,EAAA,GACAsqB,GAAAlnD,EAAA8gB,QAAA,SAAA9gB,EAAA/G,OAAA+G,EAAA/G,OAAA,GAAA2jC,EAAA,QAEAknB,EAAA9jD,EAAAwjD,YAAA,GACAtnD,EAAAoS,cACA04C,EAAAlD,EAAAlnB,EAAA,OACAqqB,EAAAD,EAAAF,EACAK,EAAAnnD,EAAA6f,aAAA7f,EAAAmgB,yBACA+mC,EAAAlnD,EAAAlI,EAAAy/C,EAAA,GAAAz/C,GAAA,KAEAkvD,EAAAlD,EAAA9jD,EAAAqgB,uBAAA,GAAArgB,EAAAlI,EAAAy/C,EAAA,GAAAz/C,GAAA,GACAmvD,EAAAD,EAAAF,EACAK,EAAArD,EAAA9jD,EAAA6f,aAAA7f,EAAAmgB,yBACA+mC,EAAAtqB,EAAA,OAGAqqB,EAAAE,IAEAH,GAAAC,EAAAE,EAAA,IAEAD,EAAAH,EAAA/mD,EAAA+f,gBACAmnC,GAAAH,EAAA,KAGAG,EAAA,IACAA,EAAA,IAEgB/5C,IAAA+5C,EAAA75C,KAAA25C,IAEhBpgD,EAAAs9B,YAAA,SAAAD,EAAAtlB,GACA,GAEAmoC,GAAAC,EAAAx0C,EAFAvS,EAAA7J,KACA+F,EAAA8D,EAAA9D,OAEAs6C,EAAAx2C,EAAAuf,aACAg4B,EAAAtT,EAAAhoB,OAAA,SAAAxV,GACA,MAAAA,IAAAd,EAAAc,EAAAlS,SAEA6yD,EAAAlrD,EAAA6vC,kBAAAnlC,EAAAigD,eACA,KAAAtP,EAAA3hD,QAAAsG,EAAAuvC,eAGAzrC,EAAAnC,QAAAie,KAAA5f,EAAA8vC,iBAAAl4C,KAAAkM,EAAAikC,EAAAjkC,EAAAnI,KAAAgZ,qBAAA7Q,EAAAu2C,WAAAC,GAAAx2C,EAAArI,QAAAkF,MAAA,mBAGAiqD,EAAA9mD,EAAAnC,QAAAwpD,SAAA,eACAN,EAAA/mD,EAAAnC,QAAAwpD,SAAA,gBAEA90C,EAAA60C,EAAAtzD,KAAAqC,KAAAohD,EAAAuP,EAAAC,EAAApoC,GAEA3e,EAAAnC,QAAAhB,MAAA,MAAA0V,EAAApF,IAAA,MAAAtQ,MAAA,OAAA0V,EAAAlF,KAAA,QAEAzG,EAAAw9B,YAAA,WACAjuC,KAAA0H,QAAAhB,MAAA,mBAGA+J,EAAAy2B,cAAA,SAAAlG,EAAA1+B,GACA,GAAAuH,GAAA7J,KACA+F,EAAA8D,EAAA9D,MACA8D,GAAAg6B,eAAA7C,GAAA12B,QAAA,SAAAkQ,GACA3Q,EAAA8a,cAAAnK,GAAAlY,IAAAyD,EAAAmsC,WAAA13B,GACAzU,EAAAmsC,WAAA13B,GAAAlY,IAEA0+B,IACAj7B,EAAAksC,UAAA3vC,IAGAmO,EAAAka,QAAA,SAAAroB,EAAAoX,GACA,GAAA7P,GAAA7J,KACAuD,EAAAsG,EAAA9D,OAAAmsC,WACAif,GAAA,CAkBA,OAjBAz3C,MAAA7P,EAAAvI,KAAAoY,QACAA,KAAAja,OACAia,EAAApP,QAAA,SAAAhL,GACA,GAAA2wB,GAAA1sB,EAAAjE,EAAAkb,KACAyV,KAAA3T,QAAAha,IAAA,IAAA2tB,GAAA,SAAA3tB,KACA6uD,GAAA,KAGSlzD,OAAAoM,KAAA9G,GAAA9D,OACTxB,OAAAoM,KAAA9G,GAAA+G,QAAA,SAAAkQ,GACAjX,EAAAiX,KAAAlY,IACA6uD,GAAA,KAIAA,EAAAtnD,EAAA9D,OAAAksC,YAAA3vC,EAEA6uD,GAEA1gD,EAAA2Y,WAAA,SAAA1P,GACA,MAAA1Z,MAAA2qB,QAAA,MAAAjR,IAAA1Z,KAAA2qB,QAAA,QAAAjR,IAAA1Z,KAAA2qB,QAAA,QAAAjR,IAEAjJ,EAAA0c,WAAA,SAAA7c,GACA,GAAAvK,GAAA/F,KAAA+F,OACAyU,EAAA1K,EAAAQ,OAAAkK,EACA,QAAAzU,EAAAmsC,WAAA13B,KAAA,yDAAA8B,QAAAvW,EAAAmsC,WAAA13B,KAAA,GAEA/J,EAAAwyC,WAAA,SAAA3yC,GACA,GAAAkK,GAAA1K,EAAAQ,OAAAkK,EACA,4BAAA8B,QAAAtc,KAAA+F,OAAAmsC,WAAA13B,KAAA,GAEA/J,EAAA+5C,aAAA,SAAAl6C,GACA,GAAAkK,GAAA1K,EAAAQ,OAAAkK,EACA,gCAAA8B,QAAAtc,KAAA+F,OAAAmsC,WAAA13B,KAAA,GAEA/J,EAAAsc,WAAA,SAAAzc,GACA,GAAAkK,GAAA1K,EAAAQ,OAAAkK,EACA,0CAAA8B,QAAAtc,KAAA+F,OAAAmsC,WAAA13B,KAAA,GAEA/J,EAAAwc,UAAA,SAAA3c,GACA,GAAAkK,GAAA1K,EAAAQ,OAAAkK,EACA,eAAAxa,KAAA+F,OAAAmsC,WAAA13B,IAEA/J,EAAAygB,cAAA,SAAA5gB,GACA,GAAAkK,GAAA1K,EAAAQ,OAAAkK,EACA,mBAAAxa,KAAA+F,OAAAmsC,WAAA13B,IAEA/J,EAAAk7B,UAAA,SAAAr7B,GACA,GAAAkK,GAAA1K,EAAAQ,OAAAkK,EACA,eAAAxa,KAAA+F,OAAAmsC,WAAA13B,IAEA/J,EAAAw4B,YAAA,SAAA34B,GACA,GAAAkK,GAAA1K,EAAAQ,OAAAkK,EACA,iBAAAxa,KAAA+F,OAAAmsC,WAAA13B,IAEA/J,EAAA+6B,YAAA,SAAAl7B,GACA,GAAAkK,GAAA1K,EAAAQ,OAAAkK,EACA,iBAAAxa,KAAA+F,OAAAmsC,WAAA13B,IAEA/J,EAAAu5B,UAAA,SAAA15B,GACA,MAAAtQ,MAAA2rC,UAAAr7B,IAAAtQ,KAAAwrC,YAAAl7B,IAAAtQ,KAAAipC,YAAA34B,IAEAG,EAAAk6C,SAAA,SAAAr6C,GACA,MAAAtQ,MAAAmtB,WAAA7c,WAEAG,EAAA08B,QAAA,SAAA78B,GACA,MAAAtQ,MAAAgqC,UAAA15B,EAAAhP,OAAAgP,OAOAG,EAAA83C,QAAA,SAAAj4C,GACA,MAAAtQ,MAAAitB,UAAA3c,KAAApO,WAEAuO,EAAA+7C,kBAAA,SAAAl8C,GACA,MAAAtQ,MAAAmtB,WAAA7c,IAAAtQ,KAAAkxB,cAAA5gB,KAAApO,WAEAuO,EAAAw+C,cAAA,SAAA3+C,GACA,MAAAtQ,MAAAitB,UAAA3c,IAAAtQ,KAAAmtB,WAAA7c,KAAApO,WAEAuO,EAAA85C,oBAAA,SAAAjoD,GACA,sIAAAga,QAAAha,IAAA,GAGAmO,EAAAq/C,SAAA,WACA,GAAAsB,GAAA1mD,OAAA8lC,UAAA6gB,SACA,OAAAD,GAAA90C,QAAA,cAAA80C,EAAA90C,QAAA,aAEA7L,EAAAs/C,SAAA,WAEA,MADArlD,QAAA8lC,UAAA6gB,UACA/0C,QAAA,cAGA7L,EAAA8U,SAAA,WACA,GAGA+rC,GAHAznD,EAAA7J,KACAsI,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,MAGA8D,GAAAjG,KAAA0E,EAAA66C,SAAAv/C,OAAAgjB,GAAA,uBACA0qC,EAAAhpD,EAAAk7C,MAAA+N,YACA1nD,EAAAjG,KAAA+7C,UAAAr3C,EAAAk7C,MAAA+N,YAAA9K,OAAA58C,EAAAlI,EAAA+rB,YAAA,KACA3nB,EAAA4rC,iBAAAh0C,KAAAkM,EAAAY,IAAAnC,EAAAk7C,MAAA+N,eACS3qC,GAAA,kBACT/c,EAAA2nD,cAAA7zD,KAAAkM,KACS+c,GAAA,qBACT,GAAA48B,GAAAl7C,EAAAk7C,MAAA+N,WAEA/N,IAAA8N,EAAAG,UAAAjO,EAAAiO,SAAAH,EAAAI,UAAAlO,EAAAkO,UAGA7nD,EAAAolB,kBACAplB,EAAAqlB,aACAnpB,EAAA6rC,eAAAj0C,KAAAkM,EAAAY,IAAAZ,EAAAlI,EAAA+rB,gBAEA7jB,EAAAjG,KAAA2E,MAAA,SAAAA,GACA,MAAAxC,GAAAoS,aAAAnY,KAAA8B,EAAAyG,GAAAvI,KAAA2B,EAAA4G,IAEAsB,EAAAjG,KAAA+tD,eAAA,WACA,GAAArrC,GAAAvgB,EAAA2rC,YAAA3rC,EAAA2rC,aAAA,KACA,QAAAprB,EAAA,GAAApW,KAAAnO,IAAA8H,EAAAg4B,kBAAAvb,EAAA,GAAAA,EAAA,MAEAzc,EAAAjG,KAAAk7C,kBAAA,WACA,GAAA5U,GAAA75B,EAAAxG,EAAAlI,EAAA+rB,aAAArd,EAAAxG,EAAAo1C,iBACA34B,EAAAtmB,KAAA2xD,gBAEA,OADA3xD,MAAA4R,aAAA0U,EAAA,GAAA4jB,EAAA5jB,EAAA,GAAA4jB,IACAlqC,OAGAyQ,EAAAwuC,cAAA,WACA,GAAAp1C,GAAA7J,KACA+F,EAAA8D,EAAA9D,OACAuC,EAAAuB,EAAAvB,EAGA,QAFAA,EAAAtG,KAAA6H,EAAA6c,WAAA,GAAA3gB,EAAA0hC,aACAn/B,EAAAvG,KAAA8H,EAAA6c,WAAA,GAAA3gB,EAAAyhC,eAGA/2B,EAAAye,WAAA,WACA,GAAArlB,GAAA7J,KACA4xD,EAAA/nD,EAAA9D,OAAA4gB,aAAA9c,EAAAjG,KAAA,YACAiG,GAAAiO,KAAA/E,OAAA,IAAA/H,EAAAoB,UAAAzO,KAAAi0D,GAAAhrC,GAAA,sBACA/c,EAAAiO,KAAA7B,UAAA,IAAAjL,EAAAgB,WAAArO,KAAAi0D,GAAAhrC,GAAA,uBAEAnW,EAAA+gD,cAAA,WACA,GAAA3nD,GAAA7J,KACAsI,EAAAuB,EAAAvB,GACAvC,EAAA8D,EAAA9D,OACAnC,EAAAiG,EAAAjG,KACAjC,EAAAkI,EAAAlI,CACA,IAAAoE,EAAA4gB,cAGA,IAAA9c,EAAA6U,oBAAA7U,EAAAvI,KAAAoY,SAAAja,OAAA,CAGA,iBAAA6I,EAAAk7C,MAAA+N,YAAAjvD,MAAAsB,EAAA+7C,UAGA,MAFAh+C,GAAAkQ,OAAAjO,EAAA+7C,eACA/7C,GAAA2E,MAAA5G,GAAAm9C,mBAGAj1C,GAAAkP,iBAAApX,EAAA+rB,YAAA,KAAA7jB,EAAA6c,WAAA,IACA/kB,EAAAkQ,QAAAhI,EAAA6c,WAAA,SAAA/kB,EAAA+rB,YAAA,KAEA7jB,EAAA8W,QACAnB,gBAAA,EACAgM,MAAAzlB,EAAA0nB,aACAhC,cAAA,EACAI,eAAA,EACAC,eAAA,IAEA,cAAAxjB,EAAAk7C,MAAA+N,YAAAjvD,OACAuH,EAAA2Y,aAAA,GAEAzc,EAAAshC,YAAA1pC,KAAAkM,EAAAY,IAAA9I,EAAA+rB,eAGAroB,KJoMMwsD,KACA,SAAU30D,EAAQqH,EAASnH,GK50SjC,GAAA00D,GAAAC,GAAA,WAQA,QAAAC,GAAAz6C,GACA,MAAAA,OAAA06C,eAAA16C,EAAAkO,UAAAlO,GAAA26C,gBAEA,QAAAC,GAAA56C,GACA,MAAAA,OAAA06C,eAAA16C,EAAA06C,cAAAG,aAAA76C,EAAAkO,UAAAlO,KAAA66C,aAiCA,QAAAC,GAAAjyD,EAAAkgB,GACA,MAAAlgB,GAAAkgB,GAAA,EAAAlgB,EAAAkgB,EAAA,EAAAlgB,GAAAkgB,EAAA,EAAA8J,IA8DA,QAAAkoC,GAAA3wD,GACA,cAAAA,EAAAyoB,KAAAzoB,EAEA,QAAA4wD,GAAA5wD,GACA,OAAAizB,MAAAjzB,GA0DA,QAAA6wD,GAAAC,GACA,OACAv7C,KAAA,SAAA9W,EAAAuB,EAAA+wD,EAAAC,GAGA,IAFAxyD,UAAAV,OAAA,IAAAizD,EAAA,GACAvyD,UAAAV,OAAA,IAAAkzD,EAAAvyD,EAAAX,QACAizD,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,CACAF,GAAAryD,EAAAwyD,GAAAjxD,GAAA,EAAA+wD,EAAAE,EAAA,EAAmDD,EAAAC,EAEnD,MAAAF,IAEA1vD,MAAA,SAAA5C,EAAAuB,EAAA+wD,EAAAC,GAGA,IAFAxyD,UAAAV,OAAA,IAAAizD,EAAA,GACAvyD,UAAAV,OAAA,IAAAkzD,EAAAvyD,EAAAX,QACAizD,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,CACAF,GAAAryD,EAAAwyD,GAAAjxD,GAAA,EAAAgxD,EAAAC,EAA+CF,EAAAE,EAAA,EAE/C,MAAAF,KA2CA,QAAAG,GAAAviD,GACA,MAAAA,GAAA7Q,OAmDA,QAAAqzD,GAAAnxD,GAEA,IADA,GAAA22C,GAAA,EACA32C,EAAA22C,EAAA,GAAAA,GAAA,EACA,OAAAA,GAEA,QAAAya,GAAAC,EAAAC,GACA,OAAAtzD,KAAAszD,GACAh1D,OAAAS,eAAAs0D,EAAAh1D,UAAA2B,GACAvB,MAAA60D,EAAAtzD,GACAtB,YAAA,IAkBA,QAAA60D,KACAlzD,KAAAmzD,EAAAl1D,OAAAC,OAAA,MAgCA,QAAAk1D,GAAAzzD,GACA,OAAAA,GAAA,MAAA0zD,IAAA1zD,EAAA,KAAA2zD,MAAA3zD,IAEA,QAAA4zD,GAAA5zD,GACA,OAAAA,GAAA,SAAA2zD,GAAA3zD,EAAA2U,MAAA,GAAA3U,EAEA,QAAA6zD,GAAA7zD,GACA,MAAAyzD,GAAAzzD,IAAAK,MAAAmzD,EAEA,QAAAM,GAAA9zD,GACA,OAAAA,EAAAyzD,EAAAzzD,KAAAK,MAAAmzD,SAAAnzD,MAAAmzD,EAAAxzD,GAEA,QAAA+zD,KACA,GAAArpD,KACA,QAAA1K,KAAAK,MAAAmzD,EAAA9oD,EAAA6H,KAAAqhD,EAAA5zD,GACA,OAAA0K,GAEA,QAAAspD,KACA,GAAA9wD,GAAA,CACA,QAAAlD,KAAAK,MAAAmzD,IAAAtwD,CACA,OAAAA,GAEA,QAAA+wD,KACA,OAAAj0D,KAAAK,MAAAmzD,EAAA,QACA,UAsEA,QAAAU,KACA7zD,KAAAmzD,EAAAl1D,OAAAC,OAAA,MAiBA,QAAA41D,GAAAxjD,GACA,MAAAA,GAOA,QAAAyjD,GAAAz0D,EAAAwF,EAAAkvD,GACA,kBACA,GAAA51D,GAAA41D,EAAA9zD,MAAA4E,EAAA3E,UACA,OAAA/B,KAAA0G,EAAAxF,EAAAlB,GAGA,QAAA61D,GAAArtD,EAAAmzC,GACA,GAAAA,IAAAnzC,GAAA,MAAAmzC,EACAA,KAAA9lC,OAAA,GAAAigD,cAAAna,EAAAzlC,MAAA,EACA,QAAA9U,GAAA,EAAAT,EAAAo1D,GAAA10D,OAAiDD,EAAAT,IAAOS,EAAA,CACxD,GAAA40D,GAAAD,GAAA30D,GAAAu6C,CACA,IAAAqa,IAAAxtD,GAAA,MAAAwtD,IAIA,QAAAC,MAMA,QAAAC,MAeA,QAAAC,GAAAC,GAEA,QAAAhR,KAEA,IADA,GAAA6C,GAAAuL,EAAA6C,EAAAj1D,GAAA,EAAAT,EAAA6yD,EAAAnyD,SACAD,EAAAT,IAAAsnD,EAAAuL,EAAApyD,GAAAonB,KAAAy/B,EAAAnmD,MAAAF,KAAAG,UACA,OAAAq0D,GAJA,GAAAC,MAAAC,EAAA,GAAAxB,EAmBA,OAbA1P,GAAA58B,GAAA,SAAAmzB,EAAA4a,GACA,GAAAn1D,GAAA6mD,EAAAqO,EAAA/tD,IAAAozC,EACA,OAAA55C,WAAAV,OAAA,EAAA4mD,KAAAz/B,IACAy/B,IACAA,EAAAz/B,GAAA,KACA6tC,IAAAngD,MAAA,EAAA9U,EAAAi1D,EAAAn4C,QAAA+pC,IAAA5yC,OAAAghD,EAAAngD,MAAA9U,EAAA,IACAk1D,EAAAn+C,OAAAwjC,IAEA4a,GAAAF,EAAAviD,KAAAwiD,EAAAh9B,IAAAqiB,GACAnzB,GAAA+tC,KAEAH,IAEAhR,EAGA,QAAAoR,KACAtsD,GAAAk7C,MAAAqR,iBAEA,QAAAC,KAEA,IADA,GAAAjhD,GAAAia,EAAAxlB,GAAAk7C,MACA3vC,EAAAia,EAAAyjC,aAAAzjC,EAAAja,CACA,OAAAia,GAEA,QAAAinC,GAAAz1D,GAEA,IADA,GAAAk1D,GAAA,GAAAF,GAAA90D,EAAA,EAAAT,EAAAoB,UAAAV,SACAD,EAAAT,GAAAy1D,EAAAr0D,UAAAX,IAAA+0D,EAAAC,EAaA,OAZAA,GAAAQ,GAAA,SAAAC,EAAAC,GACA,gBAAAC,GACA,IACA,GAAAC,GAAAD,EAAA5D,YAAAjpD,GAAAk7C,KACA2R,GAAA71D,SACAgJ,GAAAk7C,MAAA2R,EACAX,EAAAW,EAAA7yD,MAAApC,MAAA+0D,EAAAC,GACS,QACT5sD,GAAAk7C,MAAA4R,KAIAZ,EAWA,QAAAa,GAAAjyD,GAEA,MADAkyD,IAAAlyD,EAAAmyD,IACAnyD,EAyCA,QAAAoyD,GAAAjS,GACA,yBAAAA,KAAA,WACA,MAAAkS,IAAAlS,EAAAvjD,OAgBA,QAAA01D,GAAAnS,GACA,yBAAAA,KAAA,WACA,MAAAoS,IAAApS,EAAAvjD,OAkCA,QAAA41D,GAAA7b,EAAA37C,GAEA,QAAAy3D,KACA71D,KAAA81D,gBAAA/b,GAEA,QAAAgc,KACA/1D,KAAAg2D,kBAAAjc,EAAAkc,MAAAlc,EAAAmc,OAEA,QAAAC,KACAn2D,KAAAm7B,aAAA4e,EAAA37C,GAEA,QAAAg4D,KACAp2D,KAAAq2D,eAAAtc,EAAAkc,MAAAlc,EAAAmc,MAAA93D,GAEA,QAAAk4D,KACA,GAAA30D,GAAAvD,EAAA8B,MAAAF,KAAAG,UACA,OAAAwB,EAAA3B,KAAA81D,gBAAA/b,GAAgD/5C,KAAAm7B,aAAA4e,EAAAp4C,GAEhD,QAAA40D,KACA,GAAA50D,GAAAvD,EAAA8B,MAAAF,KAAAG,UACA,OAAAwB,EAAA3B,KAAAg2D,kBAAAjc,EAAAkc,MAAAlc,EAAAmc,OAAoEl2D,KAAAq2D,eAAAtc,EAAAkc,MAAAlc,EAAAmc,MAAAv0D,GAEpE,MArBAo4C,GAAAzxC,GAAAkuD,GAAAC,QAAA1c,GAqBA,MAAA37C,EAAA27C,EAAAmc,MAAAH,EAAAF,EAAA,mBAAAz3D,GAAA27C,EAAAmc,MAAAK,EAAAD,EAAAvc,EAAAmc,MAAAE,EAAAD,EAEA,QAAAO,GAAA7iD,GACA,MAAAA,GAAA8iD,OAAAzlD,QAAA,YAmBA,QAAA0lD,GAAA7c,GACA,UAAA8c,QAAA,aAAAvuD,GAAAwuD,QAAA/c,GAAA,kBAEA,QAAAgd,GAAAhd,GACA,OAAAA,EAAA,IAAA4c,OAAA5iD,MAAA,SAEA,QAAAijD,GAAAjd,EAAA37C,GAGA,QAAA64D,KAEA,IADA,GAAAz3D,IAAA,IACAA,EAAAT,GAAAg7C,EAAAv6C,GAAAQ,KAAA5B,GAEA,QAAA84D,KAEA,IADA,GAAA13D,IAAA,EAAAmC,EAAAvD,EAAA8B,MAAAF,KAAAG,aACAX,EAAAT,GAAAg7C,EAAAv6C,GAAAQ,KAAA2B,GARAo4C,EAAAgd,EAAAhd,GAAAnmC,IAAAujD,EACA,IAAAp4D,GAAAg7C,EAAAt6C,MASA,0BAAArB,GAAA84D,EAAAD,EAEA,QAAAE,GAAApd,GACA,GAAAqd,GAAAR,EAAA7c,EACA,iBAAAxiC,EAAAnZ,GACA,GAAAmnC,EAAAhuB,EAAA8/C,UAAA,MAAAj5D,GAAAmnC,EAAArV,IAAA6pB,GAAAxU,EAAAhvB,OAAAwjC,EACA,IAAAxU,GAAAhuB,EAAA6jB,aAAA,YACAh9B,IACAg5D,EAAAE,UAAA,EACAF,EAAAG,KAAAhyB,IAAAhuB,EAAA4jB,aAAA,QAAAu7B,EAAAnxB,EAAA,IAAAwU,KAEAxiC,EAAA4jB,aAAA,QAAAu7B,EAAAnxB,EAAAr0B,QAAAkmD,EAAA,QAoBA,QAAAI,GAAAzd,EAAA37C,EAAAq5D,GACA,QAAAC,KACA13D,KAAA0G,MAAAixD,eAAA5d,GAEA,QAAA6d,KACA53D,KAAA0G,MAAAmxD,YAAA9d,EAAA37C,EAAAq5D,GAEA,QAAAK,KACA,GAAAn2D,GAAAvD,EAAA8B,MAAAF,KAAAG,UACA,OAAAwB,EAAA3B,KAAA0G,MAAAixD,eAAA5d,GAAqD/5C,KAAA0G,MAAAmxD,YAAA9d,EAAAp4C,EAAA81D,GAErD,aAAAr5D,EAAAs5D,EAAA,mBAAAt5D,GAAA05D,EAAAF,EAUA,QAAAG,GAAAhe,EAAA37C,GACA,QAAA45D,WACAh4D,MAAA+5C,GAEA,QAAAke,KACAj4D,KAAA+5C,GAAA37C,EAEA,QAAA85D,KACA,GAAAv2D,GAAAvD,EAAA8B,MAAAF,KAAAG,UACA,OAAAwB,QAAA3B,MAAA+5C,GAAuC/5C,KAAA+5C,GAAAp4C,EAEvC,aAAAvD,EAAA45D,EAAA,mBAAA55D,GAAA85D,EAAAD,EA4BA,QAAAE,GAAApe,GACA,QAAA77C,KACA,GAAAunB,GAAAzlB,KAAAiyD,cAAAmG,EAAAp4D,KAAAq4D,YACA,OAAAD,KAAAE,IAAA7yC,EAAAysC,gBAAAmG,eAAAC,GAAA7yC,EAAAplB,cAAA05C,GAAAt0B,EAAAyV,gBAAAk9B,EAAAre,GAEA,QAAAwe,KACA,MAAAv4D,MAAAiyD,cAAA/2B,gBAAA6e,EAAAkc,MAAAlc,EAAAmc,OAEA,yBAAAnc,QAAAzxC,GAAAkuD,GAAAC,QAAA1c,IAAAmc,MAAAqC,EAAAr6D,EAYA,QAAAs6D,KACA,GAAA5nB,GAAA5wC,KAAA8yB,UACA8d,MAAA6nB,YAAAz4D,MAmFA,QAAA04D,GAAAp3D,GACA,OACAqkC,SAAArkC,GAoBA,QAAAq3D,GAAApV,GACA,kBACA,MAAAqV,IAAA54D,KAAAujD,IAmBA,QAAAsV,GAAAC,GAEA,MADA34D,WAAAV,SAAAq5D,EAAAzG,GACA,SAAAjyD,EAAAkgB,GACA,MAAAlgB,IAAAkgB,EAAAw4C,EAAA14D,EAAAulC,SAAArlB,EAAAqlB,WAAAvlC,GAAAkgB,GAQA,QAAAy4C,GAAA31D,EAAAkxB,GACA,OAAA2N,GAAA,EAAA+2B,EAAA51D,EAAA3D,OAAsCwiC,EAAA+2B,EAAO/2B,IAC7C,OAAA1qB,GAAA0hD,EAAA71D,EAAA6+B,GAAAziC,EAAA,EAAAT,EAAAk6D,EAAAx5D,OAAgED,EAAAT,EAAOS,KACvE+X,EAAA0hD,EAAAz5D,KAAA80B,EAAA/c,EAAA/X,EAAAyiC,EAGA,OAAA7+B,GA0BA,QAAA81D,GAAAxnD,GAEA,MADA4jD,IAAA5jD,EAAAynD,IACAznD,EA+BA,QAAA0nD,GAAAjjD,GACA,GAAAkjD,GAAAC,CACA,iBAAAhpD,EAAA9Q,EAAAyiC,GACA,GAAA1qB,GAAA0hD,EAAA9iD,EAAA8rB,GAAAjP,OAAAj0B,EAAAk6D,EAAAx5D,MAGA,KAFAwiC,GAAAq3B,MAAAr3B,EAAAo3B,EAAA,GACA75D,GAAA65D,MAAA75D,EAAA,KACA+X,EAAA0hD,EAAAI,SAAAt6D,IACA,MAAAwY,IAsCA,QAAAgiD,GAAAj3D,EAAAqyD,EAAA6E,GAKA,QAAAC,KACA,GAAApT,GAAArmD,KAAA+5C,EACAsM,KACArmD,KAAA+gC,oBAAAz+B,EAAA+jD,IAAAqT,SACA15D,MAAA+5C,IAGA,QAAA4f,KACA,GAAAtT,GAAAuT,EAAAjF,EAAAkF,GAAA15D,WACAs5D,GAAA97D,KAAAqC,MACAA,KAAA+zB,iBAAAzxB,EAAAtC,KAAA+5C,GAAAsM,IAAAqT,EAAAF,GACAnT,EAAA8M,EAAAwB,EAEA,QAAAmF,KACA,GAAAC,GAAA3C,EAAA,GAAAP,QAAA,eAAAvuD,GAAAwuD,QAAAx0D,GAAA,IACA,QAAAy3C,KAAA/5C,MACA,GAAA+5D,EAAAhgB,EAAAggB,MAAA3C,GAAA,CACA,GAAA/Q,GAAArmD,KAAA+5C,EACA/5C,MAAA+gC,oBAAAg5B,EAAA,GAAA1T,IAAAqT,SACA15D,MAAA+5C,IAvBA,GAAAA,GAAA,OAAAz3C,EAAA9C,EAAA8C,EAAAga,QAAA,KAAAs9C,EAAAI,CACAx6D,GAAA,IAAA8C,IAAAgS,MAAA,EAAA9U,GACA,IAAAsmB,GAAAm0C,GAAAtzD,IAAArE,EAyBA,OAxBAwjB,KAAAxjB,EAAAwjB,EAAA8zC,EAAAM,GAwBA16D,EAAAm1D,EAAAgF,EAAAF,EAAA9E,EAAAN,EAAAyF,EAWA,QAAAE,GAAArF,EAAAO,GACA,gBAAApnC,GACA,GAAAne,GAAArH,GAAAk7C,KACAl7C,IAAAk7C,MAAA11B,EACAonC,EAAA,GAAAl1D,KAAA2lC,QACA,KACAgvB,EAAAz0D,MAAAF,KAAAk1D,GACO,QACP5sD,GAAAk7C,MAAA7zC,IAIA,QAAAuqD,GAAAvF,EAAAO,GACA,GAAA7O,GAAA2T,EAAArF,EAAAO,EACA,iBAAApnC,GACA,GAAAxuB,GAAAU,KAAAm6D,EAAArsC,EAAAssC,aACAD,SAAA76D,GAAA,EAAA66D,EAAAE,wBAAA/6D,KACA+mD,EAAA1oD,KAAA2B,EAAAwuB,IAKA,QAAAwsC,IAAA/iD,GACA,GAAAwiC,GAAA,oBAAAwgB,GAAAC,EAAA,QAAAzgB,EAAAjnC,EAAAxK,GAAAyK,OAAAo/C,EAAA56C,IAAAqP,GAAA,YAAAmzB,EAAA6a,GAAAhuC,GAAA,YAAAmzB,EAAA6a,GAAAhuC,GAAA,cAAAmzB,EAAA6a,EAIA,IAHA,MAAA6F,KACAA,KAAA,iBAAAljD,KAAA08C,EAAA18C,EAAA7Q,MAAA,eAEA+zD,GAAA,CACA,GAAA/zD,GAAAsrD,EAAAz6C,GAAA7Q,MAAAqM,EAAArM,EAAA+zD,GACA/zD,GAAA+zD,IAAA,OAEA,gBAAAC,GAGA,GAFA5nD,EAAA8T,GAAAmzB,EAAA,MACA0gB,KAAA/zD,EAAA+zD,IAAA1nD,GACA2nD,EAAA,CACA,GAAAC,GAAA,WACA7nD,EAAA8T,GAAA4zC,EAAA,MAEA1nD,GAAA8T,GAAA4zC,EAAA,WACA5F,IACA+F,MACS,GACTjnC,WAAAinC,EAAA,KAQA,QAAAC,IAAAC,EAAA/sC,GACAA,EAAAgtC,iBAAAhtC,IAAAgtC,eAAA,GACA,IAAAt8C,GAAAq8C,EAAAE,iBAAAF,CACA,IAAAr8C,EAAAw8C,eAAA,CACA,GAAArzD,GAAA6W,EAAAw8C,gBACA,IAAAC,GAAA,GACA,GAAAvwD,GAAAynD,EAAA0I,EACA,IAAAnwD,EAAAwwD,SAAAxwD,EAAAywD,QAAA,CACA38C,EAAAlW,GAAAyK,OAAA,QAAA0D,OAAA,OAAA/P,OACA0V,SAAA,WACApF,IAAA,EACAE,KAAA,EACA4S,OAAA,EACA/mB,QAAA,EACAq4D,OAAA,QACW,YACX,IAAAC,GAAA78C,EAAA,MAAA88C,cACAL,MAAAI,EAAAlnC,GAAAknC,EAAAvtC,GACAtP,EAAAjI,UAMA,MAHA0kD,KAAAtzD,EAAAhG,EAAAmsB,EAAAytC,MAAA5zD,EAAA7F,EAAAgsB,EAAA0tC,QAAkE7zD,EAAAhG,EAAAmsB,EAAA2jC,QAClE9pD,EAAA7F,EAAAgsB,EAAA4jC,SACA/pD,IAAA8zD,gBAAAZ,EAAAS,eAAAI,YACA/zD,EAAAhG,EAAAgG,EAAA7F,GAEA,GAAAstD,GAAAyL,EAAAvpD,uBACA,QAAAwc,EAAA2jC,QAAArC,EAAAl4C,KAAA2jD,EAAAc,WAAA7tC,EAAA4jC,QAAAtC,EAAAp4C,IAAA6jD,EAAAe,WA2DA,QAAAC,MACA,MAAAvzD,IAAAk7C,MAAAsX,eAAA,GAAAgB,WAWA,QAAAC,IAAAp6D,GACA,MAAAA,GAAA,IAAAA,EAAA,OAEA,QAAAq6D,IAAA57D,EAAAkgB,EAAAilB,GACA,OAAAjlB,EAAA,GAAAlgB,EAAA,KAAAmlC,EAAA,GAAAnlC,EAAA,KAAAkgB,EAAA,GAAAlgB,EAAA,KAAAmlC,EAAA,GAAAnlC,EAAA,IAEA,QAAA67D,IAAAt6D,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAAu6D,GAAAhsD,KAAAisD,KAAAx6D,GAEA,QAAAy6D,IAAAz6D,GACA,MAAAA,GAAA,EAAA06D,GAAA16D,GAAA,GAAA06D,GAAAnsD,KAAAosD,KAAA36D,GAEA,QAAA46D,IAAA56D,GACA,QAAAA,EAAAuO,KAAAssD,IAAA76D,IAAA,EAAAA,GAAA,EAEA,QAAA86D,IAAA96D,GACA,QAAAA,EAAAuO,KAAAssD,IAAA76D,IAAA,EAAAA,GAAA,EAEA,QAAA+6D,IAAA/6D,GACA,QAAAA,EAAAuO,KAAAssD,IAAA,EAAA76D,IAAA,IAAAA,EAAA,GAEA,QAAAg7D,IAAAh7D,GACA,OAAAA,EAAAuO,KAAAoF,IAAA3T,EAAA,IAAAA,EAuSA,QAAAi7D,OAKA,QAAAC,IAAAhqD,EAAAgB,EAAAwyC,GACA,MAAArmD,gBAAA68D,KAAA78D,KAAA6S,KAAA7S,KAAA6T,UAAA7T,KAAAqmD,OAAAlmD,UAAAV,OAAA,EAAAoT,YAAAgqD,IAAA,GAAAA,IAAAhqD,MAAAgB,EAAAhB,EAAAwzC,GAAAyW,GAAA,GAAAjqD,EAAAkqD,GAAAF,IAAA,GAAAA,IAAAhqD,EAAAgB,EAAAwyC,GAcA,QAAA2W,IAAAnqD,EAAAgB,EAAAwyC,GAOA,QAAA52C,GAAAoD,GAEA,MADAA,GAAA,IAAAA,GAAA,IAA4BA,EAAA,IAAAA,GAAA,KAC5BA,EAAA,GAAAoqD,GAAAC,EAAAD,GAAApqD,EAAA,GACAA,EAAA,IAAAqqD,EACArqD,EAAA,IAAAoqD,GAAAC,EAAAD,IAAA,IAAApqD,GAAA,GACAoqD,EAEA,QAAAE,GAAAtqD,GACA,MAAA3C,MAAAs+B,MAAA,IAAA/+B,EAAAoD,IAdA,GAAAoqD,GAAAC,CAgBA,OAfArqD,GAAA+hB,MAAA/hB,GAAA,GAAAA,GAAA,OAAAA,EAAA,IAAAA,EACAgB,EAAA+gB,MAAA/gB,GAAA,EAAAA,EAAA,IAAAA,EAAA,IAAAA,EACAwyC,IAAA,IAAAA,EAAA,IAAAA,EACA6W,EAAA7W,GAAA,GAAAA,GAAA,EAAAxyC,GAAAwyC,EAAAxyC,EAAAwyC,EAAAxyC,EACAopD,EAAA,EAAA5W,EAAA6W,EAWA,GAAAE,IAAAD,EAAAtqD,EAAA,KAAAsqD,EAAAtqD,GAAAsqD,EAAAtqD,EAAA,MAGA,QAAAwqD,IAAAxqD,EAAA0yB,EAAA8gB,GACA,MAAArmD,gBAAAq9D,KAAAr9D,KAAA6S,KAAA7S,KAAAulC,UAAAvlC,KAAAqmD,OAAAlmD,UAAAV,OAAA,EAAAoT,YAAAwqD,IAAA,GAAAA,IAAAxqD,MAAA0yB,EAAA1yB,EAAAwzC,GAAAxzC,YAAAyqD,IAAAC,GAAA1qD,EAAAwzC,EAAAxzC,EAAAzS,EAAAyS,EAAAyN,GAAAi9C,IAAA1qD,EAAA2qD,IAAA3qD,EAAAvK,GAAA2/C,IAAAp1C,IAAAg1C,EAAAh1C,EAAA6C,EAAA7C,EAAAyN,IAAA+lC,EAAAxzC,EAAAzS,EAAAyS,EAAAyN,GAAA,GAAA+8C,IAAAxqD,EAAA0yB,EAAA8gB,GAYA,QAAAoX,IAAA5qD,EAAA0yB,EAAA8gB,GAGA,MAFAzxB,OAAA/hB,OAAA,GACA+hB,MAAA2Q,OAAA,GACA,GAAA+3B,IAAAjX,EAAAn2C,KAAAs6B,IAAA33B,GAAA6qD,IAAAn4B,EAAAr1B,KAAAoF,IAAAzC,GAAA0yB,GAGA,QAAA+3B,IAAAjX,EAAAjmD,EAAAkgB,GACA,MAAAtgB,gBAAAs9D,KAAAt9D,KAAAqmD,KAAArmD,KAAAI,UAAAJ,KAAAsgB,OAAAngB,UAAAV,OAAA,EAAA4mD,YAAAiX,IAAA,GAAAA,IAAAjX,MAAAjmD,EAAAimD,EAAA/lC,GAAA+lC,YAAAgX,IAAAI,GAAApX,EAAAxzC,EAAAwzC,EAAA9gB,EAAA8gB,KAAAmX,IAAAnX,EAAA+W,GAAA/W,IAAAwB,EAAAxB,EAAA3wC,EAAA2wC,EAAA/lC,GAAA,GAAAg9C,IAAAjX,EAAAjmD,EAAAkgB,GAcA,QAAAq9C,IAAAtX,EAAAjmD,EAAAkgB,GACA,GAAAxe,IAAAukD,EAAA,QAAA1kD,EAAAG,EAAA1B,EAAA,IAAAwxD,EAAA9vD,EAAAwe,EAAA,GAIA,OAHA3e,GAAAi8D,GAAAj8D,GAAAk8D,GACA/7D,EAAA87D,GAAA97D,GAAAg8D,GACAlM,EAAAgM,GAAAhM,GAAAmM,GACA,GAAAX,IAAAY,GAAA,UAAAr8D,EAAA,UAAAG,EAAA,SAAA8vD,GAAAoM,IAAA,QAAAr8D,EAAA,UAAAG,EAAA,QAAA8vD,GAAAoM,GAAA,SAAAr8D,EAAA,SAAAG,EAAA,UAAA8vD,IAEA,QAAA2L,IAAAlX,EAAAjmD,EAAAkgB,GACA,MAAA+lC,GAAA,KAAAgX,IAAAntD,KAAA+tD,MAAA39C,EAAAlgB,GAAA89D,GAAAhuD,KAAAm6B,KAAAjqC,IAAAkgB,KAAA+lC,GAAA,GAAAgX,IAAAjzC,QAAAi8B,GAEA,QAAAuX,IAAAj8D,GACA,MAAAA,GAAA,WAAAA,SAAA,eAEA,QAAAw8D,IAAAx8D,GACA,MAAAA,GAAA,QAAAuO,KAAAkvB,IAAAz9B,EAAA,cAAAA,EAAA,KAEA,QAAAq8D,IAAAnW,GACA,MAAA33C,MAAAs+B,MAAA,KAAAqZ,GAAA,aAAAA,EAAA,MAAA33C,KAAAkvB,IAAAyoB,EAAA,cAGA,QAAAuV,IAAAvV,EAAAnyC,EAAA4K,GACA,MAAAtgB,gBAAAo9D,KAAAp9D,KAAA6nD,MAAA7nD,KAAA0V,WAAA1V,KAAAsgB,QAAAngB,UAAAV,OAAA,EAAAooD,YAAAuV,IAAA,GAAAA,IAAAvV,MAAAnyC,EAAAmyC,EAAAvnC,GAAAw8C,GAAA,GAAAjV,EAAAuV,GAAAJ,IAAA,GAAAI,IAAAvV,EAAAnyC,EAAA4K,GAEA,QAAA89C,IAAAhgE,GACA,UAAAg/D,IAAAh/D,GAAA,GAAAA,GAAA,UAAAA,GAEA,QAAAigE,IAAAjgE,GACA,MAAAggE,IAAAhgE,GAAA,GAsBA,QAAAkgE,IAAA7uD,GACA,MAAAA,GAAA,OAAAS,KAAAnO,IAAA,EAAA0N,GAAAgF,SAAA,IAAAvE,KAAAlO,IAAA,IAAAyN,GAAAgF,SAAA,IAEA,QAAAqoD,IAAA3lD,EAAA8wC,EAAAsW,GACA,GAAAtB,GAAAC,EAAA17D,EAAAqmD,EAAA,EAAAnyC,EAAA,EAAA4K,EAAA,CAEA,IADA28C,EAAA,mBAAAuB,KAAArnD,IAAAu5B,eAGA,OADAwsB,EAAAD,EAAA,GAAAlpD,MAAA,KACAkpD,EAAA,IACA,UAEA,MAAAsB,GAAAE,WAAAvB,EAAA,IAAAuB,WAAAvB,EAAA,QAAAuB,WAAAvB,EAAA,QAGA,WAEA,MAAAjV,GAAAyW,GAAAxB,EAAA,IAAAwB,GAAAxB,EAAA,IAAAwB,GAAAxB,EAAA,KAIA,OAAA17D,EAAAm9D,GAAAh4D,IAAAwQ,IACA8wC,EAAAzmD,EAAAqmD,EAAArmD,EAAAkU,EAAAlU,EAAA8e,IAEA,MAAAnJ,GAAA,MAAAA,EAAAlD,OAAA,IAAA2gB,MAAApzB,EAAAo9D,SAAAznD,EAAA7C,MAAA,UACA,IAAA6C,EAAA1X,QACAooD,GAAA,KAAArmD,IAAA,EACAqmD,MAAA,EACAnyC,EAAA,IAAAlU,EACAkU,MAAA,EACA4K,EAAA,GAAA9e,EACA8e,MAAA,GACO,IAAAnJ,EAAA1X,SACPooD,GAAA,SAAArmD,IAAA,GACAkU,GAAA,MAAAlU,IAAA,EACA8e,EAAA,IAAA9e,IAGAymD,EAAAJ,EAAAnyC,EAAA4K,IAEA,QAAAy8C,IAAAlV,EAAAnyC,EAAA4K,GACA,GAAAzN,GAAAgB,EAAA7R,EAAAkO,KAAAlO,IAAA6lD,GAAA,IAAAnyC,GAAA,IAAA4K,GAAA,KAAAve,EAAAmO,KAAAnO,IAAA8lD,EAAAnyC,EAAA4K,GAAAhQ,EAAAvO,EAAAC,EAAAqkD,GAAAtkD,EAAAC,GAAA,CASA,OARAsO,IACAuD,EAAAwyC,EAAA,GAAA/1C,GAAAvO,EAAAC,GAAAsO,GAAA,EAAAvO,EAAAC,GACA6Q,EAAAg1C,GAAA9lD,GAAA2T,EAAA4K,GAAAhQ,GAAAoF,EAAA4K,EAAA,KAAsD5K,GAAA3T,GAAAue,EAAAunC,GAAAv3C,EAAA,GAAwCu3C,EAAAnyC,GAAApF,EAAA,EAC9FuC,GAAA,KAEAA,EAAAuX,IACAvW,EAAAwyC,EAAA,GAAAA,EAAA,IAAAxzC,GAEA,GAAAgqD,IAAAhqD,EAAAgB,EAAAwyC,GAEA,QAAAmX,IAAA3V,EAAAnyC,EAAA4K,GACAunC,EAAAgX,GAAAhX,GACAnyC,EAAAmpD,GAAAnpD,GACA4K,EAAAu+C,GAAAv+C,EACA,IAAA3e,GAAAw8D,IAAA,SAAAtW,EAAA,SAAAnyC,EAAA,SAAA4K,GAAAu9C,IAAA/7D,EAAAq8D,IAAA,SAAAtW,EAAA,SAAAnyC,EAAA,QAAA4K,GAAAw9C,GACA,OAAAR,IAAA,IAAAx7D,EAAA,QAAAH,EAAAG,GAAA,KAAAA,EADAq8D,IAAA,SAAAtW,EAAA,QAAAnyC,EAAA,SAAA4K,GAAAy9C,MAGA,QAAAc,IAAAhX,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAA33C,KAAAkvB,KAAAyoB,EAAA,iBAEA,QAAA6W,IAAAn5B,GACA,GAAApR,GAAAsqC,WAAAl5B,EACA,aAAAA,EAAAtxB,OAAAsxB,EAAA9lC,OAAA,GAAAyQ,KAAAs+B,MAAA,KAAAra,KA2JA,QAAA2qC,IAAArvD,GACA,yBAAAA,KAAA,WACA,MAAAA,IAKA,QAAAsvD,IAAA5nB,GACA,gBAAAP,EAAAC,EAAAviB,GAGA,MAFA,KAAAn0B,UAAAV,QAAA,mBAAAo3C,KAAAviB,EAAAuiB,EACAA,EAAA,MACAmoB,GAAApoB,EAAAC,EAAAM,EAAA7iB,IAGA,QAAA0qC,IAAApoB,EAAAC,EAAAM,EAAA7iB,GAMA,QAAA2qC,KACA,GAAAC,GAAA5nB,EAAA6nB,EAAA7nB,MACA,KAAAA,GAAA8nB,GAAAD,IAAA7nB,GAAA,KAAAA,EAAA,WAAAA,EAAA,CACA,IACA4nB,EAAA/nB,EAAAx5C,KAAAq5C,EAAAmoB,GACS,MAAArxC,GAET,WADA0mC,GAAAhiC,MAAA70B,KAAAq5C,EAAAlpB,GAGA0mC,EAAAruD,KAAAxI,KAAAq5C,EAAAkoB,OAEA1K,GAAAhiC,MAAA70B,KAAAq5C,EAAAmoB,GAhBA,GAAAnoB,MAAgBwd,EAAAlsD,GAAAksD,SAAA,wCAAA1d,KAAiFqoB,EAAA,GAAAE,gBAAAC,EAAA,IAwEjG,QAvEAt/D,KAAAu/D,gBAAA,mBAAAJ,KAAA,oBAAA5H,KAAA3gB,KAAAuoB,EAAA,GAAAI,iBACA,UAAAJ,KAAAK,OAAAL,EAAAM,QAAAR,EAAAE,EAAAO,mBAAA,WACAP,EAAAQ,WAAA,GAAAV,KAgBAE,EAAAS,WAAA,SAAApc,GACA,GAAA7zC,GAAArH,GAAAk7C,KACAl7C,IAAAk7C,OACA,KACAgR,EAAAqL,SAAAliE,KAAAq5C,EAAAmoB,GACO,QACP72D,GAAAk7C,MAAA7zC,IAGAqnC,EAAAC,OAAA,SAAA8C,EAAA37C,GAEA,MADA27C,MAAA,IAAArJ,cACAvwC,UAAAV,OAAA,EAAAq3C,EAAAiD,IACA,MAAA37C,QAAA04C,GAAAiD,GAA8CjD,EAAAiD,GAAA37C,EAAA,GAC9C44C,IAEAA,EAAAH,SAAA,SAAAz4C,GACA,MAAA+B,WAAAV,QACAo3C,EAAA,MAAAz4C,EAAA,KAAAA,EAAA,GACA44C,GAFAH,GAIAG,EAAAsoB,aAAA,SAAAlhE,GACA,MAAA+B,WAAAV,QACA6/D,EAAAlhE,EACA44C,GAFAsoB,GAIAtoB,EAAAG,SAAA,SAAA/4C,GAEA,MADA+4C,GAAA/4C,EACA44C,IAEA,cAAA1sC,QAAA,SAAA0pD,GACAhd,EAAAgd,GAAA,WACA,MAAAhd,GAAA8oB,KAAA5/D,MAAA82C,GAAAgd,GAAAvgD,OAAAomD,GAAA15D,gBAGA62C,EAAA8oB,KAAA,SAAA9L,EAAA1yD,EAAAgzB,GAIA,GAHA,IAAAn0B,UAAAV,QAAA,mBAAA6B,KAAAgzB,EAAAhzB,IAAA,MACA69D,EAAAY,KAAA/L,EAAApd,GAAA,GACA,MAAAC,GAAA,UAAAC,OAAA,OAAAD,EAAA,QACAsoB,EAAAa,iBAAA,OAAAjmB,KAAAjD,GAAAqoB,EAAAa,iBAAAjmB,EAAAjD,EAAAiD,GAQA,OAPA,OAAAlD,GAAAsoB,EAAAc,kBAAAd,EAAAc,iBAAAppB,GACA,MAAAyoB,IAAAH,EAAAG,gBACA,MAAAhrC,GAAA0iB,EAAApwB,GAAA,QAAA0N,GAAA1N,GAAA,gBAAAu4C,GACA7qC,EAAA,KAAA6qC,KAEA3K,EAAA0L,WAAAviE,KAAAq5C,EAAAmoB,GACAA,EAAAW,KAAA,MAAAx+D,EAAA,KAAAA,GACA01C,GAEAA,EAAAmpB,MAAA,WAEA,MADAhB,GAAAgB,QACAnpB,GAEA1uC,GAAA83D,OAAAppB,EAAAwd,EAAA,MACA,MAAAlgC,EAAA0iB,IAAArwC,IAAA05D,GAAA/rC,IAEA,QAAA+rC,IAAA/rC,GACA,WAAAA,EAAA70B,OAAA,SAAA+yB,EAAA2sC,GACA7qC,EAAA,MAAA9B,EAAA2sC,EAAA,OACK7qC,EAEL,QAAA8qC,IAAAD,GACA,GAAA78D,GAAA68D,EAAAG,YACA,OAAAh9D,IAAA,SAAAA,EAAA68D,EAAAhoB,SAAAgoB,EAAA/nB,aAgHA,QAAAkpB,IAAAhsC,EAAAisC,EAAAC,GACA,GAAAzhE,GAAAoB,UAAAV,MACAV,GAAA,IAAAwhE,EAAA,GACAxhE,EAAA,IAAAyhE,EAAApgD,KAAAqgD,MACA,IAAArmD,GAAAomD,EAAAD,EAAAhsC,GACAgR,EAAAjR,EACArE,EAAA7V,EACArb,EAAA,KASA,OAPA2hE,OAAA3hE,EAAAw1B,EAAyDosC,GAAApsC,EACzDmsC,GAAAnsC,EACAqsC,KACAC,GAAAptC,aAAAotC,IACAD,GAAA,EACAE,GAAAC,KAEAxsC,EAEA,QAAAwsC,MACA,GAAAN,GAAAO,KAAAT,EAAAU,KAAAR,CACAF,GAAA,IACAvlC,SAAAulC,KACA9sC,aAAAotC,IACAA,GAAAntC,WAAAqtC,GAAAR,IAEAK,GAAA,IAEAA,GAAA,EACAE,GAAAC,KAOA,QAAAC,MAEA,IADA,GAAAP,GAAArgD,KAAAqgD,MAAAlsC,EAAAosC,GACApsC,GACAksC,GAAAlsC,EAAAtE,GAAAsE,EAAAgR,EAAAk7B,EAAAlsC,EAAAtE,KAAAsE,EAAAgR,EAAA,MACAhR,IAAAx1B,CAEA,OAAA0hE,GAEA,QAAAQ,MAEA,IADA,GAAAC,GAAAjmB,EAAA0lB,GAAAvmD,EAAA3C,IACAwjC,GACAA,EAAA1V,GACA0V,EAAAhrB,EAAA7V,MAAA6gC,EAAAhrB,GACAgrB,GAAAimB,EAAAjmB,GAAAl8C,GAEAk8C,EAAAimB,IAAAniE,EAAAk8C,EAAAl8C,EAAA4hE,GAAA1lB,EAAAl8C,CAIA,OADA2hE,IAAAQ,EACA9mD,EAEA,QAAA+mD,IAAAx/D,EAAAge,GACA,MAAAA,IAAAhe,EAAAuO,KAAAC,KAAAD,KAAAkxD,IAAAz/D,GAAAuO,KAAAmxD,MAAA,GAgBA,QAAAC,IAAAhxD,EAAA9Q,GACA,GAAA84C,GAAApoC,KAAAkvB,IAAA,KAAAqL,GAAA,EAAAjrC,GACA,QACA+I,MAAA/I,EAAA,WAAA8Q,GACA,MAAAA,GAAAgoC,GACO,SAAAhoC,GACP,MAAAA,GAAAgoC,GAEAipB,OAAAjxD,GAGA,QAAAkxD,IAAAC,GACA,GAAAC,GAAAD,EAAA7iC,QAAA+iC,EAAAF,EAAAG,UAAAC,EAAAJ,EAAAK,SAAAC,EAAAN,EAAAO,SAAAC,EAAAJ,GAAAF,EAAA,SAAAvjE,EAAA8E,GAEA,IADA,GAAA1D,GAAApB,EAAAqB,OAAAwwB,KAAAgS,EAAA,EAAAvsB,EAAAmsD,EAAA,GAAApiE,EAAA,EACAD,EAAA,GAAAkW,EAAA,IACAjW,EAAAiW,EAAA,EAAAxS,IAAAwS,EAAAxF,KAAAnO,IAAA,EAAAmB,EAAAzD,IACAwwB,EAAA/d,KAAA9T,EAAA8jE,UAAA1iE,GAAAkW,EAAAlW,EAAAkW,OACAjW,GAAAiW,EAAA,GAAAxS,KACAwS,EAAAmsD,EAAA5/B,KAAA,GAAA4/B,EAAApiE,OAEA,OAAAwwB,GAAAwrB,UAAA0mB,KAAAR,IACK7N,CACL,iBAAAsO,GACA,GAAArI,GAAAsI,GAAA7D,KAAA4D,GAAAE,EAAAvI,EAAA,QAAAwI,EAAAxI,EAAA,QAAAl7B,EAAAk7B,EAAA,QAAAwH,EAAAxH,EAAA,OAAAyI,EAAAzI,EAAA,GAAA72D,GAAA62D,EAAA,GAAA0I,EAAA1I,EAAA,GAAA2I,EAAA3I,EAAA,GAAAz3D,EAAAy3D,EAAA,GAAAxxD,EAAA,EAAAwmC,EAAA,GAAA4zB,EAAA,GAAAjkC,GAAA,EAAAD,GAAA,CAMA,QALAikC,SAAAR,UAAA,KACAM,GAAA,MAAAF,GAAA,MAAAC,KACAC,EAAAF,EAAA,IACAC,EAAA,KAEAjgE,GACA,QACAmgE,GAAA,EACAngE,EAAA,GACA,MAEA,SACAiG,EAAA,IACAo6D,EAAA,IACArgE,EAAA,GACA,MAEA,SACAiG,EAAA,IACAo6D,EAAA,IACArgE,EAAA,GACA,MAEA,SACA,QACA,QACA,QACA,MAAAi/D,IAAAxyB,EAAA,IAAAzsC,EAAAouC,cAEA,SACAjS,GAAA,CAEA,SACAC,GAAA,EACAgkC,EAAA,CACA,MAEA,SACAn6D,GAAA,EACAjG,EAAA,IAGA,MAAAi/D,IAAAxyB,EAAAgzB,EAAA,GAAAY,EAAAZ,EAAA,IACA,KAAAz/D,GAAAogE,IAAApgE,EAAA,KACA,MAAAogE,IACA,KAAApgE,EAAAogE,EAAAxyD,KAAAnO,IAAA,EAAAmO,KAAAlO,IAAA,GAAA0gE,IAA0E,KAAApgE,GAAA,KAAAA,IAAAogE,EAAAxyD,KAAAnO,IAAA,EAAAmO,KAAAlO,IAAA,GAAA0gE,MAE1EpgE,EAAAsgE,GAAAj8D,IAAArE,IAAAugE,EACA,IAAAC,GAAAN,GAAAC,CACA,iBAAArkE,GACA,GAAA2kE,GAAAJ,CACA,IAAAjkC,GAAAtgC,EAAA,UACA,IAAA4kE,GAAA5kE,EAAA,OAAAA,GAAA,EAAAA,EAAA,GAAAA,KAAA,WAAAygC,EAAA,GAAAA,CACA,IAAAt2B,EAAA,GACA,GAAAqX,GAAAtX,GAAA26D,aAAA7kE,EAAAskE,EACAtkE,GAAAwhB,EAAArX,MAAAnK,GACA2kE,EAAAnjD,EAAA2hD,OAAAoB,MAEAvkE,IAAAmK,CAEAnK,GAAAkE,EAAAlE,EAAAskE,EACA,IAAAQ,GAAAC,EAAA3jE,EAAApB,EAAAglE,YAAA,IACA,IAAA5jE,EAAA,GACA,GAAAyiC,GAAAxD,EAAArgC,EAAAglE,YAAA,OACAnhC,GAAA,GAAAihC,EAAA9kE,EAAA+kE,EAAA,KAAgDD,EAAA9kE,EAAA8jE,UAAA,EAAAjgC,GAAAkhC,EAAA/kE,EAAA8jE,UAAAjgC,QAEhDihC,GAAA9kE,EAAA8jE,UAAA,EAAA1iE,GACA2jE,EAAAzB,EAAAtjE,EAAA8jE,UAAA1iE,EAAA,IAEAgjE,GAAAC,IAAAS,EAAAjB,EAAAiB,EAAAzrD,KACA,IAAAhY,GAAAsvC,EAAAtvC,OAAAyjE,EAAAzjE,OAAA0jE,EAAA1jE,QAAAqjE,EAAA,EAAAE,EAAAvjE,QAAAsD,EAAAtD,EAAAyD,EAAA,GAAA2M,OAAApQ,EAAAyD,EAAAzD,EAAA,GAAA0iE,KAAAG,GAAA,EAIA,OAHAQ,KAAAI,EAAAjB,EAAAl/D,EAAAmgE,EAAAngE,EAAAtD,OAAAyD,EAAAigE,EAAA1jE,OAAAgY,MACAurD,GAAAj0B,EACA3wC,EAAA8kE,EAAAC,GACA,MAAAZ,EAAAS,EAAA5kE,EAAA2E,EAAA,MAAAw/D,EAAAx/D,EAAAigE,EAAA5kE,EAAA,MAAAmkE,EAAAx/D,EAAAm/D,UAAA,EAAAziE,IAAA,GAAAujE,EAAA5kE,EAAA2E,EAAAm/D,UAAAziE,GAAAujE,GAAAF,EAAA1kE,EAAA2E,EAAA3E,IAAA2kE,IAkCA,QAAAF,IAAAlhE,GACA,MAAAA,GAAA,GAGA,QAAA0hE,MACArjE,KAAAmzD,EAAA,GAAA/yC,MAAAjgB,UAAAV,OAAA,EAAA2gB,KAAAkjD,IAAApjE,MAAAF,KAAAG,qBAAA,IAiEA,QAAAojE,IAAArN,EAAAjyD,EAAAk7B,GACA,QAAAqP,GAAAzzB,GACA,GAAA8wC,GAAAqK,EAAAn7C,GAAA0zB,EAAAuY,EAAA6E,EAAA,EACA,OAAA9wC,GAAA8wC,EAAApd,EAAA1zB,EAAA8wC,EAAApd,EAEA,QAAAt+B,GAAA4K,GAEA,MADA9W,GAAA8W,EAAAm7C,EAAA,GAAAsN,IAAAzoD,EAAA,OACAA,EAEA,QAAAisC,GAAAjsC,EAAAu9B,GAEA,MADAr0C,GAAA8W,EAAA,GAAAyoD,KAAAzoD,GAAAu9B,GACAv9B,EAEA,QAAAtS,GAAAy4D,EAAAjmB,EAAAwoB,GACA,GAAArpD,GAAAjK,EAAA+wD,GAAAwC,IACA,IAAAD,EAAA,EACA,KAAArpD,EAAA6gC,GACA9b,EAAA/kB,GAAAqpD,GAAAC,EAAAxxD,KAAA,GAAAkO,OAAAhG,IACAnW,EAAAmW,EAAA,OAGA,MAAAA,EAAA6gC,GAAAyoB,EAAAxxD,KAAA,GAAAkO,OAAAhG,IAAAnW,EAAAmW,EAAA,EAEA,OAAAspD,GAEA,QAAAC,GAAAzC,EAAAjmB,EAAAwoB,GACA,IACAD,GAAAH,EACA,IAAArgD,GAAA,GAAAqgD,GAEA,OADArgD,GAAAmwC,EAAA+N,EACAz4D,EAAAua,EAAAi4B,EAAAwoB,GACO,QACPD,GAAApjD,MAGA81C,EAAA0N,MAAA1N,EACAA,EAAA1nB,QACA0nB,EAAA/lD,OACA+lD,EAAAlP,SACAkP,EAAAztD,OACA,IAAAua,GAAAkzC,EAAAlzC,IAAA6gD,GAAA3N,EAMA,OALAlzC,GAAA4gD,MAAA5gD,EACAA,EAAAwrB,MAAAq1B,GAAAr1B,GACAxrB,EAAA7S,KAAA0zD,GAAA1zD,GACA6S,EAAAgkC,OAAA6c,GAAA7c,GACAhkC,EAAAva,MAAAk7D,EACAzN,EAEA,QAAA2N,IAAA7P,GACA,gBAAAj5C,EAAAu9B,GACA,IACAkrB,GAAAH,EACA,IAAArgD,GAAA,GAAAqgD,GAEA,OADArgD,GAAAmwC,EAAAp4C,EACAi5C,EAAAhxC,EAAAs1B,GAAA6a,EACO,QACPqQ,GAAApjD,OAoDA,QAAA0jD,IAAArC,GAEA,QAAAsC,GAAAC,GAEA,QAAA7sD,GAAA4D,GAEA,IADA,GAAAwqB,GAAA5lB,EAAAwU,EAAAtsB,KAAArI,GAAA,EAAAyiC,EAAA,IACAziC,EAAAT,GACA,KAAAilE,EAAAC,WAAAzkE,KACAqI,EAAAqK,KAAA8xD,EAAA1vD,MAAA2tB,EAAAziC,IACA,OAAAmgB,EAAAukD,GAAA3+B,EAAAy+B,EAAA/vD,SAAAzU,OAAA+lC,EAAAy+B,EAAA/vD,SAAAzU,KACA20B,EAAAgwC,EAAA5+B,QAAApR,EAAApZ,EAAA,MAAA4E,EAAA,MAAA4lB,EAAA,QAAA5lB,IACA9X,EAAAqK,KAAAqzB,GACAtD,EAAAziC,EAAA,EAIA,OADAqI,GAAAqK,KAAA8xD,EAAA1vD,MAAA2tB,EAAAziC,IACAqI,EAAAs6D,KAAA,IAbA,GAAApjE,GAAAilE,EAAAvkE,MAwCA,OAzBA0X,GAAAwd,MAAA,SAAA9sB,GACA,GAAAyI,IACAxO,EAAA,KACAk3D,EAAA,EACA1oD,EAAA,EACA8zD,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,KAEA,IADSC,EAAAn0D,EAAA0zD,EAAAn8D,EAAA,IACTA,EAAApI,OAAA,WACA,MAAA6Q,OAAA8zD,EAAA9zD,EAAA8zD,EAAA,MAAA9zD,EAAAqP,EACA,IAAA+kD,GAAA,MAAAp0D,EAAAk0D,GAAAhB,KAAAH,GAAAtoD,EAAA,IAAA2pD,EAAArB,GAAAG,GAOA,OANA,KAAAlzD,GAAAyK,EAAA4pD,YAAAr0D,EAAAxO,EAAA,EAAAwO,EAAA2xB,GAAoD,KAAA3xB,IAAA,KAAAA,IACpD,KAAAA,OAAAwC,EAAA,KAAAxC,GAAA,KACAyK,EAAA4pD,YAAAr0D,EAAAxO,EAAA,KACAiZ,EAAA4pD,YAAAr0D,EAAAxO,EAAA,OAAAwO,MAAAwC,EAAA,OAAAxC,EAAAs0D,GAAA7pD,EAAAwI,SAAA,KAAAjT,EAAAwC,EAAA,EAAAxC,EAAAu0D,GAAA9pD,EAAAwI,SAAA,OACSxI,EAAA4pD,YAAAr0D,EAAAxO,EAAAwO,EAAA0oD,EAAA1oD,KACTyK,EAAA+pD,SAAAx0D,EAAA8zD,GAAA9zD,EAAAk0D,EAAA,OAAAl0D,EAAA+zD,EAAA/zD,EAAAk0D,EAAA,IAAAl0D,EAAAg0D,EAAAh0D,EAAAi0D,GACAG,EAAA3pD,EAAAo4C,EAAAp4C,GAEA5D,EAAA1C,SAAA,WACA,MAAAuvD,IAEA7sD,EAEA,QAAAstD,GAAA1pD,EAAAipD,EAAAn8D,EAAAo6B,GAEA,IADA,GAAAsD,GAAA5lB,EAAAsQ,EAAAzwB,EAAA,EAAAT,EAAAilE,EAAAvkE,OAAAu5D,EAAAnxD,EAAApI,OACAD,EAAAT,GAAA,CACA,GAAAkjC,GAAA+2B,EAAA,QAEA,UADAzzB,EAAAy+B,EAAAC,WAAAzkE,OAIA,GAFAywB,EAAA+zC,EAAA/vD,OAAAzU,OACAmgB,EAAAolD,EAAA90C,IAAAi0C,IAAAF,EAAA/vD,OAAAzU,KAAAywB,MACAgS,EAAAtiB,EAAA5E,EAAAlT,EAAAo6B,IAAA,eACS,IAAAsD,GAAA19B,EAAAo8D,WAAAhiC,KACT,SAGA,MAAAA,GA2HA,QAAA+iC,GAAAjqD,EAAAlT,EAAArI,GACAylE,EAAA3N,UAAA,CACA,IAAAv4D,GAAAkmE,EAAAzG,KAAA32D,EAAAyM,MAAA9U,GACA,OAAAT,IAAAgc,EAAAjI,EAAAoyD,EAAAv+D,IAAA5H,EAAA,GAAA2xC,eAAAlxC,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAA0lE,GAAApqD,EAAAlT,EAAArI,GACA4lE,EAAA9N,UAAA,CACA,IAAAv4D,GAAAqmE,EAAA5G,KAAA32D,EAAAyM,MAAA9U,GACA,OAAAT,IAAAgc,EAAAjI,EAAAuyD,EAAA1+D,IAAA5H,EAAA,GAAA2xC,eAAAlxC,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAA6lE,GAAAvqD,EAAAlT,EAAArI,GACA+lE,EAAAjO,UAAA,CACA,IAAAv4D,GAAAwmE,EAAA/G,KAAA32D,EAAAyM,MAAA9U,GACA,OAAAT,IAAAgc,EAAAi+C,EAAAwM,EAAA7+D,IAAA5H,EAAA,GAAA2xC,eAAAlxC,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAAgmE,GAAA1qD,EAAAlT,EAAArI,GACAkmE,EAAApO,UAAA,CACA,IAAAv4D,GAAA2mE,EAAAlH,KAAA32D,EAAAyM,MAAA9U,GACA,OAAAT,IAAAgc,EAAAi+C,EAAA2M,EAAAh/D,IAAA5H,EAAA,GAAA2xC,eAAAlxC,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAAmmE,GAAA7qD,EAAAlT,EAAArI,GACA,MAAAilE,GAAA1pD,EAAAopD,EAAA5+B,EAAA9wB,WAAA5M,EAAArI,GAEA,QAAAqmE,GAAA9qD,EAAAlT,EAAArI,GACA,MAAAilE,GAAA1pD,EAAAopD,EAAAxiE,EAAA8S,WAAA5M,EAAArI,GAEA,QAAAsmE,GAAA/qD,EAAAlT,EAAArI,GACA,MAAAilE,GAAA1pD,EAAAopD,EAAA4B,EAAAtxD,WAAA5M,EAAArI,GAEA,QAAAwmE,GAAAjrD,EAAAlT,EAAArI,GACA,GAAAT,GAAAknE,EAAAt/D,IAAAkB,EAAAyM,MAAA9U,KAAA,GAAAkxC,cACA,cAAA3xC,GAAA,GAAAgc,EAAA4E,EAAA5gB,EAAAS,GAnNA,GAAA0mE,GAAAzE,EAAA0E,SAAAC,EAAA3E,EAAA1mD,KAAAsrD,EAAA5E,EAAArnD,KAAAksD,EAAA7E,EAAA8E,QAAAC,EAAA/E,EAAAgF,KAAAC,EAAAjF,EAAAkF,UAAAC,EAAAnF,EAAAoF,OAAAC,EAAArF,EAAAsF,WA2DAhD,GAAA/gD,IAAA,SAAAghD,GAEA,QAAA7sD,GAAA4D,GACA,IACAyoD,GAAAH,EACA,IAAArgD,GAAA,GAAAwgD,GAEA,OADAxgD,GAAAmwC,EAAAp4C,EACAm7C,EAAAlzC,GACS,QACTwgD,GAAApjD,MARA,GAAA81C,GAAA6N,EAAAC,EAqBA,OAVA7sD,GAAAwd,MAAA,SAAA9sB,GACA,IACA27D,GAAAH,EACA,IAAAtoD,GAAAm7C,EAAAvhC,MAAA9sB,EACA,OAAAkT,MAAAo4C,EACS,QACTqQ,GAAApjD,OAGAjJ,EAAA1C,SAAAyhD,EAAAzhD,SACA0C,GAEA4sD,EAAA7gD,MAAA6gD,EAAA/gD,IAAAE,MAAA8jD,EACA,IAAAf,GAAA39D,GAAAsL,MAAAwxD,EAAA6B,GAAAT,GAAAnB,EAAA6B,GAAAV,GAAAvB,EAAAgC,GAAAP,GAAAxB,EAAAgC,GAAAR,GAAAhB,EAAAuB,GAAAL,GAAAjB,EAAAuB,GAAAN,GAAArB,EAAA0B,GAAAH,GAAAtB,EAAA0B,GAAAJ,EACAR,GAAAh8D,QAAA,SAAAqV,EAAAngB,GACAymE,EAAAvuC,IAAA/X,EAAA+wB,cAAAlxC,IAEA,IAAA2kE,IACA/jE,EAAA,SAAAkQ,GACA,MAAAo2D,GAAAp2D,EAAAiT,WAEA4jD,EAAA,SAAA72D,GACA,MAAAk2D,GAAAl2D,EAAAiT,WAEAjD,EAAA,SAAAhQ,GACA,MAAAw2D,GAAAx2D,EAAAmT,aAEA2jD,EAAA,SAAA92D,GACA,MAAAs2D,GAAAt2D,EAAAmT,aAEA8hB,EAAAw+B,EAAAmC,GACA51D,EAAA,SAAAA,EAAAqP,GACA,MAAA0nD,IAAA/2D,EAAAkT,UAAA7D,EAAA,IAEAmO,EAAA,SAAAxd,EAAAqP,GACA,MAAA0nD,IAAA/2D,EAAAkT,UAAA7D,EAAA,IAEAykD,EAAA,SAAA9zD,EAAAqP,GACA,MAAA0nD,IAAA/2D,EAAAgT,WAAA3D,EAAA,IAEA2nD,EAAA,SAAAh3D,EAAAqP,GACA,MAAA0nD,IAAA/2D,EAAAgT,WAAA,OAAA3D,EAAA,IAEAsiB,EAAA,SAAA3xB,EAAAqP,GACA,MAAA0nD,IAAA,EAAAE,GAAAC,UAAAl3D,GAAAqP,EAAA,IAEA4kD,EAAA,SAAAj0D,EAAAqP,GACA,MAAA0nD,IAAA/2D,EAAA6S,kBAAAxD,EAAA,IAEAq5C,EAAA,SAAA1oD,EAAAqP,GACA,MAAA0nD,IAAA/2D,EAAAmT,WAAA,EAAA9D,EAAA,IAEA0kD,EAAA,SAAA/zD,EAAAqP,GACA,MAAA0nD,IAAA/2D,EAAA+S,aAAA1D,EAAA,IAEAA,EAAA,SAAArP,GACA,MAAAg2D,KAAAh2D,EAAAgT,YAAA,MAEAghD,EAAA,SAAAh0D,EAAAqP,GACA,MAAA0nD,IAAA/2D,EAAA8S,aAAAzD,EAAA,IAEAklD,EAAA,SAAAv0D,EAAAqP,GACA,MAAA0nD,IAAAE,GAAAE,aAAAn3D,GAAAqP,EAAA,IAEA7M,EAAA,SAAAxC,GACA,MAAAA,GAAAiT,UAEAqhD,EAAA,SAAAt0D,EAAAqP,GACA,MAAA0nD,IAAAE,GAAAG,aAAAp3D,GAAAqP,EAAA,IAEAhe,EAAAoiE,EAAAqC,GACAL,EAAAhC,EAAAsC,GACAvkE,EAAA,SAAAwO,EAAAqP,GACA,MAAA0nD,IAAA/2D,EAAAoxC,cAAA,IAAA/hC,EAAA,IAEAgoD,EAAA,SAAAr3D,EAAAqP,GACA,MAAA0nD,IAAA/2D,EAAAoxC,cAAA,IAAA/hC,EAAA,IAEA6kD,EAAAoD,GACAC,IAAA,WACA,YAGA9C,GACA3kE,EAAA4kE,EACAmC,EAAAhC,EACA7kD,EAAAglD,EACA8B,EAAA3B,EACAlgC,EAAAqgC,EACAt1D,EAAAw3D,GACAh6C,EAAAg6C,GACA1D,EAAA2D,GACAT,EAAAS,GACA9lC,EAAA+lC,GACAzD,EAAA0D,GACAjP,EAAAkP,GACA7D,EAAA8D,GACAxoD,EAAAqmD,EACA1B,EAAA8D,GACAvD,EAAAwD,GACAv1D,EAAAw1D,GACA1D,EAAA2D,GACA5mE,EAAAkkE,EACAE,EAAAD,EACAhkE,EAAA0mE,GACAb,EAAAc,GACAjE,EAAAkE,GACAb,IAAAc,GAmCA,OAAA5E,GAOA,QAAAsD,IAAAjpE,EAAAkkE,EAAAp/D,GACA,GAAA27B,GAAAzgC,EAAA,SAAAyJ,GAAAg3B,GAAAzgC,KAAA,GAAAqB,EAAAoI,EAAApI,MACA,OAAAo/B,IAAAp/B,EAAAyD,EAAA,GAAA2M,OAAA3M,EAAAzD,EAAA,GAAA0iE,KAAAG,GAAAz6D,KAEA,QAAAo/D,IAAA9lC,GACA,UAAA01B,QAAA,OAAA11B,EAAAvtB,IAAAtL,GAAAwuD,SAAAqL,KAAA,cAEA,QAAA+E,IAAA/lC,GAEA,IADA,GAAAvtB,GAAA,GAAAs/C,GAAA1zD,GAAA,EAAAT,EAAAoiC,EAAA1hC,SACAD,EAAAT,GAAA6U,EAAA8jB,IAAAyJ,EAAA3hC,GAAAkxC,cAAAlxC,EACA,OAAAoU,GAEA,QAAA00D,IAAAvtD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,IAAAgc,EAAAjI,GAAA/T,EAAA,GAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAA4oE,IAAAttD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,GACA,OAAAT,IAAAgc,EAAA8pD,GAAA9lE,EAAA,GAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAA8oE,IAAAxtD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,GACA,OAAAT,IAAAgc,EAAA6pD,GAAA7lE,EAAA,GAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAAgpE,IAAA1tD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,IAAAgc,EAAAjZ,GAAA/C,EAAA,GAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAA+oE,IAAAztD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,IAAAgc,EAAAjZ,EAAA+mE,IAAA9pE,EAAA,IAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAAipE,IAAA3tD,EAAAlT,EAAArI,GACA,oBAAsB+3D,KAAA1vD,IAAAyM,MAAA9U,IAAA,KAAAub,EAAAypD,GAAA38D,EACtBrI,EAAA,MAEA,QAAAqpE,IAAAv4D,GACA,MAAAA,MAAA,aAEA,QAAA43D,IAAAntD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,IAAAgc,EAAAi+C,EAAAj6D,EAAA,KAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAAqoE,IAAA/sD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,IAAAgc,EAAAzK,GAAAvR,EAAA,GAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAAuoE,IAAAjtD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,IAAAgc,EAAAknB,GAAAljC,EAAA,GAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAAsoE,IAAAhtD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,IAAAgc,EAAAqpD,GAAArlE,EAAA,GAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAA0oE,IAAAptD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,IAAAgc,EAAAspD,GAAAtlE,EAAA,GAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAA2oE,IAAArtD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,IAAAgc,EAAAupD,GAAAvlE,EAAA,GAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAAwoE,IAAAltD,EAAAlT,EAAArI,GACAopE,GAAAtR,UAAA,CACA,IAAAv4D,GAAA6pE,GAAApK,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,IAAAgc,EAAAwpD,GAAAxlE,EAAA,GAAAS,EAAAT,EAAA,GAAAU,SAAA,EAEA,QAAAmoE,IAAAt3D,GACA,GAAAshD,GAAAthD,EAAAw4D,oBAAAC,EAAAnX,EAAA,UAAAoX,EAAAv+B,GAAAmnB,GAAA,KAAAqX,EAAAx+B,GAAAmnB,GAAA,EACA,OAAAmX,GAAA1B,GAAA2B,EAAA,OAAA3B,GAAA4B,EAAA,OAEA,QAAAN,IAAA5tD,EAAAlT,EAAArI,GACA0pE,GAAA5R,UAAA,CACA,IAAAv4D,GAAAmqE,GAAA1K,KAAA32D,EAAAyM,MAAA9U,IAAA,GACA,OAAAT,GAAAS,EAAAT,EAAA,GAAAU,QAAA,EAEA,QAAAunE,IAAAmC,GAEA,IADA,GAAApqE,GAAAoqE,EAAA1pE,OAAAD,GAAA,IACAA,EAAAT,GAAAoqE,EAAA3pE,GAAA,GAAAQ,KAAAmpE,EAAA3pE,GAAA,GACA,iBAAAub,GAEA,IADA,GAAAvb,GAAA,EAAA20B,EAAAg1C,EAAA3pE,IACA20B,EAAA,GAAApZ,IAAAoZ,EAAAg1C,IAAA3pE,EACA,OAAA20B,GAAA,GAAApZ,IAyBA,QAAAquD,OAiBA,QAAAC,IAAAjpE,EAAAkgB,EAAA3Q,GACA,GAAAhO,GAAAgO,EAAAkE,EAAAzT,EAAAkgB,EAAAgpD,EAAA3nE,EAAAvB,EAAAmpE,EAAA5nE,EAAA2nE,CACA35D,GAAAsgB,EAAA7vB,EAAAmpE,GAAAjpD,EAAAgpD,GASA,QAAAE,IAAAC,EAAA9U,GACA8U,GAAAC,GAAA3kE,eAAA0kE,EAAAnnE,OACAonE,GAAAD,EAAAnnE,MAAAmnE,EAAA9U,GA2CA,QAAAgV,IAAAC,EAAAjV,EAAAkV,GACA,GAAAC,GAAAtqE,GAAA,EAAAT,EAAA6qE,EAAAnqE,OAAAoqE,CAEA,KADAlV,EAAAoV,cACAvqE,EAAAT,GAAA+qE,EAAAF,EAAApqE,GAAAm1D,EAAAhtD,MAAAmiE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAnV,GAAAqV,UAEA,QAAAC,IAAAL,EAAAjV,GACA,GAAAn1D,IAAA,EAAAT,EAAA6qE,EAAAnqE,MAEA,KADAk1D,EAAAuV,iBACA1qE,EAAAT,GAAA4qE,GAAAC,EAAApqE,GAAAm1D,EAAA,EACAA,GAAAwV,aAyBA,QAAAC,MAOA,QAAAC,GAAAC,EAAAC,GACAD,GAAA5M,GACA6M,IAAA7M,GAAA,EAAAxB,GAAA,CACA,IAAAsO,GAAAF,EAAAG,EAAAC,EAAAF,GAAA,OAAAG,EAAAD,EAAAF,EAAAI,EAAA16D,KAAAs6B,IAAA+/B,GAAAM,EAAA36D,KAAAoF,IAAAi1D,GAAAjyB,EAAAwyB,EAAAD,EAAAE,EAAAC,EAAAJ,EAAAtyB,EAAApoC,KAAAs6B,IAAAmgC,GAAAl7D,EAAA6oC,EAAAoyB,EAAAx6D,KAAAoF,IAAAq1D,EACAM,IAAA/6C,IAAAhgB,KAAA+tD,MAAAxuD,EAAAs7D,IACAN,EAAAH,EAAAU,EAAAJ,EAAAE,EAAAD,EAXA,GAAAK,GAAAC,EAAAV,EAAAO,EAAAF,CACAM,IAAAzjE,MAAA,SAAA2iE,EAAAC,GACAa,GAAAzjE,MAAA0iE,EACAI,GAAAS,EAAAZ,GAAA5M,GAAAsN,EAAA96D,KAAAs6B,IAAA+/B,GAAAY,EAAAZ,GAAA7M,GAAA,EAAAxB,GAAA,GACA4O,EAAA56D,KAAAoF,IAAAi1D,IASAa,GAAApB,QAAA,WACAK,EAAAa,EAAAC,IAGA,QAAAE,IAAAC,GACA,GAAAhB,GAAAgB,EAAA,GAAAf,EAAAe,EAAA,GAAAV,EAAA16D,KAAAs6B,IAAA+/B,EACA,QAAAK,EAAA16D,KAAAs6B,IAAA8/B,GAAAM,EAAA16D,KAAAoF,IAAAg1D,GAAAp6D,KAAAoF,IAAAi1D,IAEA,QAAAgB,IAAAnrE,EAAAkgB,GACA,MAAAlgB,GAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,GAEA,QAAAkrD,IAAAprE,EAAAkgB,GACA,OAAAlgB,EAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,IAEA,QAAAmrD,IAAArrE,EAAAkgB,GACAlgB,EAAA,IAAAkgB,EAAA,GACAlgB,EAAA,IAAAkgB,EAAA,GACAlgB,EAAA,IAAAkgB,EAAA,GAEA,QAAAorD,IAAAC,EAAArzB,GACA,OAAAqzB,EAAA,GAAArzB,EAAAqzB,EAAA,GAAArzB,EAAAqzB,EAAA,GAAArzB,GAEA,QAAAszB,IAAAt7D,GACA,GAAA+1C,GAAAn2C,KAAAm6B,KAAA/5B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAA+1C,EACA/1C,EAAA,IAAA+1C,EACA/1C,EAAA,IAAA+1C,EAEA,QAAAwlB,IAAAC,GACA,OAAA57D,KAAA+tD,MAAA6N,EAAA,GAAAA,EAAA,IAAA1P,GAAA0P,EAAA,KAEA,QAAAC,IAAA3rE,EAAAkgB,GACA,MAAAmqB,IAAArqC,EAAA,GAAAkgB,EAAA,IAAA0rD,IAAAvhC,GAAArqC,EAAA,GAAAkgB,EAAA,IAAA0rD,GA2JA,QAAAC,IAAA3B,EAAAC,GACAD,GAAA5M,EACA,IAAAkN,GAAA16D,KAAAs6B,IAAA+/B,GAAA7M,GACAwO,IAAAtB,EAAA16D,KAAAs6B,IAAA8/B,GAAAM,EAAA16D,KAAAoF,IAAAg1D,GAAAp6D,KAAAoF,IAAAi1D,IAEA,QAAA2B,IAAAvqE,EAAAG,EAAA8vD,KACAua,GACAC,KAAAzqE,EAAAyqE,IAAAD,GACAE,KAAAvqE,EAAAuqE,IAAAF,GACAG,KAAA1a,EAAA0a,IAAAH,GAEA,QAAAI,MAWA,QAAAlC,GAAAC,EAAAC,GACAD,GAAA5M,EACA,IAAAkN,GAAA16D,KAAAs6B,IAAA+/B,GAAA7M,IAAA/7D,EAAAipE,EAAA16D,KAAAs6B,IAAA8/B,GAAAxoE,EAAA8oE,EAAA16D,KAAAoF,IAAAg1D,GAAA1Y,EAAA1hD,KAAAoF,IAAAi1D,GAAAz3D,EAAA5C,KAAA+tD,MAAA/tD,KAAAm6B,MAAAv3B,EAAA42C,EAAAkI,EAAA4a,EAAA1qE,GAAAgR,KAAA05D,EAAA7qE,EAAAspD,EAAA2G,GAAA9+C,KAAAm4C,EAAAnpD,EAAA4nD,EAAA/nD,GAAAmR,GAAAm4C,EAAAtpD,EAAA+nD,EAAA5nD,EAAA0qE,EAAA5a,EACA6a,KAAA35D,EACA45D,IAAA55D,GAAAm4C,KAAAtpD,IACAgrE,IAAA75D,GAAA42C,KAAA5nD,IACA8qE,IAAA95D,GAAA05D,KAAA5a,IACAsa,GAAAjhB,EAAAvB,EAAA8iB,GAjBA,GAAAvhB,GAAAvB,EAAA8iB,CACAK,IAAAllE,MAAA,SAAA2iE,EAAAC,GACAD,GAAA5M,EACA,IAAAkN,GAAA16D,KAAAs6B,IAAA+/B,GAAA7M,GACAzS,GAAA2f,EAAA16D,KAAAs6B,IAAA8/B,GACA5gB,EAAAkhB,EAAA16D,KAAAoF,IAAAg1D,GACAkC,EAAAt8D,KAAAoF,IAAAi1D,GACAsC,GAAAllE,MAAA0iE,EACA6B,GAAAjhB,EAAAvB,EAAA8iB,IAYA,QAAAM,MACAD,GAAAllE,MAAAskE,GAEA,QAAAc,MAiBA,QAAA1C,GAAAC,EAAAC,GACAD,GAAA5M,EACA,IAAAkN,GAAA16D,KAAAs6B,IAAA+/B,GAAA7M,IAAA/7D,EAAAipE,EAAA16D,KAAAs6B,IAAA8/B,GAAAxoE,EAAA8oE,EAAA16D,KAAAoF,IAAAg1D,GAAA1Y,EAAA1hD,KAAAoF,IAAAi1D,GAAA59C,EAAA+8B,EAAAkI,EAAA4a,EAAA1qE,EAAA8qB,EAAA4/C,EAAA7qE,EAAAspD,EAAA2G,EAAAob,EAAA/hB,EAAAnpD,EAAA4nD,EAAA/nD,EAAAq3D,EAAA9oD,KAAAm6B,KAAA1d,IAAAC,IAAAogD,KAAAjC,EAAA9f,EAAAtpD,EAAA+nD,EAAA5nD,EAAA0qE,EAAA5a,EAAAniD,EAAAupD,IAAAiD,GAAA8O,GAAA/R,EAAAlmD,EAAA5C,KAAA+tD,MAAAjF,EAAA+R,EACAkC,KAAAx9D,EAAAkd,EACAugD,IAAAz9D,EAAAmd,EACAugD,IAAA19D,EAAAu9D,EACAP,IAAA35D,EACA45D,IAAA55D,GAAAm4C,KAAAtpD,IACAgrE,IAAA75D,GAAA42C,KAAA5nD,IACA8qE,IAAA95D,GAAA05D,KAAA5a,IACAsa,GAAAjhB,EAAAvB,EAAA8iB,GA1BA,GAAAtB,GAAAC,EAAAlgB,EAAAvB,EAAA8iB,CACAK,IAAAllE,MAAA,SAAA2iE,EAAAC,GACAW,EAAAZ,EAAAa,EAAAZ,EACAsC,GAAAllE,MAAA0iE,EACAC,GAAA5M,EACA,IAAAkN,GAAA16D,KAAAs6B,IAAA+/B,GAAA7M,GACAzS,GAAA2f,EAAA16D,KAAAs6B,IAAA8/B,GACA5gB,EAAAkhB,EAAA16D,KAAAoF,IAAAg1D,GACAkC,EAAAt8D,KAAAoF,IAAAi1D,GACA2B,GAAAjhB,EAAAvB,EAAA8iB,IAEAK,GAAA7C,QAAA,WACAK,EAAAa,EAAAC,GACA0B,GAAA7C,QAAA8C,GACAD,GAAAllE,MAAAskE,IAeA,QAAAmB,IAAAhtE,EAAAkgB,GACA,QAAA+sD,GAAA1rE,EAAAG,GACA,MAAAH,GAAAvB,EAAAuB,EAAAG,GAAAwe,EAAA3e,EAAA,GAAAA,EAAA,IAKA,MAHAvB,GAAAktE,QAAAhtD,EAAAgtD,SAAAD,EAAAC,OAAA,SAAA3rE,EAAAG,GACA,OAAAH,EAAA2e,EAAAgtD,OAAA3rE,EAAAG,KAAA1B,EAAAktE,OAAA3rE,EAAA,GAAAA,EAAA,MAEA0rE,EAEA,QAAAE,MACA,SAEA,QAAAC,IAAAC,EAAAhb,EAAAib,EAAAp/B,EAAAqmB,GACA,GAAAgZ,MAAAC,IAuBA,IAtBAH,EAAAnjE,QAAA,SAAAujE,GACA,MAAA9uE,EAAA8uE,EAAApuE,OAAA,QACA,GAAAV,GAAA+uE,EAAAD,EAAA,GAAAE,EAAAF,EAAA9uE,EACA,IAAAgtE,GAAA+B,EAAAC,GAAA,CACApZ,EAAAoV,WACA,QAAAvqE,GAAA,EAAuBA,EAAAT,IAAOS,EAAAm1D,EAAAhtD,OAAAmmE,EAAAD,EAAAruE,IAAA,GAAAsuE,EAAA,GAE9B,YADAnZ,GAAAqV,UAGA,GAAA5pE,GAAA,GAAA4tE,IAAAF,EAAAD,EAAA,SAAAvtD,EAAA,GAAA0tD,IAAAF,EAAA,KAAA1tE,GAAA,EACAA,GAAAuP,EAAA2Q,EACAqtD,EAAAz7D,KAAA9R,GACAwtE,EAAA17D,KAAAoO,GACAlgB,EAAA,GAAA4tE,IAAAD,EAAAF,EAAA,SACAvtD,EAAA,GAAA0tD,IAAAD,EAAA,KAAA3tE,GAAA,GACAA,EAAAuP,EAAA2Q,EACAqtD,EAAAz7D,KAAA9R,GACAwtE,EAAA17D,KAAAoO,MAEAstD,EAAAvtD,KAAAoyC,GACAwb,GAAAN,GACAM,GAAAL,GACAD,EAAAluE,OAAA,CACA,OAAAD,GAAA,EAAA0uE,EAAAR,EAAA3uE,EAAA6uE,EAAAnuE,OAA6DD,EAAAT,IAAOS,EACpEouE,EAAApuE,GAAAsuB,EAAAogD,IAGA,KADA,GAAAzuC,GAAA93B,EAAAmK,EAAA67D,EAAA,KACA,CAEA,IADA,GAAA1wB,GAAAnrC,EAAAq8D,GAAA,EACAlxB,EAAAxtC,GAAA,IAAAwtC,IAAAl+C,KAAA+S,EAAA,MACA2tB,GAAAwd,EAAA2U,EACA+C,EAAAoV,WACA,IAEA,GADA9sB,EAAAxtC,EAAAwtC,EAAAttC,EAAAF,GAAA,EACAwtC,EAAAnvB,EAAA,CACA,GAAAqgD,EACA,OAAA3uE,GAAA,EAAAT,EAAA0gC,EAAAhgC,OAA8CD,EAAAT,IAAOS,EAAAm1D,EAAAhtD,SAAA83B,EAAAjgC,IAAA,GAAAmI,EAAA,QAErD2mC,GAAA2O,EAAAt7C,EAAAs7C,EAAAl+C,EAAA4C,EAAA,EAAAgzD,EAEA1X,KAAAl+C,MACS,CACT,GAAAovE,EAAA,CACA1uC,EAAAwd,EAAAt9B,EAAAiyC,CACA,QAAApyD,GAAAigC,EAAAhgC,OAAA,EAA2CD,GAAA,IAAQA,EAAAm1D,EAAAhtD,SAAA83B,EAAAjgC,IAAA,GAAAmI,EAAA,QAEnD2mC,GAAA2O,EAAAt7C,EAAAs7C,EAAAt9B,EAAAhe,GAAA,EAAAgzD,EAEA1X,KAAAt9B,EAEAs9B,IAAAttC,EACA8vB,EAAAwd,EAAA2U,EACAuc,YACOlxB,EAAAxtC,EACPklD,GAAAqV,YAGA,QAAAiE,IAAAzmE,GACA,GAAAzI,EAAAyI,EAAA/H,OAAA,CAEA,IADA,GAAAV,GAAAuhB,EAAA9gB,EAAA,EAAAY,EAAAoH,EAAA,KACAhI,EAAAT,GACAqB,EAAArB,EAAAuhB,EAAA9Y,EAAAhI,GACA8gB,EAAAX,EAAAvf,EACAA,EAAAkgB,CAEAlgB,GAAArB,EAAAuhB,EAAA9Y,EAAA,GACA8Y,EAAAX,EAAAvf,GAEA,QAAA4tE,IAAArmE,EAAA83B,EAAA2uC,EAAAF,GACAluE,KAAA2B,EAAAgG,EACA3H,KAAA4xD,EAAAnyB,EACAz/B,KAAA2P,EAAAy+D,EACApuE,KAAA8tB,EAAAogD,EACAluE,KAAAyP,GAAA,EACAzP,KAAAjB,EAAAiB,KAAA2f,EAAA,KAEA,QAAA0uD,IAAAC,EAAAC,EAAAjgC,EAAAkgC,GACA,gBAAAt5D,EAAAy/C,GAuCA,QAAAhtD,GAAA2iE,EAAAC,GACA,GAAA5iE,GAAAuN,EAAAo1D,EAAAC,EACA+D,GAAAhE,EAAA3iE,EAAA,GAAA4iE,EAAA5iE,EAAA,KAAAgtD,EAAAhtD,MAAA2iE,EAAAC,GAEA,QAAAkE,GAAAnE,EAAAC,GACA,GAAA5iE,GAAAuN,EAAAo1D,EAAAC,EACAlpE,GAAAsG,QAAA,GAAAA,EAAA,IAEA,QAAAoiE,KACA6D,EAAAjmE,MAAA8mE,EACAptE,EAAA0oE,YAEA,QAAAC,KACA4D,EAAAjmE,QACAtG,EAAA2oE,UAIA,QAAA0E,GAAApE,EAAAC,GACAoE,EAAAz8D,MAAAo4D,EAAAC,GACA,IAAA5iE,GAAAuN,EAAAo1D,EAAAC,EACAqE,GAAAjnE,QAAA,GAAAA,EAAA,IAEA,QAAAknE,KACAD,EAAA7E,YACA4E,KAEA,QAAAG,KACAJ,EAAAC,EAAA,MAAAA,EAAA,OACAC,EAAA5E,SACA,IAAA6D,GAAAkB,EAAAH,EAAAG,QAAAC,EAAAC,WAAAlwE,EAAAiwE,EAAAvvE,MAIA,IAHAkvE,EAAAO,MACAC,EAAAj9D,KAAAy8D,GACAA,EAAA,KACA5vE,EACA,KAAAgwE,EAAA,CACAlB,EAAAmB,EAAA,EACA,IAAArnE,GAAA5I,EAAA8uE,EAAApuE,OAAA,EAAAD,GAAA,CACA,IAAAT,EAAA,GAGA,IAFAqwE,IAAAza,EAAAuV,eAAAkF,GAAA,GACAza,EAAAoV,cACAvqE,EAAAT,GAAA41D,EAAAhtD,SAAAkmE,EAAAruE,IAAA,GAAAmI,EAAA,GACAgtD,GAAAqV,eAIAjrE,GAAA,KAAAgwE,GAAAC,EAAA98D,KAAA88D,EAAAE,MAAAz7D,OAAAu7D,EAAAv4B,UACAg3B,EAAAv7D,KAAA88D,EAAAlpD,OAAAupD,KArFA,GAsDA5B,GACA0B,EAAAR,EAvDAttE,EAAAktE,EAAA5Z,GAAA2a,EAAAp6D,EAAAo4D,OAAAkB,EAAA,GAAAA,EAAA,IACAZ,GACAjmE,QACAoiE,YACAC,UACAE,aAAA,WACA0D,EAAAjmE,MAAA+mE,EACAd,EAAA7D,UAAA8E,EACAjB,EAAA5D,QAAA8E,EACArB,KACA0B,MAEAhF,WAAA,WACAyD,EAAAjmE,QACAimE,EAAA7D,YACA6D,EAAA5D,UACAyD,EAAAnlE,GAAAm9B,MAAAgoC,EACA,IAAAC,GAAA6B,GAAAD,EAAAH,EACA1B,GAAAhuE,QACA2vE,IAAAza,EAAAuV,eAAAkF,GAAA,GACA5B,GAAAC,EAAA+B,GAAA9B,EAAAp/B,EAAAqmB,IACW+Y,IACX0B,IAAAza,EAAAuV,eAAAkF,GAAA,GACAza,EAAAoV,YACAz7B,EAAA,YAAAqmB,GACAA,EAAAqV,WAEAoF,IAAAza,EAAAwV,aAAAiF,GAAA,GACA3B,EAAA0B,EAAA,MAEAM,OAAA,WACA9a,EAAAuV,eACAvV,EAAAoV,YACAz7B,EAAA,YAAAqmB,GACAA,EAAAqV,UACArV,EAAAwV,eAoBA8E,EAAAS,KAAAd,EAAAL,EAAAU,GAAAG,GAAA,CAgCA,OAAAxB,IAGA,QAAAyB,IAAAxB,GACA,MAAAA,GAAApuE,OAAA,EAEA,QAAAiwE,MACA,GAAAruE,GAAAgC,IACA,QACA0mE,UAAA,WACA1mE,EAAA6O,KAAA7Q,OAEAsG,MAAA,SAAA2iE,EAAAC,GACAlpE,EAAA6Q,MAAAo4D,EAAAC,KAEAP,QAAA3V,EACA4a,OAAA,WACA,GAAAA,GAAA5rE,CAGA,OAFAA,MACAhC,EAAA,KACA4tE,GAEAU,OAAA,WACAtsE,EAAA5D,OAAA,GAAA4D,EAAA6O,KAAA7O,EAAA6rE,MAAAz7D,OAAApQ,EAAAozC,YAIA,QAAA+4B,IAAApvE,EAAAkgB,GACA,QAAAlgB,IAAAuB,GAAA,KAAAvB,EAAA,GAAAi8D,GAAA2P,GAAA3P,GAAAj8D,EAAA,MAAAkgB,IAAA3e,GAAA,KAAA2e,EAAA,GAAA+7C,GAAA2P,GAAA3P,GAAA/7C,EAAA,IAGA,QAAAsvD,IAAAjb,GACA,GAAAoa,GAAAtE,EAAArgD,IAAAylD,EAAAzlD,IAAA0lD,EAAA1lD,GACA,QACA2/C,UAAA,WACApV,EAAAoV,YACAgF,EAAA,GAEApnE,MAAA,SAAAooE,EAAAC,GACA,GAAAC,GAAAF,EAAA,EAAA7T,OAAAsO,EAAA//B,GAAAslC,EAAAtF,EACAhgC,IAAA+/B,EAAAtO,IAAA8P,IACArX,EAAAhtD,MAAA8iE,EAAAoF,KAAAG,GAAA,IAAA3T,QACA1H,EAAAhtD,MAAAmoE,EAAAD,GACAlb,EAAAqV,UACArV,EAAAoV,YACApV,EAAAhtD,MAAAsoE,EAAAJ,GACAlb,EAAAhtD,MAAAooE,EAAAF,GACAd,EAAA,GACSe,IAAAG,GAAAzF,GAAAtO,KACTzxB,GAAAggC,EAAAqF,GAAA9D,KAAAvB,GAAAqF,EAAA9D,IACAvhC,GAAAslC,EAAAE,GAAAjE,KAAA+D,GAAAE,EAAAjE,IACA6D,EAAAK,GAAAzF,EAAAoF,EAAAE,EAAAC,GACArb,EAAAhtD,MAAAmoE,EAAAD,GACAlb,EAAAqV,UACArV,EAAAoV,YACApV,EAAAhtD,MAAAsoE,EAAAJ,GACAd,EAAA,GAEApa,EAAAhtD,MAAA8iE,EAAAsF,EAAAF,EAAAG,GACAF,EAAAG,GAEAjG,QAAA,WACArV,EAAAqV,UACAS,EAAAoF,EAAAzlD,KAEA2kD,MAAA,WACA,SAAAA,IAIA,QAAAmB,IAAAzF,EAAAoF,EAAAE,EAAAC,GACA,GAAAhF,GAAAmF,EAAAC,EAAAlgE,KAAAoF,IAAAm1D,EAAAsF,EACA,OAAAtlC,IAAA2lC,GAAApE,GAAA97D,KAAAmgE,MAAAngE,KAAAoF,IAAAu6D,IAAAM,EAAAjgE,KAAAs6B,IAAAwlC,IAAA9/D,KAAAoF,IAAAy6D,GAAA7/D,KAAAoF,IAAA06D,IAAAhF,EAAA96D,KAAAs6B,IAAAqlC,IAAA3/D,KAAAoF,IAAAm1D,KAAAO,EAAAmF,EAAAC,KAAAP,EAAAG,GAAA,EAEA,QAAAM,IAAAC,EAAA7uC,EAAA8uC,EAAA7b,GACA,GAAA4V,EACA,UAAAgG,EACAhG,EAAAiG,EAAAnU,GACA1H,EAAAhtD,OAAAu0D,GAAAqO,GACA5V,EAAAhtD,MAAA,EAAA4iE,GACA5V,EAAAhtD,MAAAu0D,GAAAqO,GACA5V,EAAAhtD,MAAAu0D,GAAA,GACAvH,EAAAhtD,MAAAu0D,IAAAqO,GACA5V,EAAAhtD,MAAA,GAAA4iE,GACA5V,EAAAhtD,OAAAu0D,IAAAqO,GACA5V,EAAAhtD,OAAAu0D,GAAA,GACAvH,EAAAhtD,OAAAu0D,GAAAqO,OACK,IAAA9/B,GAAA8lC,EAAA,GAAA7uC,EAAA,IAAAsqC,GAAA,CACL,GAAAn4D,GAAA08D,EAAA,GAAA7uC,EAAA,GAAAw6B,MACAqO,GAAAiG,EAAA38D,EAAA,EACA8gD,EAAAhtD,OAAAkM,EAAA02D,GACA5V,EAAAhtD,MAAA,EAAA4iE,GACA5V,EAAAhtD,MAAAkM,EAAA02D,OAEA5V,GAAAhtD,MAAA+5B,EAAA,GAAAA,EAAA,IAGA,QAAA6tC,IAAA5nE,EAAAwnE,GACA,GAAAsB,GAAA9oE,EAAA,GAAA+oE,EAAA/oE,EAAA,GAAAgpE,GAAAzgE,KAAAoF,IAAAm7D,IAAAvgE,KAAAs6B,IAAAimC,GAAA,GAAAG,EAAA,EAAAC,EAAA,CACA5F,IAAA9lB,OACA,QAAA3lD,GAAA,EAAAT,EAAAowE,EAAA1vE,OAAuCD,EAAAT,IAAOS,EAAA,CAC9C,GAAAmvE,GAAAQ,EAAA3vE,GAAAw5D,EAAA2V,EAAAlvE,MACA,IAAAu5D,EAEA,IADA,GAAA8X,GAAAnC,EAAA,GAAAlE,EAAAqG,EAAA,GAAAjB,EAAAiB,EAAA,KAAA5U,GAAA,EAAA4O,EAAA56D,KAAAoF,IAAAu6D,GAAA7E,EAAA96D,KAAAs6B,IAAAqlC,GAAA5tC,EAAA,IACA,CACAA,IAAA+2B,IAAA/2B,EAAA,GACAt6B,EAAAgnE,EAAA1sC,EACA,IAAAqoC,GAAA3iE,EAAA,GAAA4iE,EAAA5iE,EAAA,KAAAu0D,GAAA,EAAA2O,EAAA36D,KAAAoF,IAAAi1D,GAAAK,EAAA16D,KAAAs6B,IAAA+/B,GAAAC,EAAAF,EAAAG,EAAAC,EAAAF,GAAA,OAAAG,EAAAD,EAAAF,EAAAuG,EAAApG,EAAAzO,GAAA5jB,EAAAwyB,EAAAD,CAGA,IAFAI,GAAA/6C,IAAAhgB,KAAA+tD,MAAA3lB,EAAAoyB,EAAAx6D,KAAAoF,IAAAq1D,GAAAK,EAAAJ,EAAAtyB,EAAApoC,KAAAs6B,IAAAmgC,KACAiG,GAAAG,EAAAvG,EAAAE,EAAAsG,GAAAxG,EACAuG,EAAAtG,GAAAgG,EAAAnG,GAAAmG,EAAA,CACA,GAAAzjE,GAAAw+D,GAAAH,GAAAyF,GAAAzF,GAAA1jE,GACAikE,IAAA5+D,EACA,IAAAikE,GAAAzF,GAAAmF,EAAA3jE,EACA4+D,IAAAqF,EACA,IAAAC,IAAAH,EAAAvG,GAAA,QAAApO,GAAA6U,EAAA,KACAP,EAAAQ,GAAAR,IAAAQ,IAAAlkE,EAAA,IAAAA,EAAA,OACA6jE,GAAAE,EAAAvG,GAAA,QAGA,IAAAvoC,IAAA,KACAwoC,GAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAAAkG,EAAAnpE,GAGA,OAAAipE,GAAA5E,IAAA4E,EAAA5E,IAAAf,IAAAe,IAAA,EAAA6E,EAEA,QAAAM,IAAAlpC,GAGA,QAAAmpC,GAAA9G,EAAAC,GACA,MAAAr6D,MAAAs6B,IAAA8/B,GAAAp6D,KAAAs6B,IAAA+/B,GAAA8G,EAEA,QAAA9C,GAAA5Z,GACA,GAAAmc,GAAAQ,EAAAC,EAAAC,EAAAzC,CACA,QACAhF,UAAA,WACAyH,EAAAD,GAAA,EACAxC,EAAA,GAEApnE,MAAA,SAAA2iE,EAAAC,GACA,GAAAkH,GAAAC,GAAApH,EAAAC,GAAA96D,EAAA2hE,EAAA9G,EAAAC,GAAAhlC,EAAAosC,EAAAliE,EAAA,EAAAmiE,EAAAtH,EAAAC,GAAA96D,EAAAmiE,EAAAtH,KAAA,EAAApO,QAAAqO,GAAA,CAUA,KATAuG,IAAAU,EAAAD,EAAA9hE,IAAAklD,EAAAoV,YACAt6D,IAAA8hE,IACAE,EAAAI,EAAAf,EAAAY,IACA3F,GAAA+E,EAAAW,IAAA1F,GAAA2F,EAAAD,MACAC,EAAA,IAAA1F,GACA0F,EAAA,IAAA1F,GACAv8D,EAAA2hE,EAAAM,EAAA,GAAAA,EAAA,MAGAjiE,IAAA8hE,EACAxC,EAAA,EACAt/D,GACAklD,EAAAoV,YACA0H,EAAAI,EAAAH,EAAAZ,GACAnc,EAAAhtD,MAAA8pE,EAAA,GAAAA,EAAA,MAEAA,EAAAI,EAAAf,EAAAY,GACA/c,EAAAhtD,MAAA8pE,EAAA,GAAAA,EAAA,IACA9c,EAAAqV,WAEA8G,EAAAW,MACW,IAAAK,GAAAhB,GAAAa,EAAAliE,EAAA,CACX,GAAAwgB,EACAsV,GAAA+rC,KAAArhD,EAAA4hD,EAAAH,EAAAZ,GAAA,MACA/B,EAAA,EACA4C,GACAhd,EAAAoV,YACApV,EAAAhtD,MAAAsoB,EAAA,MAAAA,EAAA,OACA0kC,EAAAhtD,MAAAsoB,EAAA,MAAAA,EAAA,OACA0kC,EAAAqV,YAEArV,EAAAhtD,MAAAsoB,EAAA,MAAAA,EAAA,OACA0kC,EAAAqV,UACArV,EAAAoV,YACApV,EAAAhtD,MAAAsoB,EAAA,MAAAA,EAAA,UAIAxgB,GAAAqhE,GAAA/E,GAAA+E,EAAAY,IACA/c,EAAAhtD,MAAA+pE,EAAA,GAAAA,EAAA,IAEAZ,EAAAY,EAAAH,EAAA9hE,EAAA6hE,EAAA/rC,GAEAykC,QAAA,WACAuH,GAAA5c,EAAAqV,UACA8G,EAAA,MAEA/B,MAAA,WACA,MAAAA,IAAAyC,GAAAD,IAAA,IAIA,QAAAM,GAAAzxE,EAAAkgB,EAAAyxD,GACA,GAAAC,GAAA3G,GAAAjrE,GAAA6xE,EAAA5G,GAAA/qD,GACA4xD,GAAA,OAAAC,EAAA3G,GAAAwG,EAAAC,GAAAG,EAAA7G,GAAA4G,KAAAE,EAAAF,EAAA,GAAAG,EAAAF,EAAAC,GACA,KAAAC,EAAA,OAAAP,GAAA3xE,CACA,IAAAmyE,GAAAlB,EAAAe,EAAAE,EAAAE,GAAAnB,EAAAgB,EAAAC,EAAAG,EAAAjH,GAAA0G,EAAAC,GAAAhL,EAAAuE,GAAAwG,EAAAK,EACA9G,IAAAtE,EADAuE,GAAAyG,EAAAK,GAEA,IAAAzH,GAAA0H,EAAA3/D,EAAAy4D,GAAApE,EAAA4D,GAAA2H,EAAAnH,GAAAR,KAAA7vB,EAAApoC,IAAA4/D,GAAAnH,GAAApE,KAAA,EACA,MAAAjsB,EAAA,IACA,GAAAjrB,GAAA/f,KAAAm6B,KAAA6Q,GAAAy3B,EAAAjH,GAAAX,IAAAj4D,EAAAmd,GAAAyiD,EAGA,IAFAjH,GAAAkH,EAAAxL,GACAwL,EAAA9G,GAAA8G,IACAZ,EAAA,MAAAY,EACA,IAAA/gB,GAAA6Y,EAAArqE,EAAA,GAAA2vE,EAAAzvD,EAAA,GAAAuvD,EAAAzvE,EAAA,GAAA4vE,EAAA1vD,EAAA,EACAyvD,GAAAtF,IAAA7Y,EAAA6Y,IAAAsF,IAAAne,EACA,IAAAghB,GAAA7C,EAAAtF,EAAAoI,EAAApoC,GAAAmoC,EAAA1W,IAAA8P,GAAAyE,EAAAoC,GAAAD,EAAA5G,EAEA,KADA6G,GAAA7C,EAAAH,IAAAje,EAAAie,IAAAG,IAAApe,GACA6e,EAAAoC,EAAAhD,EAAAG,EAAA,EAAA2C,EAAA,IAAAloC,GAAAkoC,EAAA,GAAAlI,GAAAuB,GAAA6D,EAAAG,GAAAH,GAAA8C,EAAA,IAAAA,EAAA,IAAA3C,EAAA4C,EAAA1W,IAAAuO,GAAAkI,EAAA,IAAAA,EAAA,IAAA5C,GAAA,CACA,GAAA+C,GAAApH,GAAAX,IAAAj4D,EAAAmd,GAAAyiD,EAEA,OADAjH,IAAAqH,EAAA3L,IACAwL,EAAA9G,GAAAiH,MAGA,QAAAlB,GAAAtH,EAAAC,GACA,GAAA1iB,GAAA8pB,EAAA1pC,EAAAi0B,GAAAj0B,EAAA2pC,EAAA,CAGA,OAFAtH,IAAAziB,EAAA+pB,GAAA,EAA4BtH,EAAAziB,IAAA+pB,GAAA,GAC5BrH,GAAA1iB,EAAA+pB,GAAA,EAA4BrH,EAAA1iB,IAAA+pB,GAAA,GAC5BA,EA5FA,GAAAP,GAAAnhE,KAAAs6B,IAAAvC,GAAA0pC,EAAAN,EAAA,EAAAS,EAAArnC,GAAA4mC,GAAArF,EACA,OAAAqC,IAAA+C,EAAA7C,EADAwE,GAAA9qC,EAAA,EAAAy1B,IACAiU,GAAA,GAAA1pC,KAAAi0B,GAAAj0B,EAAAi0B,KA8FA,QAAA8W,IAAA/nB,EAAAvB,EAAA/gC,EAAAE,GACA,gBAAAxnB,GACA,GAAAwmD,GAAAznD,EAAAiB,EAAAjB,EAAAkgB,EAAAjf,EAAAif,EAAA2yD,EAAA7yE,EAAAuB,EAAAuxE,EAAA9yE,EAAA0B,EAAAqxE,EAAA7yD,EAAA3e,EAAAyxE,EAAA9yD,EAAAxe,EAAAo/D,EAAA,EAAAjmB,EAAA,EAAAlkC,EAAAo8D,EAAAF,EAAAx9D,EAAA29D,EAAAF,CAEA,IADArrB,EAAAoD,EAAAgoB,EACAl8D,KAAA8wC,EAAA,IAEA,GADAA,GAAA9wC,EACAA,EAAA,GACA,GAAA8wC,EAAAqZ,EAAA,MACArZ,GAAA5M,MAAA4M,OACO,IAAA9wC,EAAA,GACP,GAAA8wC,EAAA5M,EAAA,MACA4M,GAAAqZ,MAAArZ,GAGA,GADAA,EAAAl/B,EAAAsqD,EACAl8D,KAAA8wC,EAAA,IAEA,GADAA,GAAA9wC,EACAA,EAAA,GACA,GAAA8wC,EAAA5M,EAAA,MACA4M,GAAAqZ,MAAArZ,OACO,IAAA9wC,EAAA,GACP,GAAA8wC,EAAAqZ,EAAA,MACArZ,GAAA5M,MAAA4M,GAGA,GADAA,EAAA6B,EAAAwpB,EACAz9D,KAAAoyC,EAAA,IAEA,GADAA,GAAApyC,EACAA,EAAA,GACA,GAAAoyC,EAAAqZ,EAAA,MACArZ,GAAA5M,MAAA4M,OACO,IAAApyC,EAAA,GACP,GAAAoyC,EAAA5M,EAAA,MACA4M,GAAAqZ,MAAArZ,GAGA,GADAA,EAAAh/B,EAAAqqD,EACAz9D,KAAAoyC,EAAA,IAEA,GADAA,GAAApyC,EACAA,EAAA,GACA,GAAAoyC,EAAA5M,EAAA,MACA4M,GAAAqZ,MAAArZ,OACO,IAAApyC,EAAA,GACP,GAAAoyC,EAAAqZ,EAAA,MACArZ,GAAA5M,MAAA4M,GAUA,MARAqZ,GAAA,IAAA7/D,EAAAjB,GACAuB,EAAAsxE,EAAA/R,EAAAnqD,EACAjV,EAAAoxE,EAAAhS,EAAAzrD,IAEAwlC,EAAA,IAAA55C,EAAAif,GACA3e,EAAAsxE,EAAAh4B,EAAAlkC,EACAjV,EAAAoxE,EAAAj4B,EAAAxlC,IAEApU,OAqBA,QAAAgyE,IAAApoB,EAAAvB,EAAA/gC,EAAAE,GA2HA,QAAAyqD,GAAA3zD,EAAA6wD,GACA,MAAA/lC,IAAA9qB,EAAA,GAAAsrC,GAAA+gB,GAAAwE,EAAA,MAAA/lC,GAAA9qB,EAAA,GAAAgJ,GAAAqjD,GAAAwE,EAAA,MAAA/lC,GAAA9qB,EAAA,GAAA+pC,GAAAsiB,GAAAwE,EAAA,MAAAA,EAAA,MAEA,QAAA/d,GAAAryD,EAAAkgB,GACA,MAAAizD,GAAAnzE,EAAAuB,EAAA2e,EAAA3e,GAEA,QAAA4xE,GAAAnzE,EAAAkgB,GACA,GAAAkzD,GAAAF,EAAAlzE,EAAA,GAAAqzE,EAAAH,EAAAhzD,EAAA,EACA,OAAAkzD,KAAAC,EAAAD,EAAAC,EAAA,IAAAD,EAAAlzD,EAAA,GAAAlgB,EAAA,OAAAozE,EAAApzE,EAAA,GAAAkgB,EAAA,OAAAkzD,EAAApzE,EAAA,GAAAkgB,EAAA,GAAAA,EAAA,GAAAlgB,EAAA,GAlIA,gBAAAu0D,GA+BA,QAAA+e,GAAA/zD,GAEA,OADAg0D,GAAA,EAAA50E,EAAAowE,EAAA1vE,OAAAqC,EAAA6d,EAAA,GACAngB,EAAA,EAAuBA,EAAAT,IAAOS,EAC9B,OAAA8gB,GAAA2hB,EAAA,EAAAxyB,EAAA0/D,EAAA3vE,GAAAw5D,EAAAvpD,EAAAhQ,OAAAW,EAAAqP,EAAA,GAAoEwyB,EAAA+2B,IAAO/2B,EAC3E3hB,EAAA7Q,EAAAwyB,GACA7hC,EAAA,IAAA0B,EACAwe,EAAA,GAAAxe,GAAAk6D,GAAA57D,EAAAkgB,EAAAX,GAAA,KAAAg0D,EAEArzD,EAAA,IAAAxe,GAAAk6D,GAAA57D,EAAAkgB,EAAAX,GAAA,KAAAg0D,EAEAvzE,EAAAkgB,CAGA,YAAAqzD,EAEA,QAAArlC,GAAAiiC,EAAA7uC,EAAA8uC,EAAA7b,GACA,GAAAv0D,GAAA,EAAAwzE,EAAA,CACA,UAAArD,IAAAnwE,EAAAkzE,EAAA/C,EAAAC,OAAAoD,EAAAN,EAAA5xC,EAAA8uC,KAAA+C,EAAAhD,EAAA7uC,GAAA,EAAA8uC,EAAA,EACA,GACA7b,EAAAhtD,MAAA,IAAAvH,GAAA,IAAAA,EAAA6qD,EAAAtiC,EAAAvoB,EAAA,EAAAyoB,EAAA6gC,UACWtpD,KAAAowE,EAAA,QAAAoD,OAEXjf,GAAAhtD,MAAA+5B,EAAA,GAAAA,EAAA,IAGA,QAAA4sC,GAAA3sE,EAAAG,GACA,MAAAmpD,IAAAtpD,MAAAgnB,GAAA+gC,GAAA5nD,MAAA+mB,EAEA,QAAAlhB,GAAAhG,EAAAG,GACAwsE,EAAA3sE,EAAAG,IAAA6yD,EAAAhtD,MAAAhG,EAAAG,GAGA,QAAAioE,KACA6D,EAAAjmE,MAAAksE,EACA1E,KAAAj9D,KAAAy8D,MACAvxC,GAAA,EACA02C,GAAA,EACAC,EAAAC,EAAA5pD,IAEA,QAAA4/C,KACAyD,IACAoG,EAAAI,EAAAC,GACAC,GAAAL,GAAAM,EAAAzE,SACAlC,EAAAv7D,KAAAkiE,EAAAnF,WAEArB,EAAAjmE,QACAmsE,GAAAnf,EAAAqV,UAEA,QAAA6J,GAAAlyE,EAAAG,GACAH,EAAAuO,KAAAnO,KAAAsyE,GAAAnkE,KAAAlO,IAAAqyE,GAAA1yE,IACAG,EAAAoO,KAAAnO,KAAAsyE,GAAAnkE,KAAAlO,IAAAqyE,GAAAvyE,GACA,IAAA2N,GAAA6+D,EAAA3sE,EAAAG,EAEA,IADAqtE,GAAAR,EAAAz8D,MAAAvQ,EAAAG,IACAs7B,EACA62C,EAAAtyE,EAAAuyE,EAAApyE,EAAAqyE,EAAA1kE,EACA2tB,GAAA,EACA3tB,IACAklD,EAAAoV,YACApV,EAAAhtD,MAAAhG,EAAAG,QAGA,IAAA2N,GAAAqkE,EAAAnf,EAAAhtD,MAAAhG,EAAAG,OAA4C,CAC5C,GAAAukD,IACAjmD,GACAuB,EAAAoyE,EACAjyE,EAAAkyE,GAEA1zD,GACA3e,IACAG,KAGAysE,GAAAloB,IACAytB,IACAnf,EAAAoV,YACApV,EAAAhtD,MAAA0+C,EAAAjmD,EAAAuB,EAAA0kD,EAAAjmD,EAAA0B,IAEA6yD,EAAAhtD,MAAA0+C,EAAA/lC,EAAA3e,EAAA0kD,EAAA/lC,EAAAxe,GACA2N,GAAAklD,EAAAqV,UACA+E,GAAA,GACat/D,IACbklD,EAAAoV,YACApV,EAAAhtD,MAAAhG,EAAAG,GACAitE,GAAA,GAIAgF,EAAApyE,EAAAqyE,EAAAlyE,EAAAgyE,EAAArkE,EArHA,GAAAg+D,GAAA0B,EAAAR,EA6DAsF,EAAAC,EAAAC,EAAAJ,EAAAC,EAAAF,EAAA12C,EAAA2xC,EA7DAuF,EAAA3f,EAAAyf,EAAA1E,KAAAnB,EAAAyE,GAAA/nB,EAAAvB,EAAA/gC,EAAAE,GACA+kD,GACAjmE,QACAoiE,YACAC,UACAE,aAAA,WACAvV,EAAAyf,EACA3G,KACA0B,KACAJ,GAAA,GAEA5E,WAAA,WACAxV,EAAA2f,EACA7G,EAAAnlE,GAAAm9B,MAAAgoC,EACA,IAAAC,GAAAgG,GAAAzoB,EAAApiC,IAAA0rD,EAAAxF,GAAArB,EAAA0D,EAAA3D,EAAAhuE,QACA80E,GAAAnD,KACAzc,EAAAuV,eACAqK,IACA5f,EAAAoV,YACAz7B,EAAA,YAAAqmB,GACAA,EAAAqV,WAEAoH,GACA5D,GAAAC,EAAAhb,EAAAib,EAAAp/B,EAAAqmB,GAEAA,EAAAwV,cAEAsD,EAAA0B,EAAAR,EAAA,MA4FA,OAAAf,IAaA,QAAA4G,IAAAC,GACA,GAAA5E,GAAA,EAAAG,EAAA9T,GAAA,EAAAlD,EAAA0b,GAAAD,GAAA90D,EAAAq5C,EAAA6W,EAAAG,EAKA,OAJArwD,GAAAg1D,UAAA,SAAAxhB,GACA,MAAAhzD,WAAAV,OACAu5D,EAAA6W,EAAA1c,EAAA,GAAA+I,GAAA,IAAA8T,EAAA7c,EAAA,GAAA+I,GAAA,MADA2T,EAAA3T,GAAA,IAAA8T,EAAA9T,GAAA,MAGAv8C,EAEA,QAAAi1D,IAAA/E,EAAAG,GAEA,QAAA6E,GAAAvK,EAAAC,GACA,GAAAuK,GAAA5kE,KAAAm6B,KAAA0qC,EAAA,EAAAh2E,EAAAmR,KAAAoF,IAAAi1D,IAAAxrE,CACA,QAAA+1E,EAAA5kE,KAAAoF,IAAAg1D,GAAAvrE,GAAAi2E,EAAAF,EAAA5kE,KAAAs6B,IAAA8/B,IAHA,GAAAQ,GAAA56D,KAAAoF,IAAAu6D,GAAA9wE,GAAA+rE,EAAA56D,KAAAoF,IAAA06D,IAAA,EAAA+E,EAAA,EAAAjK,GAAA,EAAA/rE,EAAA+rE,GAAAkK,EAAA9kE,KAAAm6B,KAAA0qC,GAAAh2E,CASA,OAJA81E,GAAAvH,OAAA,SAAA3rE,EAAAG,GACA,GAAAmzE,GAAAD,EAAAlzE,CACA,QAAAoO,KAAA+tD,MAAAt8D,EAAAszE,GAAAl2E,EAAAq9D,IAAA2Y,GAAApzE,IAAAszE,KAAAl2E,MAAA,EAAAA,MAEA81E,EAmGA,QAAAK,MAMA,QAAA7K,GAAA1oE,EAAAG,GACAqzE,IAAAzrB,EAAA/nD,EAAAspD,EAAAnpD,EACAmpD,EAAAtpD,EAAA+nD,EAAA5nD,EAPA,GAAAszE,GAAAC,EAAApqB,EAAAvB,CACA4rB,IAAA3tE,MAAA,SAAAhG,EAAAG,GACAwzE,GAAA3tE,MAAA0iE,EACA+K,EAAAnqB,EAAAtpD,EAAA0zE,EAAA3rB,EAAA5nD,GAMAwzE,GAAAtL,QAAA,WACAK,EAAA+K,EAAAC,IAWA,QAAAE,IAAA5zE,EAAAG,GACAH,EAAA6zE,QAAA7zE,GACAA,EAAA8zE,QAAA9zE,GACAG,EAAA4zE,QAAA5zE,GACAA,EAAA6zE,QAAA7zE,GAEA,QAAA8zE,MA2BA,QAAAjuE,GAAAhG,EAAAG,GACAmtE,EAAA/8D,KAAA,IAAAvQ,EAAA,IAAAG,EAAA+zE,GAEA,QAAAC,GAAAn0E,EAAAG,GACAmtE,EAAA/8D,KAAA,IAAAvQ,EAAA,IAAAG,GACAi0E,EAAApuE,MAAA8mE,EAEA,QAAAA,GAAA9sE,EAAAG,GACAmtE,EAAA/8D,KAAA,IAAAvQ,EAAA,IAAAG,GAEA,QAAAkoE,KACA+L,EAAApuE,QAEA,QAAAquE,KACA/G,EAAA/8D,KAAA,KAxCA,GAAA2jE,GAAAI,GAAA,KAAAhH,KACA8G,GACApuE,QACAoiE,UAAA,WACAgM,EAAApuE,MAAAmuE,GAEA9L,UACAE,aAAA,WACA6L,EAAA/L,QAAAgM,GAEA7L,WAAA,WACA4L,EAAA/L,UACA+L,EAAApuE,SAEAuuE,YAAA,SAAA/iB,GAEA,MADA0iB,GAAAI,GAAA9iB,GACA4iB,GAEA7W,OAAA,WACA,GAAA+P,EAAAxvE,OAAA,CACA,GAAAy/D,GAAA+P,EAAA9M,KAAA,GAEA,OADA8M,MACA/P,IAoBA,OAAA6W,GAEA,QAAAE,IAAAhuC,GACA,YAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EAAA,IAeA,QAAAkuC,IAAAx0E,EAAAG,GACAsqE,IAAAzqE,EACA0qE,IAAAvqE,IACAwqE,GAEA,QAAA8J,MAMA,QAAA/L,GAAA1oE,EAAAG,GACA,GAAAiV,GAAApV,EAAAspD,EAAAx1C,EAAA3T,EAAA4nD,EAAAkI,EAAA1hD,KAAAm6B,KAAAtzB,IAAAtB,IACAi3D,KAAA9a,GAAA3G,EAAAtpD,GAAA,EACAgrE,IAAA/a,GAAAlI,EAAA5nD,GAAA,EACA8qE,IAAAhb,EACAukB,GAAAlrB,EAAAtpD,EAAA+nD,EAAA5nD,GAVA,GAAAmpD,GAAAvB,CACA2sB,IAAA1uE,MAAA,SAAAhG,EAAAG,GACAu0E,GAAA1uE,MAAA0iE,EACA8L,GAAAlrB,EAAAtpD,EAAA+nD,EAAA5nD,IAUA,QAAAw0E,MACAD,GAAA1uE,MAAAwuE,GAEA,QAAAI,MAMA,QAAAlM,GAAA1oE,EAAAG,GACA,GAAAiV,GAAApV,EAAAspD,EAAAx1C,EAAA3T,EAAA4nD,EAAAkI,EAAA1hD,KAAAm6B,KAAAtzB,IAAAtB,IACAi3D,KAAA9a,GAAA3G,EAAAtpD,GAAA,EACAgrE,IAAA/a,GAAAlI,EAAA5nD,GAAA,EACA8qE,IAAAhb,EACAA,EAAAlI,EAAA/nD,EAAAspD,EAAAnpD,EACAmrE,IAAArb,GAAA3G,EAAAtpD,GACAurE,IAAAtb,GAAAlI,EAAA5nD,GACAqrE,IAAA,EAAAvb,EACAukB,GAAAlrB,EAAAtpD,EAAA+nD,EAAA5nD,GAdA,GAAAszE,GAAAC,EAAApqB,EAAAvB,CACA2sB,IAAA1uE,MAAA,SAAAhG,EAAAG,GACAu0E,GAAA1uE,MAAA0iE,EACA8L,GAAAf,EAAAnqB,EAAAtpD,EAAA0zE,EAAA3rB,EAAA5nD,IAaAu0E,GAAArM,QAAA,WACAK,EAAA+K,EAAAC,IAGA,QAAAmB,IAAA3oB,GAqBA,QAAAlmD,GAAAhG,EAAAG,GACA+rD,EAAA4oB,OAAA90E,EAAAu0E,EAAAp0E,GACA+rD,EAAA7gD,IAAArL,EAAAG,EAAAo0E,EAAA,EAAAlF,IAEA,QAAA8E,GAAAn0E,EAAAG,GACA+rD,EAAA4oB,OAAA90E,EAAAG,GACAi0E,EAAApuE,MAAA8mE,EAEA,QAAAA,GAAA9sE,EAAAG,GACA+rD,EAAA6oB,OAAA/0E,EAAAG,GAEA,QAAAkoE,KACA+L,EAAApuE,QAEA,QAAAquE,KACAnoB,EAAA8oB,YAnCA,GAAAT,GAAA,IACAH,GACApuE,QACAoiE,UAAA,WACAgM,EAAApuE,MAAAmuE,GAEA9L,UACAE,aAAA,WACA6L,EAAA/L,QAAAgM,GAEA7L,WAAA,WACA4L,EAAA/L,UACA+L,EAAApuE,SAEAuuE,YAAA,SAAA/iB,GAEA,MADA+iB,GAAA/iB,EACA4iB,GAEA7W,OAAA7K,EAmBA,OAAA0hB,GAEA,QAAAa,IAAAC,GAEA,QAAAC,GAAAf,GACA,OAAAgB,EAAAC,EAAAC,GAAAlB,GAEA,QAAAkB,GAAAlB,GACA,MAAAmB,IAAAnB,EAAA,SAAAp0E,EAAAG,GACAH,EAAAk1E,EAAAl1E,EAAAG,GACAi0E,EAAApuE,MAAAhG,EAAA,GAAAA,EAAA,MAGA,QAAAq1E,GAAAjB,GAeA,QAAApuE,GAAAhG,EAAAG,GACAH,EAAAk1E,EAAAl1E,EAAAG,GACAi0E,EAAApuE,MAAAhG,EAAA,GAAAA,EAAA,IAEA,QAAAooE,KACA9e,EAAA7gC,IACA0sD,EAAAnvE,MAAAksE,EACAkC,EAAAhM,YAEA,QAAA8J,GAAAvJ,EAAAC,GACA,GAAAhlC,GAAA8lC,IAAAf,EAAAC,IAAA5qD,EAAAk3D,EAAAvM,EAAAC,EACA4M,GAAAlsB,EAAAvB,EAAA+gB,EAAA2M,EAAAC,EAAA/F,EAAArmB,EAAAtrC,EAAA,GAAA+pC,EAAA/pC,EAAA,GAAA8qD,EAAAH,EAAA8M,EAAA7xC,EAAA,GAAA8xC,EAAA9xC,EAAA,GAAA+rC,EAAA/rC,EAAA,GAAAwxC,EAAAhB,GACAA,EAAApuE,MAAAsjD,EAAAvB,GAEA,QAAAsgB,KACA8M,EAAAnvE,QACAouE,EAAA/L,UAEA,QAAA6E,KACA9E,IACA+M,EAAAnvE,MAAA2vE,EACAR,EAAA9M,QAAA8E,EAEA,QAAAwI,GAAAhN,EAAAC,GACAsJ,EAAA3I,EAAAZ,EAAAa,EAAAZ,GAAA6K,EAAAnqB,EAAAoqB,EAAA3rB,EAAA6tB,EAAAH,EAAAI,EAAAH,EAAAI,EAAAnG,EACAwF,EAAAnvE,MAAAksE,EAEA,QAAA/E,KACAqI,EAAAlsB,EAAAvB,EAAA+gB,EAAA2M,EAAAC,EAAA/F,EAAA8D,EAAAC,EAAAnK,EAAAqM,EAAAC,EAAAC,EAAAV,EAAAhB,GACAe,EAAA9M,UACAA,IA5CA,GAAAkB,GAAAC,EAAAiK,EAAAC,EAAAkC,EAAAC,EAAAC,EAAAhN,EAAAxf,EAAAvB,EAAA0tB,EAAAC,EAAA/F,EACAwF,GACAnvE,QACAoiE,YACAC,UACAE,aAAA,WACA6L,EAAA7L,eACA4M,EAAA/M,UAAA8E,GAEA1E,WAAA,WACA4L,EAAA5L,aACA2M,EAAA/M,aAmCA,OAAA+M,GAEA,QAAAK,GAAAlsB,EAAAvB,EAAA+gB,EAAA2M,EAAAC,EAAA/F,EAAA3oD,EAAAE,EAAAknD,EAAA6D,EAAA8D,EAAAnF,EAAAoF,EAAA5B,GACA,GAAAh/D,GAAA4R,EAAAsiC,EAAAx1C,EAAAoT,EAAA6gC,EAAAkuB,EAAA7gE,IAAAtB,GACA,IAAAmiE,EAAA,EAAAC,GAAAF,IAAA,CACA,GAAAv3E,GAAAg3E,EAAAxD,EAAAtzD,EAAA+2D,EAAAK,EAAAnyC,EAAA+rC,EAAAiB,EAAAvZ,EAAA9oD,KAAAm6B,KAAAjqC,IAAAkgB,IAAAilB,KAAAuyC,EAAA5nE,KAAAosD,KAAA/2B,GAAAyzB,GAAA+e,EAAAttC,MAAAlF,GAAA,GAAAymC,IAAAvhC,GAAAggC,EAAAsF,GAAA/D,IAAAvB,EAAAsF,GAAA,EAAA7/D,KAAA+tD,MAAA39C,EAAAlgB,GAAAuf,EAAAk3D,EAAAkB,EAAAD,GAAAlvD,EAAAjJ,EAAA,GAAAlH,EAAAkH,EAAA,GAAAq4D,EAAApvD,EAAAqiC,EAAAgtB,EAAAx/D,EAAAixC,EAAAwuB,EAAAziE,EAAAuiE,EAAAjhE,EAAAkhE,GACAC,IAAAN,EAAAC,GAAAptC,IAAA1zB,EAAAihE,EAAAviE,EAAAwiE,GAAAL,EAAA,QAAAR,EAAAxD,EAAAyD,EAAAK,EAAApG,EAAAiB,EAAA4F,KACAhB,EAAAlsB,EAAAvB,EAAA+gB,EAAA2M,EAAAC,EAAA/F,EAAA1oD,EAAAnQ,EAAAs/D,EAAA33E,GAAA44D,EAAA14C,GAAA04C,EAAAzzB,EAAAoyC,EAAA5B,GACAA,EAAApuE,MAAAihB,EAAAnQ,GACA0+D,EAAAvuD,EAAAnQ,EAAAs/D,EAAA33E,EAAAkgB,EAAAilB,EAAA5c,EAAAE,EAAAknD,EAAA6D,EAAA8D,EAAAnF,EAAAoF,EAAA5B,KAlEA,GAAA8B,GAAA,GAAAM,EAAAjoE,KAAAs6B,IAAA,GAAAkzB,IAAAqZ,EAAA,EA2EA,OALAD,GAAApU,UAAA,SAAAvP,GACA,MAAAhzD,WAAAV,QACAs3E,GAAAc,EAAA1kB,KAAA,MACA2jB,GAFA5mE,KAAAm6B,KAAAwtC,IAIAf,EAiDA,QAAAsB,IAAAvB,GACA,GAAAC,GAAAF,GAAA,SAAAj1E,EAAAG,GACA,MAAA+0E,IAAAl1E,EAAAu8D,GAAAp8D,EAAAo8D,MAEA,iBAAA6X,GACA,MAAAsC,IAAAvB,EAAAf,KAYA,QAAAuC,IAAAvC,GACA/1E,KAAA+1E,SAsBA,QAAAmB,IAAAnB,EAAApuE,GACA,OACAA,QACA8nE,OAAA,WACAsG,EAAAtG,UAEA1F,UAAA,WACAgM,EAAAhM,aAEAC,QAAA,WACA+L,EAAA/L,WAEAE,aAAA,WACA6L,EAAA7L,gBAEAC,WAAA,WACA4L,EAAA5L,eAMA,QAAAoO,IAAA1B,GACA,MAAAnC,IAAA,WACA,MAAAmC,OAGA,QAAAnC,IAAAD,GAKA,QAAA+D,GAAA7wE,GAEA,MADAA,GAAA8wE,EAAA9wE,EAAA,GAAA+1D,GAAA/1D,EAAA,GAAA+1D,KACA/1D,EAAA,GAAA2wC,EAAAogC,EAAAC,EAAAhxE,EAAA,GAAA2wC,GAEA,QAAAg1B,GAAA3lE,GAEA,OADAA,EAAA8wE,EAAAnL,QAAA3lE,EAAA,GAAA+wE,GAAApgC,GAAAqgC,EAAAhxE,EAAA,IAAA2wC,MACA3wC,EAAA,GAAAu2D,GAAAv2D,EAAA,GAAAu2D,IA4CA,QAAA/Y,KACAszB,EAAArL,GAAAl4D,EAAA0jE,GAAAhG,EAAAiG,EAAAC,GAAAjC,EACA,IAAA94B,GAAA84B,EAAAvM,EAAAC,EAGA,OAFAmO,GAAA/2E,EAAAo8C,EAAA,GAAAzF,EACAqgC,EAAA72E,EAAAi8C,EAAA,GAAAzF,EACAygC,IAEA,QAAAA,KAEA,MADAhD,OAAAiD,OAAA,EAAAjD,EAAA,MACAyC,EA/DA,GAAA3B,GAAA3hE,EAAAujE,EAGKC,EAAAC,EAAA5C,EAHLkD,EAAArC,GAAA,SAAAj1E,EAAAG,GAEA,MADAH,GAAAk1E,EAAAl1E,EAAAG,IACAH,EAAA,GAAA22C,EAAAogC,EAAAC,EAAAh3E,EAAA,GAAA22C,KACKA,EAAA,IAAA32C,EAAA,IAAAG,EAAA,IAAAwoE,EAAA,EAAAC,EAAA,EAAAqI,EAAA,EAAAiG,EAAA,EAAAC,EAAA,EAAAI,EAAAC,GAAAC,EAAAtlB,EAAAulB,EAAA,KAAAC,EAAA,IA8DL,OArDAd,GAAAzC,OAAA,SAAAwD,GAIA,MAHAxD,OAAAiD,OAAA,GACAjD,EAAAsC,GAAAa,EAAAhkE,EAAA+jE,EAAAG,EAAAG,MACAxD,EAAAiD,OAAA,EACAjD,GAEAyC,EAAAa,UAAA,SAAAlmB,GACA,MAAAhzD,WAAAV,QACAy5E,EAAA,MAAA/lB,GAAAkmB,EAAAlmB,EAAAgmB,IAAAhI,IAAAkI,GAAAlmB,GAAAuK,IACAqb,KAFAM,GAIAb,EAAAc,WAAA,SAAAnmB,GACA,MAAAhzD,WAAAV,QACA65E,EAAAnmB,EACAimB,EAAAjmB,EAAAkgB,GAAAlgB,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAAW,EACAilB,KAHAO,GAKAd,EAAAjwE,MAAA,SAAA4qD,GACA,MAAAhzD,WAAAV,QACA64C,GAAA6a,EACAhO,KAFA7M,GAIAkgC,EAAAruC,UAAA,SAAAgpB,GACA,MAAAhzD,WAAAV,QACAkC,GAAAwxD,EAAA,GACArxD,GAAAqxD,EAAA,GACAhO,MAHAxjD,EAAAG,IAKA02E,EAAAz6B,OAAA,SAAAoV,GACA,MAAAhzD,WAAAV,QACA6qE,EAAAnX,EAAA,OAAAuK,GACA6M,EAAApX,EAAA,OAAAuK,GACAvY,MAHAmlB,EAAApM,GAAAqM,EAAArM,KAKAsa,EAAAtjE,OAAA,SAAAi+C,GACA,MAAAhzD,WAAAV,QACAmzE,EAAAzf,EAAA,OAAAuK,GACAmb,EAAA1lB,EAAA,OAAAuK,GACAob,EAAA3lB,EAAA1zD,OAAA,EAAA0zD,EAAA,OAAAuK,GAAA,EACAvY,MAJAytB,EAAA1U,GAAA2a,EAAA3a,GAAA4a,EAAA5a,KAMA51D,GAAA83D,OAAAoY,EAAAS,EAAA,aAYA,WAGA,MAFApC,GAAApC,EAAAv0E,MAAAF,KAAAG,WACAq4E,EAAAlL,OAAAuJ,EAAAvJ,UACAnoB,KAGA,QAAAkzB,IAAAtC,GACA,MAAAmB,IAAAnB,EAAA,SAAAp0E,EAAAG,GACAi0E,EAAApuE,MAAAhG,EAAA+7D,GAAA57D,EAAA47D,MAGA,QAAA8b,IAAAlP,EAAAC,GACA,OAAAD,EAAAC,GAiBA,QAAAkP,IAAAnP,EAAAC,GACA,OAAAD,EAAApO,GAAAoO,EAAA0G,GAAA1G,GAAApO,GAAAoO,EAAA0G,GAAA1G,EAAAC,GAGA,QAAAqO,IAAAhG,EAAAiG,EAAAC,GACA,MAAAlG,GAAAiG,GAAAC,EAAA1L,GAAAsM,GAAA9G,GAAA+G,GAAAd,EAAAC,IAAAY,GAAA9G,GAAAiG,GAAAC,EAAAa,GAAAd,EAAAC,GAAAW,GAEA,QAAAG,IAAAhH,GACA,gBAAAtI,EAAAC,GACA,MAAAD,IAAAsI,GAAAtI,EAAApO,GAAAoO,EAAA0G,GAAA1G,GAAApO,GAAAoO,EAAA0G,GAAA1G,EAAAC,IAGA,QAAAmP,IAAA9G,GACA,GAAAiH,GAAAD,GAAAhH,EAEA,OADAiH,GAAAvM,OAAAsM,IAAAhH,GACAiH,EAEA,QAAAF,IAAAd,EAAAC,GAEA,QAAAe,GAAAvP,EAAAC,GACA,GAAAK,GAAA16D,KAAAs6B,IAAA+/B,GAAA5oE,EAAAuO,KAAAs6B,IAAA8/B,GAAAM,EAAA9oE,EAAAoO,KAAAoF,IAAAg1D,GAAAM,EAAAhZ,EAAA1hD,KAAAoF,IAAAi1D,GAAAjyB,EAAAsZ,EAAAkoB,EAAAn4E,EAAAo4E,CACA,QAAA7pE,KAAA+tD,MAAAn8D,EAAAk4E,EAAA1hC,EAAA2hC,EAAAt4E,EAAAm4E,EAAAloB,EAAAmoB,GAAA3d,GAAA9jB,EAAA0hC,EAAAl4E,EAAAm4E,IAHA,GAAAH,GAAA5pE,KAAAs6B,IAAAquC,GAAAkB,EAAA7pE,KAAAoF,IAAAujE,GAAAmB,EAAA9pE,KAAAs6B,IAAAsuC,GAAAmB,EAAA/pE,KAAAoF,IAAAwjE,EASA,OAJAe,GAAAvM,OAAA,SAAAhD,EAAAC,GACA,GAAAK,GAAA16D,KAAAs6B,IAAA+/B,GAAA5oE,EAAAuO,KAAAs6B,IAAA8/B,GAAAM,EAAA9oE,EAAAoO,KAAAoF,IAAAg1D,GAAAM,EAAAhZ,EAAA1hD,KAAAoF,IAAAi1D,GAAAjyB,EAAAsZ,EAAAooB,EAAAl4E,EAAAm4E,CACA,QAAA/pE,KAAA+tD,MAAAn8D,EAAAk4E,EAAApoB,EAAAqoB,EAAAt4E,EAAAm4E,EAAAxhC,EAAAyhC,GAAA3d,GAAA9jB,EAAAwhC,EAAAn4E,EAAAo4E,KAEAF,EAkCA,QAAA9G,IAAA9qC,EAAAy6B,GACA,GAAA2O,GAAAnhE,KAAAs6B,IAAAvC,GAAAiyC,EAAAhqE,KAAAoF,IAAA2yB,EACA,iBAAAsoC,EAAA7uC,EAAA8uC,EAAA7b,GACA,GAAA1wD,GAAAusE,EAAA9N,CACA,OAAA6N,GACAA,EAAA4J,GAAA9I,EAAAd,GACA7uC,EAAAy4C,GAAA9I,EAAA3vC,IACA8uC,EAAA,EAAAD,EAAA7uC,EAAA6uC,EAAA7uC,KAAA6uC,GAAAC,EAAAQ,MAEAT,EAAAtoC,EAAAuoC,EAAAQ,GACAtvC,EAAAuG,EAAA,GAAAhkC,EAEA,QAAA0D,GAAAsoB,EAAAsgD,EAA+BC,EAAA,EAAAvgD,EAAAyR,EAAAzR,EAAAyR,EAAiCzR,GAAAhsB,EAChE0wD,EAAAhtD,SAAAkkE,IAAAwF,GAAA6I,EAAAhqE,KAAAs6B,IAAAva,IAAAiqD,EAAAhqE,KAAAoF,IAAA2a,MAAA,GAAAtoB,EAAA,KAIA,QAAAwyE,IAAA9I,EAAA1pE,GACA,GAAAvH,GAAAirE,GAAA1jE,EACAvH,GAAA,IAAAixE,EACAzF,GAAAxrE,EACA,IAAAq4B,GAAAwjC,IAAA77D,EAAA,GACA,UAAAA,EAAA,MAAAq4B,KAAA,EAAAvoB,KAAAqF,GAAAy2D,KAAA,EAAA97D,KAAAqF,IAgFA,QAAA6kE,IAAA1wB,EAAA7gC,EAAApT,GACA,GAAA3T,GAAAwG,GAAAG,MAAAihD,EAAA7gC,EAAAmjD,GAAAv2D,GAAAhC,OAAAoV,EACA,iBAAAlnB,GACA,MAAAG,GAAA8R,IAAA,SAAA9R,GACA,OAAAH,EAAAG,MAIA,QAAAu4E,IAAApvB,EAAAtiC,EAAA5R,GACA,GAAApV,GAAA2G,GAAAG,MAAAwiD,EAAAtiC,EAAAqjD,GAAAj1D,GAAAtD,OAAAkV,EACA,iBAAA7mB,GACA,MAAAH,GAAAiS,IAAA,SAAAjS,GACA,OAAAA,EAAAG,MAIA,QAAAw4E,IAAAhqE,GACA,MAAAA,GAAAxL,OAEA,QAAAy1E,IAAAjqE,GACA,MAAAA,GAAAhR,OA+BA,QAAAk7E,IAAAvvB,EAAAvB,EAAA/gC,EAAAE,GACA,GAAA4xD,GAAAvqE,KAAAs6B,IAAAkf,GAAAgxB,EAAAxqE,KAAAoF,IAAAo0C,GAAAixB,EAAAzqE,KAAAs6B,IAAA3hB,GAAA+xD,EAAA1qE,KAAAoF,IAAAuT,GAAAgyD,EAAAJ,EAAAvqE,KAAAs6B,IAAAygB,GAAA6vB,EAAAL,EAAAvqE,KAAAoF,IAAA21C,GAAA8vB,EAAAJ,EAAAzqE,KAAAs6B,IAAA7hB,GAAAqyD,EAAAL,EAAAzqE,KAAAoF,IAAAqT,GAAArY,EAAA,EAAAJ,KAAAosD,KAAApsD,KAAAm6B,KAAAsyB,GAAA9zC,EAAA6gC,GAAA+wB,EAAAE,EAAAhe,GAAAh0C,EAAAsiC,KAAA3S,EAAA,EAAApoC,KAAAoF,IAAAhF,GACAg+B,EAAAh+B,EAAA,SAAA2f,GACA,GAAAm3C,GAAAl3D,KAAAoF,IAAA2a,GAAA3f,GAAAgoC,EAAA6uB,EAAAj3D,KAAAoF,IAAAhF,EAAA2f,GAAAqoB,EAAA32C,EAAAwlE,EAAA0T,EAAAzT,EAAA2T,EAAAj5E,EAAAqlE,EAAA2T,EAAA1T,EAAA4T,EAAAppB,EAAAuV,EAAAuT,EAAAtT,EAAAwT,CACA,QAAA1qE,KAAA+tD,MAAAn8D,EAAAH,GAAAu8D,GAAAhuD,KAAA+tD,MAAArM,EAAA1hD,KAAAm6B,KAAA1oC,IAAAG,MAAAo8D,KACK,WACL,OAAAjT,EAAAiT,GAAAxU,EAAAwU,IAGA,OADA5vB,GAAAvT,SAAAzqB,EACAg+B,EAgBA,QAAA2sC,MASA,QAAA5Q,GAAAC,EAAAC,GACA,GAAAM,GAAA36D,KAAAoF,IAAAi1D,GAAA7M,IAAAkN,EAAA16D,KAAAs6B,IAAA+/B,GAAAt6C,EAAAwa,IAAA6/B,GAAA5M,IAAA+M,GAAAyQ,EAAAhrE,KAAAs6B,IAAAva,EACAkrD,KAAAjrE,KAAA+tD,MAAA/tD,KAAAm6B,MAAApa,EAAA26C,EAAA16D,KAAAoF,IAAA2a,SAAA+6C,EAAAH,EAAAC,EAAAF,EAAAsQ,GAAAjrD,GAAA66C,EAAAD,EAAAG,EAAAJ,EAAAsQ,GACAzQ,EAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAXA,GAAAH,GAAAK,EAAAE,CACAoQ,IAAAzzE,MAAA,SAAA2iE,EAAAC,GACAE,EAAAH,EAAA5M,GAAAoN,EAAA56D,KAAAoF,IAAAi1D,GAAA7M,IAAAsN,EAAA96D,KAAAs6B,IAAA+/B,GACA6Q,GAAAzzE,MAAA0iE,GAEA+Q,GAAApR,QAAA,WACAoR,GAAAzzE,MAAAyzE,GAAApR,QAAA3V,GAQA,QAAAgnB,IAAA9yE,EAAAkwB,GACA,QAAA6iD,GAAAhR,EAAAC,GACA,GAAAgR,GAAArrE,KAAAs6B,IAAA8/B,GAAAM,EAAA16D,KAAAs6B,IAAA+/B,GAAAjyB,EAAA/vC,EAAAgzE,EAAA3Q,EACA,QAAAtyB,EAAAsyB,EAAA16D,KAAAoF,IAAAg1D,GAAAhyB,EAAApoC,KAAAoF,IAAAi1D,IAMA,MAJA+Q,GAAAhO,OAAA,SAAA3rE,EAAAG,GACA,GAAAgzE,GAAA5kE,KAAAm6B,KAAA1oC,IAAAG,KAAAyjC,EAAA9M,EAAAq8C,GAAA0G,EAAAtrE,KAAAoF,IAAAiwB,GAAAk2C,EAAAvrE,KAAAs6B,IAAAjF,EACA,QAAAr1B,KAAA+tD,MAAAt8D,EAAA65E,EAAA1G,EAAA2G,GAAAvrE,KAAAosD,KAAAwY,GAAAhzE,EAAA05E,EAAA1G,KAEAwG,EAiBA,QAAAI,IAAA7L,EAAAG,GAKA,QAAA6E,GAAAvK,EAAAC,GACAoR,EAAA,EACApR,GAAAlO,GAAA2P,KAAAzB,GAAAlO,GAAA2P,IAEAzB,EAAAlO,GAAA2P,KAAAzB,EAAAlO,GAAA2P,GAEA,IAAA8I,GAAA6G,EAAAzrE,KAAAkvB,IAAAnP,EAAAs6C,GAAAxrE,EACA,QAAA+1E,EAAA5kE,KAAAoF,IAAAvW,EAAAurE,GAAAqR,EAAA7G,EAAA5kE,KAAAs6B,IAAAzrC,EAAAurE,IAXA,GAAAU,GAAA96D,KAAAs6B,IAAAqlC,GAAA5/C,EAAA,SAAAs6C,GACA,MAAAr6D,MAAA0rE,IAAA1f,GAAA,EAAAqO,EAAA,IACKxrE,EAAA8wE,IAAAG,EAAA9/D,KAAAoF,IAAAu6D,GAAA3/D,KAAAkxD,IAAA4J,EAAA96D,KAAAs6B,IAAAwlC,IAAA9/D,KAAAkxD,IAAAnxC,EAAA+/C,GAAA//C,EAAA4/C,IAAA8L,EAAA3Q,EAAA96D,KAAAkvB,IAAAnP,EAAA4/C,GAAA9wE,IACL,OAAAA,IAUA81E,EAAAvH,OAAA,SAAA3rE,EAAAG,GACA,GAAAmzE,GAAA0G,EAAA75E,EAAAgzE,EAAA/Y,GAAAh9D,GAAAmR,KAAAm6B,KAAA1oC,IAAAszE,IACA,QAAA/kE,KAAA+tD,MAAAt8D,EAAAszE,GAAAl2E,EAAA,EAAAmR,KAAAmgE,KAAAngE,KAAAkvB,IAAAu8C,EAAA7G,EAAA,EAAA/1E,IAAAs9D,KAEAwY,GAdAgH,GAmBA,QAAAC,IAAAjM,EAAAG,GAGA,QAAA6E,GAAAvK,EAAAC,GACA,GAAAuK,GAAAiH,EAAAxR,CACA,QAAAuK,EAAA5kE,KAAAoF,IAAAvW,EAAAurE,GAAAyR,EAAAjH,EAAA5kE,KAAAs6B,IAAAzrC,EAAAurE,IAJA,GAAAU,GAAA96D,KAAAs6B,IAAAqlC,GAAA9wE,EAAA8wE,IAAAG,EAAA9/D,KAAAoF,IAAAu6D,IAAA7E,EAAA96D,KAAAs6B,IAAAwlC,OAAAH,GAAAkM,EAAA/Q,EAAAjsE,EAAA8wE,CACA,OAAAplC,IAAA1rC,GAAAitE,GAAAwN,IAKA3E,EAAAvH,OAAA,SAAA3rE,EAAAG,GACA,GAAAmzE,GAAA8G,EAAAj6E,CACA,QAAAoO,KAAA+tD,MAAAt8D,EAAAszE,GAAAl2E,EAAAg9E,EAAAhgB,GAAAh9D,GAAAmR,KAAAm6B,KAAA1oC,IAAAszE,OAEAJ,GAWA,QAAAgH,IAAAvR,EAAAC,GACA,OAAAD,EAAAp6D,KAAAkxD,IAAAlxD,KAAA0rE,IAAA1f,GAAA,EAAAqO,EAAA,KAKA,QAAAyR,IAAAnF,GACA,GAAAoF,GAAAjjB,EAAAuf,GAAA1B,GAAAtuE,EAAAywD,EAAAzwD,MAAA4hC,EAAA6uB,EAAA7uB,UAAAmvC,EAAAtgB,EAAAsgB,UAqBA,OApBAtgB,GAAAzwD,MAAA,WACA,GAAAkH,GAAAlH,EAAArI,MAAA84D,EAAA74D,UACA,OAAAsP,KAAAupD,EAAAijB,EAAAjjB,EAAAsgB,WAAA,MAAAtgB,EAAAvpD,GAEAupD,EAAA7uB,UAAA,WACA,GAAA16B,GAAA06B,EAAAjqC,MAAA84D,EAAA74D,UACA,OAAAsP,KAAAupD,EAAAijB,EAAAjjB,EAAAsgB,WAAA,MAAAtgB,EAAAvpD,GAEAupD,EAAAsgB,WAAA,SAAAnmB,GACA,GAAA1jD,GAAA6pE,EAAAp5E,MAAA84D,EAAA74D,UACA,IAAAsP,IAAAupD,GACA,GAAAijB,EAAA,MAAA9oB,EAAA,CACA,GAAA7a,GAAA4jB,GAAA3zD,IAAA0nB,EAAAka,GACAmvC,KAAArpD,EAAA,GAAAqoB,EAAAroB,EAAA,GAAAqoB,IAAAroB,EAAA,GAAAqoB,EAAAroB,EAAA,GAAAqoB,UAEO2jC,KACPxsE,EAAA,KAEA,OAAAA,IAEAupD,EAAAsgB,WAAA,MAmBA,QAAA4C,IAAA5R,EAAAC,GACA,OAAAr6D,KAAAkxD,IAAAlxD,KAAA0rE,IAAA1f,GAAA,EAAAqO,EAAA,KAAAD,GAiBA,QAAA6R,IAAA7rE,GACA,MAAAA,GAAA,GAEA,QAAA8rE,IAAA9rE,GACA,MAAAA,GAAA,GA2BA,QAAA+rE,IAAA58C,GAEA,OADA1gC,GAAA0gC,EAAAhgC,OAAA68E,GAAA,KAAAC,EAAA,EACA/8E,EAAA,EAAmBA,EAAAT,EAAOS,IAAA,CAC1B,KAAA+8E,EAAA,GAAAvgB,GAAAv8B,EAAA68C,EAAAC,EAAA,IAAA98C,EAAA68C,EAAAC,EAAA,IAAA98C,EAAAjgC,KAAA,KAAA+8E,CACAD,GAAAC,KAAA/8E,EAEA,MAAA88E,GAAAhoE,MAAA,EAAAioE,GAEA,QAAAC,IAAAp8E,EAAAkgB,GACA,MAAAlgB,GAAA,GAAAkgB,EAAA,IAAAlgB,EAAA,GAAAkgB,EAAA,GAqDA,QAAAm8D,IAAA98D,EAAAvf,EAAAkgB,GACA,OAAAA,EAAA,GAAAlgB,EAAA,KAAAuf,EAAA,GAAAvf,EAAA,KAAAkgB,EAAA,GAAAlgB,EAAA,KAAAuf,EAAA,GAAAvf,EAAA,IAEA,QAAAs8E,IAAAn3C,EAAAj1B,EAAAlQ,EAAAkgB,GACA,GAAAqI,GAAA4c,EAAA,GAAAo3C,EAAAv8E,EAAA,GAAAw8E,EAAAtsE,EAAA,GAAAqY,EAAAk0D,EAAAv8D,EAAA,GAAAq8D,EAAA9zD,EAAA0c,EAAA,GAAAu3C,EAAA18E,EAAA,GAAA28E,EAAAzsE,EAAA,GAAAuY,EAAAm0D,EAAA18D,EAAA,GAAAw8D,EAAA1rB,GAAAyrB,GAAAh0D,EAAAi0D,GAAAE,GAAAr0D,EAAAg0D,KAAAK,EAAAJ,EAAAC,EAAAE,EACA,QAAAp0D,EAAAyoC,EAAAwrB,EAAA/zD,EAAAuoC,EAAA2rB,GAEA,QAAAE,IAAArT,GACA,GAAAxpE,GAAAwpE,EAAA,GAAAtpD,EAAAspD,IAAAnqE,OAAA,EACA,SAAAW,EAAA,GAAAkgB,EAAA,IAAAlgB,EAAA,GAAAkgB,EAAA,IAGA,QAAA48D,MACAC,GAAAn9E,MACAA,KAAAo9E,KAAAp9E,KAAAq9E,KAAAr9E,KAAA8M,OAAA,KAEA,QAAAwwE,IAAAD,GACA,GAAAE,GAAAC,GAAAtO,OAAA,GAAAgO,GAEA,OADAK,GAAAF,OACAE,EAEA,QAAAE,IAAAF,GACAG,GAAAH,GACAI,GAAApnE,OAAAgnE,GACAC,GAAAtrE,KAAAqrE,GACAJ,GAAAI,GAEA,QAAAK,IAAAL,GACA,GAAAzwE,GAAAywE,EAAAzwE,OAAAnL,EAAAmL,EAAAnL,EAAAG,EAAAgL,EAAA8f,GAAAixD,GACAl8E,IACAG,KACKg8E,EAAAP,EAAAQ,EAAAC,EAAAT,EAAAU,EAAAC,GAAAX,EACLE,IAAAF,EAEA,KADA,GAAAY,GAAAL,EACAK,EAAArxE,QAAA29B,GAAA9oC,EAAAw8E,EAAArxE,OAAAnL,GAAAqqE,IAAAvhC,GAAA3oC,EAAAq8E,EAAArxE,OAAA8f,IAAAo/C,IACA8R,EAAAK,EAAAJ,EACAG,EAAA/rE,QAAAgsE,GACAV,GAAAU,GACAA,EAAAL,CAEAI,GAAA/rE,QAAAgsE,GACAT,GAAAS,EAEA,KADA,GAAAC,GAAAJ,EACAI,EAAAtxE,QAAA29B,GAAA9oC,EAAAy8E,EAAAtxE,OAAAnL,GAAAqqE,IAAAvhC,GAAA3oC,EAAAs8E,EAAAtxE,OAAA8f,IAAAo/C,IACAgS,EAAAI,EAAAH,EACAC,EAAAhsE,KAAAksE,GACAX,GAAAW,GACAA,EAAAJ,CAEAE,GAAAhsE,KAAAksE,GACAV,GAAAU,EACA,IAAAC,GAAAC,EAAAJ,EAAAz+E,MACA,KAAA4+E,EAAA,EAAkBA,EAAAC,IAAcD,EAChCD,EAAAF,EAAAG,GACAF,EAAAD,EAAAG,EAAA,GACAE,GAAAH,EAAAhB,KAAAe,EAAAd,KAAAe,EAAAf,KAAAQ,EAEAM,GAAAD,EAAA,GACAE,EAAAF,EAAAI,EAAA,GACAF,EAAAhB,KAAAoB,GAAAL,EAAAd,KAAAe,EAAAf,KAAA,KAAAQ,GACAY,GAAAN,GACAM,GAAAL,GAEA,QAAAM,IAAArB,GAEA,IADA,GAAAc,GAAAC,EAAAO,EAAAC,EAAAj9E,EAAA07E,EAAA17E,EAAAk9E,EAAAxB,EAAAv7E,EAAAyV,EAAAomE,GAAAxqB,EACA57C,GAEA,IADAonE,EAAAG,GAAAvnE,EAAAsnE,GAAAl9E,GACAqqE,GAAAz0D,IAAAgtD,MAAiC,CAEjC,MADAqa,EAAAj9E,EAAAo9E,GAAAxnE,EAAAsnE,IACA7S,IAMS,CACT2S,GAAA3S,IACAmS,EAAA5mE,EAAAwmE,EACAK,EAAA7mE,GACWqnE,GAAA5S,IACXmS,EAAA5mE,EACA6mE,EAAA7mE,EAAA0mE,GAEAE,EAAAC,EAAA7mE,CAEA,OAfA,IAAAA,EAAAynE,EAAA,CACAb,EAAA5mE,CACA,OAEAA,IAAAynE,EAeA,GAAAx1C,GAAA8zC,GAAAD,EAEA,IADAM,GAAAvnE,OAAA+nE,EAAA30C,GACA20C,GAAAC,EAAA,CACA,GAAAD,IAAAC,EAOA,MANAV,IAAAS,GACAC,EAAAd,GAAAa,EAAAd,MACAM,GAAAvnE,OAAAozB,EAAA40C,GACA50C,EAAA4zC,KAAAgB,EAAAhB,KAAAoB,GAAAL,EAAAd,KAAA7zC,EAAA6zC,MACAoB,GAAAN,OACAM,IAAAL,EAGA,KAAAA,EAEA,YADA50C,EAAA4zC,KAAAoB,GAAAL,EAAAd,KAAA7zC,EAAA6zC,MAGAK,IAAAS,GACAT,GAAAU,EACA,IAAAa,GAAAd,EAAAd,KAAApK,EAAAgM,EAAAt9E,EAAAuxE,EAAA+L,EAAAn9E,EAAAqxE,EAAAkK,EAAA17E,EAAAsxE,EAAAG,EAAAiK,EAAAv7E,EAAAoxE,EAAAgM,EAAAd,EAAAf,KAAA1wD,EAAAuyD,EAAAv9E,EAAAsxE,EAAArmD,EAAAsyD,EAAAp9E,EAAAoxE,EAAA5iE,EAAA,GAAA6iE,EAAAvmD,EAAAwmD,EAAAzmD,GAAAwyD,EAAAhM,IAAAC,IAAAgM,EAAAzyD,IAAAC,IAAAixD,GACAl8E,GAAAirB,EAAAuyD,EAAA/L,EAAAgM,GAAA9uE,EAAA2iE,EACAnxE,GAAAqxE,EAAAiM,EAAAzyD,EAAAwyD,GAAA7uE,EAAA4iE,EAEAqL,IAAAH,EAAAhB,KAAA6B,EAAAC,EAAArB,GACAr0C,EAAA4zC,KAAAoB,GAAAS,EAAA5B,EAAA,KAAAQ,GACAO,EAAAhB,KAAAoB,GAAAnB,EAAA6B,EAAA,KAAArB,GACAY,GAAAN,GACAM,GAAAL,IAEA,QAAAU,IAAA9xE,EAAA6xE,GACA,GAAAxB,GAAArwE,EAAAqwE,KAAAgC,EAAAhC,EAAA17E,EAAA29E,EAAAjC,EAAAv7E,EAAAy9E,EAAAD,EAAAT,CACA,KAAAU,EAAA,MAAAF,EACA,IAAAlB,GAAAnxE,EAAA+wE,CACA,KAAAI,EAAA,OAAA1mE,GACA4lE,GAAAc,EAAAd,IACA,IAAAmC,GAAAnC,EAAA17E,EAAA89E,EAAApC,EAAAv7E,EAAA49E,EAAAD,EAAAZ,CACA,KAAAa,EAAA,MAAAF,EACA,IAAAG,GAAAH,EAAAH,EAAAO,EAAA,EAAAL,EAAA,EAAAG,EAAAp/D,EAAAq/D,EAAAD,CACA,OAAAE,KAAAt/D,EAAApQ,KAAAm6B,KAAA/pB,IAAA,EAAAs/D,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GACAA,EAAAG,GAAA,EAEA,QAAAT,IAAA/xE,EAAA6xE,GACA,GAAAT,GAAApxE,EAAAixE,CACA,IAAAG,EAAA,MAAAU,IAAAV,EAAAS,EACA,IAAAxB,GAAArwE,EAAAqwE,IACA,OAAAA,GAAAv7E,IAAA+8E,EAAAxB,EAAA17E,EAAA8V,IAEA,QAAAooE,IAAAxC,GACAr9E,KAAAq9E,OACAr9E,KAAA8/E,SAWA,QAAAC,IAAAz5D,GAEA,IADA,GAAAsC,GAAAnQ,EAAAkkE,EAAAG,EAAAkD,EAAAC,EAAAC,EAAAC,EAAAruE,EAAAoO,EAAA+qC,EAAA3kC,EAAA,MAAAqC,EAAArC,EAAA,MAAAojC,EAAApjC,EAAA,MAAAuC,EAAAvC,EAAA,MAAA85D,EAAAC,GAAAC,EAAAF,EAAA3gF,OACA6gF,KAEA,IADAN,EAAAI,EAAAE,KACAN,EAAAO,UAIA,IAHAL,EAAAF,EAAAF,MACAK,EAAAD,EAAAzgF,OACAwgF,EAAA,EACAA,EAAAE,GACAjgE,EAAAggE,EAAAD,GAAA//D,MAAAy8D,EAAAz8D,EAAAve,EAAAm7E,EAAA58D,EAAApe,EACAgQ,EAAAouE,IAAAD,EAAAE,GAAAruE,QAAA8W,EAAA9W,EAAAnQ,EAAA8W,EAAA3G,EAAAhQ,GACA2oC,GAAAkyC,EAAA/zD,GAAAojD,IAAAvhC,GAAAqyC,EAAArkE,GAAAuzD,MACAkU,EAAA9rD,OAAA6rD,EAAA,KAAAO,IAAAC,GAAAT,EAAA3C,KAAAn9D,EAAAuqB,GAAAkyC,EAAA1xB,GAAA+gB,IAAAnjD,EAAAi0D,EAAA9Q,IACArqE,EAAAspD,EACAnpD,EAAA2oC,GAAA7hB,EAAAqiC,GAAA+gB,GAAAvzD,EAAAoQ,GACW4hB,GAAAqyC,EAAAj0D,GAAAmjD,IAAArjD,EAAAg0D,EAAA3Q,IACXrqE,EAAA8oC,GAAAhyB,EAAAoQ,GAAAmjD,GAAApjD,EAAAD,EACA7mB,EAAA+mB,GACW4hB,GAAAkyC,EAAAh0D,GAAAqjD,IAAA8Q,EAAApzB,EAAAsiB,IACXrqE,EAAAgnB,EACA7mB,EAAA2oC,GAAA7hB,EAAAD,GAAAqjD,GAAAvzD,EAAAixC,GACWjf,GAAAqyC,EAAApzB,GAAAsiB,IAAA2Q,EAAA1xB,EAAA+gB,IACXrqE,EAAA8oC,GAAAhyB,EAAAixC,GAAAsiB,GAAApjD,EAAAqiC,EACAnpD,EAAA4nD,GACW,MAAAs2B,EAAA3C,KAAA,SACX8C,GAKA,QAAAO,IAAAtgF,EAAAkgB,GACA,MAAAA,GAAAmY,MAAAr4B,EAAAq4B,MAEA,QAAAkoD,MACAxD,GAAAn9E,MACAA,KAAA2B,EAAA3B,KAAA8B,EAAA9B,KAAAgN,IAAAhN,KAAAq9E,KAAAr9E,KAAA4sB,GAAA,KAEA,QAAA6xD,IAAAzxE,GACA,GAAAmxE,GAAAnxE,EAAA+wE,EAAAK,EAAApxE,EAAAixE,CACA,IAAAE,GAAAC,EAAA,CACA,GAAAa,GAAAd,EAAAd,KAAAuD,EAAA5zE,EAAAqwE,KAAA6B,EAAAd,EAAAf,IACA,IAAA4B,IAAAC,EAAA,CACA,GAAA/L,GAAAyN,EAAAj/E,EAAAyxE,EAAAwN,EAAA9+E,EAAAmxE,EAAAgM,EAAAt9E,EAAAwxE,EAAAD,EAAA+L,EAAAn9E,EAAAsxE,EAAAzmD,EAAAuyD,EAAAv9E,EAAAwxE,EAAAvmD,EAAAsyD,EAAAp9E,EAAAsxE,EACA9iE,EAAA,GAAA2iE,EAAArmD,EAAAsmD,EAAAvmD,EACA,MAAArc,IAAAuwE,IAAA,CACA,GAAAC,GAAA7N,IAAAC,IAAAkM,EAAAzyD,IAAAC,IAAAjrB,GAAAirB,EAAAk0D,EAAA5N,EAAAkM,GAAA9uE,EAAAxO,GAAAmxE,EAAAmM,EAAAzyD,EAAAm0D,GAAAxwE,EAAAsc,EAAA9qB,EAAAsxE,EACAtmE,EAAAi0E,GAAA7R,OAAA,GAAAyR,GACA7zE,GAAAE,MACAF,EAAAuwE,KAAAuD,EACA9zE,EAAAnL,IAAAwxE,EACArmE,EAAAhL,EAAA8qB,EAAA1c,KAAAm6B,KAAA1oC,IAAAG,KACAgL,EAAA8f,KACA5f,EAAAF,QAEA,KADA,GAAAo2D,GAAA,KAAA3rD,EAAAypE,GAAA7tB,EACA57C,GACA,GAAAzK,EAAAhL,EAAAyV,EAAAzV,GAAAgL,EAAAhL,IAAAyV,EAAAzV,GAAAgL,EAAAnL,GAAA4V,EAAA5V,EAAA,CACA,IAAA4V,EAAAgtD,EAAkC,CAClCrB,EAAA3rD,EAAAwmE,CACA,OAFAxmE,IAAAgtD,MAIO,CACP,IAAAhtD,EAAAynE,EAAkC,CAClC9b,EAAA3rD,CACA,OAFAA,IAAAynE,EAMAgC,GAAA5qE,OAAA8sD,EAAAp2D,GACAo2D,IAAA+d,GAAAn0E,MAEA,QAAA4wE,IAAA1wE,GACA,GAAAF,GAAAE,EAAAF,MACAA,KACAA,EAAAixE,IAAAkD,GAAAn0E,EAAAmxE,GACA+C,GAAAzqE,OAAAzJ,GACAi0E,GAAA7uE,KAAApF,GACAqwE,GAAArwE,GACAE,EAAAF,OAAA,MAGA,QAAAo0E,IAAA56D,GAEA,IADA,GAAAwH,GAAAgyD,EAAAqB,GAAAvT,EAAAoF,GAAA1sD,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAA9mB,EAAAsgF,EAAArgF,OACAD,KACAsuB,EAAAgyD,EAAAtgF,KACA4hF,GAAAtzD,EAAAxH,KAAAsnD,EAAA9/C,IAAA2c,GAAA3c,EAAA1tB,EAAAuB,EAAAmsB,EAAAxN,EAAA3e,GAAAqqE,IAAAvhC,GAAA3c,EAAA1tB,EAAA0B,EAAAgsB,EAAAxN,EAAAxe,GAAAkqE,MACAl+C,EAAA1tB,EAAA0tB,EAAAxN,EAAA,KACAw/D,EAAA1rD,OAAA50B,EAAA,IAIA,QAAA4hF,IAAAhE,EAAA92D,GACA,GAAA+6D,GAAAjE,EAAA98D,CACA,IAAA+gE,EAAA,QACA,IAAAC,GAAAC,EAAAC,EAAApE,EAAAh9E,EAAA6qD,EAAA3kC,EAAA,MAAAqC,EAAArC,EAAA,MAAAojC,EAAApjC,EAAA,MAAAuC,EAAAvC,EAAA,MAAA24D,EAAA7B,EAAA/2B,EAAA64B,EAAA9B,EAAAv1B,EAAA45B,EAAAxC,EAAAt9E,EAAA+/E,EAAAzC,EAAAn9E,EAAA6/E,EAAAzC,EAAAv9E,EAAAigF,EAAA1C,EAAAp9E,EAAA+/E,GAAAJ,EAAAE,GAAA,EAAAG,GAAAJ,EAAAE,GAAA,CACA,IAAAA,IAAAF,EAAA,CACA,GAAAG,EAAA52B,GAAA42B,GAAAl5D,EAAA,MACA,IAAA84D,EAAAE,EAAA,CACA,GAAAH,GAGU,GAAAA,EAAA1/E,GAAA+mB,EAAA,WAHV24D,IACA7/E,EAAAkgF,EACA//E,EAAA4nD,EAEA23B,IACA1/E,EAAAkgF,EACA//E,EAAA+mB,OAEO,CACP,GAAA24D,GAGU,GAAAA,EAAA1/E,EAAA4nD,EAAA,WAHV83B,IACA7/E,EAAAkgF,EACA//E,EAAA+mB,EAEAw4D,IACA1/E,EAAAkgF,EACA//E,EAAA4nD,QAMA,IAFA43B,GAAAG,EAAAE,IAAAC,EAAAF,GACAH,EAAAO,EAAAR,EAAAO,EACAP,GAAA,GAAAA,EAAA,EACA,GAAAG,EAAAE,EAAA,CACA,GAAAH,GAGY,GAAAA,EAAA1/E,GAAA+mB,EAAA,WAHZ24D,IACA7/E,GAAA+nD,EAAA63B,GAAAD,EACAx/E,EAAA4nD,EAEA23B,IACA1/E,GAAAknB,EAAA04D,GAAAD,EACAx/E,EAAA+mB,OAES,CACT,GAAA24D,GAGY,GAAAA,EAAA1/E,EAAA4nD,EAAA,WAHZ83B,IACA7/E,GAAAknB,EAAA04D,GAAAD,EACAx/E,EAAA+mB,EAEAw4D,IACA1/E,GAAA+nD,EAAA63B,GAAAD,EACAx/E,EAAA4nD,OAIA,IAAAg4B,EAAAE,EAAA,CACA,GAAAJ,GAGY,GAAAA,EAAA7/E,GAAAgnB,EAAA,WAHZ64D,IACA7/E,EAAAspD,EACAnpD,EAAAw/E,EAAAr2B,EAAAs2B,EAEAF,IACA1/E,EAAAgnB,EACA7mB,EAAAw/E,EAAA34D,EAAA44D,OAES,CACT,GAAAC,GAGY,GAAAA,EAAA7/E,EAAAspD,EAAA,WAHZu2B,IACA7/E,EAAAgnB,EACA7mB,EAAAw/E,EAAA34D,EAAA44D,EAEAF,IACA1/E,EAAAspD,EACAnpD,EAAAw/E,EAAAr2B,EAAAs2B,GAOA,MAFAnE,GAAAh9E,EAAAohF,EACApE,EAAA98D,EAAA+gE,GACA,EAEA,QAAAU,IAAA9C,EAAAC,GACAl/E,KAAAqmD,EAAA44B,EACAj/E,KAAA6nD,EAAAq3B,EACAl/E,KAAAI,EAAAJ,KAAAsgB,EAAA,KAEA,QAAAk+D,IAAAS,EAAAC,EAAAsC,EAAAH,GACA,GAAAjE,GAAA,GAAA2E,IAAA9C,EAAAC,EAMA,OALAiC,IAAAjvE,KAAAkrE,GACAoE,GAAAjD,GAAAnB,EAAA6B,EAAAC,EAAAsC,GACAH,GAAA9C,GAAAnB,EAAA8B,EAAAD,EAAAoC,GACAhB,GAAApB,EAAAz/E,GAAAsgF,MAAA5tE,KAAA,GAAAsuE,IAAApD,EAAA6B,EAAAC,IACAmB,GAAAnB,EAAA1/E,GAAAsgF,MAAA5tE,KAAA,GAAAsuE,IAAApD,EAAA8B,EAAAD,IACA7B,EAEA,QAAAqD,IAAAxB,EAAAuC,EAAAH,GACA,GAAAjE,GAAA,GAAA2E,IAAA9C,EAAA,KAIA,OAHA7B,GAAAh9E,EAAAohF,EACApE,EAAA98D,EAAA+gE,EACAF,GAAAjvE,KAAAkrE,GACAA,EAEA,QAAAmB,IAAAnB,EAAA6B,EAAAC,EAAArB,GACAT,EAAAh9E,GAAAg9E,EAAA98D,EAIK88D,EAAA/2B,IAAA64B,EACL9B,EAAA98D,EAAAu9D,EAEAT,EAAAh9E,EAAAy9E,GANAT,EAAAh9E,EAAAy9E,EACAT,EAAA/2B,EAAA44B,EACA7B,EAAAv1B,EAAAq3B,GAOA,QAAAsB,IAAApD,EAAA6B,EAAAC,GACA,GAAAsC,GAAApE,EAAAh9E,EAAAihF,EAAAjE,EAAA98D,CACAtgB,MAAAo9E,OACAp9E,KAAAq9E,KAAA4B,EACAj/E,KAAAy4B,MAAAymD,EAAAhvE,KAAA+tD,MAAAihB,EAAAp9E,EAAAm9E,EAAAn9E,EAAAo9E,EAAAv9E,EAAAs9E,EAAAt9E,GAAAy7E,EAAA/2B,IAAA44B,EAAA/uE,KAAA+tD,MAAAojB,EAAA1/E,EAAA6/E,EAAA7/E,EAAA6/E,EAAA1/E,EAAAu/E,EAAAv/E,GAAAoO,KAAA+tD,MAAAujB,EAAA7/E,EAAA0/E,EAAA1/E,EAAA0/E,EAAAv/E,EAAA0/E,EAAA1/E,GAUA,QAAAkgF,MACAhiF,KAAAmzD,EAAA,KAEA,QAAAgqB,IAAA5lE,GACAA,EAAAstD,EAAAttD,EAAAw9D,EAAAx9D,EAAAgtD,EAAAhtD,EAAAynE,EAAAznE,EAAAwmE,EAAAxmE,EAAA0mE,EAAA,KAkKA,QAAAgE,IAAAC,EAAA3qE,GACA,GAAAoI,GAAApI,EAAAo7D,EAAAp7D,EAAAynE,EAAApuC,EAAAjxB,EAAAklD,CACAj0B,GACAA,EAAA2zB,IAAA5kD,EAAAixB,EAAA2zB,EAAAoO,EAAuC/hC,EAAAouC,EAAArM,EAEvCuP,EAAA/uB,EAAAwf,EAEAA,EAAA9N,EAAAj0B,EACAjxB,EAAAklD,EAAA8N,EACAhzD,EAAAq/D,EAAArM,EAAApO,EACA5kD,EAAAq/D,IAAAr/D,EAAAq/D,EAAAna,EAAAllD,GACAgzD,EAAApO,EAAA5kD,EAEA,QAAAwiE,IAAAD,EAAA3qE,GACA,GAAAoI,GAAApI,EAAAo7D,EAAAp7D,EAAAgtD,EAAA3zB,EAAAjxB,EAAAklD,CACAj0B,GACAA,EAAA2zB,IAAA5kD,EAAAixB,EAAA2zB,EAAAoO,EAAuC/hC,EAAAouC,EAAArM,EAEvCuP,EAAA/uB,EAAAwf,EAEAA,EAAA9N,EAAAj0B,EACAjxB,EAAAklD,EAAA8N,EACAhzD,EAAA4kD,EAAAoO,EAAAqM,EACAr/D,EAAA4kD,IAAA5kD,EAAA4kD,EAAAM,EAAAllD,GACAgzD,EAAAqM,EAAAr/D,EAEA,QAAAyiE,IAAA7qE,GACA,KAAAA,EAAAgtD,GAAAhtD,IAAAgtD,CACA,OAAAhtD,GAEA,QAAA8qE,IAAAC,EAAAC,GACA,GAAAt3B,GAAAvB,EAAA58C,EAAAuwE,EAAAiF,EAAAjiE,KAAAmiE,IAAAtT,KAKA,KAJAiS,MACAd,GAAA,GAAAxwE,OAAAyyE,EAAA7iF,QACAk+E,GAAA,GAAAqE,IACAhB,GAAA,GAAAgB,MAGA,GADAl1E,EAAAm0E,GACA5D,KAAAvwE,GAAAuwE,EAAAv7E,EAAAgL,EAAAhL,GAAAu7E,EAAAv7E,IAAAgL,EAAAhL,GAAAu7E,EAAA17E,EAAAmL,EAAAnL,GACA07E,EAAA17E,IAAAspD,GAAAoyB,EAAAv7E,IAAA4nD,IACA22B,GAAAhD,EAAA79E,GAAA,GAAAqgF,IAAAxC,GACAqB,GAAArB,GACApyB,EAAAoyB,EAAA17E,EAAA+nD,EAAA2zB,EAAAv7E,GAEAu7E,EAAAiF,EAAApT,UACO,KAAApiE,EAGP,KAFA8wE,IAAA9wE,EAAAE,KAKAu1E,IAAArB,GAAAqB,GAAAxC,GAAAwC,GACA,IAAAE,IACArC,MAAAC,GACAP,MAAAqB,GAGA,OADAxD,IAAAqD,GAAAG,GAAAd,GAAA,KACAoC,EAEA,QAAAD,IAAApiF,EAAAkgB,GACA,MAAAA,GAAAxe,EAAA1B,EAAA0B,GAAAwe,EAAA3e,EAAAvB,EAAAuB,EAqEA,QAAA+gF,IAAAtiF,EAAAkgB,EAAAilB,GACA,OAAAnlC,EAAAuB,EAAA4jC,EAAA5jC,IAAA2e,EAAAxe,EAAA1B,EAAA0B,IAAA1B,EAAAuB,EAAA2e,EAAA3e,IAAA4jC,EAAAzjC,EAAA1B,EAAA0B,GAgHA,QAAA6gF,IAAAryE,GACA,MAAAA,GAAA3O,EAEA,QAAAihF,IAAAtyE,GACA,MAAAA,GAAAxO,EAEA,QAAA+gF,MACA,OACAC,MAAA,EACAC,SACAp7E,MAAA,KACAhG,EAAA,KACAG,EAAA,MAGA,QAAAkhF,IAAA7uD,EAAA5c,EAAAoR,EAAAE,EAAAD,EAAAnQ,GACA,IAAA0b,EAAA5c,EAAAoR,EAAAE,EAAAD,EAAAnQ,GAAA,CACA,GAAA0mC,GAAA,IAAAx2B,EAAAC,GAAAw2B,EAAA,IAAAv2B,EAAApQ,GAAAwqE,EAAA1rE,EAAAwrE,KACAE,GAAA,IAAAD,GAAA7uD,EAAA8uD,EAAA,GAAAt6D,EAAAE,EAAAs2B,EAAAC,GACA6jC,EAAA,IAAAD,GAAA7uD,EAAA8uD,EAAA,GAAA9jC,EAAAt2B,EAAAD,EAAAw2B,GACA6jC,EAAA,IAAAD,GAAA7uD,EAAA8uD,EAAA,GAAAt6D,EAAAy2B,EAAAD,EAAA1mC,GACAwqE,EAAA,IAAAD,GAAA7uD,EAAA8uD,EAAA,GAAA9jC,EAAAC,EAAAx2B,EAAAnQ,IAGA,QAAAyqE,IAAAC,EAAAxhF,EAAAG,EAAAmpD,EAAAvB,EAAAizB,EAAAG,GACA,GAAAsG,GAAAC,EAAA5rE,GAiCA,OAhCA,SAAA++B,GAAAj/B,EAAAoR,EAAAE,EAAAD,EAAAnQ,GACA,KAAAkQ,EAAAg0D,GAAA9zD,EAAAi0D,GAAAl0D,EAAAqiC,GAAAxyC,EAAAixC,GAAA,CACA,GAAA/hD,EAAA4P,EAAA5P,MAAA,CACA,GAAAA,GAAAoP,EAAApV,EAAA4V,EAAA5V,EAAA8T,EAAA3T,EAAAyV,EAAAzV,EAAAwhF,EAAAvsE,IAAAtB,GACA,IAAA6tE,EAAAD,EAAA,CACA,GAAAtoD,GAAA7qB,KAAAm6B,KAAAg5C,EAAAC,EACAr4B,GAAAtpD,EAAAo5B,EAAA2uB,EAAA5nD,EAAAi5B,EACA4hD,EAAAh7E,EAAAo5B,EAAA+hD,EAAAh7E,EAAAi5B,EACAqoD,EAAAz7E,GAIA,OADAs7E,GAAA1rE,EAAAwrE,MAAAQ,EAAA,IAAA56D,EAAAC,GAAA46D,EAAA,IAAA36D,EAAApQ,GAAAzV,EAAArB,GAAA4hF,EAAAE,EAAA3hF,GAAA0hF,EACAhkF,EAAAikF,GAAA,EAAAzgF,EAAAi/B,EAAAziC,EAAA,EAAiDA,EAAAyiC,IAAOziC,EACxD,GAAA+X,EAAA0rE,EAAA,EAAAzjF,GAAA,SAAAA,GACA,OACAg3C,EAAAj/B,EAAAoR,EAAAE,EAAA06D,EAAAC,EACA,MAEA,QACAhtC,EAAAj/B,EAAAgsE,EAAA16D,EAAAD,EAAA46D,EACA,MAEA,QACAhtC,EAAAj/B,EAAAoR,EAAA66D,EAAAD,EAAA9qE,EACA,MAEA,QACA+9B,EAAAj/B,EAAAgsE,EAAAC,EAAA56D,EAAAnQ,MAIK0qE,EAAAl4B,EAAAvB,EAAAizB,EAAAG,GACLsG,EAGA,QAAAM,IAAAtjF,EAAAkgB,GACAlgB,EAAAkI,GAAA2/C,IAAA7nD,GACAkgB,EAAAhY,GAAA2/C,IAAA3nC,EACA,IAAAqjE,GAAAvjF,EAAAynD,EAAA+7B,EAAAxjF,EAAAsV,EAAAmuE,EAAAzjF,EAAAkgB,EAAAwjE,EAAAxjE,EAAAunC,EAAA87B,EAAAI,EAAAzjE,EAAA5K,EAAAkuE,EAAAI,EAAA1jE,IAAAujE,CACA,iBAAA5zD,GACA,UAAAquC,GAAApuD,KAAAs+B,MAAAm1C,EAAAG,EAAA7zD,IAAAquC,GAAApuD,KAAAs+B,MAAAo1C,EAAAG,EAAA9zD,IAAAquC,GAAApuD,KAAAs+B,MAAAq1C,EAAAG,EAAA/zD,KAIA,QAAAg0D,IAAA7jF,EAAAkgB,GACA,GAAsBg4B,GAAtB94C,KAAc+lC,IACd,KAAA+S,IAAAl4C,GACAk4C,IAAAh4B,GACA9gB,EAAA84C,GAAA4rC,GAAA9jF,EAAAk4C,GAAAh4B,EAAAg4B,IAEA/S,EAAA+S,GAAAl4C,EAAAk4C,EAGA,KAAAA,IAAAh4B,GACAg4B,IAAAl4C,KACAmlC,EAAA+S,GAAAh4B,EAAAg4B,GAGA,iBAAAroB,GACA,IAAAqoB,IAAA94C,GAAA+lC,EAAA+S,GAAA94C,EAAA84C,GAAAroB,EACA,OAAAsV,IAIA,QAAA4+C,IAAA/jF,EAAAkgB,GAEA,MADAlgB,MAAAkgB,KACA,SAAA2P,GACA,MAAA7vB,IAAA,EAAA6vB,GAAA3P,EAAA2P,GAIA,QAAAm0D,IAAAhkF,EAAAkgB,GACA,GAAA+jE,GAAAC,EAAAC,EAAAC,EAAAC,GAAAntB,UAAAotB,GAAAptB,UAAA,EAAA93D,GAAA,EAAAqU,KAAA8+D,IAEA,KADAvyE,GAAA,GAAAkgB,GAAA,IACA+jE,EAAAI,GAAAjmB,KAAAp+D,MAAAkkF,EAAAI,GAAAlmB,KAAAl+C,MACAikE,EAAAD,EAAAxwE,OAAA0wE,IACAD,EAAAjkE,EAAAhM,MAAAkwE,EAAAD,GACA1wE,EAAArU,GAAAqU,EAAArU,IAAA+kF,EAA6B1wE,IAAArU,GAAA+kF,IAE7BF,IAAA,OAAAC,IAAA,IACAzwE,EAAArU,GAAAqU,EAAArU,IAAA8kF,EAA6BzwE,IAAArU,GAAA8kF,GAE7BzwE,IAAArU,GAAA,KACAmzE,EAAAzgE,MACA1S,IACAmC,EAAAwiF,GAAAE,EAAAC,MAGAE,EAAAE,GAAAptB,SAMA,OAJAktB,GAAAlkE,EAAA7gB,SACA8kF,EAAAjkE,EAAAhM,MAAAkwE,GACA3wE,EAAArU,GAAAqU,EAAArU,IAAA+kF,EAA2B1wE,IAAArU,GAAA+kF,GAE3B1wE,EAAApU,OAAA,EAAAkzE,EAAA,IAAAryD,EAAAqyD,EAAA,GAAAhxE,EAAA,SAAAsuB,GACA,MAAA3P,GAAA2P,GAAA,KACK,WACL,MAAA3P,KACKA,EAAAqyD,EAAAlzE,OAAA,SAAAwwB,GACL,OAAAtgB,GAAAnQ,EAAA,EAAwBA,EAAA8gB,IAAO9gB,EAAAqU,GAAAlE,EAAAgjE,EAAAnzE,OAAAmQ,EAAAhO,EAAAsuB,EAC/B,OAAApc,GAAAsuD,KAAA,MAKA,QAAA+hB,IAAA9jF,EAAAkgB,GAEA,IADA,GAAA6T,GAAA30B,EAAA8I,GAAAq8E,cAAAllF,SACAD,GAAA,KAAA20B,EAAA7rB,GAAAq8E,cAAAnlF,GAAAY,EAAAkgB,MACA,MAAA6T,GAOA,QAAAywD,IAAAxkF,EAAAkgB,GACA,GAAA9gB,GAAAmC,KAAA4jC,KAAAs/C,EAAAzkF,EAAAX,OAAAqlF,EAAAxkE,EAAA7gB,OAAAslF,EAAA70E,KAAAlO,IAAA5B,EAAAX,OAAA6gB,EAAA7gB,OACA,KAAAD,EAAA,EAAeA,EAAAulF,IAAQvlF,EAAAmC,EAAAuQ,KAAAgyE,GAAA9jF,EAAAZ,GAAA8gB,EAAA9gB,IACvB,MAAUA,EAAAqlF,IAAOrlF,EAAA+lC,EAAA/lC,GAAAY,EAAAZ,EACjB,MAAUA,EAAAslF,IAAOtlF,EAAA+lC,EAAA/lC,GAAA8gB,EAAA9gB,EACjB,iBAAAywB,GACA,IAAAzwB,EAAA,EAAiBA,EAAAulF,IAAQvlF,EAAA+lC,EAAA/lC,GAAAmC,EAAAnC,GAAAywB,EACzB,OAAAsV,IA4CA,QAAAy/C,IAAA7wD,GACA,gBAAAlE,GACA,MAAAA,IAAA,IAAAA,GAAA,IAAAkE,EAAAlE,IAGA,QAAAg1D,IAAA9wD,GACA,gBAAAlE,GACA,SAAAkE,EAAA,EAAAlE,IAGA,QAAAi1D,IAAA/wD,GACA,gBAAAlE,GACA,UAAAA,EAAA,GAAAkE,EAAA,EAAAlE,GAAA,EAAAkE,EAAA,IAAAlE,KAGA,QAAAk1D,IAAAl1D,GACA,MAAAA,KAEA,QAAAm1D,IAAAn1D,GACA,MAAAA,OAEA,QAAAo1D,IAAAp1D,GACA,GAAAA,GAAA,UACA,IAAAA,GAAA,UACA,IAAAirB,GAAAjrB,IAAAq1D,EAAApqC,EAAAjrB,CACA,WAAAA,EAAA,GAAAq1D,EAAA,GAAAr1D,EAAAirB,GAAAoqC,EAAA,KAEA,QAAAC,IAAAz3D,GACA,gBAAAmC,GACA,MAAA/f,MAAAkvB,IAAAnP,EAAAnC,IAGA,QAAA03D,IAAAv1D,GACA,SAAA/f,KAAAs6B,IAAAva,EAAAosC,IAEA,QAAAopB,IAAAx1D,GACA,MAAA/f,MAAAkvB,IAAA,MAAAnP,EAAA,IAEA,QAAAy1D,IAAAz1D,GACA,SAAA/f,KAAAm6B,KAAA,EAAApa,KAEA,QAAA01D,IAAAvlF,EAAAuf,GACA,GAAA9L,EAGA,OAFA1T,WAAAV,OAAA,IAAAkgB,EAAA,KACAxf,UAAAV,OAAAoU,EAAA8L,EAAAqxD,GAAA9gE,KAAAosD,KAAA,EAAAl8D,IAAuDA,EAAA,EAAAyT,EAAA8L,EAAA,GACvD,SAAAsQ,GACA,SAAA7vB,EAAA8P,KAAAkvB,IAAA,MAAAnP,GAAA/f,KAAAoF,KAAA2a,EAAApc,GAAAm9D,GAAArxD,IAGA,QAAAimE,IAAA/xE,GAEA,MADAA,OAAA,SACA,SAAAoc,GACA,MAAAA,OAAApc,EAAA,GAAAoc,EAAApc,IAGA,QAAAgyE,IAAA51D,GACA,MAAAA,GAAA,cAAAA,MAAA,eAAAA,GAAA,UAAAA,EAAA,IAAAA,EAAA,iBAAAA,GAAA,WAAAA,EAAA,cAAAA,GAAA,YAAAA,EAAA,QAGA,QAAA61D,IAAA1lF,EAAAkgB,GACAlgB,EAAAkI,GAAAy9E,IAAA3lF,GACAkgB,EAAAhY,GAAAy9E,IAAAzlE,EACA,IAAA0lE,GAAA5lF,EAAAyS,EAAAozE,EAAA7lF,EAAAmlC,EAAA2gD,EAAA9lF,EAAAimD,EAAA8/B,EAAA7lE,EAAAzN,EAAAmzE,EAAAI,EAAA9lE,EAAAilB,EAAA0gD,EAAAI,EAAA/lE,EAAA+lC,EAAA6/B,CAGA,OAFAtxD,OAAAwxD,OAAA,EAAAH,EAAArxD,MAAAqxD,GAAA3lE,EAAAilB,EAAA0gD,GACArxD,MAAAuxD,MAAA,EAAAH,EAAApxD,MAAAoxD,GAAA1lE,EAAAzN,EAAAmzE,GAAqDG,EAAA,IAAAA,GAAA,IAA8BA,GAAA,MAAAA,GAAA,KACnF,SAAAl2D,GACA,MAAAwtC,IAAAuoB,EAAAG,EAAAl2D,EAAAg2D,EAAAG,EAAAn2D,EAAAi2D,EAAAG,EAAAp2D,GAAA,IAIA,QAAAq2D,IAAAlmF,EAAAkgB,GACAlgB,EAAAkI,GAAAi2D,IAAAn+D,GACAkgB,EAAAhY,GAAAi2D,IAAAj+C,EACA,IAAA0lE,GAAA5lF,EAAAyS,EAAA0zE,EAAAnmF,EAAAyT,EAAAqyE,EAAA9lF,EAAAimD,EAAA8/B,EAAA7lE,EAAAzN,EAAAmzE,EAAAzB,EAAAjkE,EAAAzM,EAAA0yE,EAAAF,EAAA/lE,EAAA+lC,EAAA6/B,CAGA,OAFAtxD,OAAA2vD,OAAA,EAAAgC,EAAA3xD,MAAA2xD,GAAAjmE,EAAAzM,EAAA0yE,GACA3xD,MAAAuxD,MAAA,EAAAH,EAAApxD,MAAAoxD,GAAA1lE,EAAAzN,EAAAmzE,GAAqDG,EAAA,IAAAA,GAAA,IAA8BA,GAAA,MAAAA,GAAA,KACnF,SAAAl2D,GACA,MAAA+sC,IAAAgpB,EAAAG,EAAAl2D,EAAAs2D,EAAAhC,EAAAt0D,EAAAi2D,EAAAG,EAAAp2D,GAAA,IAIA,QAAAu2D,IAAApmF,EAAAkgB,GACAlgB,EAAAkI,GAAAm+E,IAAArmF,GACAkgB,EAAAhY,GAAAm+E,IAAAnmE,EACA,IAAA4lE,GAAA9lF,EAAAimD,EAAAqgC,EAAAtmF,IAAAyjF,EAAAzjF,EAAAkgB,EAAA+lE,EAAA/lE,EAAA+lC,EAAA6/B,EAAAS,EAAArmE,EAAAlgB,EAAAsmF,EAAA1C,EAAA1jE,IAAAujE,CACA,iBAAA5zD,GACA,MAAA0tC,IAAAuoB,EAAAG,EAAAp2D,EAAAy2D,EAAAC,EAAA12D,EAAA4zD,EAAAG,EAAA/zD,GAAA,IAIA,QAAA22D,IAAAxmF,EAAAkgB,GAEA,MADAA,IAAAlgB,EACA,SAAA6vB,GACA,MAAA/f,MAAAs+B,MAAApuC,EAAAkgB,EAAA2P,IAaA,QAAA42D,IAAA7tB,GACA,GAAA8tB,IAAA9tB,EAAA54D,EAAA44D,EAAA14C,GAAAiY,GAAAygC,EAAAzzB,EAAAyzB,EAAA1oD,GAAAy2E,EAAAC,GAAAF,GAAAG,EAAAC,GAAAJ,EAAAvuD,GAAA4uD,EAAAH,GAAAI,GAAA7uD,EAAAuuD,GAAAG,KAAA,CACAH,GAAA,GAAAvuD,EAAA,GAAAA,EAAA,GAAAuuD,EAAA,KACAA,EAAA,OACAA,EAAA,OACAC,IAAA,EACAE,IAAA,GAEAjnF,KAAAkV,QAAA6xE,EAAA72E,KAAA+tD,MAAA6oB,EAAA,GAAAA,EAAA,IAAA52E,KAAA+tD,OAAA1lC,EAAA,GAAAA,EAAA,KAAA2lC,GACAl+D,KAAAmqC,WAAA6uB,EAAAlrC,EAAAkrC,EAAA7kC,GACAn0B,KAAAuI,OAAAw+E,EAAAI,GACAnnF,KAAAqnF,KAAAF,EAAAj3E,KAAA+tD,MAAAgpB,EAAAE,GAAAjpB,GAAA,EAKA,QAAAgpB,IAAA9mF,EAAAkgB,GACA,MAAAlgB,GAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,GAEA,QAAA0mE,IAAA5mF,GACA,GAAAk4C,GAAApoC,KAAAm6B,KAAA68C,GAAA9mF,KAKA,OAJAk4C,KACAl4C,EAAA,IAAAk4C,EACAl4C,EAAA,IAAAk4C,GAEAA,EAEA,QAAA8uC,IAAAhnF,EAAAkgB,EAAAg4B,GAGA,MAFAl4C,GAAA,IAAAk4C,EAAAh4B,EAAA,GACAlgB,EAAA,IAAAk4C,EAAAh4B,EAAA,GACAlgB,EAWA,QAAAknF,IAAAzzE,GACA,MAAAA,GAAApU,OAAAoU,EAAAq7D,MAAA,OAEA,QAAAqY,IAAAC,EAAAC,EAAA5zE,EAAA8+D,GACA,GAAA6U,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,GAAAjoF,GAAAqU,EAAA3B,KAAA,+BACAygE,GAAAzgE,MACA1S,IAAA,EACAmC,EAAAwiF,GAAAqD,EAAA,GAAAC,EAAA,MAEAjoF,IAAA,EACAmC,EAAAwiF,GAAAqD,EAAA,GAAAC,EAAA,WAEKA,EAAA,IAAAA,EAAA,KACL5zE,EAAA3B,KAAA,aAAAu1E,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAA/zE,EAAA8+D,GACAgV,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAmCA,EAAAD,EAAA,MAAAA,GAAA,KACnChV,EAAAzgE,MACA1S,EAAAqU,EAAA3B,KAAAo1E,GAAAzzE,GAAA,sBACAlS,EAAAwiF,GAAAwD,EAAAC,MAEKA,GACL/zE,EAAA3B,KAAAo1E,GAAAzzE,GAAA,UAAA+zE,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAAl0E,EAAA8+D,GACAmV,IAAAC,EACApV,EAAAzgE,MACA1S,EAAAqU,EAAA3B,KAAAo1E,GAAAzzE,GAAA,qBACAlS,EAAAwiF,GAAA2D,EAAAC,KAEKA,GACLl0E,EAAA3B,KAAAo1E,GAAAzzE,GAAA,SAAAk0E,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAAr0E,EAAA8+D,GACA,GAAAsV,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,GAAA1oF,GAAAqU,EAAA3B,KAAAo1E,GAAAzzE,GAAA,2BACA8+D,GAAAzgE,MACA1S,IAAA,EACAmC,EAAAwiF,GAAA8D,EAAA,GAAAC,EAAA,MAEA1oF,IAAA,EACAmC,EAAAwiF,GAAA8D,EAAA,GAAAC,EAAA,UAEK,KAAAA,EAAA,QAAAA,EAAA,IACLr0E,EAAA3B,KAAAo1E,GAAAzzE,GAAA,SAAAq0E,EAAA,KAGA,QAAAC,IAAA/nF,EAAAkgB,GACA,GAAAzM,MAAA8+D,IAOA,OANAvyE,GAAAkI,GAAA+5B,UAAAjiC,GAAAkgB,EAAAhY,GAAA+5B,UAAA/hB,GACAinE,GAAAnnF,EAAA+pC,UAAA7pB,EAAA6pB,UAAAt2B,EAAA8+D,GACA+U,GAAAtnF,EAAA8U,OAAAoL,EAAApL,OAAArB,EAAA8+D,GACAkV,GAAAznF,EAAAinF,KAAA/mE,EAAA+mE,KAAAxzE,EAAA8+D,GACAqV,GAAA5nF,EAAAmI,MAAA+X,EAAA/X,MAAAsL,EAAA8+D,GACAvyE,EAAAkgB,EAAA,KACA,SAAA2P,GAEA,IADA,GAAAtgB,GAAAnQ,GAAA,EAAAT,EAAA4zE,EAAAlzE,SACAD,EAAAT,GAAA8U,GAAAlE,EAAAgjE,EAAAnzE,OAAAmQ,EAAAhO,EAAAsuB,EACA,OAAApc,GAAAsuD,KAAA,KAGA,QAAAimB,IAAAhoF,EAAAkgB,GAEA,MADAA,OAAAlgB,OAAA,EAAAkgB,EACA,SAAA3e,GACA,OAAAA,EAAAvB,GAAAkgB,GAGA,QAAA+nE,IAAAjoF,EAAAkgB,GAEA,MADAA,OAAAlgB,OAAA,EAAAkgB,EACA,SAAA3e,GACA,MAAAuO,MAAAnO,IAAA,EAAAmO,KAAAlO,IAAA,GAAAL,EAAAvB,GAAAkgB,KAWA,QAAAgoE,IAAAC,GAEA,IADA,GAAAz2E,GAAAy2E,EAAAzjF,OAAAob,EAAAqoE,EAAAjpF,OAAAkpF,EAAAC,GAAA32E,EAAAoO,GAAAuf,GAAA3tB,GACAA,IAAA02E,GACA12E,IAAA8+B,OACAnR,EAAAvtB,KAAAJ,EAGA,KADA,GAAAwmC,GAAA7Y,EAAAhgC,OACAygB,IAAAsoE,GACA/oD,EAAArL,OAAAkkB,EAAA,EAAAp4B,GACAA,IAAA0wB,MAEA,OAAAnR,GAEA,QAAAipD,IAAAnxE,GAEA,IADA,GAAAoxE,MAAA/3C,EAAAr5B,EAAAq5B,OACA,MAAAA,GACA+3C,EAAAz2E,KAAAqF,GACAA,EAAAq5B,EACAA,UAGA,OADA+3C,GAAAz2E,KAAAqF,GACAoxE,EAEA,QAAAF,IAAAroF,EAAAkgB,GACA,GAAAlgB,IAAAkgB,EAAA,MAAAlgB,EAEA,KADA,GAAAwoF,GAAAF,GAAAtoF,GAAAyoF,EAAAH,GAAApoE,GAAAwoE,EAAAF,EAAA1Z,MAAA6Z,EAAAF,EAAA3Z,MAAA8Z,EAAA,KACAF,IAAAC,GACAC,EAAAF,EACAA,EAAAF,EAAA1Z,MACA6Z,EAAAF,EAAA3Z,KAEA,OAAA8Z,GA6UA,QAAAC,IAAA34E,GACAA,EAAA44E,OAAA,EAEA,QAAAC,IAAA74E,GACAA,EAAA44E,QAAA,EAEA,QAAAE,IAAA94E,GACAA,EAAA44E,OAAA,EACA54E,EAAA+4E,GAAA/4E,EAAA3O,EAAA2O,EAAAg5E,GAAAh5E,EAAAxO,EAEA,QAAAynF,IAAAj5E,GACAA,EAAA44E,QAAA,EAEA,QAAAM,IAAAC,EAAAC,EAAAC,GACA,GAAAh9D,GAAA,EAAAC,EAAA,CAEA,IADA68D,EAAAG,OAAA,GACAH,EAAA3G,KAEA,IADA,GAAAv9C,GAAAw9C,EAAA0G,EAAA1G,MAAAhkF,EAAAgkF,EAAAtjF,OAAAD,GAAA,IACAA,EAAAT,GAEA,OADAwmC,EAAAw9C,EAAAvjF,MAEAgqF,GAAAjkD,EAAAmkD,EAAAC,GACAF,EAAAG,QAAArkD,EAAAqkD,OACAj9D,GAAA4Y,EAAAqkD,OAAArkD,EAAA5Y,GACAC,GAAA2Y,EAAAqkD,OAAArkD,EAAA3Y,GAGA,IAAA68D,EAAA9hF,MAAA,CACA8hF,EAAA3G,OACA2G,EAAA9hF,MAAAhG,GAAAuO,KAAAs4C,SAAA,GACAihC,EAAA9hF,MAAA7F,GAAAoO,KAAAs4C,SAAA,GAEA,IAAAlQ,GAAAoxC,EAAAC,EAAAF,EAAA9hF,MAAAmM,MACA21E,GAAAG,QAAAH,EAAAI,YAAAvxC,EACA3rB,GAAA2rB,EAAAmxC,EAAA9hF,MAAAhG,EACAirB,GAAA0rB,EAAAmxC,EAAA9hF,MAAA7F,EAEA2nF,EAAA98D,KAAA88D,EAAAG,OACAH,EAAA78D,KAAA68D,EAAAG,OA6DA,QAAAE,IAAAljF,EAAAmjF,GAIA,MAHAzhF,IAAA83D,OAAAx5D,EAAAmjF,EAAA,2BACAnjF,EAAAm8E,MAAAn8E,EACAA,EAAAojF,MAAAC,GACArjF,EAEA,QAAAsjF,IAAA3yE,EAAA+c,GAEA,IADA,GAAAyuD,IAAAxrE,GACA,OAAAA,EAAAwrE,EAAA7T,QAEA,GADA56C,EAAA/c,IACA0rE,EAAA1rE,EAAA0rE,YAAAlkF,EAAAkkF,EAAAxjF,QAEA,IADA,GAAAV,GAAAkkF,IACAlkF,GAAA,GAAAgkF,EAAA7wE,KAAA+wE,EAAAlkF,IAIA,QAAAorF,IAAA5yE,EAAA+c,GAEA,IADA,GAAAyuD,IAAAxrE,GAAA6yE,KACA,OAAA7yE,EAAAwrE,EAAA7T,QAEA,GADAkb,EAAAl4E,KAAAqF,IACA0rE,EAAA1rE,EAAA0rE,YAAAlkF,EAAAkkF,EAAAxjF,QAEA,IADA,GAAAV,GAAAkkF,EAAAzjF,GAAA,IACAA,EAAAT,GAAAgkF,EAAA7wE,KAAA+wE,EAAAzjF,GAGA,aAAA+X,EAAA6yE,EAAAlb,QACA56C,EAAA/c,GAGA,QAAA8yE,IAAA/5E,GACA,MAAAA,GAAA2yE,SAEA,QAAAqH,IAAAh6E,GACA,MAAAA,GAAAlS,MAEA,QAAAmsF,IAAAnqF,EAAAkgB,GACA,MAAAA,GAAAliB,MAAAgC,EAAAhC,MAEA,QAAA6rF,IAAAlH,GACA,MAAAz6E,IAAAm9B,MAAAs9C,EAAAnvE,IAAA,SAAAg9B,GACA,OAAAA,EAAAqyC,cAAArvE,IAAA,SAAA42E,GACA,OACA1lF,OAAA8rC,EACAtxC,OAAAkrF,QAqJA,QAAAC,IAAAn6E,GACA,MAAAA,GAAA3O,EAEA,QAAA+oF,IAAAp6E,GACA,MAAAA,GAAAxO,EAEA,QAAA6oF,IAAAr6E,EAAAo5C,EAAA5nD,GACAwO,EAAAo5C,KACAp5C,EAAAxO,IAiEA,QAAA8oF,IAAAtpF,GACA,MAAAgH,IAAAG,MAAAnH,EAAA7B,QAEA,QAAAorF,IAAAvpF,GAEA,IADA,GAAA2gC,IAAA,EAAA+2B,EAAA13D,EAAA,GAAA7B,OAAAiqD,OACAznB,EAAA+2B,GAAAtP,EAAAznB,GAAA,CACA,OAAAynB,GAEA,QAAAohC,IAAAtjF,GAEA,IADA,GAAA8wC,GAAA94C,EAAA,EAAAyiC,EAAA,EAAAxyB,EAAAjI,EAAA,MAAAzI,EAAAyI,EAAA/H,OACUD,EAAAT,IAAMS,GAChB84C,EAAA9wC,EAAAhI,GAAA,IAAAiQ,IACAwyB,EAAAziC,EACAiQ,EAAA6oC,EAGA,OAAArW,GAEA,QAAA8oD,IAAAz6E,GACA,MAAAA,GAAAq3B,OAAAqjD,GAAA,GAEA,QAAAA,IAAArrE,EAAArP,GACA,MAAAqP,GAAArP,EAAA,GAgDA,QAAA26E,IAAAxiF,EAAAvG,GACA,MAAAgpF,IAAAziF,EAAAyH,KAAAC,KAAAD,KAAAkxD,IAAAl/D,EAAAzC,QAAAyQ,KAAAi7E,IAAA,IAEA,QAAAD,IAAAziF,EAAA1J,GAEA,IADA,GAAA4C,IAAA,EAAA2e,GAAA7X,EAAA,GAAAuwD,GAAAvwD,EAAA,GAAA6X,GAAAvhB,EAAAo1B,OACAxyB,GAAA5C,GAAAo1B,EAAAxyB,GAAAq3D,EAAAr3D,EAAA2e,CACA,OAAA6T,GAEA,QAAAi3D,IAAAlpF,GACA,OAAAoG,GAAAtG,IAAAE,GAAAoG,GAAAvG,IAAAG,IA2CA,QAAAmpF,IAAAjrF,EAAAkgB,GACA,MAAAlgB,GAAAhC,MAAAkiB,EAAAliB,MAEA,QAAAktF,IAAAlrF,EAAAkgB,GACA,GAAAilB,GAAAnlC,EAAAmrF,UACAnrF,GAAAmrF,WAAAjrE,EACAA,EAAAkrE,WAAAprF,EACAkgB,EAAAirE,WAAAhmD,EACAA,EAAAimD,WAAAlrE,EAEA,QAAAmrE,IAAArrF,EAAAkgB,GACAlgB,EAAAmrF,WAAAjrE,EACAA,EAAAkrE,WAAAprF,EAEA,QAAAsrF,IAAAtrF,EAAAkgB,GACA,GAAAvJ,GAAAuJ,EAAA3e,EAAAvB,EAAAuB,EAAA8T,EAAA6K,EAAAxe,EAAA1B,EAAA0B,EAAA6pF,EAAAvrF,EAAAynD,EAAAvnC,EAAAunC,CACA,YAAA8jC,IAAA50E,IAAAtB,IAEA,QAAAm2E,IAAAr0E,GAGA,QAAAs0E,GAAAt0E,GACA+vC,EAAAp3C,KAAAlO,IAAAuV,EAAA5V,EAAA4V,EAAAswC,EAAAP,GACAC,EAAAr3C,KAAAnO,IAAAwV,EAAA5V,EAAA4V,EAAAswC,EAAAN,GACA5J,EAAAztC,KAAAlO,IAAAuV,EAAAzV,EAAAyV,EAAAswC,EAAAlK,GACAC,EAAA1tC,KAAAnO,IAAAwV,EAAAzV,EAAAyV,EAAAswC,EAAAjK,GANA,IAAAmlC,EAAAxrE,EAAA0rE,YAAAlkF,EAAAgkF,EAAAtjF,QAAA,CACA,GAAAsjF,GAAA3iF,EAAAkgB,EAAAilB,EAAA/lC,EAAAyiC,EAAAqW,EAAAv5C,EAAAuoD,EAAA7vC,IAAA8vC,GAAA9vC,IAAAkmC,EAAAlmC,IAAAmmC,GAAAnmC,GAYA,IALAsrE,EAAAz4E,QAAAwhF,IACA1rF,EAAA2iF,EAAA,GACA3iF,EAAAuB,GAAAvB,EAAAynD,EACAznD,EAAA0B,EAAA,EACA+pF,EAAAzrF,GACArB,EAAA,IACAuhB,EAAAyiE,EAAA,GACAziE,EAAA3e,EAAA2e,EAAAunC,EACAvnC,EAAAxe,EAAA,EACA+pF,EAAAvrE,GACAvhB,EAAA,GAQA,IAPAwmC,EAAAw9C,EAAA,GACAgJ,GAAA3rF,EAAAkgB,EAAAilB,GACAsmD,EAAAtmD,GACA+lD,GAAAlrF,EAAAmlC,GACAnlC,EAAAorF,WAAAjmD,EACA+lD,GAAA/lD,EAAAjlB,GACAA,EAAAlgB,EAAAmrF,WACA/rF,EAAA,EAAmBA,EAAAT,EAAOS,IAAA,CAC1BusF,GAAA3rF,EAAAkgB,EAAAilB,EAAAw9C,EAAAvjF,GACA,IAAAwsF,GAAA,EAAAC,EAAA,EAAAC,EAAA,CACA,KAAAjqD,EAAA3hB,EAAAirE,WAAgCtpD,IAAA3hB,EAAS2hB,IAAAspD,WAAAU,IACzC,GAAAP,GAAAzpD,EAAAsD,GAAA,CACAymD,EAAA,CACA,OAGA,MAAAA,EACA,IAAA1zC,EAAAl4C,EAAAorF,WAAkClzC,IAAArW,EAAAupD,aAClCE,GAAApzC,EAAA/S,GADsD+S,IAAAkzC,WAAAU,KAMtDF,GACAC,EAAAC,GAAAD,GAAAC,GAAA5rE,EAAAunC,EAAAznD,EAAAynD,EAAA4jC,GAAArrF,EAAAkgB,EAAA2hB,GAAiFwpD,GAAArrF,EAAAk4C,EAAAh4B,GACjF9gB,MAEA8rF,GAAAlrF,EAAAmlC,GACAjlB,EAAAilB,EACAsmD,EAAAtmD,IAKA,GAAA5Y,IAAA26B,EAAAC,GAAA,EAAA36B,GAAA+wB,EAAAC,GAAA,EAAAyzB,EAAA,CACA,KAAA7xE,EAAA,EAAeA,EAAAT,EAAOS,IACtB+lC,EAAAw9C,EAAAvjF,GACA+lC,EAAA5jC,GAAAgrB,EACA4Y,EAAAzjC,GAAA8qB,EACAykD,EAAAnhE,KAAAnO,IAAAsvE,EAAA9rC,EAAAsiB,EAAA33C,KAAAm6B,KAAA9E,EAAA5jC,EAAA4jC,EAAA5jC,EAAA4jC,EAAAzjC,EAAAyjC,EAAAzjC,GAEAyV,GAAAswC,EAAAwpB,EACA0R,EAAAz4E,QAAA6hF,KAEA,QAAAL,IAAAv0E,GACAA,EAAAg0E,WAAAh0E,EAAAi0E,WAAAj0E,EAEA,QAAA40E,IAAA50E,SACAA,GAAAg0E,iBACAh0E,GAAAi0E,WAEA,QAAAY,IAAA70E,EAAA5V,EAAAG,EAAAw2C,GACA,GAAA2qC,GAAA1rE,EAAA0rE,QAIA,IAHA1rE,EAAA5V,KAAA22C,EAAA/gC,EAAA5V,EACA4V,EAAAzV,KAAAw2C,EAAA/gC,EAAAzV,EACAyV,EAAAswC,GAAAvP,EACA2qC,EAEA,IADA,GAAAzjF,IAAA,EAAAT,EAAAkkF,EAAAxjF,SACAD,EAAAT,GAAAqtF,GAAAnJ,EAAAzjF,GAAAmC,EAAAG,EAAAw2C,GAGA,QAAAyzC,IAAA3rF,EAAAkgB,EAAAilB,GACA,GAAA8mD,GAAAjsF,EAAAynD,EAAAtiB,EAAAsiB,EAAA9wC,EAAAuJ,EAAA3e,EAAAvB,EAAAuB,EAAA8T,EAAA6K,EAAAxe,EAAA1B,EAAA0B,CACA,IAAAuqF,IAAAt1E,GAAAtB,GAAA,CACA,GAAA62E,GAAAhsE,EAAAunC,EAAAtiB,EAAAsiB,EAAA0kC,EAAAx1E,IAAAtB,GACA62E,MACAD,IACA,IAAA1qF,GAAA,IAAA0qF,EAAAC,IAAA,EAAAC,GAAAzqF,EAAAoO,KAAAm6B,KAAAn6B,KAAAnO,IAAA,IAAAuqF,GAAAD,EAAAE,IAAAF,GAAAE,GAAAF,EAAAC,OAAA,EAAAC,EACAhnD,GAAA5jC,EAAAvB,EAAAuB,IAAAoV,EAAAjV,EAAA2T,EACA8vB,EAAAzjC,EAAA1B,EAAA0B,EAAAH,EAAA8T,EAAA3T,EAAAiV,MAEAwuB,GAAA5jC,EAAAvB,EAAAuB,EAAA0qF,EACA9mD,EAAAzjC,EAAA1B,EAAA0B,EAuHA,QAAA0qF,IAAApsF,EAAAkgB,GACA,MAAAlgB,GAAAwwC,QAAAtwB,EAAAswB,OAAA,IAEA,QAAA67C,IAAAh9E,GACA,GAAAwzE,GAAAxzE,EAAAwzE,QACA,OAAAA,GAAAxjF,OAAAwjF,EAAA,GAAAxzE,EAAAwgB,EAEA,QAAAy8D,IAAAj9E,GACA,GAAA1Q,GAAAkkF,EAAAxzE,EAAAwzE,QACA,QAAAlkF,EAAAkkF,EAAAxjF,QAAAwjF,EAAAlkF,EAAA,GAAA0Q,EAAAwgB,EAEA,QAAA08D,IAAAC,EAAAC,EAAAp2C,GACA,GAAAq2C,GAAAr2C,GAAAo2C,EAAArtF,EAAAotF,EAAAptF,EACAqtF,GAAAtnD,GAAAunD,EACAD,EAAAh5E,GAAA4iC,EACAm2C,EAAArnD,GAAAunD,EACAD,EAAAj7B,GAAAnb,EACAo2C,EAAA7zB,GAAAviB,EAEA,QAAAs2C,IAAAt9E,GAEA,IADA,GAAAqD,GAAA2jC,EAAA,EAAAq2C,EAAA,EAAA7J,EAAAxzE,EAAAwzE,SAAAzjF,EAAAyjF,EAAAxjF,SACAD,GAAA,GACAsT,EAAAmwE,EAAAzjF,GACAsT,EAAA8+C,GAAAnb,EACA3jC,EAAAkmD,GAAAviB,EACAA,GAAA3jC,EAAAe,GAAAi5E,GAAAh6E,EAAAyyB,GAGA,QAAAynD,IAAAC,EAAAx9E,EAAAy9E,GACA,MAAAD,GAAA7sF,EAAAwwC,SAAAnhC,EAAAmhC,OAAAq8C,EAAA7sF,EAAA8sF,EA4CA,QAAAC,IAAAlK,GACA,SAAA36E,GAAAvG,IAAAkhF,EAAA,SAAAuH,GACA,MAAAA,GAAA1oF,IAGA,QAAAsrF,IAAAnK,GACA,MAAAA,GAAAt7C,OAAA,SAAAhmC,EAAA6oF,GACA,MAAA7oF,GAAA6oF,EAAA7oF,GACK,GAAAshF,EAAAxjF,OAEL,QAAA4tF,IAAA91E,GACA,GAAA0rE,GAAA1rE,EAAA0rE,QACA,OAAAA,MAAAxjF,OAAA4tF,GAAApK,EAAA,IAAA1rE,EAEA,QAAA+1E,IAAA/1E,GACA,GAAAxY,GAAAkkF,EAAA1rE,EAAA0rE,QACA,OAAAA,KAAAlkF,EAAAkkF,EAAAxjF,QAAA6tF,GAAArK,EAAAlkF,EAAA,IAAAwY,EAoJA,QAAAg2E,IAAAh2E,GACA,OACA5V,EAAA4V,EAAA5V,EACAG,EAAAyV,EAAAzV,EACAiV,GAAAQ,EAAAR,GACAtB,GAAA8B,EAAA9B,IAGA,QAAA+3E,IAAAj2E,EAAAxU,GACA,GAAApB,GAAA4V,EAAA5V,EAAAoB,EAAA,GAAAjB,EAAAyV,EAAAzV,EAAAiB,EAAA,GAAAgU,EAAAQ,EAAAR,GAAAhU,EAAA,GAAAA,EAAA,GAAA0S,EAAA8B,EAAA9B,GAAA1S,EAAA,GAAAA,EAAA,EASA,OARAgU,GAAA,IACApV,GAAAoV,EAAA,EACAA,EAAA,GAEAtB,EAAA,IACA3T,GAAA2T,EAAA,EACAA,EAAA,IAGA9T,IACAG,IACAiV,KACAtB,MAsCA,QAAAg4E,IAAA57E,GACA,GAAAC,GAAAD,EAAA,GAAAE,EAAAF,IAAApS,OAAA,EACA,OAAAqS,GAAAC,GAAAD,EAAAC,MAAAD,GAEA,QAAA47E,IAAAnlF,GACA,MAAAA,GAAAoK,YAAApK,EAAAoK,cAAA86E,GAAAllF,EAAAE,SAEA,QAAAklF,IAAA97E,EAAApJ,EAAAmlF,EAAAt/C,GACA,GAAAy8B,GAAA6iB,EAAA/7E,EAAA,GAAAA,EAAA,IAAArS,EAAA8uC,EAAA7lC,EAAA,GAAAA,EAAA,GACA,iBAAA9G,GACA,MAAAnC,GAAAurE,EAAAppE,KAGA,QAAAksF,IAAAh8E,EAAAi8E,GACA,GAAA/2E,GAAAsiD,EAAA,EAAA00B,EAAAl8E,EAAApS,OAAA,EAAAwrD,EAAAp5C,EAAAwnD,GAAA1wC,EAAA9W,EAAAk8E,EAOA,OANAplE,GAAAsiC,IACAl0C,EAAAsiD,IAAA00B,IAAAh3E,EACAA,EAAAk0C,IAAAtiC,IAAA5R,GAEAlF,EAAAwnD,GAAAy0B,EAAAlqB,MAAA3Y,GACAp5C,EAAAk8E,GAAAD,EAAA39E,KAAAwY,GACA9W,EAEA,QAAAm8E,IAAA/pF,GACA,MAAAA,IACA2/D,MAAA,SAAAjiE,GACA,MAAAuO,MAAA0zD,MAAAjiE,EAAAsC,MAEAkM,KAAA,SAAAxO,GACA,MAAAuO,MAAAC,KAAAxO,EAAAsC,OAEKgqF,GAML,QAAAC,IAAAr8E,EAAApJ,EAAAmlF,EAAAt/C,GACA,GAAAy8B,MAAAvrE,KAAAyiC,EAAA,EAAAqW,EAAApoC,KAAAlO,IAAA6P,EAAApS,OAAAgJ,EAAAhJ,QAAA,CAKA,KAJAoS,EAAAymC,GAAAzmC,EAAA,KACAA,IAAAyC,QAAAmnC,UACAhzC,IAAA6L,QAAAmnC,aAEAxZ,GAAAqW,GACAyyB,EAAA74D,KAAA07E,EAAA/7E,EAAAowB,EAAA,GAAApwB,EAAAowB,KACAziC,EAAA0S,KAAAo8B,EAAA7lC,EAAAw5B,EAAA,GAAAx5B,EAAAw5B,IAEA,iBAAAtgC,GACA,GAAAsgC,GAAA35B,GAAA6lF,OAAAt8E,EAAAlQ,EAAA,EAAA22C,GAAA,CACA,OAAA94C,GAAAyiC,GAAA8oC,EAAA9oC,GAAAtgC,KAMA,QAAAysF,IAAAv8E,EAAApJ,EAAA6lC,EAAA+/C,GAEA,QAAAC,KACA,GAAA9lF,GAAA0H,KAAAlO,IAAA6P,EAAApS,OAAAgJ,EAAAhJ,QAAA,EAAAyuF,GAAAP,GAAAC,EAAAS,EAAAhG,GAAAD,EAGA,OAFA7O,GAAA/wE,EAAAqJ,EAAApJ,EAAAmlF,EAAAt/C,GACAigD,EAAA/lF,EAAAC,EAAAoJ,EAAA+7E,EAAA1J,IACA37E,EAEA,QAAAA,GAAA5G,GACA,MAAA43E,GAAA53E,GARA,GAAA43E,GAAAgV,CAiDA,OAvCAhmF,GAAA+kE,OAAA,SAAAxrE,GACA,MAAAysF,GAAAzsF,IAEAyG,EAAAsJ,OAAA,SAAAlQ,GACA,MAAAxB,WAAAV,QACAoS,EAAAlQ,EAAAiS,IAAAqF,QACAq1E,KAFAz8E,GAIAtJ,EAAAE,MAAA,SAAA9G,GACA,MAAAxB,WAAAV,QACAgJ,EAAA9G,EACA2sF,KAFA7lF,GAIAF,EAAAimF,WAAA,SAAA7sF,GACA,MAAA4G,GAAAE,MAAA9G,GAAA2sC,YAAAs4C,KAEAr+E,EAAA8lF,MAAA,SAAA1sF,GACA,MAAAxB,WAAAV,QACA4uF,EAAA1sF,EACA2sF,KAFAD,GAIA9lF,EAAA+lC,YAAA,SAAA3sC,GACA,MAAAxB,WAAAV,QACA6uC,EAAA3sC,EACA2sF,KAFAhgD,GAIA/lC,EAAA0J,MAAA,SAAA+mD,GACA,MAAAy1B,IAAA58E,EAAAmnD,IAEAzwD,EAAAS,WAAA,SAAAgwD,EAAA7hD,GACA,MAAAu3E,IAAA78E,EAAAmnD,EAAA7hD,IAEA5O,EAAAulF,KAAA,SAAA90B,GAEA,MADA21B,IAAA98E,EAAAmnD,GACAs1B,KAEA/lF,EAAA+J,KAAA,WACA,MAAA87E,IAAAv8E,EAAApJ,EAAA6lC,EAAA+/C,IAEAC,IAEA,QAAAM,IAAArmF,EAAAC,GACA,MAAAF,IAAA83D,OAAA73D,EAAAC,EAAA,4CAEA,QAAAmmF,IAAA98E,EAAAmnD,GAGA,MAFA60B,IAAAh8E,EAAAm8E,GAAAa,GAAAh9E,EAAAmnD,GAAA,KACA60B,GAAAh8E,EAAAm8E,GAAAa,GAAAh9E,EAAAmnD,GAAA,KACAnnD,EAEA,QAAAg9E,IAAAh9E,EAAAmnD,GACA,MAAAA,MAAA,GACA,IAAA1yC,GAAAmnE,GAAA57E,GAAAi9E,EAAAxoE,EAAA,GAAAA,EAAA,GAAAriB,EAAAiM,KAAAkvB,IAAA,GAAAlvB,KAAA0zD,MAAA1zD,KAAAkxD,IAAA0tB,EAAA91B,GAAA9oD,KAAAmxD,OAAAz7D,EAAAozD,EAAA81B,EAAA7qF,CAKA,OAJA2B,IAAA,IAAA3B,GAAA,GAA+B2B,GAAA,IAAA3B,GAAA,EAAgC2B,GAAA,MAAA3B,GAAA,GAC/DqiB,EAAA,GAAApW,KAAAC,KAAAmW,EAAA,GAAAriB,KACAqiB,EAAA,GAAApW,KAAA0zD,MAAAt9C,EAAA,GAAAriB,KAAA,GAAAA,EACAqiB,EAAA,GAAAriB,EACAqiB,EAEA,QAAAmoE,IAAA58E,EAAAmnD,GACA,MAAA1wD,IAAAG,MAAAvI,MAAAoI,GAAAumF,GAAAh9E,EAAAmnD,IAEA,QAAA01B,IAAA78E,EAAAmnD,EAAA7hD,GACA,GAAA1O,GAAAomF,GAAAh9E,EAAAmnD,EACA,IAAA7hD,EAAA,CACA,GAAA4iD,GAAAsI,GAAA7D,KAAArnD,EAEA,IADA4iD,EAAAtjB,QACA,MAAAsjB,EAAA,IACA,GAAAhrB,GAAAzmC,GAAA26D,aAAA/yD,KAAAnO,IAAA0oC,GAAAhiC,EAAA,IAAAgiC,GAAAhiC,EAAA,KAIA,OAHAsxD,GAAA,KAAAA,EAAA,OAAAg1B,GAAAhgD,EAAAxmC,MAAAE,EAAA,MACAsxD,EAAA,OACA5iD,EAAA7O,GAAA6O,OAAA4iD,EAAAoI,KAAA,KACA,SAAA7xD,GACA,MAAA6G,GAAA43B,EAAAxmC,MAAA+H,IAAAy+B,EAAAwyB,QAGAxH,EAAA,KAAAA,EAAA,OAAAi1B,GAAAj1B,EAAA,GAAAtxD,IACA0O,EAAA4iD,EAAAoI,KAAA,QAEAhrD,GAAA,KAAA43E,GAAAtmF,EAAA,OAEA,OAAAH,IAAA6O,UASA,QAAA43E,IAAA3wF,GACA,OAAA8R,KAAA0zD,MAAA1zD,KAAAkxD,IAAAhjE,GAAA8R,KAAAmxD,KAAA,KAEA,QAAA2tB,IAAA1sF,EAAAmG,GACA,GAAAkX,GAAAovE,GAAAtmF,EAAA,GACA,OAAAnG,KAAA2sF,IAAA/+E,KAAAu6B,IAAA9qB,EAAAovE,GAAA7+E,KAAAnO,IAAA0oC,GAAAhiC,EAAA,IAAAgiC,GAAAhiC,EAAA,gBAAAnG,GAAAqd,EAAA,SAAArd,GAKA,QAAA4sF,IAAA1mF,EAAA2mF,EAAAC,EAAAv9E,GACA,QAAAuvD,GAAAz/D,GACA,OAAAytF,EAAAl/E,KAAAkxD,IAAAz/D,EAAA,IAAAA,IAAAuO,KAAAkxD,IAAAz/D,EAAA,KAAAA,IAAAuO,KAAAkxD,IAAA+tB,GAEA,QAAA/vD,GAAAz9B,GACA,MAAAytF,GAAAl/E,KAAAkvB,IAAA+vD,EAAAxtF,IAAAuO,KAAAkvB,IAAA+vD,GAAAxtF,GAEA,QAAA4G,GAAA5G,GACA,MAAA6G,GAAA44D,EAAAz/D,IAoDA,MAlDA4G,GAAA+kE,OAAA,SAAA3rE,GACA,MAAAy9B,GAAA52B,EAAA8kE,OAAA3rE,KAEA4G,EAAAsJ,OAAA,SAAAlQ,GACA,MAAAxB,WAAAV,QACA2vF,EAAAztF,EAAA,MACA6G,EAAAqJ,UAAAlQ,EAAAiS,IAAAqF,SAAArF,IAAAwtD,IACA74D,GAHAsJ,GAKAtJ,EAAA4mF,KAAA,SAAAh8B,GACA,MAAAhzD,WAAAV,QACA0vF,GAAAh8B,EACA3qD,EAAAqJ,SAAA+B,IAAAwtD,IACA74D,GAHA4mF,GAKA5mF,EAAAulF,KAAA,WACA,GAAAuB,GAAAxB,GAAAh8E,EAAA+B,IAAAwtD,GAAAguB,EAAAl/E,KAAAo/E,GAGA,OAFA9mF,GAAAqJ,OAAAw9E,GACAx9E,EAAAw9E,EAAAz7E,IAAAwrB,GACA72B,GAEAA,EAAA0J,MAAA,WACA,GAAAqU,GAAAmnE,GAAA57E,GAAAI,KAAA84D,EAAAzkD,EAAA,GAAA7W,EAAA6W,EAAA,GAAA9mB,EAAA0Q,KAAA0zD,MAAAxC,EAAA2J,IAAA9oC,EAAA/xB,KAAAC,KAAAixD,EAAA3xD,IAAA1Q,EAAAowF,EAAA,IAAAA,CACA,IAAAn0D,SAAAiH,EAAAziC,GAAA,CACA,GAAA4vF,EAAA,CACA,KAAgB5vF,EAAAyiC,EAAMziC,IAAA,OAAA84C,GAAA,EAAqBA,EAAAv5C,EAAOu5C,IAAArmC,EAAAC,KAAAktB,EAAA5/B,GAAA84C,EAClDrmC,GAAAC,KAAAktB,EAAA5/B,QAGA,KADAyS,EAAAC,KAAAktB,EAAA5/B,IACgBA,IAAAyiC,GAAQ,OAAAqW,GAAAv5C,EAAA,EAAsBu5C,EAAA,EAAOA,IAAArmC,EAAAC,KAAAktB,EAAA5/B,GAAA84C,EAErD,KAAA94C,EAAA,EAAmByS,EAAAzS,GAAAurE,EAAcvrE,KACjC,IAAAyiC,EAAAhwB,EAAAxS,OAA8BwS,EAAAgwB,EAAA,GAAAxyB,EAAkBwyB,KAChDhwB,IAAAqC,MAAA9U,EAAAyiC,GAEA,MAAAhwB,IAEA1J,EAAAS,WAAA,SAAAjK,EAAAoY,GACA,IAAAhX,UAAAV,OAAA,MAAA8vF,GACApvF,WAAAV,OAAA,EAAA0X,EAAAo4E,GAA4D,mBAAAp4E,OAAA7O,GAAA6O,UAC5D,IAAAmhC,GAAApoC,KAAAnO,IAAA,EAAAotF,EAAApwF,EAAAwJ,EAAA0J,QAAAxS,OACA,iBAAA6Q,GACA,GAAA9Q,GAAA8Q,EAAA8uB,EAAAlvB,KAAAs+B,MAAA4yB,EAAA9wD,IAEA,OADA9Q,GAAA2vF,IAAA,KAAA3vF,GAAA2vF,GACA3vF,GAAA84C,EAAAnhC,EAAA7G,GAAA,KAGA/H,EAAA+J,KAAA,WACA,MAAA48E,IAAA1mF,EAAA8J,OAAA68E,EAAAC,EAAAv9E,IAEA+8E,GAAArmF,EAAAC,GAaA,QAAAgnF,IAAAhnF,EAAAi2B,EAAA5sB,GAEA,QAAAtJ,GAAA5G,GACA,MAAA6G,GAAAinF,EAAA9tF,IAFA,GAAA8tF,GAAAC,GAAAjxD,GAAAkxD,EAAAD,GAAA,EAAAjxD,EA+BA,OA3BAl2B,GAAA+kE,OAAA,SAAA3rE,GACA,MAAAguF,GAAAnnF,EAAA8kE,OAAA3rE,KAEA4G,EAAAsJ,OAAA,SAAAlQ,GACA,MAAAxB,WAAAV,QACA+I,EAAAqJ,UAAAlQ,EAAAiS,IAAAqF,SAAArF,IAAA67E,IACAlnF,GAFAsJ,GAIAtJ,EAAA0J,MAAA,SAAA+mD,GACA,MAAAy1B,IAAA58E,EAAAmnD,IAEAzwD,EAAAS,WAAA,SAAAgwD,EAAA7hD,GACA,MAAAu3E,IAAA78E,EAAAmnD,EAAA7hD,IAEA5O,EAAAulF,KAAA,SAAA90B,GACA,MAAAzwD,GAAAsJ,OAAA88E,GAAA98E,EAAAmnD,KAEAzwD,EAAAk2B,SAAA,SAAA98B,GACA,MAAAxB,WAAAV,QACAgwF,EAAAC,GAAAjxD,EAAA98B,GACAguF,EAAAD,GAAA,EAAAjxD,GACAj2B,EAAAqJ,SAAA+B,IAAA67E,IACAlnF,GAJAk2B,GAMAl2B,EAAA+J,KAAA,WACA,MAAAk9E,IAAAhnF,EAAA8J,OAAAmsB,EAAA5sB,IAEA+8E,GAAArmF,EAAAC,GAEA,QAAAknF,IAAA5hE,GACA,gBAAAnsB,GACA,MAAAA,GAAA,GAAAuO,KAAAkvB,KAAAz9B,EAAAmsB,GAAA5d,KAAAkvB,IAAAz9B,EAAAmsB,IAYA,QAAA8hE,IAAA/9E,EAAAg+E,GAEA,QAAAtnF,GAAA5G,GACA,MAAA8G,KAAAqL,EAAAnN,IAAAhF,KAAA,UAAAkuF,EAAA5/D,EAAAnc,EAAA4jB,IAAA/1B,EAAAkQ,EAAAK,KAAAvQ,IAAAyoB,MAAA,GAAA3hB,EAAAhJ,QAEA,QAAAslD,GAAAjzC,EAAA7N,GACA,MAAAqE,IAAAG,MAAAoJ,EAAApS,QAAAmU,IAAA,SAAApU,GACA,MAAAsS,GAAA7N,EAAAzE,IANA,GAAAsU,GAAArL,EAAAqO,CAsFA,OA7EAvO,GAAAsJ,OAAA,SAAAlQ,GACA,IAAAxB,UAAAV,OAAA,MAAAoS,EACAA,MACAiC,EAAA,GAAAo/C,EAEA,KADA,GAAA48B,GAAAtwF,GAAA,EAAAT,EAAA4C,EAAAlC,SACAD,EAAAT,GAAA+U,EAAAq9C,IAAA2+B,EAAAnuF,EAAAnC,KAAAsU,EAAA4jB,IAAAo4D,EAAAj+E,EAAAK,KAAA49E,GACA,OAAAvnF,GAAAsnF,EAAA5/D,GAAA/vB,MAAAqI,EAAAsnF,EAAAzvF,IAEAmI,EAAAE,MAAA,SAAA9G,GACA,MAAAxB,WAAAV,QACAgJ,EAAA9G,EACAmV,EAAA,EACA+4E,GACA5/D,EAAA,QACA7vB,EAAAD,WAEAoI,GAPAE,GASAF,EAAAwnF,YAAA,SAAApuF,EAAAoB,GACA5C,UAAAV,OAAA,IAAAsD,EAAA,EACA,IAAA+O,GAAAnQ,EAAA,GAAAoQ,EAAApQ,EAAA,GAAAsC,EAAA4N,EAAApS,OAAA,GAAAqS,KAAAC,GAAA,EACA,IAAAA,EAAAD,IAAAD,EAAApS,OAAA,EAAAsD,EAOA,OANA0F,GAAAs8C,EAAAjzC,EAAA7N,EAAAlB,EAAA,EAAAkB,GACA6S,EAAA,EACA+4E,GACA5/D,EAAA,cACA7vB,EAAAD,WAEAoI,GAEAA,EAAAynF,iBAAA,SAAAruF,EAAAoB,GACA5C,UAAAV,OAAA,IAAAsD,EAAA,EACA,IAAA+O,GAAAnQ,EAAA,GAAAoQ,EAAApQ,EAAA,GAAAsC,EAAA4N,EAAApS,OAAA,GAAAqS,EAAAC,EAAA7B,KAAAs+B,OAAA18B,EAAAC,GAAA,GACA,IAAAA,EAAAD,IAAAD,EAAApS,OAAA,EAAAsD,GAAA,CAOA,OANA0F,GAAAs8C,EAAAjzC,EAAA5B,KAAAs+B,MAAAvqC,EAAAlB,EAAA,GAAAgP,EAAAD,GAAAD,EAAApS,OAAA,EAAAsD,GAAAkB,GAAA,GAAAA,GACA6S,EAAA,EACA+4E,GACA5/D,EAAA,mBACA7vB,EAAAD,WAEAoI,GAEAA,EAAA0nF,WAAA,SAAAtuF,EAAAoB,EAAAmtF,GACA/vF,UAAAV,OAAA,IAAAsD,EAAA,GACA5C,UAAAV,OAAA,IAAAywF,EAAAntF,EACA,IAAA04C,GAAA95C,EAAA,GAAAA,EAAA,GAAAmQ,EAAAnQ,EAAA85C,EAAA,GAAA1pC,EAAApQ,EAAA,EAAA85C,GAAAx3C,GAAA8N,EAAAD,IAAAD,EAAApS,OAAAsD,EAAA,EAAAmtF,EAQA,OAPAznF,GAAAs8C,EAAAjzC,EAAA7N,EAAAisF,EAAAjsF,GACAw3C,GAAAhzC,EAAAgzC,UACA3kC,EAAA7S,GAAA,EAAAlB,GACA8sF,GACA5/D,EAAA,aACA7vB,EAAAD,WAEAoI,GAEAA,EAAA4nF,gBAAA,SAAAxuF,EAAAoB,EAAAmtF,GACA/vF,UAAAV,OAAA,IAAAsD,EAAA,GACA5C,UAAAV,OAAA,IAAAywF,EAAAntF,EACA,IAAA04C,GAAA95C,EAAA,GAAAA,EAAA,GAAAmQ,EAAAnQ,EAAA85C,EAAA,GAAA1pC,EAAApQ,EAAA,EAAA85C,GAAAx3C,EAAAiM,KAAA0zD,OAAA7xD,EAAAD,IAAAD,EAAApS,OAAAsD,EAAA,EAAAmtF,GAQA,OAPAznF,GAAAs8C,EAAAjzC,EAAA5B,KAAAs+B,OAAAz8B,EAAAD,GAAAD,EAAApS,OAAAsD,GAAAkB,GAAA,GAAAA,GACAw3C,GAAAhzC,EAAAgzC,UACA3kC,EAAA5G,KAAAs+B,MAAAvqC,GAAA,EAAAlB,IACA8sF,GACA5/D,EAAA,kBACA7vB,EAAAD,WAEAoI,GAEAA,EAAAuO,UAAA,WACA,MAAAA,IAEAvO,EAAAoK,YAAA,WACA,MAAA86E,IAAAoC,EAAAzvF,EAAA,KAEAmI,EAAA+J,KAAA,WACA,MAAAs9E,IAAA/9E,EAAAg+E,IAEAtnF,EAAAsJ,UAqBA,QAAAu+E,IAAAv+E,EAAApJ,GAEA,QAAA6lF,KACA,GAAAh2C,GAAA,EAAAq6B,EAAAlqE,EAAAhJ,MAEA,KADA4wF,OACA/3C,EAAAq6B,GAAA0d,EAAA/3C,EAAA,GAAAhwC,GAAAgoF,SAAAz+E,EAAAymC,EAAAq6B,EACA,OAAApqE,GAEA,QAAAA,GAAA5G,GACA,IAAAizB,MAAAjzB,MAAA,MAAA8G,GAAAH,GAAA6lF,OAAAkC,EAAA1uF,IARA,GAAA0uF,EA8BA,OApBA9nF,GAAAsJ,OAAA,SAAAlQ,GACA,MAAAxB,WAAAV,QACAoS,EAAAlQ,EAAAiS,IAAA0+C,GAAAxsC,OAAAysC,GAAAlyC,KAAAgyC,GACAi8B,KAFAz8E,GAIAtJ,EAAAE,MAAA,SAAA9G,GACA,MAAAxB,WAAAV,QACAgJ,EAAA9G,EACA2sF,KAFA7lF,GAIAF,EAAAgoF,UAAA,WACA,MAAAF,IAEA9nF,EAAAioF,aAAA,SAAA1uF,GAEA,MADAA,GAAA2G,EAAA6T,QAAAxa,GACAA,EAAA,GAAAsoB,UAAAtoB,EAAA,EAAAuuF,EAAAvuF,EAAA,GAAA+P,EAAA,GAAA/P,EAAAuuF,EAAA5wF,OAAA4wF,EAAAvuF,GAAA+P,IAAApS,OAAA,KAEA8I,EAAA+J,KAAA,WACA,MAAA89E,IAAAv+E,EAAApJ,IAEA6lF,IAKA,QAAAmC,IAAAxlC,EAAAtiC,EAAAlgB,GAEA,QAAAF,GAAA5G,GACA,MAAA8G,GAAAyH,KAAAnO,IAAA,EAAAmO,KAAAlO,IAAAxC,EAAA0Q,KAAA0zD,MAAAmjB,GAAAplF,EAAAspD,OAEA,QAAAqjC,KAGA,MAFAvH,GAAAt+E,EAAAhJ,QAAAkpB,EAAAsiC,GACAzrD,EAAAiJ,EAAAhJ,OAAA,EACA8I,EAPA,GAAAw+E,GAAAvnF,CA4BA,OAnBA+I,GAAAsJ,OAAA,SAAAlQ,GACA,MAAAxB,WAAAV,QACAwrD,GAAAtpD,EAAA,GACAgnB,GAAAhnB,IAAAlC,OAAA,GACA6uF,MAHArjC,EAAAtiC,IAKApgB,EAAAE,MAAA,SAAA9G,GACA,MAAAxB,WAAAV,QACAgJ,EAAA9G,EACA2sF,KAFA7lF,GAIAF,EAAAioF,aAAA,SAAA1uF,GAGA,MAFAA,GAAA2G,EAAA6T,QAAAxa,GACAA,IAAA,EAAAsoB,IAAAtoB,EAAAilF,EAAA97B,GACAnpD,IAAA,EAAAilF,IAEAx+E,EAAA+J,KAAA,WACA,MAAAm+E,IAAAxlC,EAAAtiC,EAAAlgB,IAEA6lF,IAKA,QAAAoC,IAAA7+E,EAAApJ,GACA,QAAAF,GAAA5G,GACA,GAAAA,KAAA,MAAA8G,GAAAH,GAAA6lF,OAAAt8E,EAAAlQ,IAmBA,MAjBA4G,GAAAsJ,OAAA,SAAAshD,GACA,MAAAhzD,WAAAV,QACAoS,EAAAshD,EACA5qD,GAFAsJ,GAIAtJ,EAAAE,MAAA,SAAA0qD,GACA,MAAAhzD,WAAAV,QACAgJ,EAAA0qD,EACA5qD,GAFAE,GAIAF,EAAAioF,aAAA,SAAA1uF,GAEA,MADAA,GAAA2G,EAAA6T,QAAAxa,IACA+P,EAAA/P,EAAA,GAAA+P,EAAA/P,KAEAyG,EAAA+J,KAAA,WACA,MAAAo+E,IAAA7+E,EAAApJ,IAEAF,EAKA,QAAAooF,IAAA9+E,GACA,QAAA++E,GAAAjvF,GACA,OAAAA,EAiBA,MAfAivF,GAAAtjB,OAAAsjB,EACAA,EAAA/+E,OAAA++E,EAAAnoF,MAAA,SAAA9G,GACA,MAAAxB,WAAAV,QACAoS,EAAAlQ,EAAAiS,IAAAg9E,GACAA,GAFA/+E,GAIA++E,EAAA3+E,MAAA,SAAA+mD,GACA,MAAAy1B,IAAA58E,EAAAmnD,IAEA43B,EAAA5nF,WAAA,SAAAgwD,EAAA7hD,GACA,MAAAu3E,IAAA78E,EAAAmnD,EAAA7hD,IAEAy5E,EAAAt+E,KAAA,WACA,MAAAq+E,IAAA9+E,IAEA++E,EAGA,QAAAC,MACA,SA+HA,QAAAC,IAAAxgF,GACA,MAAAA,GAAA63B,YAEA,QAAA4oD,IAAAzgF,GACA,MAAAA,GAAAi5B,YAEA,QAAAynD,IAAA1gF,GACA,MAAAA,GAAAy4B,WAEA,QAAAkoD,IAAA3gF,GACA,MAAAA,GAAA04B,SAEA,QAAAkoD,IAAA5gF,GACA,MAAAA,MAAA6gF,SAEA,QAAAC,IAAAnmC,EAAAvB,EAAA/gC,EAAAE,GACA,OAAAoiC,EAAAtiC,GAAA+gC,KAAA7gC,GAAAoiC,EAAA,MAEA,QAAAomC,IAAAvjB,EAAAC,EAAAx1C,EAAA+4D,EAAAC,GACA,GAAAC,GAAA1jB,EAAA,GAAAC,EAAA,GAAA0jB,EAAA3jB,EAAA,GAAAC,EAAA,GAAArb,GAAA6+B,EAAAD,MAAAphF,KAAAm6B,KAAAmnD,IAAAC,KAAAC,EAAAh/B,EAAA++B,EAAAE,GAAAj/B,EAAA8+B,EAAA7oE,EAAAmlD,EAAA,GAAA4jB,EAAA7oE,EAAAilD,EAAA,GAAA6jB,EAAA/oE,EAAAmlD,EAAA,GAAA2jB,EAAAj5E,EAAAs1D,EAAA,GAAA4jB,EAAAhV,GAAAh0D,EAAAC,GAAA,EAAAk0D,GAAAj0D,EAAApQ,GAAA,EAAA1B,EAAA6R,EAAAD,EAAAlT,EAAAgD,EAAAoQ,EAAA+uD,EAAA7gE,IAAAtB,IAAAoyC,EAAAtvB,EAAA+4D,EAAAM,EAAAjpE,EAAAlQ,EAAAmQ,EAAAC,EAAAvY,GAAAmF,EAAA,QAAAvF,KAAAm6B,KAAAn6B,KAAAnO,IAAA,EAAA8lD,IAAA+vB,EAAAga,MAAAC,GAAAD,EAAAn8E,EAAAsB,EAAAzG,GAAAsnE,EAAA6C,IAAAmX,EAAA76E,EAAAtB,EAAAnF,GAAAsnE,EAAAka,GAAAF,EAAAn8E,EAAAsB,EAAAzG,GAAAsnE,EAAA+C,IAAAiX,EAAA76E,EAAAtB,EAAAnF,GAAAsnE,EAAAma,EAAAF,EAAAlV,EAAAqV,EAAAvX,EAAAqC,EAAAmV,EAAAH,EAAAnV,EAAAuV,EAAAvX,EAAAmC,CAEA,OADAiV,KAAAC,IAAAC,IAAAC,MAAAL,EAAAC,EAAArX,EAAAE,KACAkX,EAAAH,EAAAjX,EAAAkX,IAAAE,EAAAt5D,EAAAsvB,EAAA4yB,EAAAliD,EAAAsvB,IAEA,QAAAsqC,IAAA3Z,GAEA,QAAAn3E,GAAAC,GAEA,QAAAusE,KACAJ,EAAAv7D,KAAA,IAAAo8B,EAAAkqC,EAAA/4C,GAAA2yD,IAEA,IAJA,GAAA9hF,GAAAm9D,KAAAhuC,KAAAjgC,GAAA,EAAAT,EAAAuC,EAAA7B,OAAAoiF,EAAA/iB,GAAAn9D,GAAAmgF,EAAAhjB,GAAAh9D,KAIAtC,EAAAT,GACAisD,EAAArtD,KAAAqC,KAAAsQ,EAAAhP,EAAA9B,MACAigC,EAAAvtB,OAAA2vE,EAAAlkF,KAAAqC,KAAAsQ,EAAA9Q,IAAAsiF,EAAAnkF,KAAAqC,KAAAsQ,EAAA9Q,KACSigC,EAAAhgC,SACTouE,IACApuC,KAIA,OADAA,GAAAhgC,QAAAouE,IACAJ,EAAAhuE,OAAAguE,EAAAtL,KAAA,SAfA,GAAAxgE,GAAAw6E,GAAAr6E,EAAAs6E,GAAApxB,EAAAuiB,GAAAj/B,EAAA+jD,GAAAC,EAAAhkD,EAAA3uC,IAAAyyF,EAAA,EA0CA,OAzBA/wF,GAAAM,EAAA,SAAAwxD,GACA,MAAAhzD,WAAAV,QACAkC,EAAAwxD,EACA9xD,GAFAM,GAIAN,EAAAS,EAAA,SAAAqxD,GACA,MAAAhzD,WAAAV,QACAqC,EAAAqxD,EACA9xD,GAFAS,GAIAT,EAAA2pD,QAAA,SAAAmI,GACA,MAAAhzD,WAAAV,QACAurD,EAAAmI,EACA9xD,GAFA2pD,GAIA3pD,EAAAitC,YAAA,SAAA6kB,GACA,MAAAhzD,WAAAV,QACA6yF,EAAA,mBAAAn/B,GAAA7kB,EAAA6kB,GAAoE7kB,EAAAikD,GAAA5rF,IAAAwsD,IAAAk/B,IAAA1yF,IACpE0B,GAFAixF,GAIAjxF,EAAA+wF,QAAA,SAAAj/B,GACA,MAAAhzD,WAAAV,QACA2yF,EAAAj/B,EACA9xD,GAFA+wF,GAIA/wF,EAwBA,QAAAgxF,IAAA5yD,GACA,MAAAA,GAAAhgC,OAAA,EAAAggC,EAAA0iC,KAAA,KAAA1iC,EAAA,IAEA,QAAA+yD,IAAA/yD,GACA,MAAAA,GAAA0iC,KAAA,SAEA,QAAAswB,IAAAhzD,GAEA,IADA,GAAAjgC,GAAA,EAAAT,EAAA0gC,EAAAhgC,OAAAkgB,EAAA8f,EAAA,GAAAruB,GAAAuO,EAAA,OAAAA,EAAA,MACAngB,EAAAT,GAAAqS,EAAAc,KAAA,KAAAyN,EAAA,IAAAA,EAAA8f,EAAAjgC,IAAA,UAAAmgB,EAAA,GAEA,OADA5gB,GAAA,GAAAqS,EAAAc,KAAA,IAAAyN,EAAA,IACAvO,EAAA+wD,KAAA,IAEA,QAAAuwB,IAAAjzD,GAEA,IADA,GAAAjgC,GAAA,EAAAT,EAAA0gC,EAAAhgC,OAAAkgB,EAAA8f,EAAA,GAAAruB,GAAAuO,EAAA,OAAAA,EAAA,MACAngB,EAAAT,GAAAqS,EAAAc,KAAA,KAAAyN,EAAA8f,EAAAjgC,IAAA,OAAAmgB,EAAA,GACA,OAAAvO,GAAA+wD,KAAA,IAEA,QAAAwwB,IAAAlzD,GAEA,IADA,GAAAjgC,GAAA,EAAAT,EAAA0gC,EAAAhgC,OAAAkgB,EAAA8f,EAAA,GAAAruB,GAAAuO,EAAA,OAAAA,EAAA,MACAngB,EAAAT,GAAAqS,EAAAc,KAAA,KAAAyN,EAAA8f,EAAAjgC,IAAA,OAAAmgB,EAAA,GACA,OAAAvO,GAAA+wD,KAAA,IAEA,QAAAywB,IAAAnzD,EAAA2yD,GACA,MAAA3yD,GAAAhgC,OAAA,EAAA4yF,GAAA5yD,KAAA,GAAAozD,GAAApzD,EAAAnrB,MAAA,MAAAw+E,GAAArzD,EAAA2yD,IAEA,QAAAW,IAAAtzD,EAAA2yD,GACA,MAAA3yD,GAAAhgC,OAAA,EAAA+yF,GAAA/yD,KAAA,GAAAozD,IAAApzD,EAAAvtB,KAAAutB,EAAA,IACAA,GAAAqzD,IAAArzD,IAAAhgC,OAAA,IAAAgU,OAAAgsB,KAAA,KAAA2yD,IAEA,QAAAY,IAAAvzD,EAAA2yD,GACA,MAAA3yD,GAAAhgC,OAAA,EAAA4yF,GAAA5yD,KAAA,GAAAozD,GAAApzD,EAAAqzD,GAAArzD,EAAA2yD,IAEA,QAAAS,IAAApzD,EAAAwzD,GACA,GAAAA,EAAAxzF,OAAA,GAAAggC,EAAAhgC,QAAAwzF,EAAAxzF,QAAAggC,EAAAhgC,QAAAwzF,EAAAxzF,OAAA,EACA,MAAA4yF,IAAA5yD,EAEA,IAAAgqD,GAAAhqD,EAAAhgC,QAAAwzF,EAAAxzF,OAAA2R,EAAA,GAAA08D,EAAAruC,EAAA,GAAA9f,EAAA8f,EAAA,GAAAyhC,EAAA+xB,EAAA,GAAAhjE,EAAAixC,EAAAgyB,EAAA,CAMA,IALAzJ,IACAr4E,GAAA,KAAAuO,EAAA,KAAAuhD,EAAA,WAAAvhD,EAAA,KAAAuhD,EAAA,UAAAvhD,EAAA,OAAAA,EAAA,GACAmuD,EAAAruC,EAAA,GACAyzD,EAAA,GAEAD,EAAAxzF,OAAA,GACAwwB,EAAAgjE,EAAA,GACAtzE,EAAA8f,EAAAyzD,GACAA,IACA9hF,GAAA,KAAA08D,EAAA,GAAA5M,EAAA,SAAA4M,EAAA,GAAA5M,EAAA,SAAAvhD,EAAA,GAAAsQ,EAAA,SAAAtQ,EAAA,GAAAsQ,EAAA,QAAAtQ,EAAA,OAAAA,EAAA,EACA,QAAAngB,GAAA,EAAqBA,EAAAyzF,EAAAxzF,OAAqBD,IAAA0zF,IAC1CvzE,EAAA8f,EAAAyzD,GACAjjE,EAAAgjE,EAAAzzF,GACA4R,GAAA,KAAAuO,EAAA,GAAAsQ,EAAA,SAAAtQ,EAAA,GAAAsQ,EAAA,QAAAtQ,EAAA,OAAAA,EAAA,GAGA,GAAA8pE,EAAA,CACA,GAAA0J,GAAA1zD,EAAAyzD,EACA9hF,IAAA,KAAAuO,EAAA,KAAAsQ,EAAA,WAAAtQ,EAAA,KAAAsQ,EAAA,UAAAkjE,EAAA,OAAAA,EAAA,GAEA,MAAA/hF,GAEA,QAAA0hF,IAAArzD,EAAA2yD,GAEA,IADA,GAAAtkB,GAAAmlB,KAAA7yF,GAAA,EAAAgyF,GAAA,EAAArkB,EAAAtuC,EAAA,GAAA2zD,EAAA3zD,EAAA,GAAAjgC,EAAA,EAAAT,EAAA0gC,EAAAhgC,SACAD,EAAAT,GACA+uE,EAAAC,EACAA,EAAAqlB,EACAA,EAAA3zD,EAAAjgC,GACAyzF,EAAA/gF,MAAA9R,GAAAgzF,EAAA,GAAAtlB,EAAA,IAAA1tE,GAAAgzF,EAAA,GAAAtlB,EAAA,KAEA,OAAAmlB,GAEA,QAAAI,IAAA5zD,GACA,GAAAA,EAAAhgC,OAAA,QAAA4yF,IAAA5yD,EACA,IAAAjgC,GAAA,EAAAT,EAAA0gC,EAAAhgC,OAAAyzF,EAAAzzD,EAAA,GAAAwrB,EAAAioC,EAAA,GAAAxpC,EAAAwpC,EAAA,GAAA7J,GAAAp+B,OAAAioC,EAAAzzD,EAAA,QAAA6pD,GAAA5/B,MAAAwpC,EAAA,IAAA9hF,GAAA65C,EAAA,IAAAvB,EAAA,IAAA4pC,GAAAC,GAAAlK,GAAA,IAAAiK,GAAAC,GAAAjK,GAEA,KADA7pD,EAAAvtB,KAAAutB,EAAA1gC,EAAA,MACAS,GAAAT,GACAm0F,EAAAzzD,EAAAjgC,GACA6pF,EAAA5yC,QACA4yC,EAAAn3E,KAAAghF,EAAA,IACA5J,EAAA7yC,QACA6yC,EAAAp3E,KAAAghF,EAAA,IACAM,GAAApiF,EAAAi4E,EAAAC,EAIA,OAFA7pD,GAAAyvC,MACA99D,EAAAc,KAAA,IAAAghF,GACA9hF,EAAA+wD,KAAA,IAEA,QAAAsxB,IAAAh0D,GACA,GAAAA,EAAAhgC,OAAA,QAAA4yF,IAAA5yD,EAEA,KADA,GAAAyzD,GAAA9hF,KAAA5R,GAAA,EAAAT,EAAA0gC,EAAAhgC,OAAA4pF,GAAA,GAAAC,GAAA,KACA9pF,EAAA,GACA0zF,EAAAzzD,EAAAjgC,GACA6pF,EAAAn3E,KAAAghF,EAAA,IACA5J,EAAAp3E,KAAAghF,EAAA,GAIA,KAFA9hF,EAAAc,KAAAohF,GAAAC,GAAAlK,GAAA,IAAAiK,GAAAC,GAAAjK,MACA9pF,IACAA,EAAAT,GACAm0F,EAAAzzD,EAAAjgC,GACA6pF,EAAA5yC,QACA4yC,EAAAn3E,KAAAghF,EAAA,IACA5J,EAAA7yC,QACA6yC,EAAAp3E,KAAAghF,EAAA,IACAM,GAAApiF,EAAAi4E,EAAAC,EAEA,OAAAl4E,GAAA+wD,KAAA,IAEA,QAAAuxB,IAAAj0D,GAEA,IADA,GAAAruB,GAAA8hF,EAAA1zF,GAAA,EAAAT,EAAA0gC,EAAAhgC,OAAAu5D,EAAAj6D,EAAA,EAAAsqF,KAAAC,OACA9pF,EAAA,GACA0zF,EAAAzzD,EAAAjgC,EAAAT,GACAsqF,EAAAn3E,KAAAghF,EAAA,IACA5J,EAAAp3E,KAAAghF,EAAA,GAIA,KAFA9hF,GAAAkiF,GAAAC,GAAAlK,GAAA,IAAAiK,GAAAC,GAAAjK,MACA9pF,IACAA,EAAAw5D,GACAk6B,EAAAzzD,EAAAjgC,EAAAT,GACAsqF,EAAA5yC,QACA4yC,EAAAn3E,KAAAghF,EAAA,IACA5J,EAAA7yC,QACA6yC,EAAAp3E,KAAAghF,EAAA,IACAM,GAAApiF,EAAAi4E,EAAAC,EAEA,OAAAl4E,GAAA+wD,KAAA,IAEA,QAAAwxB,IAAAl0D,EAAA2yD,GACA,GAAArzF,GAAA0gC,EAAAhgC,OAAA,CACA,IAAAV,EAEA,IADA,GAAA4gB,GAAAsQ,EAAAg7B,EAAAxrB,EAAA,MAAAiqB,EAAAjqB,EAAA,MAAA1oB,EAAA0oB,EAAA1gC,GAAA,GAAAksD,EAAAx1C,EAAAgqB,EAAA1gC,GAAA,GAAA2qD,EAAAlqD,GAAA,IACAA,GAAAT,GACA4gB,EAAA8f,EAAAjgC,GACAywB,EAAAzwB,EAAAT,EACA4gB,EAAA,GAAAyyE,EAAAzyE,EAAA,MAAAyyE,IAAAnnC,EAAAh7B,EAAAlZ,GACA4I,EAAA,GAAAyyE,EAAAzyE,EAAA,MAAAyyE,IAAA1oC,EAAAz5B,EAAAxa,EAGA,OAAA49E,IAAA5zD,GAEA,QAAA6zD,IAAAlzF,EAAAkgB,GACA,MAAAlgB,GAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,GAGA,QAAAkzE,IAAApiF,EAAAzP,EAAAG,GACAsP,EAAAc,KAAA,IAAAohF,GAAAM,GAAAjyF,GAAA,IAAA2xF,GAAAM,GAAA9xF,GAAA,IAAAwxF,GAAAO,GAAAlyF,GAAA,IAAA2xF,GAAAO,GAAA/xF,GAAA,IAAAwxF,GAAAC,GAAA5xF,GAAA,IAAA2xF,GAAAC,GAAAzxF,IAEA,QAAAgyF,IAAAhmB,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IAEA,QAAAimB,IAAAt0D,GAEA,IADA,GAAAjgC,GAAA,EAAAyiC,EAAAxC,EAAAhgC,OAAA,EAAAu5D,KAAA8U,EAAAruC,EAAA,GAAAsuC,EAAAtuC,EAAA,GAAAnvB,EAAA0oD,EAAA,GAAA86B,GAAAhmB,EAAAC,KACAvuE,EAAAyiC,GACA+2B,EAAAx5D,IAAA8Q,KAAAwjF,GAAAhmB,EAAAC,IAAAtuC,EAAAjgC,EAAA,OAGA,OADAw5D,GAAAx5D,GAAA8Q,EACA0oD,EAEA,QAAAg7B,IAAAv0D,GAEA,IADA,GAAAnvB,GAAAlQ,EAAAkgB,EAAAzM,EAAAo/E,KAAAj6B,EAAA+6B,GAAAt0D,GAAAjgC,GAAA,EAAAyiC,EAAAxC,EAAAhgC,OAAA,IACAD,EAAAyiC,GACA3xB,EAAAwjF,GAAAr0D,EAAAjgC,GAAAigC,EAAAjgC,EAAA,IACAirC,GAAAn6B,GAAA07D,GACAhT,EAAAx5D,GAAAw5D,EAAAx5D,EAAA,MAEAY,EAAA44D,EAAAx5D,GAAA8Q,EACAgQ,EAAA04C,EAAAx5D,EAAA,GAAA8Q,GACAuD,EAAAzT,IAAAkgB,KACA,IACAzM,EAAA,EAAAvD,EAAAJ,KAAAm6B,KAAAx2B,GACAmlD,EAAAx5D,GAAAqU,EAAAzT,EACA44D,EAAAx5D,EAAA,GAAAqU,EAAAyM,GAKA,KADA9gB,GAAA,IACAA,GAAAyiC,GACApuB,GAAA4rB,EAAAvvB,KAAAlO,IAAAigC,EAAAziC,EAAA,OAAAigC,EAAAvvB,KAAAnO,IAAA,EAAAvC,EAAA,cAAAw5D,EAAAx5D,GAAAw5D,EAAAx5D,KACAyzF,EAAA/gF,MAAA2B,GAAA,EAAAmlD,EAAAx5D,GAAAqU,GAAA,GAEA,OAAAo/E,GAEA,QAAAgB,IAAAx0D,GACA,MAAAA,GAAAhgC,OAAA,EAAA4yF,GAAA5yD,KAAA,GAAAozD,GAAApzD,EAAAu0D,GAAAv0D,IAQA,QAAAy0D,IAAAz0D,GAEA,IADA,GAAA93B,GAAAkgD,EAAAznD,EAAAZ,GAAA,EAAAT,EAAA0gC,EAAAhgC,SACAD,EAAAT,GACA4I,EAAA83B,EAAAjgC,GACAqoD,EAAAlgD,EAAA,GACAvH,EAAAuH,EAAA,GAAA00D,GACA10D,EAAA,GAAAkgD,EAAA33C,KAAAs6B,IAAApqC,GACAuH,EAAA,GAAAkgD,EAAA33C,KAAAoF,IAAAlV,EAEA,OAAAq/B,GAEA,QAAA00D,IAAA3b,GAEA,QAAAt0E,GAAA5C,GAMA,QAAAusE,KACAJ,EAAAv7D,KAAA,IAAAo8B,EAAAkqC,EAAA4b,GAAAhC,GAAA7tB,EAAA8vB,EAAA7b,EAAA8b,EAAA74C,WAAA22C,GAAA,KAEA,IARA,GAAA9hF,GAIO3O,EAAAG,EAJP2rE,KAAA6mB,KAAAF,KAAA50F,GAAA,EAAAT,EAAAuC,EAAA7B,OAAA80F,EAAAz1B,GAAA7T,GAAAupC,EAAA11B,GAAApV,GAAA+qC,EAAAxpC,IAAAtiC,EAAA,WACA,MAAAhnB,IACOm9D,GAAAn2C,GAAA+rE,EAAAhrC,IAAA7gC,EAAA,WACP,MAAA/mB,IACOg9D,GAAAj2C,KAIPrpB,EAAAT,GACAisD,EAAArtD,KAAAqC,KAAAsQ,EAAAhP,EAAA9B,OACA80F,EAAApiF,MAAAvQ,GAAA4yF,EAAA52F,KAAAqC,KAAAsQ,EAAA9Q,GAAAsC,GAAA0yF,EAAA72F,KAAAqC,KAAAsQ,EAAA9Q,KACA40F,EAAAliF,OAAAuiF,EAAA92F,KAAAqC,KAAAsQ,EAAA9Q,IAAAk1F,EAAA/2F,KAAAqC,KAAAsQ,EAAA9Q,MACS80F,EAAA70F,SACTouE,IACAymB,KACAF,KAIA,OADAE,GAAA70F,QAAAouE,IACAJ,EAAAhuE,OAAAguE,EAAAtL,KAAA,SArBA,GAAAlX,GAAAkxB,GAAAxzD,EAAAwzD,GAAAzyB,EAAA,EAAA7gC,EAAAuzD,GAAApxB,EAAAuiB,GAAAj/B,EAAA+jD,GAAAC,EAAAhkD,EAAA3uC,IAAA00F,EAAA/lD,EAAAi2B,EAAA,IAAA6tB,EAAA,EAsEA,OA/CAluF,GAAAvC,EAAA,SAAAwxD,GACA,MAAAhzD,WAAAV,QACAwrD,EAAAtiC,EAAAwqC,EACAjvD,GAFAykB,GAIAzkB,EAAA+mD,GAAA,SAAAkI,GACA,MAAAhzD,WAAAV,QACAwrD,EAAAkI,EACAjvD,GAFA+mD,GAIA/mD,EAAAykB,GAAA,SAAAwqC,GACA,MAAAhzD,WAAAV,QACAkpB,EAAAwqC,EACAjvD,GAFAykB,GAIAzkB,EAAApC,EAAA,SAAAqxD,GACA,MAAAhzD,WAAAV,QACAiqD,EAAA7gC,EAAAsqC,EACAjvD,GAFA2kB,GAIA3kB,EAAAwlD,GAAA,SAAAyJ,GACA,MAAAhzD,WAAAV,QACAiqD,EAAAyJ,EACAjvD,GAFAwlD,GAIAxlD,EAAA2kB,GAAA,SAAAsqC,GACA,MAAAhzD,WAAAV,QACAopB,EAAAsqC,EACAjvD,GAFA2kB,GAIA3kB,EAAA8mD,QAAA,SAAAmI,GACA,MAAAhzD,WAAAV,QACAurD,EAAAmI,EACAjvD,GAFA8mD,GAIA9mD,EAAAoqC,YAAA,SAAA6kB,GACA,MAAAhzD,WAAAV,QACA6yF,EAAA,mBAAAn/B,GAAA7kB,EAAA6kB,GAAoE7kB,EAAAikD,GAAA5rF,IAAAwsD,IAAAk/B,IAAA1yF,IACpE00F,EAAA/lD,EAAAmN,SAAAnN,EACAi2B,EAAAj2B,EAAAu7B,OAAA,QACA3lE,GAJAouF,GAMApuF,EAAAkuF,QAAA,SAAAj/B,GACA,MAAAhzD,WAAAV,QACA2yF,EAAAj/B,EACAjvD,GAFAkuF,GAIAluF,EAqEA,QAAAywF,IAAArkF,GACA,MAAAA,GAAA23B,OAgCA,QAAA2sD,IAAAtkF,GACA,OAAAA,EAAA3O,EAAA2O,EAAAxO,GASA,QAAA+yF,IAAArc,GACA,kBACA,GAAAloE,GAAAkoE,EAAAt4E,MAAAF,KAAAG,WAAA0nD,EAAAv3C,EAAA,GAAAlQ,EAAAkQ,EAAA,GAAA+rD,EACA,QAAAxU,EAAA33C,KAAAs6B,IAAApqC,GAAAynD,EAAA33C,KAAAoF,IAAAlV,KAoBA,QAAA00F,MACA,UAEA,QAAAC,MACA,eAEA,QAAAC,IAAAnyF,GACA,GAAAglD,GAAA33C,KAAAm6B,KAAAxnC,EAAAq5D,GACA,aAAArU,EAAA,IAAAA,EAAA,IAAAA,EAAA,aAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,YAAAA,EAAA,IA+CA,QAAAotC,IAAAz+B,GACA,kBACA,GAAA0+B,GAAAC,EAAAC,GACAF,EAAAl1F,KAAAw2D,MAAA4+B,EAAAF,EAAAC,EAAAD,EAAAE,WACAA,EAAA7gE,MAAAgR,EAAA,KACA6vD,EAAA7gE,MAAAtE,EAAA7F,MACA8qE,EAAAjzF,YAAAizF,GAAAC,SAAgDn1F,MAAAw2D,GAChD0+B,EAAAE,QAAA,GACAA,EAAA5xC,OAAA4xC,EAAA5xC,MAAA6xC,UAAA13F,KAAAqC,UAAA2lC,SAAAyvD,EAAAthF,SAIA,QAAAwhF,IAAAlyF,EAAAozD,EAAAh8C,GAIA,MAHA86C,IAAAlyD,EAAAmyF,IACAnyF,EAAAg1D,UAAA5B,EACApzD,EAAAoX,KACApX,EAoEA,QAAAoyF,IAAApyF,EAAA22C,EAAA37C,EAAAq3F,GACA,GAAAj7E,GAAApX,EAAAoX,GAAAg8C,EAAApzD,EAAAg1D,SACA,OAAAW,GAAA31D,EAAA,mBAAAhF,GAAA,SAAAmZ,EAAA/X,EAAAyiC,GACA1qB,EAAAi/C,GAAAh8C,GAAAi7E,MAAA/9D,IAAAqiB,EAAA07C,EAAAr3F,EAAAT,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,OACK7jC,EAAAq3F,EAAAr3F,GAAA,SAAAmZ,GACLA,EAAAi/C,GAAAh8C,GAAAi7E,MAAA/9D,IAAAqiB,EAAA37C,MAqFA,QAAAs3F,IAAAp1E,GAEA,MADA,OAAAA,MAAA,IACA,WACAtgB,KAAAukD,YAAAjkC,GA6EA,QAAAq1E,IAAA57C,GACA,aAAAA,EAAA,iCAAAA,EAAA,KAEA,QAAA67C,IAAAr+E,EAAA/X,EAAAg3D,EAAAh8C,EAAAq7E,GAKA,QAAAC,GAAAC,GACA,GAAAx1B,GAAAx5D,EAAAw5D,KAEA,IADAhsC,EAAAtE,EAAAswC,EAAAnmD,EACAmmD,GAAAw1B,EAAA,MAAAjkF,GAAAikF,EAAAx1B,EACAhsC,GAAAgR,EAAAzzB,EAEA,QAAAA,GAAAikF,GACA,GAAAZ,GAAAD,EAAAE,SAAAF,EAAAC,EACAC,KACAA,EAAA7gE,MAAAgR,EAAA,KACA6vD,EAAA7gE,MAAAtE,EAAA7F,MACA8qE,EAAAjzF,YACAizF,GAAAC,GACAC,EAAA5xC,OAAA4xC,EAAA5xC,MAAA6xC,UAAA13F,KAAA4Z,IAAAouB,SAAAyvD,EAAAthF,OAEA,QAAAkiF,KAAAd,GACA,IAAAc,EAAAx7E,EAAA,CACA,GAAAy7E,GAAAf,EAAAc,EACAC,GAAA1hE,MAAAgR,EAAA,KACA0wD,EAAA1hE,MAAAtE,EAAA7F,MACA8qE,EAAAjzF,YACAizF,GAAAc,GAGAzhE,EAAAgR,EAAA3jC,EACA0+D,GAAA,WAKA,MAJA/rC,GAAAgR,GAAA3jC,EAAAm0F,GAAA,KACAxhE,EAAAgR,EAAA,KACAhR,EAAAtE,EAAA7F,KAEA,GACO,EAAAhQ,GACP86E,EAAAE,OAAA56E,EACAzT,EAAAy8C,OAAAz8C,EAAAy8C,MAAA1xC,MAAAnU,KAAA4Z,IAAAouB,SAAAnmC,GACA02F,KACAnvF,EAAA0uF,MAAAnrF,QAAA,SAAA3K,EAAAvB,IACAA,IAAAT,KAAA4Z,IAAAouB,SAAAnmC,KACA02F,EAAAhkF,KAAA9T,KAGAklC,EAAAv8B,EAAAu8B,KACA9iB,EAAAzZ,EAAAyZ,SAEA,QAAA5e,GAAAm0F,GAEA,IADA,GAAA9lE,GAAA8lE,EAAAv1E,EAAAsN,EAAAwV,EAAArT,GAAAlxB,EAAAm3F,EAAAz2F,OACAV,EAAA,GACAm3F,IAAAn3F,GAAApB,KAAA4Z,EAAAuW,EAEA,IAAAmC,GAAA,EAGA,MAFAlpB,GAAAy8C,OAAAz8C,EAAAy8C,MAAAtjC,IAAAviB,KAAA4Z,IAAAouB,SAAAnmC,KACA01F,EAAAjzF,YAAAizF,GAAA16E,SAA0CjD,GAAAi/C,GAC1C,EAvDA,GAGKp8C,GAAAma,EAAA/T,EAAA8iB,EAAA4yD,EAHLhB,EAAA39E,EAAAi/C,KAAAj/C,EAAAi/C,IACA4+B,OAAA,EACAnzF,MAAA,IACK8E,EAAAmuF,EAAA16E,EAuDLzT,KACAqT,EAAAy7E,EAAAz7E,KACAma,EAAA+rC,GAAAw1B,EAAA,EAAA17E,GACArT,EAAAmuF,EAAA16E,IACAi7E,MAAA,GAAAviC,GACA94C,OACAma,QACAgsC,MAAAs1B,EAAAt1B,MACA//C,SAAAq1E,EAAAr1E,SACA8iB,KAAAuyD,EAAAvyD,KACAxvB,MAAAtU,GAEAq2F,EAAA,OACAX,EAAAjzF,OAoGA,QAAAk0F,IAAAzkF,EAAAu5C,EAAAtiC,GACAjX,EAAAC,KAAA,qBAAArB,GACA,GAAAihE,GAAAtmB,EAAA36C,EACA,qBAAA0qB,SAAAu2C,KAAA5oD,EAAArY,IAAA,QAGA,QAAA8lF,IAAA1kF,EAAAg4C,EAAA7gC,GACAnX,EAAAC,KAAA,qBAAArB,GACA,GAAAihE,GAAA7nB,EAAAp5C,EACA,uBAAA0qB,SAAAu2C,KAAA1oD,EAAAvY,IAAA,MAySA,QAAA+lF,IAAAt7E,GACA,MAAAA,GAAAu7E,cA8CA,QAAAC,IAAA/tF,EAAAguF,EAAAr/E,GACA,QAAA5O,GAAA5G,GACA,MAAA6G,GAAA7G,GAUA,QAAA80F,GAAAnwE,EAAArkB,GACA,GAAA6sF,GAAAxoE,EAAA,GAAAA,EAAA,GAAAhnB,EAAAwvF,EAAA7sF,EAAAzC,EAAA8I,GAAA6lF,OAAAuI,GAAAp3F,EACA,OAAAE,IAAAk3F,GAAAj3F,QAAA+2F,EAAAG,KAAA9H,GAAAvoE,EAAA1S,IAAA,SAAAtD,GACA,MAAAA,GAAA,UACOrO,GAAA,IAAAzC,EAAAg3F,EAAAl3F,EAAAo3F,GAAAl3F,EAAA,GAAAk3F,GAAAl3F,GAAAF,EAAAE,EAAA,EAAAA,IAAAo3F,GAAA/H,GAAAvoE,EAAArkB,GAAA,IAgCP,MA5CAsG,GAAA+kE,OAAA,SAAA3rE,GACA,MAAAk1F,IAAAruF,EAAA8kE,OAAA3rE,KAEA4G,EAAAsJ,OAAA,SAAAlQ,GACA,MAAAxB,WAAAV,QACA+I,EAAAqJ,OAAAlQ,GACA4G,GAFAC,EAAAqJ,SAAA+B,IAAAijF,KAUAtuF,EAAAulF,KAAA,SAAAx2E,EAAAw/E,GAGA,QAAAC,GAAAh8E,GACA,OAAA6Z,MAAA7Z,KAAAzD,EAAA7O,MAAAsS,EAAA87E,IAAA97E,EAAA,GAAA+7E,GAAAr3F,OAHA,GAAAoS,GAAAtJ,EAAAsJ,SAAAyU,EAAAmnE,GAAA57E,GAAAmiD,EAAA,MAAA18C,EAAAm/E,EAAAnwE,EAAA,qBAAAhP,IAAAm/E,EAAAnwE,EAAAhP,EAKA,OAJA08C,KAAA18C,EAAA08C,EAAA,GAAA8iC,EAAA9iC,EAAA,IAIAzrD,EAAAsJ,OAAAg8E,GAAAh8E,EAAAilF,EAAA,GACAlzB,MAAA,SAAA7oD,GACA,KAAAg8E,EAAAh8E,EAAAzD,EAAAssD,MAAA7oD,OAAA87E,GAAA97E,EAAA,EACA,OAAAA,IAEA5K,KAAA,SAAA4K,GACA,KAAAg8E,EAAAh8E,EAAAzD,EAAAnH,KAAA4K,OAAA87E,IAAA97E,EAAA,EACA,OAAAA,KAEOzD,KAEP/O,EAAA0J,MAAA,SAAAqF,EAAAw/E,GACA,GAAAxwE,GAAAmnE,GAAAllF,EAAAsJ,UAAAmiD,EAAA,MAAA18C,EAAAm/E,EAAAnwE,EAAA,qBAAAhP,GAAAm/E,EAAAnwE,EAAAhP,MAAA7O,SACAA,MAAA6O,GACOw/E,EAEP,OADA9iC,KAAA18C,EAAA08C,EAAA,GAAA8iC,EAAA9iC,EAAA,IACA18C,EAAA7O,MAAA6d,EAAA,GAAAuwE,IAAAvwE,EAAA,MAAAwwE,EAAA,IAAAA,IAEAvuF,EAAAS,WAAA,WACA,MAAAmO,IAEA5O,EAAA+J,KAAA,WACA,MAAAikF,IAAA/tF,EAAA8J,OAAAkkF,EAAAr/E,IAEAy3E,GAAArmF,EAAAC,GAEA,QAAAquF,IAAA5mE,GACA,UAAA7P,MAAA6P,GA0DA,QAAA+mE,IAAA73B,GACA,MAAA3nB,MAAA7iB,MAAAwqC,EAAA/nB,cAKA,QAAA6/C,IAAA93B,GACA,GAAA12D,GAAAyuF,GAAAC,aAEA,OADA1uF,GAAA2uF,WAAAF,GAAAG,MACA5uF,EAAA6uF,yBAAAn4B,EAAA/nB,cA10SA,GAAA9uC,KACAwY,QAAA,UAEAy2E,MAAAjjF,MAAAulD,GAAA,SAAA29B,GACA,MAAAD,IAAA55F,KAAA65F,IAEAN,GAAAl3F,KAAAylB,QAOA,IAAAyxE,GACA,IACAr9B,GAAAq9B,GAAAhlC,gBAAAulC,YAAA,GAAAC,SACK,MAAA5pE,GACL+rC,GAAA,SAAA29B,GAEA,IADA,GAAAh4F,GAAAg4F,EAAA/3F,OAAA+H,EAAA,GAAAqI,OAAArQ,GACAA,KAAAgI,EAAAhI,GAAAg4F,EAAAh4F,EACA,OAAAgI,IAOA,GAHA4Y,KAAAqgD,MAAArgD,KAAAqgD,IAAA,WACA,UAAArgD,QAEA82E,GACA,IACAA,GAAA72F,cAAA,OAAAqG,MAAAmxD,YAAA,gBACK,MAAArlC,GACL,GAAAmlE,IAAA33F,KAAA43F,QAAA55F,UAAA65F,GAAAF,GAAAx8D,aAAA28D,GAAAH,GAAAthC,eAAA0hC,GAAA/3F,KAAAg4F,oBAAAh6F,UAAAi6F,GAAAF,GAAAlgC,WACA8/B,IAAAx8D,aAAA,SAAA4e,EAAA37C,GACAy5F,GAAAl6F,KAAAqC,KAAA+5C,EAAA37C,EAAA,KAEAu5F,GAAAthC,eAAA,SAAAJ,EAAAC,EAAA93D,GACA05F,GAAAn6F,KAAAqC,KAAAi2D,EAAAC,EAAA93D,EAAA,KAEA25F,GAAAlgC,YAAA,SAAA9d,EAAA37C,EAAAq5D,GACAwgC,GAAAt6F,KAAAqC,KAAA+5C,EAAA37C,EAAA,GAAAq5D,IAIAnvD,GAAA4vF,UAAA7lC,EAIA/pD,GAAA6vF,WAAA,SAAA/3F,EAAAkgB,GACA,MAAAA,GAAAlgB,GAAA,EAAAkgB,EAAAlgB,EAAA,EAAAkgB,GAAAlgB,EAAA,EAAAgqB,KAEA9hB,GAAAtG,IAAA,SAAAwF,EAAA2sB,GACA,GAAA/zB,GAAAkgB,EAAA9gB,GAAA,EAAAT,EAAAyI,EAAA/H,MACA,QAAAU,UAAAV,OAAA,CACA,OAAAD,EAAAT,GAAA,UAAAuhB,EAAA9Y,EAAAhI,KAAA8gB,KAAA,CACAlgB,EAAAkgB,CACA,OAEA,OAAA9gB,EAAAT,GAAA,OAAAuhB,EAAA9Y,EAAAhI,KAAAY,EAAAkgB,IAAAlgB,EAAAkgB,OACK,CACL,OAAA9gB,EAAAT,GAAA,UAAAuhB,EAAA6T,EAAAx2B,KAAA6J,IAAAhI,QAAA8gB,KAAA,CACAlgB,EAAAkgB,CACA,OAEA,OAAA9gB,EAAAT,GAAA,OAAAuhB,EAAA6T,EAAAx2B,KAAA6J,IAAAhI,QAAAY,EAAAkgB,IAAAlgB,EAAAkgB,GAEA,MAAAlgB,IAEAkI,GAAAvG,IAAA,SAAAyF,EAAA2sB,GACA,GAAA/zB,GAAAkgB,EAAA9gB,GAAA,EAAAT,EAAAyI,EAAA/H,MACA,QAAAU,UAAAV,OAAA,CACA,OAAAD,EAAAT,GAAA,UAAAuhB,EAAA9Y,EAAAhI,KAAA8gB,KAAA,CACAlgB,EAAAkgB,CACA,OAEA,OAAA9gB,EAAAT,GAAA,OAAAuhB,EAAA9Y,EAAAhI,KAAA8gB,EAAAlgB,MAAAkgB,OACK,CACL,OAAA9gB,EAAAT,GAAA,UAAAuhB,EAAA6T,EAAAx2B,KAAA6J,IAAAhI,QAAA8gB,KAAA,CACAlgB,EAAAkgB,CACA,OAEA,OAAA9gB,EAAAT,GAAA,OAAAuhB,EAAA6T,EAAAx2B,KAAA6J,IAAAhI,QAAA8gB,EAAAlgB,MAAAkgB,GAEA,MAAAlgB,IAEAkI,GAAAge,OAAA,SAAA9e,EAAA2sB,GACA,GAAA/zB,GAAAkgB,EAAAilB,EAAA/lC,GAAA,EAAAT,EAAAyI,EAAA/H,MACA,QAAAU,UAAAV,OAAA,CACA,OAAAD,EAAAT,GAAA,UAAAuhB,EAAA9Y,EAAAhI,KAAA8gB,KAAA,CACAlgB,EAAAmlC,EAAAjlB,CACA,OAEA,OAAA9gB,EAAAT,GAAA,OAAAuhB,EAAA9Y,EAAAhI,MACAY,EAAAkgB,IAAAlgB,EAAAkgB,GACAilB,EAAAjlB,IAAAilB,EAAAjlB,QAEK,CACL,OAAA9gB,EAAAT,GAAA,UAAAuhB,EAAA6T,EAAAx2B,KAAA6J,IAAAhI,QAAA8gB,KAAA,CACAlgB,EAAAmlC,EAAAjlB,CACA,OAEA,OAAA9gB,EAAAT,GAAA,OAAAuhB,EAAA6T,EAAAx2B,KAAA6J,IAAAhI,SACAY,EAAAkgB,IAAAlgB,EAAAkgB,GACAilB,EAAAjlB,IAAAilB,EAAAjlB,IAGA,OAAAlgB,EAAAmlC,IAQAj9B,GAAA8vF,IAAA,SAAA5wF,EAAA2sB,GACA,GAAA/zB,GAAAyT,EAAA,EAAA9U,EAAAyI,EAAA/H,OAAAD,GAAA,CACA,QAAAW,UAAAV,OACA,OAAAD,EAAAT,GAAAwzD,EAAAnyD,GAAAoH,EAAAhI,MAAAqU,GAAAzT,OAEA,QAAAZ,EAAAT,GAAAwzD,EAAAnyD,GAAA+zB,EAAAx2B,KAAA6J,IAAAhI,SAAAqU,GAAAzT,EAEA,OAAAyT,IAEAvL,GAAA+vF,KAAA,SAAA7wF,EAAA2sB,GACA,GAAA/zB,GAAAyT,EAAA,EAAA9U,EAAAyI,EAAA/H,OAAAD,GAAA,EAAAyiC,EAAAljC,CACA,QAAAoB,UAAAV,OACA,OAAAD,EAAAT,GAAAwzD,EAAAnyD,EAAAkyD,EAAA9qD,EAAAhI,KAAAqU,GAAAzT,IAAsE6hC,MAEtE,QAAAziC,EAAAT,GAAAwzD,EAAAnyD,EAAAkyD,EAAAn+B,EAAAx2B,KAAA6J,IAAAhI,QAAAqU,GAAAzT,IAAwF6hC,CAExF,IAAAA,EAAA,MAAApuB,GAAAouB,GAEA35B,GAAAgoF,SAAA,SAAApuF,EAAAyd,GACA,GAAAykD,IAAAliE,EAAAzC,OAAA,GAAAkgB,EAAA,EAAA9M,EAAA3C,KAAA0zD,MAAAQ,GAAA30D,GAAAvN,EAAA2Q,EAAA,GAAAib,EAAAs2C,EAAAvxD,CACA,OAAAib,GAAAre,EAAAqe,GAAA5rB,EAAA2Q,GAAApD,MAEAnH,GAAAgwF,OAAA,SAAA9wF,EAAA2sB,GACA,GAAA/zB,GAAAm4F,KAAAx5F,EAAAyI,EAAA/H,OAAAD,GAAA,CACA,QAAAW,UAAAV,OACA,OAAAD,EAAAT,GAAAwzD,EAAAnyD,EAAAkyD,EAAA9qD,EAAAhI,MAAA+4F,EAAArmF,KAAA9R,OAEA,QAAAZ,EAAAT,GAAAwzD,EAAAnyD,EAAAkyD,EAAAn+B,EAAAx2B,KAAA6J,IAAAhI,SAAA+4F,EAAArmF,KAAA9R,EAEA,IAAAm4F,EAAA94F,OAAA,MAAA6I,IAAAgoF,SAAAiI,EAAAl4E,KAAAgyC,GAAA,KAEA/pD,GAAAkwF,SAAA,SAAAhxF,EAAA2sB,GACA,GAAA/zB,GAAAkQ,EAAAvR,EAAAyI,EAAA/H,OAAAu5D,EAAA,EAAAnlD,EAAA,EAAArU,GAAA,EAAAyiC,EAAA,CACA,QAAA9hC,UAAAV,OACA,OAAAD,EAAAT,GACAwzD,EAAAnyD,EAAAkyD,EAAA9qD,EAAAhI,OACA8Q,EAAAlQ,EAAA44D,EACAA,GAAA1oD,IAAA2xB,EACApuB,GAAAvD,GAAAlQ,EAAA44D,QAIA,QAAAx5D,EAAAT,GACAwzD,EAAAnyD,EAAAkyD,EAAAn+B,EAAAx2B,KAAA6J,IAAAhI,UACA8Q,EAAAlQ,EAAA44D,EACAA,GAAA1oD,IAAA2xB,EACApuB,GAAAvD,GAAAlQ,EAAA44D,GAIA,IAAA/2B,EAAA,QAAApuB,IAAAouB,EAAA,IAEA35B,GAAAmwF,UAAA,WACA,GAAAhpF,GAAAnH,GAAAkwF,SAAAt4F,MAAAF,KAAAG,UACA,OAAAsP,GAAAS,KAAAm6B,KAAA56B,KAwBA,IAAAipF,IAAAlmC,EAAAH,EACA/pD,IAAAqwF,WAAAD,GAAAxhF,KACA5O,GAAA6lF,OAAA7lF,GAAAswF,YAAAF,GAAA11F,MACAsF,GAAAuwF,SAAA,SAAA1kE,GACA,MAAAq+B,GAAA,IAAAr+B,EAAA10B,OAAA,SAAA6Q,EAAA3O,GACA,MAAA0wD,GAAAl+B,EAAA7jB,GAAA3O,IACKwyB,IAEL7rB,GAAAwwF,QAAA,SAAAtxF,EAAA6xD,EAAA00B,IACA/0B,EAAA74D,UAAAV,QAAA,IACAsuF,EAAAvmF,EAAA/H,OACAu5D,EAAA,IAAAK,EAAA,GAGA,KADA,GAAAppC,GAAAzwB,EAAAw5D,EAAA+0B,EAAA10B,EACAL,GACAx5D,EAAA0Q,KAAAs4C,SAAAwQ,IAAA,EACA/oC,EAAAzoB,EAAAwxD,EAAAK,GAAA7xD,EAAAwxD,EAAAK,GAAA7xD,EAAAhI,EAAA65D,GAAA7xD,EAAAhI,EAAA65D,GAAAppC,CAEA,OAAAzoB,IAEAc,GAAAywF,QAAA,SAAAvxF,EAAAwxF,GAEA,IADA,GAAAx5F,GAAAw5F,EAAAv5F,OAAAw5F,EAAA,GAAAppF,OAAArQ,GACAA,KAAAy5F,EAAAz5F,GAAAgI,EAAAwxF,EAAAx5F,GACA,OAAAy5F,IAEA3wF,GAAA4wF,MAAA,SAAA1xF,GAEA,IADA,GAAAhI,GAAA,EAAAT,EAAAyI,EAAA/H,OAAA,EAAAsuE,EAAAvmE,EAAA,GAAA0xF,EAAA,GAAArpF,OAAA9Q,EAAA,IAAAA,GACAS,EAAAT,GAAAm6F,EAAA15F,IAAAuuE,IAAAvmE,IAAAhI,GACA,OAAA05F,IAEA5wF,GAAA6wF,UAAA,SAAAC,GACA,KAAAr6F,EAAAq6F,EAAA35F,QAAA,QACA,QAAAD,IAAA,EAAAw5D,EAAA1wD,GAAAtG,IAAAo3F,EAAAvmC,GAAAsmC,EAAA,GAAAtpF,OAAAmpD,KAAsFx5D,EAAAw5D,GACtF,OAAAj6D,GAAAkjC,GAAA,EAAAo3D,EAAAF,EAAA35F,GAAA,GAAAqQ,OAAA9Q,KAA4DkjC,EAAAljC,GAC5Ds6F,EAAAp3D,GAAAm3D,EAAAn3D,GAAAziC,EAGA,OAAA25F,IAKA7wF,GAAAgxF,IAAA,WACA,MAAAhxF,IAAA6wF,UAAAh5F,YAEAmI,GAAA+B,KAAA,SAAAuJ,GACA,GAAAvJ,KACA,QAAA1K,KAAAiU,GAAAvJ,EAAA6H,KAAAvS,EACA,OAAA0K,IAEA/B,GAAApG,OAAA,SAAA0R,GACA,GAAA1R,KACA,QAAAvC,KAAAiU,GAAA1R,EAAAgQ,KAAA0B,EAAAjU,GACA,OAAAuC,IAEAoG,GAAAixF,QAAA,SAAA3lF,GACA,GAAA2lF,KACA,QAAA55F,KAAAiU,GAAA2lF,EAAArnF,MACAvS,MACAvB,MAAAwV,EAAAjU,IAEA,OAAA45F,IAEAjxF,GAAAm9B,MAAA,SAAA+zD,GAEA,IADA,GAAAxgC,GAAAygC,EAAAjyF,EAAAzI,EAAAy6F,EAAA/5F,OAAAD,GAAA,EAAAyiC,EAAA,IACAziC,EAAAT,GAAAkjC,GAAAu3D,EAAAh6F,GAAAC,MAEA,KADAg6F,EAAA,GAAA5pF,OAAAoyB,KACAljC,GAAA,GAGA,IAFAyI,EAAAgyF,EAAAz6F,GACAi6D,EAAAxxD,EAAA/H,SACAu5D,GAAA,GACAygC,IAAAx3D,GAAAz6B,EAAAwxD,EAGA,OAAAygC,GAEA,IAAAhvD,IAAAv6B,KAAAu6B,GACAniC,IAAAG,MAAA,SAAAqJ,EAAAC,EAAA9N,GAQA,GAPA9D,UAAAV,OAAA,IACAwE,EAAA,EACA9D,UAAAV,OAAA,IACAsS,EAAAD,EACAA,EAAA,KAGAC,EAAAD,GAAA7N,IAAAwT,IAAA,SAAA5R,OAAA,iBACA,IAAAo8B,GAAAx5B,KAAA6vC,EAAAwa,EAAAroB,GAAAxmC,IAAAzE,GAAA,CAEA,IADAsS,GAAAwmC,EAAAvmC,GAAAumC,EAAAr0C,GAAAq0C,EACAr0C,EAAA,QAAAg+B,EAAAnwB,EAAA7N,IAAAzE,GAAAuS,GAAAtJ,EAAAyJ,KAAA+vB,EAAAqW,OAA4E,OAAArW,EAAAnwB,EAAA7N,IAAAzE,GAAAuS,GAAAtJ,EAAAyJ,KAAA+vB,EAAAqW,EAC5E,OAAA7vC,IAeAH,GAAAsL,IAAA,SAAAhN,EAAAutB,GACA,GAAAvgB,GAAA,GAAAs/C,EACA,IAAAtsD,YAAAssD,GACAtsD,EAAA0D,QAAA,SAAA3K,EAAAvB,GACAwV,EAAA8jB,IAAA/3B,EAAAvB,SAEK,IAAAyR,MAAAD,QAAAhJ,GAAA,CACL,GAAA+I,GAAAnQ,GAAA,EAAAT,EAAA6H,EAAAnH,MACA,QAAAU,UAAAV,OAAA,OAAAD,EAAAT,GAAA6U,EAAA8jB,IAAAl4B,EAAAoH,EAAApH,QAAwE,QAAAA,EAAAT,GAAA6U,EAAA8jB,IAAAvD,EAAAx2B,KAAAiJ,EAAA+I,EAAA/I,EAAApH,MAAAmQ,OAExE,QAAAhQ,KAAAiH,GAAAgN,EAAA8jB,IAAA/3B,EAAAiH,EAAAjH,GAEA,OAAAiU,GAKA,IAAAy/C,IAAA,YAAAC,GAAA,IACAP,GAAAG,GACA/B,IAAAqC,EACA7sD,IAAA,SAAAhH,GACA,MAAAK,MAAAmzD,EAAAC,EAAAzzD,KAEA+3B,IAAA,SAAA/3B,EAAAvB,GACA,MAAA4B,MAAAmzD,EAAAC,EAAAzzD,IAAAvB,GAEAmY,OAAAk9C,EACAppD,KAAAqpD,EACAxxD,OAAA,WACA,GAAAA,KACA,QAAAvC,KAAAK,MAAAmzD,EAAAjxD,EAAAgQ,KAAAlS,KAAAmzD,EAAAxzD,GACA,OAAAuC,IAEAq3F,QAAA,WACA,GAAAA,KACA,QAAA55F,KAAAK,MAAAmzD,EAAAomC,EAAArnF,MACAvS,IAAA4zD,EAAA5zD,GACAvB,MAAA4B,KAAAmzD,EAAAxzD,IAEA,OAAA45F,IAEA12F,KAAA8wD,EACAvmD,MAAAwmD,EACAtpD,QAAA,SAAA6pB,GACA,OAAAx0B,KAAAK,MAAAmzD,EAAAh/B,EAAAx2B,KAAAqC,KAAAuzD,EAAA5zD,GAAAK,KAAAmzD,EAAAxzD,OA6BA2I,GAAAoxF,KAAA,WAEA,QAAA9lF,GAAA+lF,EAAAnyF,EAAAmwE,GACA,GAAAA,GAAAttE,EAAA5K,OAAA,MAAAm6F,KAAAj8F,KAAA+7F,EAAAlyF,GAAAqyF,EAAAryF,EAAA6Y,KAAAw5E,GAAAryF,CAEA,KADA,GAAAsyF,GAAAlzF,EAAAmzF,EAAA73F,EAAA1C,GAAA,EAAAT,EAAAyI,EAAA/H,OAAAE,EAAA0K,EAAAstE,KAAAqiB,EAAA,GAAA9mC,KACA1zD,EAAAT,IACAmD,EAAA83F,EAAArzF,IAAAmzF,EAAAn6F,EAAAiH,EAAAY,EAAAhI,MACA0C,EAAAgQ,KAAAtL,GAEAozF,EAAAtiE,IAAAoiE,GAAAlzF,GAeA,OAZA+yF,IACA/yF,EAAA+yF,IACAI,EAAA,SAAAD,EAAA53F,GACA0E,EAAA8wB,IAAAoiE,EAAAlmF,EAAA+lF,EAAAz3F,EAAAy1E,OAGA/wE,KACAmzF,EAAA,SAAAD,EAAA53F,GACA0E,EAAAkzF,GAAAlmF,EAAA+lF,EAAAz3F,EAAAy1E,KAGAqiB,EAAA1vF,QAAAyvF,GACAnzF,EAEA,QAAA2yF,GAAA3lF,EAAA+jE,GACA,GAAAA,GAAAttE,EAAA5K,OAAA,MAAAmU,EACA,IAAApM,MAAAyyF,EAAAC,EAAAviB,IAOA,OANA/jE,GAAAtJ,QAAA,SAAA3K,EAAAw6F,GACA3yF,EAAA0K,MACAvS,MACAuC,OAAAq3F,EAAAY,EAAAxiB,OAGAsiB,EAAAzyF,EAAA6Y,KAAA,SAAAjgB,EAAAkgB,GACA,MAAA25E,GAAA75F,EAAAT,IAAA2gB,EAAA3gB,OACO6H,EApCP,GAAiBqyF,GAAAD,EAAjBF,KAAiBrvF,KAAA6vF,IA4DjB,OAtBAR,GAAA9lF,IAAA,SAAApM,EAAAmyF,GACA,MAAA/lF,GAAA+lF,EAAAnyF,EAAA,IAEAkyF,EAAAH,QAAA,SAAA/xF,GACA,MAAA+xF,GAAA3lF,EAAAtL,GAAAsL,IAAApM,EAAA,OAEAkyF,EAAA/5F,IAAA,SAAA2Q,GAEA,MADAjG,GAAA6H,KAAA5B,GACAopF,GAEAA,EAAAQ,SAAA,SAAA5+C,GAEA,MADA4+C,GAAA7vF,EAAA5K,OAAA,GAAA67C,EACAo+C,GAEAA,EAAAG,WAAA,SAAAv+C,GAEA,MADAu+C,GAAAv+C,EACAo+C,GAEAA,EAAAE,OAAA,SAAAzlE,GAEA,MADAylE,GAAAzlE,EACAulE,GAEAA,GAEApxF,GAAAovB,IAAA,SAAAlwB,GACA,GAAAkwB,GAAA,GAAAm8B,EACA,IAAArsD,EAAA,OAAAhI,GAAA,EAAAT,EAAAyI,EAAA/H,OAAgDD,EAAAT,IAAOS,EAAAk4B,EAAAxH,IAAA1oB,EAAAhI,GACvD,OAAAk4B,IAKAq7B,EAAAc,GACA1C,IAAAqC,EACAtjC,IAAA,SAAAvwB,GAEA,MADAK,MAAAmzD,EAAAC,EAAAzzD,GAAA,QACAA,GAEA4W,OAAAk9C,EACAvxD,OAAAwxD,EACA7wD,KAAA8wD,EACAvmD,MAAAwmD,EACAtpD,QAAA,SAAA6pB,GACA,OAAAx0B,KAAAK,MAAAmzD,EAAAh/B,EAAAx2B,KAAAqC,KAAAuzD,EAAA5zD,OAGA2I,GAAA66C,YAIA76C,GAAA83D,OAAA,SAAA9gE,EAAAwF,GAEA,IADA,GAAAkvD,GAAAx0D,EAAA,EAAAT,EAAAoB,UAAAV,SACAD,EAAAT,GAAAO,EAAA00D,EAAA7zD,UAAAX,IAAAu0D,EAAAz0D,EAAAwF,IAAAkvD,GACA,OAAA10D,GAgBA,IAAA60D,KAAA,kCAEA7rD,IAAAksD,SAAA,WAEA,IADA,GAAAA,GAAA,GAAAF,GAAA90D,GAAA,EAAAT,EAAAoB,UAAAV,SACAD,EAAAT,GAAAy1D,EAAAr0D,UAAAX,IAAA+0D,EAAAC,EACA,OAAAA,IAGAF,EAAAt2D,UAAA4oB,GAAA,SAAAtkB,EAAAqyD,GACA,GAAAn1D,GAAA8C,EAAAga,QAAA,KAAAy9B,EAAA,EAKA,IAJAv6C,GAAA,IACAu6C,EAAAz3C,EAAAgS,MAAA9U,EAAA,GACA8C,IAAAgS,MAAA,EAAA9U,IAEA8C,EAAA,MAAAnC,WAAAV,OAAA,EAAAO,KAAAsC,GAAAskB,GAAAmzB,GAAA/5C,KAAAsC,GAAAskB,GAAAmzB,EAAA4a,EACA,QAAAx0D,UAAAV,OAAA,CACA,SAAAk1D,EAAA,IAAAryD,IAAAtC,MACAA,KAAA+E,eAAAzC,IAAAtC,KAAAsC,GAAAskB,GAAAmzB,EAAA,KAEA,OAAA/5C,QAyBAsI,GAAAk7C,MAAA,KA0BAl7C,GAAAwuD,QAAA,SAAAjjD,GACA,MAAAA,GAAA3C,QAAAkpF,GAAA,QAEA,IAAAA,IAAA,kCACA9kC,MAAsB72D,UAAA,SAAAmI,EAAA5I,GACtB4I,EAAAnI,UAAAT,GACG,SAAA4I,EAAA5I,GACH,OAAAkzD,KAAAlzD,GAAA4I,EAAAsqD,GAAAlzD,EAAAkzD,IAMAuE,GAAA,SAAA5hD,EAAA9U,GACA,MAAAA,GAAAs7F,cAAAxmF,IACG8hD,GAAA,SAAA9hD,EAAA9U,GACH,MAAAA,GAAAu7F,iBAAAzmF,IACG+kD,GAAA,SAAA75D,EAAA8U,GACH,GAAA0mF,GAAAx7F,EAAAy7F,SAAAz7F,EAAAk1D,EAAAl1D,EAAA,mBAIA,QAHA65D,GAAA,SAAA75D,EAAA8U,GACA,MAAA0mF,GAAA58F,KAAAoB,EAAA8U,KAEA9U,EAAA8U,GAEA,oBAAA4mF,UACAhlC,GAAA,SAAA5hD,EAAA9U,GACA,MAAA07F,QAAA5mF,EAAA9U,GAAA,UAEA42D,GAAA8kC,OACA7hC,GAAA6hC,OAAAC,iBAEApyF,GAAAoJ,UAAA,WACA,MAAApJ,IAAAyK,OAAAmkF,GAAAhlC,iBAEA,IAAAqD,IAAAjtD,GAAAoJ,UAAA1T,YACAu3D,IAAAxiD,OAAA,SAAAwwC,GACA,GAAAo3C,GAAAC,EAAA3hC,EAAA1hD,EAAAsjF,IACAt3C,GAAAiS,EAAAjS,EACA,QAAAthB,IAAA,EAAA+2B,EAAAh5D,KAAAP,SAAqCwiC,EAAA+2B,GAAS,CAC9C6hC,EAAA3oF,KAAAyoF,MACAA,EAAA7nE,YAAAmmC,EAAAj5D,KAAAiiC,IAAAnP,UACA,QAAAtzB,IAAA,EAAAT,EAAAk6D,EAAAx5D,SAAwCD,EAAAT,IACxCwY,EAAA0hD,EAAAz5D,KACAm7F,EAAAzoF,KAAA0oF,EAAAr3C,EAAA5lD,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,IACA24D,GAAA,YAAArjF,KAAAqjF,EAAAj1D,SAAApuB,EAAAouB,WAEAg1D,EAAAzoF,KAAA,MAIA,MAAAmjD,GAAAwlC,IAOAtlC,GAAAt/C,UAAA,SAAAstC,GACA,GAAAo3C,GAAApjF,EAAAsjF,IACAt3C,GAAAmS,EAAAnS,EACA,QAAAthB,IAAA,EAAA+2B,EAAAh5D,KAAAP,SAAqCwiC,EAAA+2B,GACrC,OAAAC,GAAAj5D,KAAAiiC,GAAAziC,GAAA,EAAAT,EAAAk6D,EAAAx5D,SAAyDD,EAAAT,IACzDwY,EAAA0hD,EAAAz5D,MACAq7F,EAAA3oF,KAAAyoF,EAAA9gC,GAAAtW,EAAA5lD,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,KACA04D,EAAA7nE,WAAAvb,EAIA,OAAA89C,GAAAwlC,GAOA,IAAAviC,IAAA,+BACAwiC,IACAt8E,IAAA,6BACAu8E,MAAAziC,GACA0iC,MAAA,+BACAC,IAAA,uCACAC,MAAA,gCAEA5yF,IAAAkuD,IACAznB,OAAA+rD,GACArkC,QAAA,SAAA1c,GACA,GAAAv6C,GAAAu6C,EAAAz9B,QAAA,KAAAyyB,EAAAgL,CAEA,OADAv6C,IAAA,cAAAuvC,EAAAgL,EAAAzlC,MAAA,EAAA9U,MAAAu6C,IAAAzlC,MAAA9U,EAAA,IACAs7F,GAAA/1F,eAAAgqC,IACAknB,MAAA6kC,GAAA/rD,GACAmnB,MAAAnc,GACOA,IAGPwb,GAAA5jD,KAAA,SAAAooC,EAAA37C,GACA,GAAA+B,UAAAV,OAAA,GACA,oBAAAs6C,GAAA,CACA,GAAAxiC,GAAAvX,KAAAuX,MAEA,OADAwiC,GAAAzxC,GAAAkuD,GAAAC,QAAA1c,GACAA,EAAAmc,MAAA3+C,EAAA4jF,eAAAphD,EAAAkc,MAAAlc,EAAAmc,OAAA3+C,EAAA6jB,aAAA2e,GAEA,IAAA37C,IAAA27C,GAAA/5C,KAAAgT,KAAA4iD,EAAAx3D,EAAA27C,EAAA37C,IACA,OAAA4B,MAEA,MAAAA,MAAAgT,KAAA4iD,EAAA7b,EAAA37C,KA6BAm3D,GAAAj2C,QAAA,SAAAy6B,EAAA37C,GACA,GAAA+B,UAAAV,OAAA,GACA,oBAAAs6C,GAAA,CACA,GAAAxiC,GAAAvX,KAAAuX,OAAAxY,GAAAg7C,EAAAgd,EAAAhd,IAAAt6C,OAAAD,GAAA,CACA,IAAApB,EAAAmZ,EAAA8/C,WACA,OAAA73D,EAAAT,GAAA,IAAAX,EAAAg9F,SAAArhD,EAAAv6C,IAAA,aAGA,KADApB,EAAAmZ,EAAA6jB,aAAA,WACA57B,EAAAT,GAAA,IAAA63D,EAAA7c,EAAAv6C,IAAA+3D,KAAAn5D,GAAA,QAEA,UAEA,IAAAA,IAAA27C,GAAA/5C,KAAAgT,KAAAgkD,EAAA54D,EAAA27C,EAAA37C,IACA,OAAA4B,MAEA,MAAAA,MAAAgT,KAAAgkD,EAAAjd,EAAA37C,KAkCAm3D,GAAA7uD,MAAA,SAAAqzC,EAAA37C,EAAAq5D,GACA,GAAA14D,GAAAoB,UAAAV,MACA,IAAAV,EAAA,GACA,oBAAAg7C,GAAA,CACAh7C,EAAA,IAAAX,EAAA,GACA,KAAAq5D,IAAA1d,GAAA/5C,KAAAgT,KAAAwkD,EAAAC,EAAA1d,EAAA0d,GAAAr5D,GACA,OAAA4B,MAEA,GAAAjB,EAAA,GACA,GAAAwY,GAAAvX,KAAAuX,MACA,OAAA46C,GAAA56C,GAAA8jF,iBAAA9jF,EAAA,MAAA+jF,iBAAAvhD,GAEA0d,EAAA,GAEA,MAAAz3D,MAAAgT,KAAAwkD,EAAAzd,EAAA37C,EAAAq5D,KAeAlC,GAAArE,SAAA,SAAAnX,EAAA37C,GACA,GAAA+B,UAAAV,OAAA,GACA,oBAAAs6C,GAAA,MAAA/5C,MAAAuX,OAAAwiC,EACA,KAAA37C,IAAA27C,GAAA/5C,KAAAgT,KAAA+kD,EAAA35D,EAAA27C,EAAA37C,IACA,OAAA4B,MAEA,MAAAA,MAAAgT,KAAA+kD,EAAAhe,EAAA37C,KAeAm3D,GAAAloD,KAAA,SAAAjP,GACA,MAAA+B,WAAAV,OAAAO,KAAAgT,KAAA,mBAAA5U,GAAA,WACA,GAAAqR,GAAArR,EAAA8B,MAAAF,KAAAG,UACAH,MAAAukD,YAAA,MAAA90C,EAAA,GAAAA,GACK,MAAArR,EAAA,WACL4B,KAAAukD,YAAA,IACK,WACLvkD,KAAAukD,YAAAnmD,IACK4B,KAAAuX,OAAAgtC,aAELgR,GAAA5vC,KAAA,SAAAvnB,GACA,MAAA+B,WAAAV,OAAAO,KAAAgT,KAAA,mBAAA5U,GAAA,WACA,GAAAqR,GAAArR,EAAA8B,MAAAF,KAAAG,UACAH,MAAAu7F,UAAA,MAAA9rF,EAAA,GAAAA,GACK,MAAArR,EAAA,WACL4B,KAAAu7F,UAAA,IACK,WACLv7F,KAAAu7F,UAAAn9F,IACK4B,KAAAuX,OAAAgkF,WAELhmC,GAAA9+C,OAAA,SAAAsjC,GAEA,MADAA,GAAAoe,EAAApe,GACA/5C,KAAA+S,OAAA,WACA,MAAA/S,MAAAw7F,YAAAzhD,EAAA75C,MAAAF,KAAAG,eAaAo1D,GAAAn/C,OAAA,SAAA2jC,EAAAmpB,GAGA,MAFAnpB,GAAAoe,EAAApe,GACAmpB,EAAA1N,EAAA0N,GACAljE,KAAA+S,OAAA,WACA,MAAA/S,MAAAy7F,aAAA1hD,EAAA75C,MAAAF,KAAAG,WAAA+iE,EAAAhjE,MAAAF,KAAAG,YAAA,SAGAo1D,GAAAh/C,OAAA,WACA,MAAAvW,MAAAgT,KAAAwlD,IAMAjD,GAAAj0D,KAAA,SAAAlD,EAAAuB,GAWA,QAAA4K,GAAA0uD,EAAAyiC,GACA,GAAAl8F,GAAA+X,EAAAokF,EAAA58F,EAAAk6D,EAAAx5D,OAAAu5D,EAAA0iC,EAAAj8F,OAAAslF,EAAA70E,KAAAlO,IAAAjD,EAAAi6D,GAAA4iC,EAAA,GAAA/rF,OAAAmpD,GAAA6iC,EAAA,GAAAhsF,OAAAmpD,GAAA8iC,EAAA,GAAAjsF,OAAA9Q,EACA,IAAAY,EAAA,CACA,GAAAm6F,GAAAiC,EAAA,GAAA7oC,GAAA8oC,EAAA,GAAAnsF,OAAA9Q,EACA,KAAAS,GAAA,IAAoBA,EAAAT,IACpBwY,EAAA0hD,EAAAz5D,MACAu8F,EAAA5qC,IAAA2oC,EAAAn6F,EAAAhC,KAAA4Z,IAAAouB,SAAAnmC,IACAs8F,EAAAt8F,GAAA+X,EAEAwkF,EAAArkE,IAAAoiE,EAAAviF,GAEAykF,EAAAx8F,GAAAs6F,EAGA,KAAAt6F,GAAA,IAAoBA,EAAAw5D,IACpBzhD,EAAAwkF,EAAAp1F,IAAAmzF,EAAAn6F,EAAAhC,KAAA+9F,EAAAC,EAAAD,EAAAl8F,SAEW,IAAA+X,IACXqkF,EAAAp8F,GAAA+X,EACAA,EAAAouB,SAAAg2D,GAHAE,EAAAr8F,GAAAk5D,EAAAijC,GAKAI,EAAArkE,IAAAoiE,GAAA,EAEA,KAAAt6F,GAAA,IAAoBA,EAAAT,GACpBS,IAAAw8F,KAAA,IAAAD,EAAAp1F,IAAAq1F,EAAAx8F,MACAs8F,EAAAt8F,GAAAy5D,EAAAz5D,QAGO,CACP,IAAAA,GAAA,IAAoBA,EAAAulF,GACpBxtE,EAAA0hD,EAAAz5D,GACAm8F,EAAAD,EAAAl8F,GACA+X,GACAA,EAAAouB,SAAAg2D,EACAC,EAAAp8F,GAAA+X,GAEAskF,EAAAr8F,GAAAk5D,EAAAijC,EAGA,MAAcn8F,EAAAw5D,IAAMx5D,EACpBq8F,EAAAr8F,GAAAk5D,EAAAgjC,EAAAl8F,GAEA,MAAcA,EAAAT,IAAMS,EACpBs8F,EAAAt8F,GAAAy5D,EAAAz5D,GAGAq8F,EAAA7oE,OAAA4oE,EACAC,EAAA/oE,WAAA8oE,EAAA9oE,WAAAgpE,EAAAhpE,WAAAmmC,EAAAnmC,WACA3c,EAAAjE,KAAA2pF,GACA7oE,EAAA9gB,KAAA0pF,GACAtlF,EAAApE,KAAA4pF,GA5DA,GAAA7iC,GAAA1hD,EAAA/X,GAAA,EAAAT,EAAAiB,KAAAP,MACA,KAAAU,UAAAV,OAAA,CAEA,IADArB,EAAA,GAAAyR,OAAA9Q,GAAAk6D,EAAAj5D,KAAA,IAAAP,UACAD,EAAAT,IACAwY,EAAA0hD,EAAAz5D,MACApB,EAAAoB,GAAA+X,EAAAouB,SAGA,OAAAvnC,GAsDA,GAAA+X,GAAA+iD,MAAAlmC,EAAAqiC,MAAA/+C,EAAA++C,KACA,uBAAAj3D,GACA,OAAAoB,EAAAT,GACAwL,EAAA0uD,EAAAj5D,KAAAR,GAAApB,EAAAT,KAAAs7D,IAAAnmC,WAAA6S,SAAAnmC,QAGA,QAAAA,EAAAT,GACAwL,EAAA0uD,EAAAj5D,KAAAR,GAAApB,EASA,OANA40B,GAAA7c,MAAA,WACA,MAAAA,IAEA6c,EAAA1c,KAAA,WACA,MAAAA,IAEA0c,GAOAuiC,GAAAnT,MAAA,SAAAhkD,GACA,MAAA+B,WAAAV,OAAAO,KAAAkxD,SAAA,WAAA9yD,GAAA4B,KAAAkxD,SAAA,aAEAqE,GAAAzvC,OAAA,SAAAA,GACA,GAAA60E,GAAA1hC,EAAA1hD,EAAAsjF,IACA,oBAAA/0E,OAAA6yC,EAAA7yC,GACA,QAAAmc,GAAA,EAAA+2B,EAAAh5D,KAAAP,OAAoCwiC,EAAA+2B,EAAO/2B,IAAA,CAC3C44D,EAAA3oF,KAAAyoF,MACAA,EAAA7nE,YAAAmmC,EAAAj5D,KAAAiiC,IAAAnP,UACA,QAAAtzB,GAAA,EAAAT,EAAAk6D,EAAAx5D,OAAuCD,EAAAT,EAAOS,KAC9C+X,EAAA0hD,EAAAz5D,KAAAsmB,EAAAnoB,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,IACA04D,EAAAzoF,KAAAqF,GAIA,MAAA89C,GAAAwlC,IAOAtlC,GAAAja,MAAA,WACA,OAAArZ,IAAA,EAAA+2B,EAAAh5D,KAAAP,SAAqCwiC,EAAA+2B,GACrC,OAAAzhD,GAAA0hD,EAAAj5D,KAAAiiC,GAAAziC,EAAAy5D,EAAAx5D,OAAA,EAAAu+E,EAAA/kB,EAAAz5D,KAA4EA,GAAA,IAC5E+X,EAAA0hD,EAAAz5D,MACAw+E,OAAAzmE,EAAA0kF,aAAAje,EAAAlrD,WAAA2oE,aAAAlkF,EAAAymE,GACAA,EAAAzmE,EAIA,OAAAvX,OAEAu1D,GAAAl1C,KAAA,SAAAy4C,GACAA,EAAAD,EAAA34D,MAAAF,KAAAG,UACA,QAAA8hC,IAAA,EAAA+2B,EAAAh5D,KAAAP,SAAqCwiC,EAAA+2B,GAASh5D,KAAAiiC,GAAA5hB,KAAAy4C,EAC9C,OAAA94D,MAAAs7C,SAQAia,GAAAviD,KAAA,SAAAshB,GACA,MAAAykC,GAAA/4D,KAAA,SAAAuX,EAAA/X,EAAAyiC,GACA3N,EAAA32B,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,MAWAszB,GAAA53D,KAAA,SAAA22B,GACA,GAAAgN,GAAAu4B,GAAA15D,UAEA,OADAm0B,GAAAp0B,MAAAohC,EAAA,GAAAthC,KAAAshC,GACAthC,MAEAu1D,GAAAnoD,MAAA,WACA,OAAApN,KAAAuX,QAEAg+C,GAAAh+C,KAAA,WACA,OAAA0qB,GAAA,EAAA+2B,EAAAh5D,KAAAP,OAAoCwiC,EAAA+2B,EAAO/2B,IAC3C,OAAAg3B,GAAAj5D,KAAAiiC,GAAAziC,EAAA,EAAAT,EAAAk6D,EAAAx5D,OAAwDD,EAAAT,EAAOS,IAAA,CAC/D,GAAA+X,GAAA0hD,EAAAz5D,EACA,IAAA+X,EAAA,MAAAA,GAGA,aAEAg+C,GAAA1yD,KAAA,WACA,GAAA9D,GAAA,CAIA,OAHAg6D,GAAA/4D,KAAA,aACAjB,IAEAA,EAMA,IAAAo6D,MACA7wD,IAAAoJ,UAAAyE,MAAA+iD,EACA5wD,GAAAoJ,UAAAyE,MAAAnY,UAAAm7D,GACAA,GAAA1iD,OAAA8+C,GAAA9+C,OACA0iD,GAAA/rD,MAAAmoD,GAAAnoD,MACA+rD,GAAA5hD,KAAAg+C,GAAAh+C,KACA4hD,GAAAx7D,KAAA43D,GAAA53D,KACAw7D,GAAAt2D,KAAA0yD,GAAA1yD,KACAs2D,GAAApmD,OAAA,SAAAwwC,GAEA,OADAo3C,GAAAC,EAAAsB,EAAAjjC,EAAA1hD,EAAAsjF,KACA54D,GAAA,EAAA+2B,EAAAh5D,KAAAP,SAAqCwiC,EAAA+2B,GAAS,CAC9CkjC,GAAAjjC,EAAAj5D,KAAAiiC,IAAAjP,OACA6nE,EAAA3oF,KAAAyoF,MACAA,EAAA7nE,WAAAmmC,EAAAnmC,UACA,QAAAtzB,IAAA,EAAAT,EAAAk6D,EAAAx5D,SAAwCD,EAAAT,IACxCwY,EAAA0hD,EAAAz5D,KACAm7F,EAAAzoF,KAAAgqF,EAAA18F,GAAAo7F,EAAAr3C,EAAA5lD,KAAAs7D,EAAAnmC,WAAAvb,EAAAouB,SAAAnmC,EAAAyiC,IACA24D,EAAAj1D,SAAApuB,EAAAouB,UAEAg1D,EAAAzoF,KAAA,MAIA,MAAAmjD,GAAAwlC,IAEA1hC,GAAA/iD,OAAA,SAAA2jC,EAAAmpB,GAEA,MADA/iE,WAAAV,OAAA,IAAAyjE,EAAA9J,EAAAp5D,OACAu1D,GAAAn/C,OAAAzY,KAAAqC,KAAA+5C,EAAAmpB,IAYA56D,GAAAyK,OAAA,SAAAwE,GACA,GAAA0hD,EAQA,OAPA,iBAAA1hD,IACA0hD,GAAAxD,GAAAl+C,EAAA2/E,KACAj+B,EAAAnmC,WAAAokE,GAAAhlC,kBAEA+G,GAAA1hD,GACA0hD,EAAAnmC,WAAAk/B,EAAAz6C,IAEA89C,GAAA4D,KAEA3wD,GAAA2N,UAAA,SAAA8sE,GACA,GAAA9pB,EAQA,OAPA,iBAAA8pB,IACA9pB,EAAAY,GAAAlE,GAAAotB,EAAAmU,KACAj+B,EAAAnmC,WAAAokE,GAAAhlC,kBAEA+G,EAAAY,GAAAkpB,GACA9pB,EAAAnmC,WAAA,MAEAuiC,GAAA4D,KAEA1D,GAAA3uC,GAAA,SAAAtkB,EAAAqyD,EAAA6E,GACA,GAAAz6D,GAAAoB,UAAAV,MACA,IAAAV,EAAA,GACA,oBAAAuD,GAAA,CACAvD,EAAA,IAAA41D,GAAA,EACA,KAAA6E,IAAAl3D,GAAAtC,KAAAgT,KAAAumD,EAAAC,EAAAl3D,EAAAk3D,GAAA7E,GACA,OAAA30D,MAEA,GAAAjB,EAAA,SAAAA,EAAAiB,KAAAuX,OAAA,OAAAjV,KAAAvD,EAAAo0D,CACAqG,IAAA,EAEA,MAAAx5D,MAAAgT,KAAAumD,EAAAj3D,EAAAqyD,EAAA6E,IAgCA,IAAAS,IAAA3xD,GAAAsL,KACAuoF,WAAA,YACAC,WAAA,YAEAlF,KACAj9B,GAAA3vD,QAAA,SAAAguC,GACA,KAAAA,IAAA4+C,KAAAj9B,GAAA1jD,OAAA+hC,IAwBA,IAAAmiB,IAAAF,GAAA,CAyBAjyD,IAAAm+B,MAAA,SAAAo0B,GACA,MAAAD,IAAAC,EAAA/F,KAEA,IAAAmG,IAAAj7D,KAAAwwC,WAAA,SAAA+mB,KAAAv3D,KAAAwwC,UAAA6gB,YAAA,GA8BA/oD,IAAA+zF,MAAA,SAAAxhC,EAAAyhC,EAAAxgC,GAEA,GADA37D,UAAAV,OAAA,IAAAq8D,EAAAwgC,IAAAxnC,IAAAgG,gBACAwhC,EAAA,OAAAD,GAAA78F,EAAA,EAAAT,EAAAu9F,EAAA78F,OAA2DD,EAAAT,IAAOS,EAClE,IAAA68F,EAAAC,EAAA98F,IAAAs8D,eACA,MAAAlB,IAAAC,EAAAwhC,IAIA/zF,GAAA66C,SAAAjE,KAAA,WAEA,QAAAA,KACAl/C,KAAA4mB,GAAA,iBAAA21E,GAAA31E,GAAA,kBAAA41E,GAEA,QAAAt8C,GAAA1lC,EAAA4B,EAAAuxD,EAAA8uB,EAAAv8E,GACA,kBAWA,QAAAw8E,KACA,GAAA3lF,GAAAtB,EAAAknF,EAAAvgF,EAAAw0B,EAAAgsD,EACAD,KACA5lF,EAAA4lF,EAAA,GAAAE,EAAA,GACApnF,EAAAknF,EAAA,GAAAE,EAAA,GACAC,GAAA/lF,EAAAtB,EACAonF,EAAAF,EACAnoC,GACAlyD,KAAA,OACAX,EAAAg7F,EAAA,GAAAI,EAAA,GACAj7F,EAAA66F,EAAA,GAAAI,EAAA,GACAhmF,KACAtB,QAGA,QAAAunF,KACA5gF,EAAAw0B,EAAAgsD,KACAK,EAAAr2E,GAAA61E,EAAAS,EAAA,MAAAt2E,GAAA1G,EAAAg9E,EAAA,MACAC,EAAAL,GACAtoC,GACAlyD,KAAA,aA9BA,GAAAy6F,GAAAv2D,EAAAxmC,KAAAV,EAAAgJ,GAAAk7C,MAAAlkD,OAAA89F,sBAAA90F,GAAAk7C,MAAAlkD,OAAAsxC,EAAApK,EAAA1T,WAAA0hC,EAAAhR,EAAAwR,GAAAxuB,EAAArmC,WAAA28F,EAAA,EAAAF,EAAApiF,IAAA0iF,EAAA,eAAAN,EAAA,OAAAA,GAAAK,EAAA30F,GAAAyK,OAAA46D,EAAAruE,IAAAsnB,GAAA61E,EAAAS,EAAAR,GAAA91E,GAAA1G,EAAAg9E,EAAAF,GAAAG,EAAA7iC,GAAAh7D,GAAAu9F,EAAAzgF,EAAAw0B,EAAAgsD,EACAx5C,IACA25C,EAAA35C,EAAAljD,MAAAsmC,EAAArmC,WACA48F,KAAAp7F,EAAAk7F,EAAA,GAAAE,EAAAj7F,EAAA+6F,EAAA,KAEAE,GAAA,KAEAvoC,GACAlyD,KAAA,eAdA,GAAAkhD,GAAAuR,EAAA7V,EAAA,8BAAAkE,EAAA,KAAAm5C,EAAAr8C,EAAAmU,EAAA/rD,GAAAm+B,MAAA0rB,EAAA,uBAAAqqC,EAAAt8C,EAAA2b,GAAAvzD,GAAA+zF,MAAAvoC,EAAA,uBA8CA,OALA5U,GAAAkE,OAAA,SAAAzhD,GACA,MAAAxB,WAAAV,QACA2jD,EAAAzhD,EACAu9C,GAFAkE,GAIA96C,GAAA83D,OAAAlhB,EAAAsE,EAAA,OAKAl7C,GAAAg0F,QAAA,SAAAzhC,EAAAyhC,GAEA,MADAn8F,WAAAV,OAAA,IAAA68F,EAAAxnC,IAAAwnC,SACAA,EAAAziC,GAAAyiC,GAAA1oF,IAAA,SAAAyoF,GACA,GAAA10F,GAAAizD,GAAAC,EAAAwhC,EAEA,OADA10F,GAAAm0D,WAAAugC,EAAAvgC,WACAn0D,OAGA,IAAAqkE,IAAA,KAAA6U,GAAA7U,MAAA9P,GAAAhsD,KAAAqF,GAAAy7D,GAAA,EAAA9U,GAAAmhC,GAAArsB,GAAAhF,GAAA3P,GAAAH,GAAA,EAAAwB,GAAAxB,GAAA,IAAAgC,GAAA,IAAAhC,GAyBA4Y,GAAA5kE,KAAAotF,KACAh1F,IAAAi1F,gBAAA,SAAAzvB,EAAAC,GACA,GAAAvuE,GAAA8kE,EAAAk5B,EAAA1vB,EAAA,GAAA2vB,EAAA3vB,EAAA,GAAA4vB,EAAA5vB,EAAA,GAAA6vB,EAAA5vB,EAAA,GAAA6vB,EAAA7vB,EAAA,GAAA8vB,EAAA9vB,EAAA,GAAAh3D,EAAA4mF,EAAAH,EAAA/nF,EAAAmoF,EAAAH,EAAA7lB,EAAA7gE,IAAAtB,GACA,IAAAmiE,EAAAiJ,GACAvc,EAAAp0D,KAAAkxD,IAAAy8B,EAAAH,GAAA5oB,GACAt1E,EAAA,SAAAywB,GACA,OAAAutE,EAAAvtE,EAAAlZ,EAAA0mF,EAAAxtE,EAAAxa,EAAAioF,EAAAxtF,KAAAssD,IAAAsY,GAAA7kD,EAAAq0C,SAEK,CACL,GAAA71B,GAAAv+B,KAAAm6B,KAAAutC,GAAAP,GAAAwmB,IAAAH,IATA,EASA9lB,IAAA,EAAA8lB,EATA,EASAjvD,GAAAipC,GAAAmmB,IAAAH,IATA,EASA9lB,IAAA,EAAAimB,EATA,EASApvD,GAAAq4C,EAAA52E,KAAAkxD,IAAAlxD,KAAAm6B,KAAAgtC,IAAA,GAAAA,GAAA9+C,EAAAroB,KAAAkxD,IAAAlxD,KAAAm6B,KAAAqtC,IAAA,GAAAA,EACApT,IAAA/rC,EAAAuuD,GAAAhS,GACAt1E,EAAA,SAAAywB,GACA,GAAApc,GAAAoc,EAAAq0C,EAAAw5B,EAAArhC,GAAAqqB,GAAA/b,EAAA2yB,GAZA,EAYAjvD,IAAAqvD,EAAAphC,GAAAoY,GAAAjhE,EAAAizE,GAAAvqB,GAAAuqB,GACA,QAAA0W,EAAAzyB,EAAAh0D,EAAA0mF,EAAA1yB,EAAAt1D,EAAAioF,EAAAI,EAAArhC,GAAAqY,GAAAjhE,EAAAizE,KAIA,MADAtnF,GAAAghB,SAAA,IAAA8jD,EACA9kE,GAEA8I,GAAA66C,SAAAv/C,KAAA,WAeA,QAAAA,GAAA8R,GACAA,EAAAkR,GAAA21E,EAAAwB,GAAAn3E,GAAAo3E,GAAA,QAAAC,GAAAr3E,GAAA,gBAAAs3E,GAAAt3E,GAAA41E,EAAA2B,GAoGA,QAAAC,GAAAz+E,GACA,QAAAA,EAAA,GAAA0+E,EAAA18F,GAAA08F,EAAA/lD,GAAA34B,EAAA,GAAA0+E,EAAAv8F,GAAAu8F,EAAA/lD,GAEA,QAAA3wC,GAAA0+C,GACA,OAAAA,EAAA,GAAAg4C,EAAA/lD,EAAA+lD,EAAA18F,EAAA0kD,EAAA,GAAAg4C,EAAA/lD,EAAA+lD,EAAAv8F,GAEA,QAAAw8F,GAAAzqF,GACAwqF,EAAA/lD,EAAApoC,KAAAnO,IAAA6P,EAAA,GAAA1B,KAAAlO,IAAA4P,EAAA,GAAAiC,IAEA,QAAA0qF,GAAA5+E,EAAA0mC,GACAA,EAAA1+C,EAAA0+C,GACAg4C,EAAA18F,GAAAge,EAAA,GAAA0mC,EAAA,GACAg4C,EAAAv8F,GAAA6d,EAAA,GAAA0mC,EAAA,GAEA,QAAAm4C,GAAAh4D,EAAA7mB,EAAA0mC,EAAA/N,GACA9R,EAAAzwB,WACApU,EAAA08F,EAAA18F,EACAG,EAAAu8F,EAAAv8F,EACAw2C,EAAA+lD,EAAA/lD,GAEAgmD,EAAApuF,KAAAkvB,IAAA,EAAAkZ,IACAimD,EAAAE,EAAA9+E,EAAA0mC,GACA7f,EAAAl+B,GAAAyK,OAAAyzB,GACAhmB,EAAA,IAAAgmB,IAAAz/B,aAAAyZ,aACAgmB,EAAA7oC,KAAAiG,EAAA4/C,OAEA,QAAA8qC,KACA3lE,KAAA9W,OAAAo5C,EAAAxiD,QAAAmL,IAAA,SAAAjS,GACA,OAAAA,EAAA08F,EAAA18F,GAAA08F,EAAA/lD,IACO1kC,IAAAq3C,EAAAqiB,SACPzkD,KAAAhX,OAAA63C,EAAAjhD,QAAAmL,IAAA,SAAA9R,GACA,OAAAA,EAAAu8F,EAAAv8F,GAAAu8F,EAAA/lD,IACO1kC,IAAA81C,EAAA4jB,SAEP,QAAAoxB,GAAAlqC,GACAmqC,KAAAnqC,GACAlyD,KAAA,cAGA,QAAAs8F,GAAApqC,GACA85B,IACA95B,GACAlyD,KAAA,OACAiG,MAAA81F,EAAA/lD,EACAnO,WAAAk0D,EAAA18F,EAAA08F,EAAAv8F,KAGA,QAAA+8F,GAAArqC,KACAmqC,IAAAnqC,GACAlyD,KAAA,YACOm8F,EAAA,MAEP,QAAAV,KAIA,QAAArB,KACAI,EAAA,EACAyB,EAAAj2F,GAAAm+B,MAAAD,GAAAs4D,GACAF,EAAApqC,GAEA,QAAAwoC,KACArvB,EAAA/mD,GAAAm4E,EAAA,MAAAn4E,GAAAo4E,EAAA,MACA7B,EAAAL,GACA+B,EAAArqC,GAXA,GAAAhuB,GAAAxmC,KAAAw0D,EAAAhR,EAAAwR,GAAAxuB,EAAArmC,WAAA28F,EAAA,EAAAnvB,EAAArlE,GAAAyK,OAAAo/C,EAAA3rB,IAAA5f,GAAAm4E,EAAArC,GAAA91E,GAAAo4E,EAAAhC,GAAA8B,EAAAV,EAAA91F,GAAAm+B,MAAAD,IAAA22D,EAAA7iC,GAAA9zB,EACAy4D,IAAAthG,KAAA6oC,GACAk4D,EAAAlqC,GAYA,QAAA2pC,KAKA,QAAAe,KACA,GAAA5C,GAAAh0F,GAAAg0F,QAAA91D,EAKA,OAJA1wB,GAAAuoF,EAAA/lD,EACAgkD,EAAAhyF,QAAA,SAAA2lB,GACAA,EAAA6rC,aAAAqjC,OAAAlvE,EAAA6rC,YAAAsiC,EAAAnuE,MAEAqsE,EAEA,QAAA8C,KACA,GAAA9/F,GAAAgJ,GAAAk7C,MAAAlkD,MACAgJ,IAAAyK,OAAAzT,GAAAsnB,GAAAy4E,EAAA3C,GAAA91E,GAAA04E,EAAAtC,GACAtjF,EAAAxH,KAAA5S,EAEA,QADAigG,GAAAj3F,GAAAk7C,MAAAsX,eACAt7D,EAAA,EAAAT,EAAAwgG,EAAA9/F,OAA2CD,EAAAT,IAAOS,EAClD2/F,EAAAI,EAAA//F,GAAAs8D,YAAA,IAEA,IAAAwgC,GAAA4C,IAAAz+B,EAAArgD,KAAAqgD,KACA,QAAA67B,EAAA78F,OAAA,CACA,GAAAghE,EAAA++B,EAAA,KACA,GAAA7/E,GAAA28E,EAAA,EACAkC,GAAAh4D,EAAA7mB,EAAAw/E,EAAAx/E,EAAAm8C,YAAA5rD,KAAA0zD,MAAA1zD,KAAAkxD,IAAAi9B,EAAA/lD,GAAApoC,KAAAi7E,KAAA,GACAv2B,IAEA4qC,EAAA/+B,MACS,IAAA67B,EAAA78F,OAAA,GACT,GAAAkgB,GAAA28E,EAAA,GAAA3pB,EAAA2pB,EAAA,GAAAvlF,EAAA4I,EAAA,GAAAgzD,EAAA,GAAAl9D,EAAAkK,EAAA,GAAAgzD,EAAA,EACA8sB,GAAA1oF,IAAAtB,KAGA,QAAAinF,KACA,GAAA5uB,GAAA4xB,EAAA3xB,EAAA4xB,EAAArD,EAAAh0F,GAAAg0F,QAAA91D,EACAy4D,IAAAthG,KAAA6oC,EACA,QAAAhnC,GAAA,EAAAT,EAAAu9F,EAAA78F,OAA2CD,EAAAT,IAAOS,EAAAmgG,EAAA,KAElD,GADA5xB,EAAAuuB,EAAA98F,GACAmgG,EAAAR,EAAApxB,EAAAjS,YAAA,CACA,GAAA4jC,EAAA,KACA5xB,GAAAC,EAAA2xB,EAAAC,EAGA,GAAAA,EAAA,CACA,GAAAC,MAAA7xB,EAAA,GAAAD,EAAA,IAAA8xB,KAAA7xB,EAAA,GAAAD,EAAA,IAAA8xB,EAAA5pF,EAAAypF,GAAAvvF,KAAAm6B,KAAAu1D,EAAAH,EACA3xB,OAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA2xB,MAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACArB,EAAAtoF,EAAAF,GAEA0pF,EAAA,KACAjB,EAAAzwB,EAAA4xB,GACAd,EAAApqC,GAEA,QAAAwoC,KACA,GAAA10F,GAAAk7C,MAAA84C,QAAA78F,OAAA,CAEA,OADA8/F,GAAAj3F,GAAAk7C,MAAAsX,eACAt7D,EAAA,EAAAT,EAAAwgG,EAAA9/F,OAA6CD,EAAAT,IAAOS,QACpD2/F,GAAAI,EAAA//F,GAAAs8D,WAEA,QAAAA,KAAAqjC,GACA,WAAAD,KAGA52F,GAAA2N,UAAAyD,GAAAkN,GAAAi5E,EAAA,MACAlyB,EAAA/mD,GAAA21E,EAAAwB,GAAAn3E,GAAA41E,EAAA2B,GACAhB,IACA0B,EAAArqC,GAlEA,GAA4E1+C,GAA5E0wB,EAAAxmC,KAAAw0D,EAAAhR,EAAAwR,GAAAxuB,EAAArmC,WAAAg/F,KAA4EM,EAAA,EAAAI,EAAA,SAAAv3F,GAAAk7C,MAAAsX,eAAA,GAAAgB,WAAAujC,EAAA,YAAAQ,EAAAP,EAAA,WAAAO,EAAAnmF,KAAAi0D,EAAArlE,GAAAyK,OAAAyzB,GAAA22D,EAAA7iC,GAAA9zB,EAC5E44D,KACAV,EAAAlqC,GACAmZ,EAAA/mD,GAAA21E,EAAA,MAAA31E,GAAA41E,EAAA4C,GAkEA,QAAAnB,KACA,GAAAzpC,GAAAhR,EAAAwR,GAAAh1D,KAAAG,UACA2/F,GAAArsE,aAAAqsE,IAAyDb,GAAAthG,KAAAqC,MACzD+/F,EAAA3B,EAAAK,EAAA1gD,GAAAz1C,GAAAm+B,MAAAzmC,OAAA0+F,EAAAlqC,IACAsrC,EAAApsE,WAAA,WACAosE,EAAA,KACAjB,EAAArqC,IACO,IACPI,IACA0pC,EAAApuF,KAAAkvB,IAAA,OAAA4gE,MAAA3B,EAAA/lD,GACAimD,EAAAE,EAAAsB,GACAnB,EAAApqC,GAEA,QAAA0pC,KACA,GAAAv+E,GAAArX,GAAAm+B,MAAAzmC,MAAAs4C,EAAApoC,KAAAkxD,IAAAi9B,EAAA/lD,GAAApoC,KAAAi7E,GACAqT,GAAAx+F,KAAA2f,EAAAy+E,EAAAz+E,GAAArX,GAAAk7C,MAAAy8C,SAAA/vF,KAAAC,KAAAmoC,GAAA,EAAApoC,KAAA0zD,MAAAtrB,GAAA,GA3QA,GAIKynD,GAAAtB,EAAA1gD,EAAA+hD,EAAAN,EAAAv0C,EAAAtiC,EAAA+gC,EAAA7gC,EAJLw1E,GACA18F,EAAA,EACAG,EAAA,EACAw2C,EAAA,GACKz1C,GAAA,SAAA+O,EAAAsuF,GAAA1/E,EAAA,IAAAm+E,EAAA,EAAApC,EAAA,iBAAAwC,EAAA,iBAAAC,EAAA,eAAAxC,EAAA,kBAAAh5C,EAAAuR,EAAAnxD,EAAA,6BAyQL,OAxQAo6F,MACAA,GAAA,WAAA9G,KAAA8I,GAAA,WACA,OAAA13F,GAAAk7C,MAAA28C,QAAA73F,GAAAk7C,MAAA48C,UAAA,QACO,yBAAAlJ,KAAA8I,GAAA,WACP,MAAA13F,IAAAk7C,MAAA68C,YACO,eAAAL,GAAA,WACP,OAAA13F,GAAAk7C,MAAA88C,QACO,wBAKP18F,EAAA4/C,MAAA,SAAA9tC,GACAA,EAAA1C,KAAA,WACA,GAAAwhD,GAAAhR,EAAAwR,GAAAh1D,KAAAG,WAAAogG,EAAAlC,CACAmC,IACAl4F,GAAAyK,OAAA/S,MAAA+G,aAAAiM,KAAA,wBACAqrF,EAAAr+F,KAAA+V,YACApU,EAAA,EACAG,EAAA,EACAw2C,EAAA,GAEAomD,EAAAlqC,KACWihC,MAAA,uBACX,GAAA1+E,GAAAlU,EAAA,GAAA4S,EAAA5S,EAAA,GAAA8pB,EAAA8xE,IAAA,GAAA1nF,EAAA,EAAA6V,EAAA6xE,IAAA,GAAAhpF,EAAA,EAAAjW,EAAA8I,GAAAi1F,kBAAA5wE,EAAA0xE,EAAA18F,GAAA08F,EAAA/lD,GAAA1rB,EAAAyxE,EAAAv8F,GAAAu8F,EAAA/lD,EAAAvhC,EAAAsnF,EAAA/lD,KAAA3rB,EAAA4zE,EAAA5+F,GAAA4+F,EAAAjoD,GAAA1rB,EAAA2zE,EAAAz+F,GAAAy+F,EAAAjoD,EAAAvhC,EAAAwpF,EAAAjoD,GACA,iBAAAroB,GACA,GAAAo2B,GAAA7mD,EAAAywB,GAAAqoB,EAAAvhC,EAAAsvC,EAAA,EACArmD,MAAA+V,UAAAsoF,GACA18F,EAAAgrB,EAAA05B,EAAA,GAAA/N,EACAx2C,EAAA8qB,EAAAy5B,EAAA,GAAA/N,EACAA,KAEAsmD,EAAApqC,MAEWxhD,KAAA,4BACX6rF,EAAArqC,KACWxhD,KAAA,sBACX6rF,EAAArqC,MAGAx0D,KAAA+V,UAAAsoF,EACAK,EAAAlqC,GACAoqC,EAAApqC,GACAqqC,EAAArqC,OAIA5wD,EAAAumC,UAAA,SAAAgpB,GACA,MAAAhzD,WAAAV,QACA4+F,GACA18F,GAAAwxD,EAAA,GACArxD,GAAAqxD,EAAA,GACA7a,EAAA+lD,EAAA/lD,GAEAg2C,IACA1qF,IAPAy6F,EAAA18F,EAAA08F,EAAAv8F,IASA8B,EAAA2E,MAAA,SAAA4qD,GACA,MAAAhzD,WAAAV,QACA4+F,GACA18F,EAAA08F,EAAA18F,EACAG,EAAAu8F,EAAAv8F,EACAw2C,EAAA,MAEAgmD,GAAAnrC,GACAm7B,IACA1qF,GARAy6F,EAAA/lD,GAUA10C,EAAAgO,YAAA,SAAAuhD,GACA,MAAAhzD,WAAAV,QACAmS,EAAA,MAAAuhD,EAAA+sC,KAAA/sC,EAAA,IAAAA,EAAA,IACAvvD,GAFAgO,GAIAhO,EAAAm6C,OAAA,SAAAoV,GACA,MAAAhzD,WAAAV,QACAs+C,EAAAoV,OAAA,IAAAA,EAAA,IACAvvD,GAFAm6C,GAIAn6C,EAAAf,KAAA,SAAAswD,GACA,MAAAhzD,WAAAV,QACAoD,EAAAswD,OAAA,IAAAA,EAAA,IACAvvD,GAFAf,GAIAe,EAAA4c,SAAA,SAAA2yC,GACA,MAAAhzD,WAAAV,QACA+gB,GAAA2yC,EACAvvD,GAFA4c,GAIA5c,EAAAjC,EAAA,SAAAiwD,GACA,MAAAzxD,WAAAV,QACAkpB,EAAAipC,EACA3G,EAAA2G,EAAAt/C,OACA+rF,GACA18F,EAAA,EACAG,EAAA,EACAw2C,EAAA,GAEA10C,GARA+kB,GAUA/kB,EAAA9B,EAAA,SAAA8vD,GACA,MAAAzxD,WAAAV,QACAopB,EAAA+oC,EACAlI,EAAAkI,EAAAt/C,OACA+rF,GACA18F,EAAA,EACAG,EAAA,EACAw2C,EAAA,GAEA10C,GARAilB,GAoKAvgB,GAAA83D,OAAAx8D,EAAA4/C,EAAA,MAEA,IAAAw8C,IAAAhC,GAAAkC,IAAA,EAAAzoF,IACAnP,IAAA9G,MAAAo7D,GAEAA,GAAA5+D,UAAAyW,SAAA,WACA,MAAAzU,MAAAioD,MAAA,IAEA3/C,GAAAi2D,IAAA1B,EAIA,IAAA4jC,IAAA5jC,GAAA7+D,UAAA,GAAA4+D,GACA6jC,IAAAv4C,SAAA,SAAA5P,GAEA,MADAA,GAAApoC,KAAAkvB,IAAA,GAAAj/B,UAAAV,OAAA64C,EAAA,GACA,GAAAukB,IAAA78D,KAAA6S,EAAA7S,KAAA6T,EAAA7T,KAAAqmD,EAAA/N,IAEAmoD,GAAAC,OAAA,SAAApoD,GAEA,MADAA,GAAApoC,KAAAkvB,IAAA,GAAAj/B,UAAAV,OAAA64C,EAAA,GACA,GAAAukB,IAAA78D,KAAA6S,EAAA7S,KAAA6T,EAAAykC,EAAAt4C,KAAAqmD,IAEAo6C,GAAAx4C,IAAA,WACA,MAAA+U,IAAAh9D,KAAA6S,EAAA7S,KAAA6T,EAAA7T,KAAAqmD,IAqBA/9C,GAAAy9E,IAAA1oB,EAIA,IAAAsjC,IAAAtjC,GAAAr/D,UAAA,GAAA4+D,GACA+jC,IAAAz4C,SAAA,SAAA5P,GACA,UAAA+kB,IAAAr9D,KAAA6S,EAAA7S,KAAAulC,EAAAr1B,KAAAlO,IAAA,IAAAhC,KAAAqmD,EAAAu6C,IAAAzgG,UAAAV,OAAA64C,EAAA,MAEAqoD,GAAAD,OAAA,SAAApoD,GACA,UAAA+kB,IAAAr9D,KAAA6S,EAAA7S,KAAAulC,EAAAr1B,KAAAnO,IAAA,EAAA/B,KAAAqmD,EAAAu6C,IAAAzgG,UAAAV,OAAA64C,EAAA,MAEAqoD,GAAA14C,IAAA,WACA,MAAAwV,IAAAz9D,KAAA6S,EAAA7S,KAAAulC,EAAAvlC,KAAAqmD,GAAA4B,OAOA3/C,GAAAm+E,IAAAnpB,EAIA,IAAAsjC,IAAA,GACA/iC,GAAA,OAAAC,GAAA,EAAAC,GAAA,QACA8iC,GAAAvjC,GAAAt/D,UAAA,GAAA4+D,GACAikC,IAAA34C,SAAA,SAAA5P,GACA,UAAAglB,IAAAptD,KAAAlO,IAAA,IAAAhC,KAAAqmD,EAAAu6C,IAAAzgG,UAAAV,OAAA64C,EAAA,IAAAt4C,KAAAI,EAAAJ,KAAAsgB,IAEAugF,GAAAH,OAAA,SAAApoD,GACA,UAAAglB,IAAAptD,KAAAnO,IAAA,EAAA/B,KAAAqmD,EAAAu6C,IAAAzgG,UAAAV,OAAA64C,EAAA,IAAAt4C,KAAAI,EAAAJ,KAAAsgB,IAEAugF,GAAA54C,IAAA,WACA,MAAA0V,IAAA39D,KAAAqmD,EAAArmD,KAAAI,EAAAJ,KAAAsgB,IAqBAhY,GAAA2/C,IAAAmV,EAUA,IAAA0jC,IAAA1jC,GAAAp/D,UAAA,GAAA4+D,GACAkkC,IAAA54C,SAAA,SAAA5P,GACAA,EAAApoC,KAAAkvB,IAAA,GAAAj/B,UAAAV,OAAA64C,EAAA,EACA,IAAAuP,GAAA7nD,KAAA6nD,EAAAnyC,EAAA1V,KAAA0V,EAAA4K,EAAAtgB,KAAAsgB,EAAA9gB,EAAA,EACA,OAAAqoD,IAAAnyC,GAAA4K,GACAunC,KAAAroD,IAAAqoD,EAAAroD,GACAkW,KAAAlW,IAAAkW,EAAAlW,GACA8gB,KAAA9gB,IAAA8gB,EAAA9gB,GACA,GAAA49D,IAAAltD,KAAAlO,IAAA,IAAA6lD,EAAAvP,GAAApoC,KAAAlO,IAAA,IAAA0T,EAAA4iC,GAAApoC,KAAAlO,IAAA,IAAAse,EAAAg4B,KAJA,GAAA8kB,IAAA59D,QAMAshG,GAAAJ,OAAA,SAAApoD,GAEA,MADAA,GAAApoC,KAAAkvB,IAAA,GAAAj/B,UAAAV,OAAA64C,EAAA,GACA,GAAA8kB,IAAA9kB,EAAAt4C,KAAA6nD,EAAAvP,EAAAt4C,KAAA0V,EAAA4iC,EAAAt4C,KAAAsgB,IAEAwgF,GAAAviC,IAAA,WACA,MAAAxB,IAAA/8D,KAAA6nD,EAAA7nD,KAAA0V,EAAA1V,KAAAsgB,IAEAwgF,GAAArsF,SAAA,WACA,UAAA6pD,GAAAt+D,KAAA6nD,GAAAyW,GAAAt+D,KAAA0V,GAAA4oD,GAAAt+D,KAAAsgB,GAmEA,IAAAq+C,IAAAr2D,GAAAsL,KACAmtF,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACA3tB,IAAA,SACA4tB,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAEAtrC,IAAAr0D,QAAA,SAAA3K,EAAAvB,GACAugE,GAAAjnC,IAAA/3B,EAAAy+D,GAAAhgE,MAOAkK,GAAA4hG,QAAAprC,GACAx2D,GAAA0uC,IAAA+nB,GAAAjL,GA4FAxrD,GAAA6hG,IAAA,SAAAC,EAAAvzD,GAEA,QAAAszD,GAAAvzD,EAAAyiD,EAAA/kE,GACAn0B,UAAAV,OAAA,IAAA60B,EAAA+kE,IAAA,KACA,IAAAriD,GAAAgoB,GAAApoB,EAAAC,EAAA,MAAAwiD,EAAAliD,EAAAkzD,EAAAhR,GAAA/kE,EAIA,OAHA0iB,GAAAqiD,IAAA,SAAAlmC,GACA,MAAAhzD,WAAAV,OAAAu3C,EAAAG,SAAA,OAAAkiD,EAAAlmC,GAAAhc,EAAAkzD,EAAAl3C,IAAAkmC,GAEAriD,EAEA,QAAAG,GAAAgoB,GACA,MAAAgrC,GAAAx1E,MAAAwqC,EAAA/nB,cAEA,QAAAizD,GAAAl2E,GACA,gBAAAgrC,GACA,MAAAgrC,GAAAx1E,MAAAwqC,EAAA/nB,aAAAjjB,IA+EA,QAAAm2E,GAAAjR,GACA,MAAAA,GAAAzlF,IAAA22F,GAAApoC,KAAAioC,GAEA,QAAAG,GAAAl9F,GACA,MAAAm9F,GAAAjzC,KAAAlqD,GAAA,IAAAA,EAAA6D,QAAA,gBAAA7D,EAjGA,GAAAm9F,GAAA,GAAA3zC,QAAA,KAAAuzC,EAAA,OAAAK,EAAAL,EAAAnmC,WAAA,EAmGA,OAlFAkmC,GAAAx1E,MAAA,SAAAtnB,EAAA8mB,GACA,GAAAxkB,EACA,OAAAw6F,GAAAryD,UAAAzqC,EAAA,SAAAgsF,EAAA75F,GACA,GAAAmQ,EAAA,MAAAA,GAAA0pF,EAAA75F,EAAA,EACA,IAAAY,GAAA,GAAA60B,UAAA,eAA2CokE,EAAAzlF,IAAA,SAAAmmC,EAAAv6C,GAC3C,MAAAg4C,MAAAkzD,UAAA3wD,GAAA,OAAAv6C,EAAA,MACS2iE,KAAA,SACTxyD,GAAAwkB,EAAA,SAAAklE,EAAA75F,GACA,MAAA20B,GAAA/zB,EAAAi5F,GAAA75F,IACSY,KAGT+pG,EAAAryD,UAAA,SAAAzqC,EAAA8mB,GAEA,QAAAw2E,KACA,GAAArjC,GAAA2W,EAAA,MAAA2sB,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CACA,IAAA7oE,GAAAqlC,CACA,SAAAj6D,EAAA42D,WAAAhiC,GAAA,CAEA,IADA,GAAAziC,GAAAyiC,EACAziC,IAAAy+E,GACA,QAAA5wE,EAAA42D,WAAAzkE,GAAA,CACA,QAAA6N,EAAA42D,WAAAzkE,EAAA,WACAA,EAGA8nE,EAAA9nE,EAAA,CACA,IAAA+lC,GAAAl4B,EAAA42D,WAAAzkE,EAAA,EAOA,OANA,MAAA+lC,GACAslE,GAAA,EACA,KAAAx9F,EAAA42D,WAAAzkE,EAAA,MAAA8nE,GACW,KAAA/hC,IACXslE,GAAA,GAEAx9F,EAAAiH,MAAA2tB,EAAA,EAAAziC,GAAA0R,QAAA,WAEA,KAAAo2D,EAAA2W,GAAA,CACA,GAAA14C,GAAAl4B,EAAA42D,WAAAqD,KAAAhvB,EAAA,CACA,SAAA/S,EAAAslE,GAAA,MAAmC,SAAAtlE,EACnCslE,GAAA,EACA,KAAAx9F,EAAA42D,WAAAqD,WAAAhvB,OACW,IAAA/S,IAAAklE,EAAA,QACX,OAAAp9F,GAAAiH,MAAA2tB,EAAAqlC,EAAAhvB,GAEA,MAAAjrC,GAAAiH,MAAA2tB,GAEA,IAjCA,GAA4BhS,GAAA46E,EAA5BC,KAAkBF,KAAU5oE,KAAAi8C,EAAA5wE,EAAA5N,OAAA6nE,EAAA,EAAAvoE,EAAA,GAiC5BkxB,EAAA06E,OAAAC,GAAA,CAEA,IADA,GAAAxqG,MACA6vB,IAAA66E,GAAA76E,IAAA26E,GACAxqG,EAAA8R,KAAA+d,GACAA,EAAA06E,GAEAx2E,IAAA,OAAA/zB,EAAA+zB,EAAA/zB,EAAArB,OACAijC,EAAA9vB,KAAA9R,GAEA,MAAA4hC,IAEAmoE,EAAAhzF,OAAA,SAAA6qB,GACA,GAAAnyB,MAAAD,QAAAoyB,EAAA,UAAAmoE,GAAAY,WAAA/oE,EACA,IAAAgpE,GAAA,GAAAn3C,GAAAo3C,IAQA,OAPAjpE,GAAA13B,QAAA,SAAA+uF,GACA,OAAA6R,KAAA7R,GACA2R,EAAA75C,IAAA+5C,IACAD,EAAA/4F,KAAA84F,EAAA96E,IAAAg7E,OAIAD,EAAAr3F,IAAA22F,GAAApoC,KAAAioC,IAAA32F,OAAAuuB,EAAApuB,IAAA,SAAAylF,GACA,MAAA4R,GAAAr3F,IAAA,SAAAs3F,GACA,MAAAX,GAAAlR,EAAA6R,MACS/oC,KAAAioC,MACFjoC,KAAA,OAEPgoC,EAAAY,WAAA,SAAA/oE,GACA,MAAAA,GAAApuB,IAAA02F,GAAAnoC,KAAA,OAQAgoC,GAEA7hG,GAAAyvC,IAAAzvC,GAAA6hG,IAAA,gBACA7hG,GAAA0vC,IAAA1vC,GAAA6hG,IAAA,iCACA,IAAAxpC,IAAAD,GAAAE,GAAAC,GAAAC,GAAA9gE,KAAAi0D,EAAAj0D,KAAA,oCAAAs0B,GACAZ,WAAAY,EAAA,IAEAhsB,IAAAisB,MAAA,WACA+rC,GAAApgE,MAAAF,KAAAG,YAiCAmI,GAAAisB,MAAAZ,MAAA,WACAqtC,KACAC,MA0BA34D,GAAAkmC,MAAA,SAAA7sC,EAAA5C,GACA,MAAAA,GAAAmR,KAAAs+B,MAAA7sC,GAAA5C,EAAAmR,KAAAkvB,IAAA,GAAArgC,OAAAmR,KAAAs+B,MAAA7sC,GAEA,IAAAwpG,KAAA,uEAAAv3F,IAAA0tD,GACAh5D,IAAA26D,aAAA,SAAA7kE,EAAAskE,GACA,GAAAljE,GAAA,CAOA,QANApB,QACAA,EAAA,IAAAA,IAAA,GACAskE,IAAAtkE,EAAAkK,GAAAkmC,MAAApwC,EAAA+iE,GAAA/iE,EAAAskE,KACAljE,EAAA,EAAA0Q,KAAA0zD,MAAA,MAAA1zD,KAAAkxD,IAAAhjE,GAAA8R,KAAAmxD,MACA7hE,EAAA0Q,KAAAnO,KAAA,GAAAmO,KAAAlO,IAAA,KAAAkO,KAAA0zD,OAAApkE,EAAA,SAEA2rG,GAAA,EAAA3rG,EAAA,GAwGA,IAAA6iE,IAAA,yEACAO,GAAAt6D,GAAAsL,KACA0M,EAAA,SAAA3e,GACA,MAAAA,GAAA8S,SAAA,IAEA8wB,EAAA,SAAA5jC,GACA,MAAAm+B,QAAAsrE,aAAAzpG,IAEAgO,EAAA,SAAAhO,GACA,MAAAA,GAAA8S,SAAA,IAEA9S,EAAA,SAAAA,GACA,MAAAA,GAAA8S,SAAA,KAEAsxD,EAAA,SAAApkE,GACA,MAAAA,GAAA8S,SAAA,IAAAy/C,eAEAx+C,EAAA,SAAA/T,EAAAge,GACA,MAAAhe,GAAA0pG,YAAA1rF,IAEAmO,EAAA,SAAAnsB,EAAAge,GACA,MAAAhe,GAAA2pG,cAAA3rF,IAEAwU,EAAA,SAAAxyB,EAAAge,GACA,MAAAhe,GAAAkZ,QAAA8E,IAEAkoC,EAAA,SAAAlmD,EAAAge,GACA,OAAAhe,EAAA2G,GAAAkmC,MAAA7sC,EAAAw/D,GAAAx/D,EAAAge,KAAA9E,QAAA3K,KAAAnO,IAAA,EAAAmO,KAAAlO,IAAA,GAAAm/D,GAAAx/D,GAAA,SAAAge,SAMA4nD,GAAAj/D,GAAA8R,QAA4BopD,GAAApjD,IAI5BijD,IAAArlE,WACAwlB,QAAA,WACA,MAAAxjB,MAAAmzD,EAAAo4C,cAEAhoF,OAAA,WACA,MAAAvjB,MAAAmzD,EAAAq4C,aAEA9pD,YAAA,WACA,MAAA1hD,MAAAmzD,EAAAs4C,kBAEAnoF,SAAA,WACA,MAAAtjB,MAAAmzD,EAAAu4C,eAEAvoF,gBAAA,WACA,MAAAnjB,MAAAmzD,EAAAw4C,sBAEAtoF,WAAA,WACA,MAAArjB,MAAAmzD,EAAAy4C,iBAEAnoF,SAAA,WACA,MAAAzjB,MAAAmzD,EAAA04C,eAEAzoF,WAAA,WACA,MAAApjB,MAAAmzD,EAAA24C,iBAEAltD,QAAA,WACA,MAAA5+C,MAAAmzD,EAAAvU,WAEAkqB,kBAAA,WACA,UAEA3Y,QAAA,WACA,MAAAnwD,MAAAmzD,EAAAhD,WAEA47C,QAAA,WACAC,GAAAC,WAAA/rG,MAAAF,KAAAmzD,EAAAhzD,YAEA+rG,OAAA,WACAF,GAAAG,UAAAjsG,MAAAF,KAAAmzD,EAAAhzD,YAEAwkE,YAAA,WACAqnC,GAAAI,eAAAlsG,MAAAF,KAAAmzD,EAAAhzD,YAEA2kE,SAAA,WACAknC,GAAAK,YAAAnsG,MAAAF,KAAAmzD,EAAAhzD,YAEAmsG,gBAAA,WACAN,GAAAO,mBAAArsG,MAAAF,KAAAmzD,EAAAhzD,YAEAqsG,WAAA,WACAR,GAAAS,cAAAvsG,MAAAF,KAAAmzD,EAAAhzD,YAEAusG,SAAA,WACAV,GAAAW,YAAAzsG,MAAAF,KAAAmzD,EAAAhzD,YAEAysG,WAAA,WACAZ,GAAAa,cAAA3sG,MAAAF,KAAAmzD,EAAAhzD,YAEA2sG,QAAA,WACAd,GAAAc,QAAA5sG,MAAAF,KAAAmzD,EAAAhzD,YAGA,IAAA6rG,IAAA5rF,KAAApiB,SA6DAupE,IAAAovB,KAAApzB,GAAA,SAAAxoD,GAGA,MAFAA,GAAAwsD,GAAAwlC,IAAAhyF,GACAA,EAAA2xF,SAAA,KACA3xF,GACG,SAAAA,EAAAisC,GACHjsC,EAAA4pD,YAAA5pD,EAAA2mC,cAAAsF,IACG,SAAAjsC,GACH,MAAAA,GAAA2mC,gBAEA6lB,GAAAylC,MAAAzlC,GAAAovB,KAAAluF,MACA8+D,GAAAylC,MAAAhqF,IAAAukD,GAAAovB,KAAA3zE,IAAAva,MACA8+D,GAAAwlC,IAAAxpC,GAAA,SAAAxoD,GACA,GAAAgyF,GAAA,GAAAvpC,IAAA,MAEA,OADAupC,GAAApoC,YAAA5pD,EAAA2mC,cAAA3mC,EAAA0I,WAAA1I,EAAAyI,WACAupF,GACG,SAAAhyF,EAAAisC,GACHjsC,EAAAgxF,QAAAhxF,EAAAyI,UAAAwjC,IACG,SAAAjsC,GACH,MAAAA,GAAAyI,UAAA,IAEA+jD,GAAAd,KAAAc,GAAAwlC,IAAAtkG,MACA8+D,GAAAd,KAAAzjD,IAAAukD,GAAAwlC,IAAA/pF,IAAAva,MACA8+D,GAAAC,UAAA,SAAAzsD,GACA,GAAA47E,GAAApvB,GAAAovB,KAAA57E,EACA,OAAA7K,MAAA0zD,OAAA7oD,EAAA47E,EAAA,KAAA57E,EAAA+tD,oBAAA6tB,EAAA7tB,sBAAA,SAEA,wEAAAx+D,QAAA,SAAAyiG,EAAAvtG,GACAA,EAAA,EAAAA,CACA,IAAA8X,GAAAiwD,GAAAwlC,GAAAxpC,GAAA,SAAAxoD,GAEA,OADAA,EAAAwsD,GAAAwlC,IAAAhyF,IAAAgxF,QAAAhxF,EAAAyI,WAAAzI,EAAAwI,SAAA/jB,GAAA,GACAub,GACK,SAAAA,EAAAisC,GACLjsC,EAAAgxF,QAAAhxF,EAAAyI,UAAA,EAAAtT,KAAA0zD,MAAA5c,KACK,SAAAjsC,GACL,GAAAgyF,GAAAxlC,GAAAovB,KAAA57E,GAAAwI,QACA,OAAArT,MAAA0zD,OAAA2D,GAAAC,UAAAzsD,IAAAgyF,EAAAvtG,GAAA,OAAAutG,IAAAvtG,IAEA+nE,IAAAwlC,EAAA,KAAAz1F,EAAA7O,MACA8+D,GAAAwlC,EAAA,KAAA/pF,IAAA1L,EAAA0L,IAAAva,MACA8+D,GAAAwlC,EAAA,mBAAAhyF,GACA,GAAAgyF,GAAAxlC,GAAAovB,KAAA57E,GAAAwI,QACA,OAAArT,MAAA0zD,OAAA2D,GAAAC,UAAAzsD,IAAAgyF,EAAAvtG,GAAA,SAGA+nE,GAAA0lC,KAAA1lC,GAAA2lC,OACA3lC,GAAA4lC,MAAA5lC,GAAA2lC,OAAAzkG,MACA8+D,GAAA4lC,MAAAnqF,IAAAukD,GAAA2lC,OAAAlqF,IAAAva,MACA8+D,GAAA6lC,WAAA7lC,GAAAE,YAyNA,IAAAvD,KACAmpC,IAAA,GACAl6C,EAAA,IACAm6C,EAAA,KACG1kC,GAAA,UAAAM,GAAA,IAkGH5gE,IAAAm5D,OAAA,SAAAA,GACA,OACA8rC,aAAA/rC,GAAAC,GACA+rC,WAAA1pC,GAAArC,IAGA,IAAAgsC,IAAAnlG,GAAAm5D,QACA7iC,QAAA,IACAgjC,UAAA,IACAE,UAAA,GACAE,UAAA,QACAmE,SAAA,iBACAprD,KAAA,WACAX,KAAA,WACAmsD,SAAA,WACAE,MAAA,wEACAE,WAAA,2CACAE,QAAA,+GACAE,aAAA,0EAEAz+D,IAAA6O,OAAAs2F,GAAAF,aACAjlG,GAAAolG,OAEAtkC,GAAAprE,WACA6V,EAAA,EACAoc,EAAA,EACAC,IAAA,SAAApuB,GACAunE,GAAAvnE,EAAA9B,KAAAiwB,EAAA09E,IACAtkC,GAAAskC,GAAA95F,EAAA7T,KAAA6T,EAAA7T,MACAA,KAAA6T,EAAA7T,KAAAiwB,GAAA09E,GAAA19E,EAA2CjwB,KAAA6T,EAAA85F,GAAA19E,GAE3Ck1B,MAAA,WACAnlD,KAAA6T,EAAA7T,KAAAiwB,EAAA,GAEAkgC,QAAA,WACA,MAAAnwD,MAAA6T,GAGA,IAAA85F,IAAA,GAAAvkC,GAKA9gE,IAAAolG,IAAA33B,OAAA,SAAAnvE,EAAA+tD,GACA/tD,GAAAgnG,GAAA7oG,eAAA6B,EAAAtE,MACAsrG,GAAAhnG,EAAAtE,MAAAsE,EAAA+tD,GAEA6U,GAAA5iE,EAAA+tD,GAQA,IAAAi5C,KACAC,QAAA,SAAAC,EAAAn5C,GACA6U,GAAAskC,EAAArkC,SAAA9U,IAEAo5C,kBAAA,SAAAnnG,EAAA+tD,GAEA,IADA,GAAAq5C,GAAApnG,EAAAonG,SAAAxuG,GAAA,EAAAT,EAAAivG,EAAAvuG,SACAD,EAAAT,GAAAyqE,GAAAwkC,EAAAxuG,GAAAiqE,SAAA9U,KAGA+U,IACAukC,OAAA,SAAArnG,EAAA+tD,GACAA,EAAA8a,UAEAy+B,MAAA,SAAAtnG,EAAA+tD,GACA/tD,IAAAgjE,YACAjV,EAAAhtD,MAAAf,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAunG,WAAA,SAAAvnG,EAAA+tD,GAEA,IADA,GAAAiV,GAAAhjE,EAAAgjE,YAAApqE,GAAA,EAAAT,EAAA6qE,EAAAnqE,SACAD,EAAAT,GAAA6H,EAAAgjE,EAAApqE,GAAAm1D,EAAAhtD,MAAAf,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAwnG,WAAA,SAAAxnG,EAAA+tD,GACAgV,GAAA/iE,EAAAgjE,YAAAjV,EAAA,IAEA05C,gBAAA,SAAAznG,EAAA+tD,GAEA,IADA,GAAAiV,GAAAhjE,EAAAgjE,YAAApqE,GAAA,EAAAT,EAAA6qE,EAAAnqE,SACAD,EAAAT,GAAA4qE,GAAAC,EAAApqE,GAAAm1D,EAAA,IAEA25C,QAAA,SAAA1nG,EAAA+tD,GACAsV,GAAArjE,EAAAgjE,YAAAjV,IAEA45C,aAAA,SAAA3nG,EAAA+tD,GAEA,IADA,GAAAiV,GAAAhjE,EAAAgjE,YAAApqE,GAAA,EAAAT,EAAA6qE,EAAAnqE,SACAD,EAAAT,GAAAkrE,GAAAL,EAAApqE,GAAAm1D,IAEA65C,mBAAA,SAAA5nG,EAAA+tD,GAEA,IADA,GAAA85C,GAAA7nG,EAAA6nG,WAAAjvG,GAAA,EAAAT,EAAA0vG,EAAAhvG,SACAD,EAAAT,GAAAyqE,GAAAilC,EAAAjvG,GAAAm1D,IAeArsD,IAAAolG,IAAAxpG,KAAA,SAAA0C,GAGA,MAFA8nG,IAAA,EACApmG,GAAAolG,IAAA33B,OAAAnvE,EAAAwkE,IACAsjC,GAEA,IAAAA,IAAAzjC,GAAA,GAAA7B,IACAgC,IACAqE,OAAA,WACAi/B,IAAA,EAAAxyC,IAEAv0D,MAAA0sD,EACA0V,UAAA1V,EACA2V,QAAA3V,EACA6V,aAAA,WACAe,GAAA9lB,QACAimB,GAAArB,UAAAK,IAEAD,WAAA,WACA,GAAAjmE,GAAA,EAAA+mE,EACAyjC,KAAAxqG,EAAA,IAAAg4D,GAAAh4D,IACAknE,GAAArB,UAAAqB,GAAApB,QAAAoB,GAAAzjE,MAAA0sD,GAmDA/rD,IAAAolG,IAAAiB,OAAA,WAsBA,QAAAhnG,GAAA2iE,EAAAC,GACAqkC,EAAA18F,KAAAzJ,GAAAgiE,EAAAH,EAAAyF,EAAAzF,IACAC,EAAAsF,MAAAtF,GACAA,EAAAyF,MAAAzF,GAEA,QAAAsJ,GAAAvJ,EAAAC,GACA,GAAA5qD,GAAA0rD,IAAAf,EAAA5M,GAAA6M,EAAA7M,IACA,IAAAoQ,EAAA,CACA,GAAA+gC,GAAArjC,GAAAsC,EAAAnuD,GAAAmvF,GAAAD,EAAA,IAAAA,EAAA,MAAAE,EAAAvjC,GAAAsjC,EAAAD,EACAjjC,IAAAmjC,GACAA,EAAAljC,GAAAkjC,EACA,IAAAvkC,GAAAF,EAAA0kC,EAAAn7F,EAAA22D,EAAA,OAAAykC,EAAAF,EAAA,GAAA7wC,GAAArqD,EAAAk9D,EAAAtmC,GAAA+/B,GAAA,GACA,IAAAuG,GAAAl9D,EAAAm7F,EAAAC,KAAAp7F,EAAAy2D,GAAA,CACA,GAAA4kC,GAAAH,EAAA,GAAA7wC,EACAgxC,GAAAl/B,MAAAk/B,OACS,IAAAD,KAAA,aAAAl+B,GAAAl9D,EAAAm7F,EAAAC,KAAAp7F,EAAAy2D,GAAA,CACT,GAAA4kC,IAAAH,EAAA,GAAA7wC,EACAgxC,GAAAr/B,MAAAq/B,OAEA3kC,GAAAsF,MAAAtF,GACAA,EAAAyF,MAAAzF,EAEAwG,GACAzG,EAAA0kC,EACAv2E,EAAAgyC,EAAAH,GAAA7xC,EAAAgyC,EAAAsF,OAAAzF,GAEA7xC,EAAA6xC,EAAAyF,GAAAt3C,EAAAgyC,EAAAsF,KAAAtF,EAAAH,GAGAyF,GAAAtF,GACAH,EAAAG,MAAAH,GACAA,EAAAyF,MAAAzF,IAEAA,EAAA0kC,EACAv2E,EAAAgyC,EAAAH,GAAA7xC,EAAAgyC,EAAAsF,OAAAzF,GAEA7xC,EAAA6xC,EAAAyF,GAAAt3C,EAAAgyC,EAAAsF,KAAAtF,EAAAH,OAKA3iE,GAAA2iE,EAAAC,EAEAuD,GAAAnuD,EAAAqvF,EAAA1kC,EAEA,QAAAP,KACA8hB,EAAAlkF,MAAAksE,EAEA,QAAA7J,KACAvhE,EAAA,GAAAgiE,EAAAhiE,EAAA,GAAAsnE,EACA8b,EAAAlkF,QACAmmE,EAAA,KAEA,QAAAwJ,GAAAhN,EAAAC,GACA,GAAAuD,EAAA,CACA,GAAAtD,GAAAF,EAAA0kC,CACAG,IAAA1kE,GAAA+/B,GAAA,IAAAA,KAAA,YAAAA,MACO4kC,GAAA9kC,EAAA+kC,EAAA9kC,CACPa,IAAAzjE,MAAA2iE,EAAAC,GACAsJ,EAAAvJ,EAAAC,GAEA,QAAAsE,KACAzD,GAAArB,YAEA,QAAA+E,KACAwI,EAAA83B,EAAAC,GACAjkC,GAAApB,UACAv/B,GAAA0kE,GAAAnjC,KAAAvB,IAAAsF,EAAA,MACAtnE,EAAA,GAAAgiE,EAAAhiE,EAAA,GAAAsnE,EACAjC,EAAA,KAEA,QAAAr1C,GAAAgyC,EAAAsF,GACA,OAAAA,GAAAtF,GAAA,EAAAsF,EAAA,IAAAA,EAEA,QAAAu/B,GAAAlvG,EAAAkgB,GACA,MAAAlgB,GAAA,GAAAkgB,EAAA,GAEA,QAAAivF,GAAA5tG,EAAA8G,GACA,MAAAA,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAA9G,MAAA8G,EAAA,GAAA9G,EAAA8G,EAAA,IAAAA,EAAA,GAAA9G,EAnGA,GAAA8oE,GAAAoF,EAAAE,EAAAC,EAAAg/B,EAAAI,EAAAC,EAAAvhC,EAAAqhC,EAAAP,EAAAnmG,EACAojF,GACAlkF,QACAoiE,YACAC,UACAE,aAAA,WACA2hB,EAAAlkF,MAAA2vE,EACAuU,EAAA9hB,UAAA8E,EACAgd,EAAA7hB,QAAA8E,EACAqgC,EAAA,EACA/jC,GAAAlB,gBAEAC,WAAA,WACAiB,GAAAjB,aACA0hB,EAAAlkF,QACAkkF,EAAA9hB,YACA8hB,EAAA7hB,UACAiB,GAAA,GAAAR,IAAAsF,EAAA,KAAAF,IAAAG,EAAA,KAAsEm/B,EAAAnjC,GAAAgE,EAAA,GAA6Bm/B,GAAAnjC,KAAA6D,GAAA,IACnGpnE,EAAA,GAAAgiE,EAAAhiE,EAAA,GAAAsnE,GAmFA,iBAAA+9B,GACA99B,EAAAD,IAAAtF,EAAAoF,EAAAp4D,KACAm3F,KACAtmG,GAAAolG,IAAA33B,OAAA+3B,EAAAjiB,EACA,IAAA9sF,GAAA6vG,EAAAnvG,MACA,IAAAV,EAAA,CACA6vG,EAAAvuF,KAAAivF,EACA,QAAAhvF,GAAA9gB,EAAA,EAAAY,EAAAwuG,EAAA,GAAAnV,GAAAr5F,GAAyDZ,EAAAT,IAAOS,EAChE8gB,EAAAsuF,EAAApvG,GACA+vG,EAAAjvF,EAAA,GAAAlgB,IAAAmvG,EAAAjvF,EAAA,GAAAlgB,IACAq4B,EAAAr4B,EAAA,GAAAkgB,EAAA,IAAAmY,EAAAr4B,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAkgB,EAAA,IACAmY,EAAAnY,EAAA,GAAAlgB,EAAA,IAAAq4B,EAAAr4B,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAkgB,EAAA,KAEAm5E,EAAAvnF,KAAA9R,EAAAkgB,EAIA,QADAkqD,GACAlqD,EADAkvF,GAAA/3F,IACA1Y,EAAA06F,EAAAh6F,OAAA,EAAAD,EAAA,EAAAY,EAAAq5F,EAAA16F,GAAgES,GAAAT,EAAQqB,EAAAkgB,IAAA9gB,EACxE8gB,EAAAm5E,EAAAj6F,IACAgrE,EAAA/xC,EAAAr4B,EAAA,GAAAkgB,EAAA,KAAAkvF,MAAAhlC,EAAAC,EAAAnqD,EAAA,GAAAyvD,EAAA3vE,EAAA,IAIA,MADAwuG,GAAAnmG,EAAA,KACAgiE,IAAAhzD,KAAAo4D,IAAAp4D,MAAA2S,sBAAAqgD,EAAAoF,IAAAE,EAAAC,QAGA1nE,GAAAolG,IAAA/jE,SAAA,SAAA/iC,GACAulE,GAAAM,GAAAL,GAAAC,GAAAC,GAAAI,GAAAC,GAAAC,GAAAK,GAAAC,GAAAC,GAAA,EACA7kE,GAAAolG,IAAA33B,OAAAnvE,EAAAimE,GACA,IAAAlrE,GAAAsrE,GAAAnrE,EAAAorE,GAAAtb,EAAAub,GAAAnU,EAAAr3D,IAAAG,IAAA8vD,GACA,OAAAoH,GAAA6nB,KACAl/E,EAAA+qE,GAAA5qE,EAAA6qE,GAAA/a,EAAAgb,GACAH,GAAAT,KAAArqE,EAAAyqE,GAAAtqE,EAAAuqE,GAAAza,EAAA0a,KACAtT,EAAAr3D,IAAAG,IAAA8vD,KACAivB,KAAAz2D,UAEAla,KAAA+tD,MAAAn8D,EAAAH,GAAAu8D,GAAA9B,GAAAxK,EAAA1hD,KAAAm6B,KAAA2uB,IAAAkF,IAEA,IAAAiO,IAAAM,GAAAL,GAAAC,GAAAC,GAAAI,GAAAC,GAAAC,GAAAK,GAAAC,GAAAC,GACAN,IACA4C,OAAApb,EACA1sD,MAAAskE,GACAlC,UAAAwC,GACAvC,QAAA8C,GACA5C,aAAA,WACA2C,GAAA9C,UAAAgD,IAEA5C,WAAA,WACA0C,GAAA9C,UAAAwC,KAqRA4M,GAAA9K,GAAAd,GAAAqC,GAAAU,KAAApU,OAAA,IAsPAmY,GAAA,GACA/rE,IAAAolG,IAAAp0B,WAAA,WACA,GAAAruB,GAAAvB,EAAA/gC,EAAAE,EAAAktD,EAAAnI,EAAA0L,GACAvD,OAAA,SAAAwD,GAIA,MAHAxD,OAAAiD,OAAA,GACAjD,EAAAnI,EAAA2L,GACAxD,EAAAiD,OAAA,EACAjD,GAEAzvD,OAAA,SAAA6sC,GACA,MAAAhzD,WAAAV,QACAmuE,EAAAyF,GAAApoB,GAAAkI,EAAA,MAAAzJ,GAAAyJ,EAAA,MAAAxqC,GAAAwqC,EAAA,MAAAtqC,GAAAsqC,EAAA,OACA4iB,MAAAiD,OAAA,EAAAjD,EAAA,MACAuD,KAHAruB,EAAAvB,IAAA/gC,EAAAE,KAMA,OAAAywD,GAAAhzD,SAAA,mBA4JAhe,GAAAolG,IAAA+B,eAAA,WACA,MAAAj7B,IAAAI,MACG1tB,IAAA0tB,GACHtsE,GAAAolG,IAAAgC,OAAA,WACA,MAAApnG,IAAAolG,IAAA+B,iBAAAv6F,QAAA,OAAA6oC,SAAA,UAAA42B,WAAA,YAAApsE,MAAA,OAEAD,GAAAolG,IAAAiC,UAAA,WASA,QAAAA,GAAA/lC,GACA,GAAAjoE,GAAAioE,EAAA,GAAA9nE,EAAA8nE,EAAA,EAGA,OAFAjiE,GAAA,KACAioG,EAAAjuG,EAAAG,GAAA6F,IAAAkoG,EAAAluG,EAAAG,GAAA6F,IAAAmoG,EAAAnuG,EAAAG,GACA6F,EAZA,GAGAA,GAIKioG,EAAAC,EAAAC,EAPLC,EAAAznG,GAAAolG,IAAAgC,SACAM,EAAA1nG,GAAAolG,IAAA+B,iBAAAv6F,QAAA,QAAA6oC,SAAA,SAAA42B,WAAA,QACAs7B,EAAA3nG,GAAAolG,IAAA+B,iBAAAv6F,QAAA,QAAA6oC,SAAA,SAAA42B,WAAA,OACAu7B,GACAvoG,MAAA,SAAAhG,EAAAG,GACA6F,GAAAhG,EAAAG,IAsEA,OA7DA6tG,GAAAriC,OAAA,SAAA1D,GACA,GAAAtxB,GAAAy3D,EAAAxnG,QAAA0nB,EAAA8/E,EAAA5lE,YAAAxoC,GAAAioE,EAAA,GAAA35C,EAAA,IAAAqoB,EAAAx2C,GAAA8nE,EAAA,GAAA35C,EAAA,IAAAqoB,CACA,QAAAx2C,GAAA,KAAAA,EAAA,MAAAH,IAAA,MAAAA,GAAA,KAAAquG,EAAAluG,GAAA,MAAAA,EAAA,MAAAH,IAAA,MAAAA,GAAA,KAAAsuG,EAAAF,GAAAziC,OAAA1D,IAEA+lC,EAAA55B,OAAA,SAAAA,GACA,GAAAo6B,GAAAJ,EAAAh6B,UAAAq6B,EAAAJ,EAAAj6B,UAAAs6B,EAAAJ,EAAAl6B,SACA,QACApuE,MAAA,SAAAhG,EAAAG,GACAquG,EAAAxoG,MAAAhG,EAAAG,GACAsuG,EAAAzoG,MAAAhG,EAAAG,GACAuuG,EAAA1oG,MAAAhG,EAAAG,IAEA2tE,OAAA,WACA0gC,EAAA1gC,SACA2gC,EAAA3gC,SACA4gC,EAAA5gC,UAEA1F,UAAA,WACAomC,EAAApmC,YACAqmC,EAAArmC,YACAsmC,EAAAtmC,aAEAC,QAAA,WACAmmC,EAAAnmC,UACAomC,EAAApmC,UACAqmC,EAAArmC,WAEAE,aAAA,WACAimC,EAAAjmC,eACAkmC,EAAAlmC,eACAmmC,EAAAnmC,gBAEAC,WAAA,WACAgmC,EAAAhmC,aACAimC,EAAAjmC,aACAkmC,EAAAlmC,gBAIAwlC,EAAAjtC,UAAA,SAAAvP,GACA,MAAAhzD,WAAAV,QACAswG,EAAArtC,UAAAvP,GACA68C,EAAAttC,UAAAvP,GACA88C,EAAAvtC,UAAAvP,GACAw8C,GAJAI,EAAArtC,aAMAitC,EAAApnG,MAAA,SAAA4qD,GACA,MAAAhzD,WAAAV,QACAswG,EAAAxnG,MAAA4qD,GACA68C,EAAAznG,MAAA,IAAA4qD,GACA88C,EAAA1nG,MAAA4qD,GACAw8C,EAAAxlE,UAAA4lE,EAAA5lE,cAJA4lE,EAAAxnG,SAMAonG,EAAAxlE,UAAA,SAAAgpB,GACA,IAAAhzD,UAAAV,OAAA,MAAAswG,GAAA5lE,WACA,IAAAmO,GAAAy3D,EAAAxnG,QAAA5G,GAAAwxD,EAAA,GAAArxD,GAAAqxD,EAAA,EAIA,OAHAy8C,GAAAG,EAAA5lE,UAAAgpB,GAAAmmB,aAAA33E,EAAA,KAAA22C,EAAAx2C,EAAA,KAAAw2C,IAAA32C,EAAA,KAAA22C,EAAAx2C,EAAA,KAAAw2C,KAAAy9B,OAAAm6B,GAAAvoG,MACAkoG,EAAAG,EAAA7lE,WAAAxoC,EAAA,KAAA22C,EAAAx2C,EAAA,KAAAw2C,IAAAghC,aAAA33E,EAAA,KAAA22C,EAAA0zB,GAAAlqE,EAAA,IAAAw2C,EAAA0zB,KAAArqE,EAAA,KAAA22C,EAAA0zB,GAAAlqE,EAAA,KAAAw2C,EAAA0zB,MAAA+J,OAAAm6B,GAAAvoG,MACAmoG,EAAAG,EAAA9lE,WAAAxoC,EAAA,KAAA22C,EAAAx2C,EAAA,KAAAw2C,IAAAghC,aAAA33E,EAAA,KAAA22C,EAAA0zB,GAAAlqE,EAAA,KAAAw2C,EAAA0zB,KAAArqE,EAAA,KAAA22C,EAAA0zB,GAAAlqE,EAAA,KAAAw2C,EAAA0zB,MAAA+J,OAAAm6B,GAAAvoG,MACAgoG,GAEAA,EAAApnG,MAAA,MAEA,IAAA+nG,IAAAn7B,GA2BAK,GAAAE,GAAAD,GAAAE,GA3BAL,IACA3tE,MAAA0sD,EACA0V,UAAA1V,EACA2V,QAAA3V,EACA6V,aAAA,WACAiL,GAAA,EACAG,GAAAvL,UAAAmL,IAEA/K,WAAA,WACAmL,GAAAvL,UAAAuL,GAAAtL,QAAAsL,GAAA3tE,MAAA0sD,EACAi8C,IAAA7lE,GAAA0qC,GAAA,KAkBAo7B,IACA5oG,MAAA4tE,GACAxL,UAAA1V,EACA2V,QAAA3V,EACA6V,aAAA7V,EACA8V,WAAA9V,GAwDAgiB,IACA1uE,MAAAwuE,GACApM,UAAAqM,GACApM,QAAAsM,GACApM,aAAA,WACAmM,GAAAtM,UAAAwM,IAEApM,WAAA,WACAkM,GAAA1uE,MAAAwuE,GACAE,GAAAtM,UAAAqM,GACAC,GAAArM,QAAAsM,IAoKAhuE,IAAAolG,IAAAt8F,KAAA,WAEA,QAAAA,GAAAxK,GAMA,MALAA,KACA,mBAAAsvE,IAAAs6B,EAAAt6B,eAAAh2E,MAAAF,KAAAG,YACAswG,KAAAz3B,QAAAy3B,EAAAC,EAAAF,IACAloG,GAAAolG,IAAA33B,OAAAnvE,EAAA6pG,IAEAD,EAAAtxC,SAiCA,QAAA/Z,KAEA,MADAsrD,GAAA,KACAr/F,EA1CA,GAAAonE,GAAA3qB,EAAA6iD,EAAAF,EAAAC,EAAAv6B,EAAA,GA4CA,OAnCA9kE,GAAAlN,KAAA,SAAA0C,GAGA,MAFA0pG,IAAA,EACAhoG,GAAAolG,IAAA33B,OAAAnvE,EAAA8pG,EAAAp7B,KACAg7B,IAEAl/F,EAAAu4B,SAAA,SAAA/iC,GAGA,MAFAwlE,IAAAC,GAAAC,GAAAI,GAAAC,GAAAC,GAAAK,GAAAC,GAAAC,GAAA,EACA7kE,GAAAolG,IAAA33B,OAAAnvE,EAAA8pG,EAAAr6B,KACAlJ,IAAAF,GAAAE,GAAAD,GAAAC,IAAAP,IAAAF,GAAAE,GAAAD,GAAAC,IAAAN,IAAAF,GAAAE,GAAAD,GAAAC,KAAAliD,UAEAhZ,EAAAu9F,OAAA,SAAA/nG,GAGA,MAFA6uE,IAAAE,KAAAH,GAAAE,GAAAj+D,KACAnP,GAAAolG,IAAA33B,OAAAnvE,EAAA8pG,EAAAH,OACA/6B,GAAAE,KAAAD,GAAAE,MAEAvkE,EAAAonE,WAAA,SAAArlB,GACA,MAAAhzD,WAAAV,QACAixG,GAAAl4B,EAAArlB,KAAA4iB,QAAAqC,GAAAjlB,GAAAW,EACA3O,KAFAqzB,GAIApnE,EAAAy8C,QAAA,SAAAsF,GACA,MAAAhzD,WAAAV,QACA+wG,EAAA,OAAA3iD,EAAAsF,GAAA,GAAAyiB,IAAA,GAAAY,IAAArjB,GACA,mBAAA+iB,IAAAs6B,EAAAt6B,eACA/wB,KAHA0I,GAKAz8C,EAAA8kE,YAAA,SAAA/iB,GACA,MAAAhzD,WAAAV,QACAy2E,EAAA,mBAAA/iB,MAAAq9C,EAAAt6B,aAAA/iB,OACA/hD,GAFA8kE,GAQA9kE,EAAAonE,WAAAlwE,GAAAolG,IAAAiC,aAAA9hD,QAAA,OAUAvlD,GAAAolG,IAAArrE,UAAA,SAAAm0D,GACA,OACAzgB,OAAA,SAAAA,GACA,GAAA1zC,GAAA,GAAAi2C,IAAAvC,EACA,QAAAz9B,KAAAk+C,GAAAn0D,EAAAiW,GAAAk+C,EAAAl+C,EACA,OAAAjW,MAOAi2C,GAAAt6E,WACA2J,MAAA,SAAAhG,EAAAG,GACA9B,KAAA+1E,OAAApuE,MAAAhG,EAAAG,IAEA2tE,OAAA,WACAzvE,KAAA+1E,OAAAtG,UAEA1F,UAAA,WACA/pE,KAAA+1E,OAAAhM,aAEAC,QAAA,WACAhqE,KAAA+1E,OAAA/L,WAEAE,aAAA,WACAlqE,KAAA+1E,OAAA7L,gBAEAC,WAAA,WACAnqE,KAAA+1E,OAAA5L,eAuBA7hE,GAAAolG,IAAAl1B,WAAAD,GACAjwE,GAAAolG,IAAAiD,kBAAAj8B,IAsFApsE,GAAAolG,IAAAkD,gBAAA,WACA,MAAAr4B,IAAAiB,MACGtyB,IAAAsyB,GAAAlM,OAAAkM,GACHlxE,GAAAolG,IAAA7zB,SAAA,SAAA3kE,GAEA,QAAA2/D,GAAAjL,GAEA,MADAA,GAAA10D,EAAA00D,EAAA,GAAAlM,GAAAkM,EAAA,GAAAlM,IACAkM,EAAA,IAAA1L,GAAA0L,EAAA,IAAA1L,GAAA0L,EAMA,MATA10D,GAAA0jE,GAAA1jE,EAAA,OAAAwoD,GAAAxoD,EAAA,GAAAwoD,GAAAxoD,EAAAzV,OAAA,EAAAyV,EAAA,GAAAwoD,GAAA,GAKAmX,EAAAvH,OAAA,SAAA1D,GAEA,MADAA,GAAA10D,EAAAo4D,OAAA1D,EAAA,GAAAlM,GAAAkM,EAAA,GAAAlM,IACAkM,EAAA,IAAA1L,GAAA0L,EAAA,IAAA1L,GAAA0L,GAEAiL,GAKA4E,GAAAnM,OAAAkM,GA0BAlxE,GAAAolG,IAAA5gG,OAAA,WAEA,QAAAA,KACA,GAAAixC,GAAA,mBAAAqF,KAAAljD,MAAAF,KAAAG,WAAAijD,EAAAluC,EAAA0jE,IAAA76B,EAAA,GAAA2f,IAAA3f,EAAA,GAAA2f,GAAA,GAAA4P,OAAAqB,IAOA,OANArgC,GAAA,aACA3mC,MAAA,SAAAhG,EAAAG,GACA6sE,EAAAz8D,KAAAvQ,EAAAuT,EAAAvT,EAAAG,IACAH,EAAA,IAAAu8D,GAAAv8D,EAAA,IAAAu8D,OAIA57D,KAAA,UACAsnE,aAAA+E,IAXA,GAAAl2C,GAAA6V,EAAA8U,GAAA,KAAAsf,EAAA,CA6BA,OAfA51D,GAAAs2C,OAAA,SAAAzhD,GACA,MAAAxB,WAAAV,QACA2jD,EAAAzhD,EACAmL,GAFAs2C,GAIAt2C,EAAA2rB,MAAA,SAAA92B,GACA,MAAAxB,WAAAV,QACA6uC,EAAAykC,IAAAt6C,GAAA92B,GAAA+7D,GAAAgF,EAAAhF,IACA5wD,GAFA2rB,GAIA3rB,EAAA41D,UAAA,SAAAvP,GACA,MAAAhzD,WAAAV,QACA6uC,EAAAykC,GAAAt6C,EAAAilC,IAAAgF,GAAAvP,GAAAuK,IACA5wD,GAFA41D,GAIA51D,EAAA2rB,MAAA,KA0BAnwB,GAAAolG,IAAA3yE,SAAA,SAAA36B,EAAAkgB,GACA,GAAA2P,GAAA4gF,GAAAvwF,EAAA,GAAAlgB,EAAA,IAAAs9D,GAAAmS,EAAAzvE,EAAA,GAAAs9D,GAAAsS,EAAA1vD,EAAA,GAAAo9C,GAAAozC,EAAA5gG,KAAAoF,IAAAu7F,GAAA31B,EAAAhrE,KAAAs6B,IAAAqmE,GAAA/lC,EAAA56D,KAAAoF,IAAAu6D,GAAA7E,EAAA96D,KAAAs6B,IAAAqlC,GAAAkhC,EAAA7gG,KAAAoF,IAAA06D,GAAAG,EAAAjgE,KAAAs6B,IAAAwlC,EACA,OAAA9/D,MAAA+tD,MAAA/tD,KAAAm6B,MAAApa,EAAAkgD,EAAA2gC,GAAA7gF,KAAA+6C,EAAA+lC,EAAAjmC,EAAAqF,EAAA+K,GAAAjrD,GAAA66C,EAAAimC,EAAA/lC,EAAAmF,EAAA+K,IAEA5yE,GAAAolG,IAAAsD,UAAA,WAEA,QAAAA,KACA,OACA1uG,KAAA,kBACAsnE,YAAAvmE,KAGA,QAAAA,KACA,MAAAiF,IAAAG,MAAAyH,KAAAC,KAAA8gG,EAAAC,KAAAC,EAAAD,GAAAt9F,IAAAmyD,GAAAtyD,OAAAnL,GAAAG,MAAAyH,KAAAC,KAAAihG,EAAAC,KAAAC,EAAAD,GAAAz9F,IAAA+zD,IAAAl0D,OAAAnL,GAAAG,MAAAyH,KAAAC,KAAA86C,EAAAl0C,KAAA4R,EAAA5R,GAAA+O,OAAA,SAAAnkB,GACA,MAAA8oC,IAAA9oC,EAAAuvG,GAAAllC,KACOp4D,IAAAjS,IAAA8R,OAAAnL,GAAAG,MAAAyH,KAAAC,KAAAu5C,EAAAj0C,KAAAoT,EAAApT,GAAAqQ,OAAA,SAAAhkB,GACP,MAAA2oC,IAAA3oC,EAAAuvG,GAAArlC,KACOp4D,IAAA9R,IAZP,GAAA6mB,GAAAsiC,EAAAkmD,EAAAF,EAAApoF,EAAA6gC,EAAA4nD,EAAAF,EAAAzvG,EAAAG,EAAAikE,EAAA4B,EAAA5wD,EAAA,GAAAtB,EAAAsB,EAAAm6F,EAAA,GAAAG,EAAA,IAAA3uC,EAAA,GAuEA,OAzDAsuC,GAAA3tG,MAAA,WACA,MAAAA,KAAAuQ,IAAA,SAAAg2D,GACA,OACAtnE,KAAA,aACAsnE,kBAIAonC,EAAAO,QAAA,WACA,OACAjvG,KAAA,UACAsnE,aAAA7D,EAAAkrC,GAAAx9F,OAAAk0D,EAAA2pC,GAAAh9F,MAAA,GAAAyxD,EAAAorC,GAAA11D,UAAAnnC,MAAA,GAAAqzD,EAAAypC,GAAA31D,UAAAnnC,MAAA,OAGA08F,EAAA1qF,OAAA,SAAA6sC,GACA,MAAAhzD,WAAAV,OACAuxG,EAAAQ,YAAAr+C,GAAAs+C,YAAAt+C,GADA69C,EAAAS,eAGAT,EAAAQ,YAAA,SAAAr+C,GACA,MAAAhzD,WAAAV,QACAwxG,GAAA99C,EAAA,MAAAg+C,GAAAh+C,EAAA,MACAi+C,GAAAj+C,EAAA,MAAAm+C,GAAAn+C,EAAA,MACA89C,EAAAE,IAAAh+C,EAAA89C,IAAAE,IAAAh+C,GACAi+C,EAAAE,IAAAn+C,EAAAi+C,IAAAE,IAAAn+C,GACA69C,EAAAtuC,gBALAuuC,EAAAG,IAAAD,EAAAG,KAOAN,EAAAS,YAAA,SAAAt+C,GACA,MAAAhzD,WAAAV,QACAwrD,GAAAkI,EAAA,MAAAxqC,GAAAwqC,EAAA,MACAzJ,GAAAyJ,EAAA,MAAAtqC,GAAAsqC,EAAA,MACAlI,EAAAtiC,IAAAwqC,EAAAlI,IAAAtiC,IAAAwqC,GACAzJ,EAAA7gC,IAAAsqC,EAAAzJ,IAAA7gC,IAAAsqC,GACA69C,EAAAtuC,gBALAzX,EAAAvB,IAAA/gC,EAAAE,KAOAmoF,EAAA/sG,KAAA,SAAAkvD,GACA,MAAAhzD,WAAAV,OACAuxG,EAAAU,UAAAv+C,GAAAw+C,UAAAx+C,GADA69C,EAAAW,aAGAX,EAAAU,UAAA,SAAAv+C,GACA,MAAAhzD,WAAAV,QACAyxG,GAAA/9C,EAAA,GAAAk+C,GAAAl+C,EAAA,GACA69C,IAFAE,EAAAG,IAIAL,EAAAW,UAAA,SAAAx+C,GACA,MAAAhzD,WAAAV,QACAsX,GAAAo8C,EAAA,GAAA19C,GAAA09C,EAAA,GACA69C,IAFAj6F,EAAAtB,IAIAu7F,EAAAtuC,UAAA,SAAAvP,GACA,MAAAhzD,WAAAV,QACAijE,GAAAvP,EACAxxD,EAAAy4E,GAAA1wB,EAAA7gC,EAAA,IACA/mB,EAAAu4E,GAAApvB,EAAAtiC,EAAA+5C,GACAqD,EAAAqU,GAAAg3B,EAAAE,EAAA,IACA3pC,EAAA0S,GAAA42B,EAAAE,EAAAzuC,GACAsuC,GANAtuC,GAQAsuC,EAAAQ,eAAA,QAAAxlC,KAAA,OAAAA,MAAAylC,eAAA,QAAAzlC,KAAA,OAAAA,OAwBA1jE,GAAAolG,IAAAkE,SAAA,WAEA,QAAAA,KACA,OACAtvG,KAAA,aACAsnE,aAAAioC,GAAA/sG,EAAA5E,MAAAF,KAAAG,WAAA2xG,GAAAxyG,EAAAY,MAAAF,KAAAG,aAJA,GAAA0xG,GAAAC,EAAAhtG,EAAAw1E,GAAAh7E,EAAAi7E,EAuBA,OAhBAq3B,GAAA72E,SAAA,WACA,MAAAzyB,IAAAolG,IAAA3yE,SAAA82E,GAAA/sG,EAAA5E,MAAAF,KAAAG,WAAA2xG,GAAAxyG,EAAAY,MAAAF,KAAAG,aAEAyxG,EAAA9sG,OAAA,SAAAquD,GACA,MAAAhzD,WAAAV,QACAqF,EAAAquD,EAAA0+C,EAAA,mBAAA1+C,GAAA,KAAAA,EACAy+C,GAFA9sG,GAIA8sG,EAAAtyG,OAAA,SAAA6zD,GACA,MAAAhzD,WAAAV,QACAH,EAAA6zD,EAAA2+C,EAAA,mBAAA3+C,GAAA,KAAAA,EACAy+C,GAFAtyG,GAIAsyG,EAAAlvC,UAAA,WACA,MAAAviE,WAAAV,OAAAmyG,EAAA,GAEAA,GAEAtpG,GAAAolG,IAAAp/D,YAAA,SAAAxpC,EAAAxF,GACA,MAAAk7E,IAAA11E,EAAA,GAAA44D,GAAA54D,EAAA,GAAA44D,GAAAp+D,EAAA,GAAAo+D,GAAAp+D,EAAA,GAAAo+D,KAaAp1D,GAAAolG,IAAAjuG,OAAA,SAAAmH,GAGA,MAFAu0E,IAAA,EACA7yE,GAAAolG,IAAA33B,OAAAnvE,EAAAw0E,IACAD,GAEA,IAAAA,IACAC,IACA3L,OAAApb,EACA1sD,MAAA0sD,EACA0V,UAAAkR,GACAjR,QAAA3V,EACA6V,aAAA7V,EACA8V,WAAA9V,GA4BA09C,GAAA12B,GAAA,SAAA22B,GACA,MAAA9hG,MAAAm6B,KAAA,KAAA2nE,KACG,SAAAl9B,GACH,SAAA5kE,KAAAosD,KAAAwY,EAAA,MAEAxsE,GAAAolG,IAAAuE,mBAAA,WACA,MAAA15B,IAAAw5B,MACG7qD,IAAA6qD,EACH,IAAAG,IAAA72B,GAAA,SAAA22B,GACA,GAAAzsE,GAAAr1B,KAAAisD,KAAA61C,EACA,OAAAzsE,MAAAr1B,KAAAoF,IAAAiwB,IACGuuB,IACHxrD,GAAAolG,IAAAyE,qBAAA,WACA,MAAA55B,IAAA25B,MACGhrD,IAAAgrD,IAqBH5pG,GAAAolG,IAAA0E,eAAA,WACA,MAAA59B,IAAAkH,MACGx0B,IAAAw0B,IAcHpzE,GAAAolG,IAAA2E,iBAAA,WACA,MAAA79B,IAAAsH,MACG50B,IAAA40B,EACH,IAAAw2B,IAAAj3B,GAAA,SAAA22B,GACA,SAAAA,GACG9hG,KAAAmgE,OACH/nE,GAAAolG,IAAA6E,SAAA,WACA,MAAAh6B,IAAA+5B,MACGprD,IAAAorD,GAIHz2B,GAAAvO,OAAA,SAAA3rE,EAAAG,GACA,OAAAH,EAAA,EAAAuO,KAAAmgE,KAAAngE,KAAAssD,IAAA16D,IAAAu6D,MA0BA/zD,GAAAolG,IAAA8E,SAAA,WACA,MAAAx2B,IAAAH,MACG30B,IAAA20B,EACH,IAAA42B,IAAAp3B,GAAA,WACA,UACGnrE,KAAAosD,OACHh0D,GAAAolG,IAAAgF,aAAA,WACA,MAAAn6B,IAAAk6B,MACGvrD,IAAAurD,EACH,IAAAE,IAAAt3B,GAAA,SAAA22B,GACA,YAAAA,IACG,SAAAl9B,GACH,SAAA5kE,KAAAmgE,KAAAyE,MAEAxsE,GAAAolG,IAAAkF,cAAA,WACA,MAAAr6B,IAAAo6B,MACGzrD,IAAAyrD,GAIHz2B,GAAA5O,OAAA,SAAA3rE,EAAAG,GACA,QAAAA,EAAA,EAAAoO,KAAAmgE,KAAAngE,KAAAssD,IAAA76D,IAAA06D,MAEA/zD,GAAAolG,IAAAmF,mBAAA,WACA,GAAAr6B,GAAAwD,GAAAE,IAAAn+B,EAAAy6B,EAAAz6B,OAAA7oC,EAAAsjE,EAAAtjE,MAQA,OAPAsjE,GAAAz6B,OAAA,SAAAoV,GACA,MAAAA,GAAApV,IAAAoV,EAAA,GAAAA,EAAA,MAAAA,EAAApV,KAAAoV,EAAA,IAAAA,EAAA,MAEAqlB,EAAAtjE,OAAA,SAAAi+C,GACA,MAAAA,GAAAj+C,GAAAi+C,EAAA,GAAAA,EAAA,GAAAA,EAAA1zD,OAAA,EAAA0zD,EAAA,YAAAA,EAAAj+C,KACAi+C,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAEAj+C,GAAA,WACGgyC,IAAAg1B,GACH5zE,GAAAwqG,QAOAxqG,GAAAwqG,KAAAx2B,KAAA,SAAAy2B,GAGA,QAAAz2B,GAAAh7E,GACA,GAAAA,EAAA7B,OAAA,UACA,IAAAD,GAAAqiF,EAAA/iB,GAAAn9D,GAAAmgF,EAAAhjB,GAAAh9D,GAAA/C,EAAAuC,EAAA7B,OAAAggC,KAAAuzE,IACA,KAAAxzG,EAAA,EAAiBA,EAAAT,EAAOS,IACxBigC,EAAAvtB,OAAA2vE,EAAAlkF,KAAAqC,KAAAsB,EAAA9B,OAAAsiF,EAAAnkF,KAAAqC,KAAAsB,EAAA9B,SAGA,KADAigC,EAAApf,KAAAm8D,IACAh9E,EAAA,EAAiBA,EAAAT,EAAOS,IAAAwzG,EAAA9gG,MAAAutB,EAAAjgC,GAAA,IAAAigC,EAAAjgC,GAAA,IACxB,IAAAyzG,GAAA52B,GAAA58C,GAAAyzE,EAAA72B,GAAA22B,GACAG,EAAAD,EAAA,KAAAD,EAAA,GAAAG,EAAAF,IAAAzzG,OAAA,KAAAwzG,IAAAxzG,OAAA,GAAA0vE,IACA,KAAA3vE,EAAAyzG,EAAAxzG,OAAA,EAAgCD,GAAA,IAAQA,EAAA2vE,EAAAj9D,KAAA5Q,EAAAm+B,EAAAwzE,EAAAzzG,IAAA,IACxC,KAAAA,GAAA2zG,EAAyB3zG,EAAA0zG,EAAAzzG,OAAA2zG,IAA8B5zG,EAAA2vE,EAAAj9D,KAAA5Q,EAAAm+B,EAAAyzE,EAAA1zG,IAAA,IACvD,OAAA2vE,GAdA,GAAAxtE,GAAAw6E,GAAAr6E,EAAAs6E,EACA,OAAAj8E,WAAAV,OAAA68E,EAAAy2B,IAeAz2B,EAAA36E,EAAA,SAAAwxD,GACA,MAAAhzD,WAAAV,QAAAkC,EAAAwxD,EAAAmpB,GAAA36E,GAEA26E,EAAAx6E,EAAA,SAAAqxD,GACA,MAAAhzD,WAAAV,QAAAqC,EAAAqxD,EAAAmpB,GAAAx6E,GAEAw6E,IAaAh0E,GAAAwqG,KAAA3jC,QAAA,SAAAvF,GAEA,MADAtU,IAAAsU,EAAAypC,IACAzpC,EAEA,IAAAypC,IAAA/qG,GAAAwqG,KAAA3jC,QAAAnxE,YACAq1G,IAAAnvG,KAAA,WAEA,IADA,GAAA9D,GAAAZ,GAAA,EAAAT,EAAAiB,KAAAP,OAAA6gB,EAAAtgB,KAAAjB,EAAA,GAAAmF,EAAA,IACA1E,EAAAT,GACAqB,EAAAkgB,EACAA,EAAAtgB,KAAAR,GACA0E,GAAA9D,EAAA,GAAAkgB,EAAA,GAAAlgB,EAAA,GAAAkgB,EAAA,EAEA,UAAApc,GAEAmvG,GAAA1pE,SAAA,SAAA2O,GACA,GAAAl4C,GAAAmlC,EAAA/lC,GAAA,EAAAT,EAAAiB,KAAAP,OAAAkC,EAAA,EAAAG,EAAA,EAAAwe,EAAAtgB,KAAAjB,EAAA,EAEA,KADAoB,UAAAV,SAAA64C,GAAA,KAAAt4C,KAAAkE,WACA1E,EAAAT,GACAqB,EAAAkgB,EACAA,EAAAtgB,KAAAR,GACA+lC,EAAAnlC,EAAA,GAAAkgB,EAAA,GAAAA,EAAA,GAAAlgB,EAAA,GACAuB,IAAAvB,EAAA,GAAAkgB,EAAA,IAAAilB,EACAzjC,IAAA1B,EAAA,GAAAkgB,EAAA,IAAAilB,CAEA,QAAA5jC,EAAA22C,EAAAx2C,EAAAw2C,IAEA+6D,GAAAzlC,KAAA,SAAAD,GAEA,IADA,GAAA4gB,GAAAtsD,EAAA+2B,EAAA14C,EAAAilB,EAAAj1B,EAAAu5D,EAAAoT,GAAAtP,GAAAnuE,GAAA,EAAAT,EAAAiB,KAAAP,OAAAw9E,GAAAj9E,MAAAI,EAAAJ,KAAAjB,EAAA,KACAS,EAAAT,GAAA,CAMA,IALAwvF,EAAA5gB,EAAAr5D,QACAq5D,EAAAluE,OAAA,EACA6gB,EAAAtgB,KAAAR,GACA+lC,EAAAgpD,GAAAv1B,EAAAu1B,EAAA9uF,OAAAoqE,GAAA,GACA5nC,GAAA,IACAA,EAAA+2B,GACA1oD,EAAAi+E,EAAAtsD,GACAw6C,GAAAnsE,EAAAlQ,EAAAkgB,IACAm8D,GAAAl3C,EAAAnlC,EAAAkgB,IACAqtD,EAAAz7D,KAAAwqE,GAAAn3C,EAAAj1B,EAAAlQ,EAAAkgB,IAEAqtD,EAAAz7D,KAAA5B,IACSmsE,GAAAl3C,EAAAnlC,EAAAkgB,IACTqtD,EAAAz7D,KAAAwqE,GAAAn3C,EAAAj1B,EAAAlQ,EAAAkgB,IAEAilB,EAAAj1B,CAEAu5D,IAAA8D,EAAAz7D,KAAAy7D,EAAA,IACAvtE,EAAAkgB,EAEA,MAAAqtD,GAaA,IAAAwT,IAAAd,GAAA1C,GAAAsD,GAAAD,GAAAxD,MAAAuD,KAgIAlB,IAAA7hF,UAAAuiF,QAAA,WAEA,IADA,GAAAnD,GAAA8C,EAAAlgF,KAAA8/E,MAAAG,EAAAC,EAAAzgF,OACAwgF,KACA7C,EAAA8C,EAAAD,GAAA7C,KACAA,EAAA98D,GAAA88D,EAAAh9E,GAAA8/E,EAAA9rD,OAAA6rD,EAAA,EAGA,OADAC,GAAA7/D,KAAAqgE,IACAR,EAAAzgF,QA4MA+gF,GAAAxiF,WACA8T,MAAA,WACA,MAAA9R,MAAAo9E,KAAA/2B,IAAArmD,KAAAq9E,KAAAr9E,KAAAo9E,KAAAh9E,EAAAJ,KAAAo9E,KAAA98D,GAEAJ,IAAA,WACA,MAAAlgB,MAAAo9E,KAAA/2B,IAAArmD,KAAAq9E,KAAAr9E,KAAAo9E,KAAA98D,EAAAtgB,KAAAo9E,KAAAh9E,IASA4hF,GAAAhkF,WACAoY,OAAA,SAAA+sD,EAAA5rD,GACA,GAAAq5B,GAAA0iE,EAAAC,CACA,IAAApwC,EAAA,CAKA,GAJA5rD,EAAAwmE,EAAA5a,EACA5rD,EAAA0mE,EAAA9a,EAAA8a,EACA9a,EAAA8a,IAAA9a,EAAA8a,EAAAF,EAAAxmE,GACA4rD,EAAA8a,EAAA1mE,EACA4rD,EAAA6b,EAAA,CAEA,IADA7b,IAAA6b,EACA7b,EAAAoB,GAAApB,IAAAoB,CACApB,GAAAoB,EAAAhtD,MAEA4rD,GAAA6b,EAAAznE,CAEAq5B,GAAAuyB,MACOnjE,MAAAmzD,GACPgQ,EAAAif,GAAApiF,KAAAmzD,GACA57C,EAAAwmE,EAAA,KACAxmE,EAAA0mE,EAAA9a,EACAA,EAAA4a,EAAA5a,EAAAoB,EAAAhtD,EACAq5B,EAAAuyB,IAEA5rD,EAAAwmE,EAAAxmE,EAAA0mE,EAAA,KACAj+E,KAAAmzD,EAAA57C,EACAq5B,EAAA,KAMA,KAJAr5B,EAAAgtD,EAAAhtD,EAAAynE,EAAA,KACAznE,EAAAstD,EAAAj0B,EACAr5B,EAAAw9D,GAAA,EACA5R,EAAA5rD,EACAq5B,KAAAmkC,GACAu+B,EAAA1iE,EAAAi0B,EACAj0B,IAAA0iE,EAAA/uC,GACAgvC,EAAAD,EAAAt0B,EACAu0B,KAAAx+B,GACAnkC,EAAAmkC,EAAAw+B,EAAAx+B,GAAA,EACAu+B,EAAAv+B,GAAA,EACA5R,EAAAmwC,IAEAnwC,IAAAvyB,EAAAouC,IACAiD,GAAAjiF,KAAA4wC,GACAuyB,EAAAvyB,EACAA,EAAAuyB,EAAA0B,GAEAj0B,EAAAmkC,GAAA,EACAu+B,EAAAv+B,GAAA,EACAoN,GAAAniF,KAAAszG,MAGAC,EAAAD,EAAA/uC,EACAgvC,KAAAx+B,GACAnkC,EAAAmkC,EAAAw+B,EAAAx+B,GAAA,EACAu+B,EAAAv+B,GAAA,EACA5R,EAAAmwC,IAEAnwC,IAAAvyB,EAAA2zB,IACA4d,GAAAniF,KAAA4wC,GACAuyB,EAAAvyB,EACAA,EAAAuyB,EAAA0B,GAEAj0B,EAAAmkC,GAAA,EACAu+B,EAAAv+B,GAAA,EACAkN,GAAAjiF,KAAAszG,KAGA1iE,EAAAuyB,EAAA0B,CAEA7kE,MAAAmzD,EAAA4hB,GAAA,GAEAx+D,OAAA,SAAAgB,GACAA,EAAA0mE,IAAA1mE,EAAA0mE,EAAAF,EAAAxmE,EAAAwmE,GACAxmE,EAAAwmE,IAAAxmE,EAAAwmE,EAAAE,EAAA1mE,EAAA0mE,GACA1mE,EAAA0mE,EAAA1mE,EAAAwmE,EAAA,IACA,IAAAy1B,GAAAx1B,EAAAuqB,EAAA33D,EAAAr5B,EAAAstD,EAAA3tD,EAAAK,EAAAgtD,EAAAvhE,EAAAuU,EAAAynE,CA6BA,IA5B4DhB,EAA5D9mE,EAA8BlU,EAA8Bo/E,GAAAp/E,GAA9BkU,EAA9BlU,EACA4tC,EACAA,EAAA2zB,IAAAhtD,EAAAq5B,EAAA2zB,EAAAyZ,EAA+CptC,EAAAouC,EAAAhB,EAE/Ch+E,KAAAmzD,EAAA6qB,EAEA9mE,GAAAlU,GACAulG,EAAAvqB,EAAAjJ,EACAiJ,EAAAjJ,EAAAx9D,EAAAw9D,EACAiJ,EAAAzZ,EAAArtD,EACAA,EAAA2tD,EAAAmZ,EACAA,IAAAh7E,GACA4tC,EAAAotC,EAAAnZ,EACAmZ,EAAAnZ,EAAAttD,EAAAstD,EACAttD,EAAAymE,EAAAgB,EACApuC,EAAA2zB,EAAAhtD,EACAymE,EAAAgB,EAAAh8E,EACAA,EAAA6hE,EAAAmZ,IAEAA,EAAAnZ,EAAAj0B,EACAA,EAAAotC,EACAzmE,EAAAymE,EAAAgB,KAGAupB,EAAAhxF,EAAAw9D,EACAx9D,EAAAymE,GAEAzmE,MAAAstD,EAAAj0B,IACA23D,EAAA,CACA,GAAAhxF,KAAAw9D,EAEA,YADAx9D,EAAAw9D,GAAA,EAGA,IACA,GAAAx9D,IAAAvX,KAAAmzD,EAAA,KACA,IAAA57C,IAAAq5B,EAAA2zB,GAQA,GAPAivC,EAAA5iE,EAAAouC,EACAw0B,EAAAz+B,IACAy+B,EAAAz+B,GAAA,EACAnkC,EAAAmkC,GAAA,EACAkN,GAAAjiF,KAAA4wC,GACA4iE,EAAA5iE,EAAAouC,GAEAw0B,EAAAjvC,GAAAivC,EAAAjvC,EAAAwQ,GAAAy+B,EAAAx0B,GAAAw0B,EAAAx0B,EAAAjK,EAAA,CACAy+B,EAAAx0B,GAAAw0B,EAAAx0B,EAAAjK,IACAy+B,EAAAjvC,EAAAwQ,GAAA,EACAy+B,EAAAz+B,GAAA,EACAoN,GAAAniF,KAAAwzG,GACAA,EAAA5iE,EAAAouC,GAEAw0B,EAAAz+B,EAAAnkC,EAAAmkC,EACAnkC,EAAAmkC,EAAAy+B,EAAAx0B,EAAAjK,GAAA,EACAkN,GAAAjiF,KAAA4wC,GACAr5B,EAAAvX,KAAAmzD,CACA,YAUA,IAPAqgD,EAAA5iE,EAAA2zB,EACAivC,EAAAz+B,IACAy+B,EAAAz+B,GAAA,EACAnkC,EAAAmkC,GAAA,EACAoN,GAAAniF,KAAA4wC,GACA4iE,EAAA5iE,EAAA2zB,GAEAivC,EAAAjvC,GAAAivC,EAAAjvC,EAAAwQ,GAAAy+B,EAAAx0B,GAAAw0B,EAAAx0B,EAAAjK,EAAA,CACAy+B,EAAAjvC,GAAAivC,EAAAjvC,EAAAwQ,IACAy+B,EAAAx0B,EAAAjK,GAAA,EACAy+B,EAAAz+B,GAAA,EACAkN,GAAAjiF,KAAAwzG,GACAA,EAAA5iE,EAAA2zB,GAEAivC,EAAAz+B,EAAAnkC,EAAAmkC,EACAnkC,EAAAmkC,EAAAy+B,EAAAjvC,EAAAwQ,GAAA,EACAoN,GAAAniF,KAAA4wC,GACAr5B,EAAAvX,KAAAmzD,CACA,OAGAqgD,EAAAz+B,GAAA,EACAx9D,EAAAq5B,EACAA,IAAAi0B,SACOttD,EAAAw9D,EACPx9D,OAAAw9D,GAAA,MAiEAzsE,GAAAwqG,KAAAW,QAAA,SAAAh0E,GAGA,QAAAg0E,GAAAnyG,GACA,GAAAoyG,GAAA,GAAA7jG,OAAAvO,EAAA7B,QAAAwrD,EAAAquB,EAAA,MAAA5vB,EAAA4vB,EAAA,MAAA3wD,EAAA2wD,EAAA,MAAAzwD,EAAAywD,EAAA,KAQA,OAPA+I,IAAAC,EAAAhhF,GAAAg4E,GAAA8G,MAAA91E,QAAA,SAAA01E,EAAAxgF,GACA,GAAAsgF,GAAAE,EAAAF,MAAAzC,EAAA2C,EAAA3C,MAAAq2B,EAAAl0G,GAAAsgF,EAAArgF,OAAAqgF,EAAAlsE,IAAA,SAAAka,GACA,GAAAja,GAAAia,EAAAhc,OACA,QAAA+B,EAAAlS,EAAAkS,EAAA/R,KACSu7E,EAAA17E,GAAAspD,GAAAoyB,EAAA17E,GAAAgnB,GAAA00D,EAAAv7E,GAAA4nD,GAAA2zB,EAAAv7E,GAAA+mB,IAAAoiC,EAAApiC,IAAAF,EAAAE,IAAAF,EAAA+gC,IAAAuB,EAAAvB,QACT/hD,MAAArG,EAAA9B,KAEAk0G,EAEA,QAAApxB,GAAAhhF,GACA,MAAAA,GAAAsS,IAAA,SAAAtD,EAAA9Q,GACA,OACAmC,EAAAuO,KAAAs+B,MAAAqzC,EAAAvxE,EAAA9Q,GAAAwsE,OACAlqE,EAAAoO,KAAAs+B,MAAAszC,EAAAxxE,EAAA9Q,GAAAwsE,OACAxsE,OAlBA,GAAAmC,GAAAw6E,GAAAr6E,EAAAs6E,GAAAyF,EAAAlgF,EAAAmgF,EAAAhgF,EAAAw3E,EAAAq6B,EACA,OAAAl0E,GAAAg0E,EAAAh0E,IAqBAg0E,EAAAzpB,MAAA,SAAA1oF,GACA,MAAA+gF,IAAAC,EAAAhhF,IAAAw+E,MAAAh6D,OAAA,SAAAs3D,GACA,MAAAA,GAAA/2B,GAAA+2B,EAAAv1B,IACOj0C,IAAA,SAAAwpE,GACP,OACAt4E,OAAAxD,EAAA87E,EAAA/2B,EAAA7mD,GACAF,OAAAgC,EAAA87E,EAAAv1B,EAAAroD,OAIAi0G,EAAAG,UAAA,SAAAtyG,GACA,GAAAsyG,KAaA,OAZAvxB,IAAAC,EAAAhhF,IAAA8+E,MAAA91E,QAAA,SAAA01E,EAAAxgF,GAEA,IADA,GAAAq0G,GAAAx2B,EAAA2C,EAAA3C,KAAAyC,EAAAE,EAAAF,MAAAz/D,KAAAqgE,IAAAz+C,GAAA,EAAA+2B,EAAA8mB,EAAArgF,OAAA01D,EAAA2qB,EAAA9mB,EAAA,GAAAokB,KAAA6O,EAAA92B,EAAA9O,IAAAg3B,EAAAloB,EAAAtN,EAAAsN,EAAA9O,IACApkB,EAAA+2B,GACA7D,EACA0+C,EAAA5nB,EACA92B,EAAA2qB,EAAA79C,GAAAm7C,KACA6O,EAAA92B,EAAA9O,IAAAg3B,EAAAloB,EAAAtN,EAAAsN,EAAA9O,EACA7mD,EAAAq0G,EAAAr0G,KAAAysF,EAAAzsF,GAAAkjF,GAAArF,EAAAw2B,EAAA5nB,GAAA,GACA2nB,EAAA1hG,MAAA5Q,EAAA9B,GAAA8B,EAAAuyG,EAAAr0G,GAAA8B,EAAA2qF,EAAAzsF,OAIAo0G,GAEAH,EAAA9xG,EAAA,SAAAwxD,GACA,MAAAhzD,WAAAV,QAAAoiF,EAAA/iB,GAAAn9D,EAAAwxD,GAAAsgD,GAAA9xG,GAEA8xG,EAAA3xG,EAAA,SAAAqxD,GACA,MAAAhzD,WAAAV,QAAAqiF,EAAAhjB,GAAAh9D,EAAAqxD,GAAAsgD,GAAA3xG,GAEA2xG,EAAAn6B,WAAA,SAAAnmB,GACA,MAAAhzD,WAAAV,QACA65E,EAAA,MAAAnmB,EAAAwgD,GAAAxgD,EACAsgD,GAFAn6B,IAAAq6B,GAAA,KAAAr6B,GAIAm6B,EAAA5wG,KAAA,SAAAswD,GACA,MAAAhzD,WAAAV,OACAg0G,EAAAn6B,WAAAnmB,KAAA,KAAAA,IADAmmB,IAAAq6B,GAAA,KAAAr6B,KAAA,IAGAm6B,GAEA,IAAAE,OAAA,oBAIArrG,IAAAwqG,KAAAgB,SAAA,SAAAf,GACA,MAAAzqG,IAAAwqG,KAAAW,UAAAG,UAAAb,IAEAzqG,GAAAwqG,KAAAiB,SAAA,SAAAt0E,EAAA9W,EAAAE,EAAAD,EAAAnQ,GAYA,QAAAs7F,GAAAzyG,GA4BA,QAAA8U,GAAArX,EAAAuR,EAAA3O,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,GACA,IAAAmc,MAAAjzB,KAAAizB,MAAA9yB,GACA,GAAA/C,EAAA+jF,KAAA,CACA,GAAAkxB,GAAAj1G,EAAA4C,EAAAsyG,EAAAl1G,EAAA+C,CACA,UAAAkyG,EACA,GAAAvpE,GAAAupE,EAAAryG,GAAA8oC,GAAAwpE,EAAAnyG,GAAA,IACAoyG,EAAAn1G,EAAAuR,EAAA3O,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,OACa,CACb,GAAA07F,GAAAp1G,EAAA4I,KACA5I,GAAA4C,EAAA5C,EAAA+C,EAAA/C,EAAA4I,MAAA,KACAusG,EAAAn1G,EAAAo1G,EAAAH,EAAAC,EAAAtrF,EAAAE,EAAAD,EAAAnQ,GACAy7F,EAAAn1G,EAAAuR,EAAA3O,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,OAGA1Z,GAAA4C,IAAA5C,EAAA+C,IAAA/C,EAAA4I,MAAA2I,MAGA4jG,GAAAn1G,EAAAuR,EAAA3O,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,GAGA,QAAAy7F,GAAAn1G,EAAAuR,EAAA3O,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,GACA,GAAA8qE,GAAA,IAAA56D,EAAAC,GAAA46D,EAAA,IAAA36D,EAAApQ,GAAAzV,EAAArB,GAAA4hF,EAAAE,EAAA3hF,GAAA0hF,EAAAhkF,EAAAikF,GAAA,EAAAzgF,CACAjE,GAAA+jF,MAAA,EACA/jF,IAAAgkF,MAAAvjF,KAAAT,EAAAgkF,MAAAvjF,GAAAqjF,MACA7/E,EAAA2lB,EAAA46D,EAA2B36D,EAAA26D,EAC3BE,EAAA56D,EAAA26D,EAA2B/qE,EAAA+qE,EAC3BptE,EAAArX,EAAAuR,EAAA3O,EAAAG,EAAA6mB,EAAAE,EAAAD,EAAAnQ,GArDA,GAAAnI,GAAA9N,EAAAk4C,EAAAl7C,EAAAT,EAAAq1G,EAAAC,EAAAC,EAAAC,EAAA1yB,EAAA/iB,GAAAn9D,GAAAmgF,EAAAhjB,GAAAh9D,EACA,UAAA6mB,EACAyrF,EAAAzrF,EAAA0rF,EAAAxrF,EAAAyrF,EAAA1rF,EAAA2rF,EAAA97F,MAKA,IAHA67F,EAAAC,IAAAH,EAAAC,EAAA58F,KACAjV,KAAAk4C,KACA37C,EAAAuC,EAAA7B,OACA+0G,EAAA,IAAAh1G,EAAA,EAA+BA,EAAAT,IAAOS,EACtC8Q,EAAAhP,EAAA9B,GACA8Q,EAAA3O,EAAAyyG,MAAA9jG,EAAA3O,GACA2O,EAAAxO,EAAAuyG,MAAA/jG,EAAAxO,GACAwO,EAAA3O,EAAA2yG,MAAAhkG,EAAA3O,GACA2O,EAAAxO,EAAAyyG,MAAAjkG,EAAAxO,GACAU,EAAA0P,KAAA5B,EAAA3O,GACA+4C,EAAAxoC,KAAA5B,EAAAxO,OACS,KAAAtC,EAAA,EAAiBA,EAAAT,IAAOS,EAAA,CACjC,GAAAu0E,IAAA8N,EAAAvxE,EAAAhP,EAAA9B,MAAAw0E,GAAA8N,EAAAxxE,EAAA9Q,EACAu0E,GAAAqgC,MAAArgC,GACAC,EAAAqgC,MAAArgC,GACAD,EAAAugC,MAAAvgC,GACAC,EAAAugC,MAAAvgC,GACAxxE,EAAA0P,KAAA6hE,GACAr5B,EAAAxoC,KAAA8hE,GAGA,GAAAj9D,GAAAu9F,EAAAF,EAAA3+F,EAAA8+F,EAAAF,CACAt9F,GAAAtB,EAAA8+F,EAAAF,EAAAt9F,EAAkCu9F,EAAAF,EAAA3+F,CA6BlC,IAAA0tE,GAAAN,IAWA,IAVAM,EAAAjzD,IAAA,SAAA5f,GACA8F,EAAA+sE,EAAA7yE,GAAAuxE,EAAAvxE,IAAA9Q,IAAAsiF,EAAAxxE,EAAA9Q,GAAA40G,EAAAC,EAAAC,EAAAC,IAEApxB,EAAAsxB,MAAA,SAAAtgF,GACA6uD,GAAA7uD,EAAAgvD,EAAAixB,EAAAC,EAAAC,EAAAC,IAEApxB,EAAA3sC,KAAA,SAAA7uC,GACA,MAAAu7E,IAAAC,EAAAx7E,EAAA,GAAAA,EAAA,GAAAysG,EAAAC,EAAAC,EAAAC,IAEA/0G,GAAA,EACA,MAAAmpB,EAAA,CACA,OAAAnpB,EAAAT,GACAqX,EAAA+sE,EAAA7hF,EAAA9B,GAAAgD,EAAAhD,GAAAk7C,EAAAl7C,GAAA40G,EAAAC,EAAAC,EAAAC,KAEA/0G,MACO8B,GAAAgJ,QAAA64E,EAAAjzD,IAEP,OADA1tB,GAAAk4C,EAAAp5C,EAAAgP,EAAA,KACA6yE,EArFA,GAAAqxB,GAAA7yG,EAAAw6E,GAAAr6E,EAAAs6E,EACA,QAAAo4B,EAAAr0G,UAAAV,SACAkC,EAAAghF,GACA7gF,EAAA8gF,GACA,IAAA4xB,IACA/7F,EAAAoQ,EACAD,EAAAD,EACAE,EAAAF,EAAA,GAEAorF,EAAAt0E,KA8EAs0E,EAAApyG,EAAA,SAAAwxD,GACA,MAAAhzD,WAAAV,QAAAkC,EAAAwxD,EAAA4gD,GAAApyG,GAEAoyG,EAAAjyG,EAAA,SAAAqxD,GACA,MAAAhzD,WAAAV,QAAAqC,EAAAqxD,EAAA4gD,GAAAjyG,GAEAiyG,EAAAztF,OAAA,SAAA6sC,GACA,MAAAhzD,WAAAV,QACA,MAAA0zD,EAAAxqC,EAAAE,EAAAD,EAAAnQ,EAAA,MAA8CkQ,GAAAwqC,EAAA,MAAAtqC,GAAAsqC,EAAA,MAAAvqC,GAAAuqC,EAAA,MAC9C16C,GAAA06C,EAAA,OACA4gD,GAHA,MAAAprF,EAAA,OAAAA,EAAAE,IAAAD,EAAAnQ,KAKAs7F,EAAAlxG,KAAA,SAAAswD,GACA,MAAAhzD,WAAAV,QACA,MAAA0zD,EAAAxqC,EAAAE,EAAAD,EAAAnQ,EAAA,MAA8CkQ,EAAAE,EAAA,EAAAD,GAAAuqC,EAAA,GAAA16C,GAAA06C,EAAA,IAC9C4gD,GAFA,MAAAprF,EAAA,MAAAC,EAAAD,EAAAlQ,EAAAoQ,IAIAkrF,IA8DAzrG,GAAAosG,eAAAhxB,GASAp7E,GAAAqsG,kBAAA1wB,GAoBA37E,GAAAssG,kBAAAzwB,GAOA77E,GAAAusG,kBAAAzwB,EAiCA,IAAAK,IAAA,8CAAAC,GAAA,GAAA7tB,QAAA4tB,GAAA3/E,OAAA,IACAwD,IAAAgmC,YAAA41C,GAMA57E,GAAAq8E,eAAA,SAAAvkF,EAAAkgB,GACA,GAAA2P,SAAA3P,EACA,mBAAA2P,EAAA0uC,GAAAxN,IAAA7wC,EAAAowB,gBAAA,oBAAA6mB,KAAAj3C,GAAAojE,GAAAU,GAAA9jE,YAAAs8C,IAAA8mB,GAAA7zE,MAAAD,QAAA0Q,GAAAskE,GAAA,WAAA30D,GAAA2E,MAAAtU,GAAA2jE,GAAAE,IAAA/jF,EAAAkgB,KAEAhY,GAAAwsG,iBAAAlwB,EAWA,IAAAmwB,IAAA,WACA,MAAAjhD,IAEAkhD,GAAA1sG,GAAAsL,KACApL,OAAAusG,GACAE,KAAA1vB,GACAkE,KAAA,WACA,MAAAtE,KAEA+vB,MAAA,WACA,MAAA9vB,KAEA9vE,IAAA,WACA,MAAAkwE,KAEAhpB,IAAA,WACA,MAAAipB,KAEA34E,OAAA,WACA,MAAA44E,KAEAyvB,QAAAxvB,GACAyvB,KAAAxvB,GACAyvB,OAAA,WACA,MAAAxvB,OAGAyvB,GAAAhtG,GAAAsL,KACA2hG,GAAAzhD,EACA0hD,IAAAvwB,GACAwwB,SAAAvwB,GACAwwB,SAAA,SAAAvhF,GACA,MAAA+wD,IAAAD,GAAA9wD,MAGA7rB,IAAAg7B,KAAA,SAAAyW,GACA,GAAAv6C,GAAAu6C,EAAAz9B,QAAA,KAAA2T,EAAAzwB,GAAA,EAAAu6C,EAAAzlC,MAAA,EAAA9U,GAAAu6C,EAAAif,EAAAx5D,GAAA,EAAAu6C,EAAAzlC,MAAA9U,EAAA,OAGA,OAFAywB,GAAA+kF,GAAAruG,IAAAspB,IAAA8kF,GACA/7C,EAAAs8C,GAAA3uG,IAAAqyD,IAAAlF,EACAkxB,GAAAhsB,EAAA/oC,EAAA/vB,MAAA,KAAAq3F,GAAA55F,KAAAwC,UAAA,OA4DAmI,GAAAqtG,eAAA7vB,GAWAx9E,GAAAstG,eAAAtvB,GAWAh+E,GAAAutG,eAAArvB,GASAl+E,GAAAwtG,iBAAAlvB,GAOAt+E,GAAA+5B,UAAA,SAAAx6B,GACA,GAAA6N,GAAAwhF,GAAAh8D,gBAAA5yB,GAAAkuD,GAAAznB,OAAAvwB,IAAA,IACA,QAAAlW,GAAA+5B,UAAA,SAAAx6B,GACA,SAAAA,EAAA,CACA6N,EAAAylB,aAAA,YAAAtzB,EACA,IAAAooB,GAAAva,EAAA2sB,UAAA0zE,QAAAC,cAEA,UAAAnvB,IAAA52D,IAAAmpE,OAAA6c,MACKpuG,IAeLg/E,GAAA7oF,UAAAyW,SAAA,WACA,mBAAAzU,KAAAmqC,UAAA,WAAAnqC,KAAAkV,OAAA,UAAAlV,KAAAqnF,KAAA,UAAArnF,KAAAuI,MAAA,IAkBA,IAAA0tG,KACA71G,EAAA,EACAkgB,EAAA,EACAilB,EAAA,EACAj1B,EAAA,EACAwd,EAAA,EACAqG,EAAA,EAEA7rB,IAAA4tG,qBAAA/tB,GA+EA7/E,GAAAo/B,UACAp/B,GAAAo/B,OAAAyuE,OAAA,WACA,gBAAAnsB,GAEA,IADA,GAAAosB,MAAA52G,GAAA,EAAAT,EAAAirF,EAAAvqF,SACAD,EAAAT,GAAAq3G,EAAAlkG,KAAAo2E,GAAA0B,EAAAxqF,IACA,OAAA42G,KAoCA9tG,GAAAo/B,OAAA2uE,MAAA,WAEA,QAAAC,KACA,GAAwBh+D,GAAA32C,EAAAspD,EAAAzrD,EAAAyiC,EAAxB44D,KAAwB0b,KAAAC,EAAAluG,GAAAG,MAAA1J,GAAA03G,IAIxB,KAHAC,KACAtzG,KACAk1C,EAAA,EAAA94C,GAAA,IACAA,EAAAT,GAAA,CAEA,IADA4C,EAAA,EAAAsgC,GAAA,IACAA,EAAAljC,GACA4C,GAAAy3F,EAAA55F,GAAAyiC,EAEAs0E,GAAArkG,KAAAvQ,GACA80G,EAAAvkG,KAAA5J,GAAAG,MAAA1J,IACAu5C,GAAA32C,EAgBA,IAdAg1G,GACAH,EAAAn2F,KAAA,SAAAjgB,EAAAkgB,GACA,MAAAq2F,GAAAJ,EAAAn2G,GAAAm2G,EAAAj2F,MAGAs2F,GACAH,EAAAnsG,QAAA,SAAAgG,EAAA9Q,GACA8Q,EAAA+P,KAAA,SAAAjgB,EAAAkgB,GACA,MAAAs2F,GAAAxd,EAAA55F,GAAAY,GAAAg5F,EAAA55F,GAAA8gB,QAIAg4B,GAAA04B,GAAAjuE,EAAAhE,GAAAu5C,EACA32C,EAAA,EAAAnC,GAAA,IACAA,EAAAT,GAAA,CAEA,IADAksD,EAAAtpD,EAAAsgC,GAAA,IACAA,EAAAljC,GAAA,CACA,GAAA83G,GAAAL,EAAAh3G,GAAAs3G,EAAAL,EAAAI,GAAA50E,GAAAxyB,EAAA2pF,EAAAyd,GAAAC,GAAA1/B,EAAAz1E,EAAAiyE,EAAAjyE,GAAA8N,EAAA6oC,CACAuiD,GAAAgc,EAAA,IAAAC,IACAhjG,MAAA+iG,EACAE,SAAAD,EACA/tE,WAAAquC,EACApuC,SAAA4qC,EACAx1E,MAAAqR,GAGArM,EAAAyzG,IACA/iG,MAAA+iG,EACA9tE,WAAAkiB,EACAjiB,SAAArnC,EACAvD,MAAAm4G,EAAAM,IAEAl1G,GAAAoB,EAGA,IADAvD,GAAA,IACAA,EAAAT,GAEA,IADAkjC,EAAAziC,EAAA,IACAyiC,EAAAljC,GAAA,CACA,GAAA+F,GAAA+1F,EAAAr7F,EAAA,IAAAyiC,GAAA3iC,EAAAu7F,EAAA54D,EAAA,IAAAziC,IACAsF,EAAA1G,OAAAkB,EAAAlB,QACAs4G,EAAAxkG,KAAApN,EAAA1G,MAAAkB,EAAAlB,OACA0G,OAAAxF,EACAA,OAAAwF,IAEAA,SACAxF,WAKA03G,GAAAC,IAEA,QAAAA,KACAP,EAAAr2F,KAAA,SAAAjgB,EAAAkgB,GACA,MAAA02F,IAAA52G,EAAA0E,OAAA1G,MAAAgC,EAAAd,OAAAlB,OAAA,GAAAkiB,EAAAxb,OAAA1G,MAAAkiB,EAAAhhB,OAAAlB,OAAA,KArEA,GAAkBs4G,GAAAtzG,EAAAg2F,EAAAr6F,EAAA43G,EAAAC,EAAAI,EAAlBX,KAAkBtzG,EAAA,CA8GlB,OAtCAszG,GAAAjd,OAAA,SAAAz3F,GACA,MAAAxB,WAAAV,QACAV,GAAAq6F,EAAAz3F,IAAAy3F,EAAA35F,OACAi3G,EAAAtzG,EAAA,KACAizG,GAHAjd,GAKAid,EAAAtzG,QAAA,SAAApB,GACA,MAAAxB,WAAAV,QACAsD,EAAApB,EACA+0G,EAAAtzG,EAAA,KACAizG,GAHAtzG,GAKAszG,EAAAM,WAAA,SAAAh1G,GACA,MAAAxB,WAAAV,QACAk3G,EAAAh1G,EACA+0G,EAAAtzG,EAAA,KACAizG,GAHAM,GAKAN,EAAAO,cAAA,SAAAj1G,GACA,MAAAxB,WAAAV,QACAm3G,EAAAj1G,EACA+0G,EAAA,KACAL,GAHAO,GAKAP,EAAAW,WAAA,SAAAr1G,GACA,MAAAxB,WAAAV,QACAu3G,EAAAr1G,EACA+0G,GAAAO,IACAZ,GAHAW,GAKAX,EAAAK,OAAA,WAEA,MADAA,IAAAJ,IACAI,GAEAL,EAAAjzG,OAAA,WAEA,MADAA,IAAAkzG,IACAlzG,GAEAizG,GAEA/tG,GAAAo/B,OAAAqC,MAAA,WAEA,QAAAmtE,GAAA3/F,GACA,gBAAAkyE,EAAA9gE,EAAAwqC,EAAAvqC,GACA,GAAA6gE,EAAA9hF,QAAA4P,EAAA,CACA,GAAAR,GAAA0yE,EAAA98D,GAAApV,EAAA5V,EAAA8T,EAAAg0E,EAAA78D,GAAArV,EAAAzV,EAAAq1G,EAAAvuF,EAAAD,EAAAyuF,EAAArgG,IAAAtB,GACA,IAAA0hG,IAAAE,EAAAD,EAAA,CACA,GAAAA,EAAAE,EAAA,CACA,GAAAh/D,GAAAmxC,EAAAG,OAAAwtB,CACA7/F,GAAA8xE,IAAAtyE,EAAAuhC,EACA/gC,EAAA+xE,IAAA7zE,EAAA6iC,EAEA,SAEA,GAAAmxC,EAAA9hF,OAAAyvG,KAAAE,EAAA,CACA,GAAAh/D,GAAAmxC,EAAAI,YAAAutB,CACA7/F,GAAA8xE,IAAAtyE,EAAAuhC,EACA/gC,EAAA+xE,IAAA7zE,EAAA6iC,GAGA,OAAAmxC,EAAAG,QAgMA,QAAA2tB,GAAAjnG,GACAA,EAAA+4E,GAAA/gF,GAAAk7C,MAAA7hD,EAAA2O,EAAAg5E,GAAAhhF,GAAAk7C,MAAA1hD,EACAioC,EAAAytE,SArNA,GAAkBjjF,GAAA2qB,EAAAwqC,EAAA+tB,EAAAC,EAAA/tB,EAAlB5/C,KAAkByZ,EAAAl7C,GAAAksD,SAAA,sBAAA3xD,GAAA,KAAA80G,EAAA,GAAAC,EAAAC,GAAAC,EAAAC,GAAAnuB,GAAA,GAAA0tB,EAAAU,GAAAC,EAAA,GAAAZ,EAAA,IAAAt0B,KAAAiH,IAuNlB,OAjMAjgD,GAAAnoC,KAAA,WACA,IAAA8nF,GAAA,UAMA,MALAn1D,GAAA,KACAivB,EAAAtjC,KACA5d,KAAA,MACAonF,QAAA,KAEA,CAEA,IAAA/W,GAAAnzE,EAAAmQ,EAAAkE,EAAAoc,EAAAo2B,EAAA/N,EAAA32C,EAAAG,EAAA/C,EAAAgkF,EAAAtjF,OAAAu5D,EAAAgxB,EAAAvqF,MACA,KAAAD,EAAA,EAAiBA,EAAAw5D,IAAOx5D,EACxBmQ,EAAAq6E,EAAAxqF,GACAqU,EAAAlE,EAAA7K,OACAmrB,EAAAtgB,EAAArQ,OACAqC,EAAAsuB,EAAAtuB,EAAAkS,EAAAlS,EACAG,EAAAmuB,EAAAnuB,EAAA+R,EAAA/R,GACAukD,EAAA1kD,IAAAG,OACAukD,EAAAqjC,EAAAguB,EAAAl4G,KAAA6mD,EAAAn2C,KAAAm6B,KAAAgc,IAAAoxD,EAAAj4G,IAAA6mD,EACA1kD,GAAA0kD,EACAvkD,GAAAukD,EACAp2B,EAAAtuB,MAAA22C,EAAAzkC,EAAAqkG,OAAAjoF,EAAAioF,OAAArkG,EAAAqkG,QAAArkG,EAAAqkG,OAAAjoF,EAAAioF,QAAA,IACAjoF,EAAAnuB,KAAAw2C,EACAzkC,EAAAlS,MAAA22C,EAAA,EAAAA,GACAzkC,EAAA/R,KAAAw2C,EAGA,KAAAA,EAAAoxC,EAAAuuB,KACAt2G,EAAAkB,EAAA,KACAf,EAAAe,EAAA,KACArD,GAAA,EACA84C,GAAA,OAAA94C,EAAAT,GACA4Q,EAAAozE,EAAAvjF,GACAmQ,EAAAhO,MAAAgO,EAAAhO,GAAA22C,EACA3oC,EAAA7N,MAAA6N,EAAA7N,GAAAw2C,CAGA,IAAAsxC,EAGA,IAFAJ,GAAA7W,EAAArqE,GAAAwqG,KAAAiB,SAAAhxB,GAAA2G,EAAAC,GACAnqF,GAAA,IACAA,EAAAT,IACA4Q,EAAAozE,EAAAvjF,IAAA0pF,OACAvW,EAAA8hC,MAAAyC,EAAAvnG,GAKA,KADAnQ,GAAA,IACAA,EAAAT,GACA4Q,EAAAozE,EAAAvjF,GACAmQ,EAAAu5E,OACAv5E,EAAAhO,EAAAgO,EAAA05E,GACA15E,EAAA7N,EAAA6N,EAAA25E,KAEA35E,EAAAhO,IAAAgO,EAAA05E,IAAA15E,EAAA05E,GAAA15E,EAAAhO,IAAAg2G,EACAhoG,EAAA7N,IAAA6N,EAAA25E,IAAA35E,EAAA25E,GAAA35E,EAAA7N,IAAA61G,EAGAn0D,GAAA5hD,MACAU,KAAA,OACAonF,WAGA3/C,EAAAg5C,MAAA,SAAAphF,GACA,MAAAxB,WAAAV,QACAsjF,EAAAphF,EACAooC,GAFAg5C,GAIAh5C,EAAAigD,MAAA,SAAAroF,GACA,MAAAxB,WAAAV,QACAuqF,EAAAroF,EACAooC,GAFAigD,GAIAjgD,EAAAlnC,KAAA,SAAAlB,GACA,MAAAxB,WAAAV,QACAoD,EAAAlB,EACAooC,GAFAlnC,GAIAknC,EAAA6tE,aAAA,SAAAj2G,GACA,MAAAxB,WAAAV,QACAm4G,EAAA,mBAAAj2G,QACAooC,GAFA6tE,GAIA7tE,EAAAhP,SAAAgP,EAAA6tE,aACA7tE,EAAA+tE,aAAA,SAAAn2G,GACA,MAAAxB,WAAAV,QACAq4G,EAAA,mBAAAn2G,QACAooC,GAFA+tE,GAIA/tE,EAAA4tE,SAAA,SAAAh2G,GACA,MAAAxB,WAAAV,QACAk4G,GAAAh2G,EACAooC,GAFA4tE,GAIA5tE,EAAA6/C,OAAA,SAAAjoF,GACA,MAAAxB,WAAAV,QACAmqF,EAAA,mBAAAjoF,QACAooC,GAFA6/C,GAIA7/C,EAAAouE,eAAA,SAAAx2G,GACA,MAAAxB,WAAAV,QACA63G,EAAA31G,IACAooC,GAFA75B,KAAAm6B,KAAAitE,IAIAvtE,EAAAkuE,QAAA,SAAAt2G,GACA,MAAAxB,WAAAV,QACAw4G,GAAAt2G,EACAooC,GAFAkuE,GAIAluE,EAAAquE,MAAA,SAAAz2G,GACA,MAAAxB,WAAAV,QACA43G,EAAA11G,IACAooC,GAFA75B,KAAAm6B,KAAAgtE,IAIAttE,EAAA2/C,MAAA,SAAA/nF,GACA,MAAAxB,WAAAV,QACAkC,KACA+nF,EACA/nF,EAAA,EACA+nF,EAAA/nF,GAEA4yB,EAAAgR,EAAA,KAAAhR,EAAAtE,EAAA7F,IAAAmK,EAAA,KACAivB,EAAAtjC,KACA5d,KAAA,MACAonF,QAAA,KAGO/nF,EAAA,IACP6hD,EAAA1xC,OACAxP,KAAA,QACAonF,QAAA/nF,IAEA4yB,EAAA+rC,GAAAv2B,EAAAnoC,OAEAmoC,GAnBA2/C,GAqBA3/C,EAAAj4B,MAAA,WA0BA,QAAAsK,GAAAi8F,EAAAx1G,GACA,IAAAy1G,EAAA,CAEA,IADAA,EAAA,GAAAzoG,OAAA9Q,GACAkjC,EAAA,EAAqBA,EAAAljC,IAAOkjC,EAC5Bq2E,EAAAr2E,KAEA,KAAAA,EAAA,EAAqBA,EAAA+2B,IAAO/2B,EAAA,CAC5B,GAAAtyB,GAAAq6E,EAAA/nD,EACAq2E,GAAA3oG,EAAA7K,OAAAgP,OAAA5B,KAAAvC,EAAArQ,QACAg5G,EAAA3oG,EAAArQ,OAAAwU,OAAA5B,KAAAvC,EAAA7K,SAIA,IADA,GAAAnD,GAAAiiC,EAAA00E,EAAA94G,GAAAyiC,GAAA,EAAAokB,EAAAziB,EAAAnkC,SACAwiC,EAAAokB,GAAA,IAAAzxB,MAAAjzB,EAAAiiC,EAAA3B,GAAAo2E,IAAA,MAAA12G,EACA,OAAAuO,MAAAs4C,SAAA3lD,EAvCA,GAAArD,GAAA84G,EAAA3oG,EAAA5Q,EAAAgkF,EAAAtjF,OAAAu5D,EAAAgxB,EAAAvqF,OAAAqT,EAAAjQ,EAAA,GAAAgQ,EAAAhQ,EAAA,EACA,KAAArD,EAAA,EAAiBA,EAAAT,IAAOS,GACxBmQ,EAAAozE,EAAAvjF,IAAAsU,MAAAtU,EACAmQ,EAAAuoG,OAAA,CAEA,KAAA14G,EAAA,EAAiBA,EAAAw5D,IAAOx5D,EACxBmQ,EAAAq6E,EAAAxqF,GACA,gBAAAmQ,GAAA7K,SAAA6K,EAAA7K,OAAAi+E,EAAApzE,EAAA7K,SACA,gBAAA6K,GAAArQ,SAAAqQ,EAAArQ,OAAAyjF,EAAApzE,EAAArQ,WACAqQ,EAAA7K,OAAAozG,SACAvoG,EAAArQ,OAAA44G,MAEA,KAAA14G,EAAA,EAAiBA,EAAAT,IAAOS,EACxBmQ,EAAAozE,EAAAvjF,GACAo1B,MAAAjlB,EAAAhO,KAAAgO,EAAAhO,EAAAya,EAAA,IAAAtJ,IACA8hB,MAAAjlB,EAAA7N,KAAA6N,EAAA7N,EAAAsa,EAAA,IAAAvJ,IACA+hB,MAAAjlB,EAAA05E,MAAA15E,EAAA05E,GAAA15E,EAAAhO,GACAizB,MAAAjlB,EAAA25E,MAAA35E,EAAA25E,GAAA35E,EAAA7N,EAGA,IADA21G,KACA,mBAAAG,GAAA,IAAAp4G,EAAA,EAAyDA,EAAAw5D,IAAOx5D,EAAAi4G,EAAAj4G,IAAAo4G,EAAAj6G,KAAAqC,KAAAgqF,EAAAxqF,UAA2D,KAAAA,EAAA,EAAiBA,EAAAw5D,IAAOx5D,EAAAi4G,EAAAj4G,GAAAo4G,CAEnJ,IADAF,KACA,mBAAAI,GAAA,IAAAt4G,EAAA,EAAyDA,EAAAw5D,IAAOx5D,EAAAk4G,EAAAl4G,IAAAs4G,EAAAn6G,KAAAqC,KAAAgqF,EAAAxqF,UAA2D,KAAAA,EAAA,EAAiBA,EAAAw5D,IAAOx5D,EAAAk4G,EAAAl4G,GAAAs4G,CAEnJ,IADAnuB,KACA,mBAAAC,GAAA,IAAApqF,EAAA,EAAmDA,EAAAT,IAAOS,EAAAmqF,EAAAnqF,IAAAoqF,EAAAjsF,KAAAqC,KAAA+iF,EAAAvjF,UAAmD,KAAAA,EAAA,EAAiBA,EAAAT,IAAOS,EAAAmqF,EAAAnqF,GAAAoqF,CAiBrI,OAAA7/C,GAAAytE,UAEAztE,EAAAytE,OAAA,WACA,MAAAztE,GAAA2/C,MAAA,KAEA3/C,EAAAh4B,KAAA,WACA,MAAAg4B,GAAA2/C,MAAA,IAEA3/C,EAAAmV,KAAA,WAEA,GADAA,MAAA52C,GAAA66C,SAAAjE,OAAAkE,OAAA0Q,GAAAltC,GAAA,kBAAAqiE,IAAAriE,GAAA,aAAA2wF,GAAA3wF,GAAA,gBAAAuiE,MACAhpF,UAAAV,OAAA,MAAAy/C,EACAl/C,MAAA4mB,GAAA,kBAAAwiE,IAAAxiE,GAAA,iBAAA2iE,IAAA5rF,KAAAuhD,IAMA52C,GAAA83D,OAAAr2B,EAAAyZ,EAAA,MA0CA,IAAAq0D,IAAA,GAAAE,GAAA,EAAAC,GAAAvgG,GACAnP,IAAAo/B,OAAAqiD,UAAA,WAEA,QAAAA,GAAA5G,GACA,GAAA5rE,GAAAghG,GAAAp1B,GAAAJ,IAEA,KADAI,EAAAxL,MAAA,EACA,OAAApgE,EAAAghG,EAAArpC,QAEA,GADA6T,EAAA7wE,KAAAqF,IACAihG,EAAAv1B,EAAAtlF,KAAAosF,EAAAxyE,IAAAogE,UAAA54E,EAAAy5G,EAAA/4G,QAAA,CAEA,IADA,GAAAV,GAAAy5G,EAAAhuB,IACAzrF,GAAA,GACAw5G,EAAArmG,KAAAs4E,EAAAguB,EAAAz5G,IACAyrF,EAAA55C,OAAAr5B,EACAizE,EAAA7S,MAAApgE,EAAAogE,MAAA,CAEAv5E,KAAAmZ,EAAAnZ,MAAA,GACAmZ,EAAA0rE,SAAAu1B,MAEAp6G,KAAAmZ,EAAAnZ,SAAAT,KAAAosF,EAAAxyE,IAAAogE,QAAA,SACApgE,GAAA0rE,QAQA,OALAkH,IAAAhH,EAAA,SAAA5rE,GACA,GAAAihG,GAAA5nE,CACAvwB,KAAAm4F,EAAAjhG,EAAA0rE,WAAAu1B,EAAAn4F,QACAjiB,IAAAwyC,EAAAr5B,EAAAq5B,YAAAxyC,OAAAmZ,EAAAnZ,SAEA2kF,EAzBA,GAAA1iE,GAAAkqE,GAAAtH,EAAAoH,GAAAjsF,EAAAksF,EAuDA,OA5BAP,GAAA1pE,KAAA,SAAA1e,GACA,MAAAxB,WAAAV,QACA4gB,EAAA1e,EACAooF,GAFA1pE,GAIA0pE,EAAA9G,SAAA,SAAAthF,GACA,MAAAxB,WAAAV,QACAwjF,EAAAthF,EACAooF,GAFA9G,GAIA8G,EAAA3rF,MAAA,SAAAuD,GACA,MAAAxB,WAAAV,QACArB,EAAAuD,EACAooF,GAFA3rF,GAIA2rF,EAAA0uB,QAAA,SAAAt1B,GAWA,MAVA/kF,KACA8rF,GAAA/G,EAAA,SAAA5rE,GACAA,EAAA0rE,WAAA1rE,EAAAnZ,MAAA,KAEA+rF,GAAAhH,EAAA,SAAA5rE,GACA,GAAAq5B,EACAr5B,GAAA0rE,WAAA1rE,EAAAnZ,SAAAT,KAAAosF,EAAAxyE,IAAAogE,QAAA,IACA/mC,EAAAr5B,EAAAq5B,YAAAxyC,OAAAmZ,EAAAnZ,UAGA+kF,GAEA4G,GAkDAzhF,GAAAo/B,OAAAgxE,UAAA,WAEA,QAAAt8F,GAAA7E,EAAA5V,EAAAoV,EAAAtB,GACA,GAAAwtE,GAAA1rE,EAAA0rE,QAKA,IAJA1rE,EAAA5V,IACA4V,EAAAzV,EAAAyV,EAAAogE,MAAAliE,EACA8B,EAAAR,KACAQ,EAAA9B,KACAwtE,IAAAlkF,EAAAkkF,EAAAxjF,QAAA,CACA,GAAAV,GAAAwmC,EAAAj1B,EAAA9Q,GAAA,CAEA,KADAuX,EAAAQ,EAAAnZ,MAAA2Y,EAAAQ,EAAAnZ,MAAA,IACAoB,EAAAT,GACAqd,EAAAmpB,EAAA09C,EAAAzjF,GAAAmC,EAAA2O,EAAAi1B,EAAAnnC,MAAA2Y,EAAAtB,GACA9T,GAAA2O,GAIA,QAAAqnE,GAAApgE,GACA,GAAA0rE,GAAA1rE,EAAA0rE,SAAA3yE,EAAA,CACA,IAAA2yE,IAAAlkF,EAAAkkF,EAAAxjF,QAEA,IADA,GAAAV,GAAAS,GAAA,IACAA,EAAAT,GAAAuR,EAAAJ,KAAAnO,IAAAuO,EAAAqnE,EAAAsL,EAAAzjF,IAEA,UAAA8Q,EAEA,QAAAooG,GAAApoG,EAAA9Q,GACA,GAAAujF,GAAAgH,EAAApsF,KAAAqC,KAAAsQ,EAAA9Q,EAEA,OADA4c,GAAA2mE,EAAA,KAAAlgF,EAAA,GAAAA,EAAA,GAAA80E,EAAAoL,EAAA,KACAA,EA3BA,GAAAgH,GAAAzhF,GAAAo/B,OAAAqiD,YAAAlnF,GAAA,IAkCA,OALA61G,GAAA71G,KAAA,SAAAlB,GACA,MAAAxB,WAAAV,QACAoD,EAAAlB,EACA+2G,GAFA71G,GAIAinF,GAAA4uB,EAAA3uB,IAEAzhF,GAAAo/B,OAAA3jC,IAAA,WAEA,QAAAA,GAAAzC,GACA,GAEOmO,GAFP1Q,EAAAuC,EAAA7B,OAAAyC,EAAAZ,EAAAsS,IAAA,SAAAtD,EAAA9Q,GACA,OAAApB,EAAAT,KAAAoG,EAAAuM,EAAA9Q,KACOY,IAAA,mBAAA2oC,KAAA7oC,MAAAF,KAAAG,WAAA4oC,GAAAujD,GAAA,mBAAAtjD,KAAA9oC,MAAAF,KAAAG,WAAA6oC,GAAA5oC,EAAAuf,EAAAzP,KAAAlO,IAAAkO,KAAAu6B,IAAA6hD,GAAAvtF,IAAA,mBAAAoyF,KAAAjxF,MAAAF,KAAAG,WAAAgxF,IAAAnf,EAAAryD,GAAA2sE,EAAA,QAAA8L,EAAA9vF,GAAA8vF,IAAAl2F,GAAAo2C,EAAA8/C,GAAA9L,EAAAvtF,EAAAizE,GAAAomB,EAAA,EAAAtkF,EAAAxL,GAAAG,MAAA1J,GAAAmO,IAeP,OAdA,OAAAmT,GAAAvM,EAAAuM,SAAAs4F,GAAA,SAAAn5G,EAAAyiC,GACA,MAAA//B,GAAA+/B,GAAA//B,EAAA1C,IACO,SAAAA,EAAAyiC,GACP,MAAA5hB,GAAA/e,EAAA9B,GAAA8B,EAAA2gC,MAEAnuB,EAAAxJ,QAAA,SAAA9K,GACA0N,EAAA1N,IACA8B,OAAA9B,GACApB,MAAAqR,EAAAvN,EAAA1C,GACAupC,WAAA3oC,EACA4oC,SAAA5oC,GAAAqP,EAAA6oC,EAAA05B,EACAmf,SAAAxxE,KAGAzS,EAnBA,GAAA9O,GAAA6a,OAAAoH,EAAAs4F,GAAA5vE,EAAA,EAAAC,EAAAgoC,GAAAmgB,EAAA,CA8CA,OAzBAptF,GAAA3F,MAAA,SAAA+0D,GACA,MAAAhzD,WAAAV,QACArB,EAAA+0D,EACApvD,GAFA3F,GAIA2F,EAAAsc,KAAA,SAAA8yC,GACA,MAAAhzD,WAAAV,QACA4gB,EAAA8yC,EACApvD,GAFAsc,GAIAtc,EAAAglC,WAAA,SAAAoqB,GACA,MAAAhzD,WAAAV,QACAspC,EAAAoqB,EACApvD,GAFAglC,GAIAhlC,EAAAilC,SAAA,SAAAmqB,GACA,MAAAhzD,WAAAV,QACAupC,EAAAmqB,EACApvD,GAFAilC,GAIAjlC,EAAAotF,SAAA,SAAAh+B,GACA,MAAAhzD,WAAAV,QACA0xF,EAAAh+B,EACApvD,GAFAotF,GAIAptF,EAEA,IAAA40G,MACArwG,IAAAo/B,OAAA6wE,MAAA,WAEA,QAAAA,GAAAj3G,EAAAwS,GACA,KAAA/U,EAAAuC,EAAA7B,QAAA,MAAA6B,EACA,IAAAs3G,GAAAt3G,EAAAsS,IAAA,SAAAtD,EAAA9Q,GACA,MAAA0C,GAAAvE,KAAA46G,EAAAjoG,EAAA9Q,KAEAigC,EAAAm5E,EAAAhlG,IAAA,SAAAtD,GACA,MAAAA,GAAAsD,IAAA,SAAAnE,EAAAjQ,GACA,OAAAmC,EAAAhE,KAAA46G,EAAA9oG,EAAAjQ,GAAAsC,EAAAnE,KAAA46G,EAAA9oG,EAAAjQ,QAGAq5G,EAAAv9D,EAAA39C,KAAA46G,EAAA94E,EAAA3rB,EACA8kG,GAAAtwG,GAAAywF,QAAA6f,EAAAC,GACAp5E,EAAAn3B,GAAAywF,QAAAt5D,EAAAo5E,EACA,IACA95G,GAAAS,EAAAyiC,EAAAtyB,EADAs1C,EAAA+B,EAAArpD,KAAA46G,EAAA94E,EAAA3rB,GACAklD,EAAA4/C,EAAA,GAAAn5G,MACA,KAAAwiC,EAAA,EAAiBA,EAAA+2B,IAAO/2B,EAExB,IADAuzE,EAAA73G,KAAA46G,EAAAK,EAAA,GAAA32E,GAAAtyB,EAAAs1C,EAAAhjB,GAAAxC,EAAA,GAAAwC,GAAA,IACAziC,EAAA,EAAmBA,EAAAT,IAAOS,EAC1Bg2G,EAAA73G,KAAA46G,EAAAK,EAAAp5G,GAAAyiC,GAAAtyB,GAAA8vB,EAAAjgC,EAAA,GAAAyiC,GAAA,GAAAxC,EAAAjgC,GAAAyiC,GAAA,GAGA,OAAA3gC,GAtBA,GAAAY,GAAA4xD,EAAAxY,EAAAsvC,GAAA5jC,EAAA6jC,GAAA2qB,EAAA7qB,GAAAhpF,EAAA8oF,GAAA3oF,EAAA4oF,EAsDA,OA9BA6tB,GAAAr2G,OAAA,SAAAP,GACA,MAAAxB,WAAAV,QACAyC,EAAAP,EACA42G,GAFAr2G,GAIAq2G,EAAAj9D,MAAA,SAAA35C,GACA,MAAAxB,WAAAV,QACA67C,EAAA,mBAAA35C,KAAAm3G,GAAAnyG,IAAAhF,IAAAipF,GACA2tB,GAFAj9D,GAIAi9D,EAAAvxD,OAAA,SAAArlD,GACA,MAAAxB,WAAAV,QACAunD,EAAA,mBAAArlD,KAAAo3G,GAAApyG,IAAAhF,IAAAkpF,GACA0tB,GAFAvxD,GAIAuxD,EAAA52G,EAAA,SAAAiwD,GACA,MAAAzxD,WAAAV,QACAkC,EAAAiwD,EACA2mD,GAFA52G,GAIA42G,EAAAz2G,EAAA,SAAA8vD,GACA,MAAAzxD,WAAAV,QACAqC,EAAA8vD,EACA2mD,GAFAz2G,GAIAy2G,EAAA/C,IAAA,SAAA5jD,GACA,MAAAzxD,WAAAV,QACA+1G,EAAA5jD,EACA2mD,GAFA/C,GAIA+C,EAYA,IAAAO,IAAAxwG,GAAAsL,KACAolG,aAAA,SAAA13G,GACA,GAAA9B,GAAAyiC,EAAAljC,EAAAuC,EAAA7B,OAAAsC,EAAAT,EAAAsS,IAAAk3E,IAAAmuB,EAAA33G,EAAAsS,IAAAm3E,IAAAj3E,EAAAxL,GAAAG,MAAA1J,GAAAshB,KAAA,SAAAjgB,EAAAkgB,GACA,MAAAve,GAAA3B,GAAA2B,EAAAue,KACOtJ,EAAA,EAAAC,EAAA,EAAAiiG,KAAAC,IACP,KAAA35G,EAAA,EAAiBA,EAAAT,IAAOS,EACxByiC,EAAAnuB,EAAAtU,GACAwX,EAAAC,GACAD,GAAAiiG,EAAAh3E,GACAi3E,EAAAhnG,KAAA+vB,KAEAhrB,GAAAgiG,EAAAh3E,GACAk3E,EAAAjnG,KAAA+vB,GAGA,OAAAk3E,GAAA19D,UAAAhoC,OAAAylG,IAEAz9D,QAAA,SAAAn6C,GACA,MAAAgH,IAAAG,MAAAnH,EAAA7B,QAAAg8C,WAEA92C,QAAAimF,KAEAmuB,GAAAzwG,GAAAsL,KACAwlG,WAAA,SAAA93G,GACA,GAAA9B,GAAAyiC,EAAAtyB,EAAA5Q,EAAAuC,EAAA7B,OAAAu5D,EAAA13D,EAAA,GAAA7B,OAAAw5G,KAAAl3G,EAAA,EAAA2nD,IACA,KAAAznB,EAAA,EAAiBA,EAAA+2B,IAAO/2B,EAAA,CACxB,IAAAziC,EAAA,EAAAmQ,EAAA,EAA0BnQ,EAAAT,EAAOS,IAAAmQ,GAAArO,EAAA9B,GAAAyiC,GAAA,EACjCtyB,GAAA5N,MAAA4N,GACAspG,EAAA/mG,KAAAvC,GAEA,IAAAsyB,EAAA,EAAiBA,EAAA+2B,IAAO/2B,EACxBynB,EAAAznB,IAAAlgC,EAAAk3G,EAAAh3E,IAAA,CAEA,OAAAynB,IAEA2vD,OAAA,SAAA/3G,GACA,GAAA9B,GAAAyiC,EAAAqW,EAAA2zC,EAAAC,EAAAotB,EAAAviG,EAAApH,EAAA4pG,EAAAx6G,EAAAuC,EAAA7B,OAAAkC,EAAAL,EAAA,GAAA03D,EAAAr3D,EAAAlC,OAAAiqD,IAEA,KADAA,EAAA,GAAA/5C,EAAA4pG,EAAA,EACAt3E,EAAA,EAAiBA,EAAA+2B,IAAO/2B,EAAA,CACxB,IAAAziC,EAAA,EAAAysF,EAAA,EAA2BzsF,EAAAT,IAAOS,EAAAysF,GAAA3qF,EAAA9B,GAAAyiC,GAAA,EAClC,KAAAziC,EAAA,EAAA0sF,EAAA,EAAAn1E,EAAApV,EAAAsgC,GAAA,GAAAtgC,EAAAsgC,EAAA,MAAuDziC,EAAAT,IAAOS,EAAA,CAC9D,IAAA84C,EAAA,EAAAghE,GAAAh4G,EAAA9B,GAAAyiC,GAAA,GAAA3gC,EAAA9B,GAAAyiC,EAAA,UAAAlrB,GAA0EuhC,EAAA94C,IAAO84C,EACjFghE,IAAAh4G,EAAAg3C,GAAArW,GAAA,GAAA3gC,EAAAg3C,GAAArW,EAAA,OAAAlrB,CAEAm1E,IAAAotB,EAAAh4G,EAAA9B,GAAAyiC,GAAA,GAEAynB,EAAAznB,GAAAtyB,GAAAs8E,EAAAC,EAAAD,EAAAl1E,EAAA,EACApH,EAAA4pG,MAAA5pG,GAEA,IAAAsyB,EAAA,EAAiBA,EAAA+2B,IAAO/2B,EAAAynB,EAAAznB,IAAAs3E,CACxB,OAAA7vD,IAEA8vD,OAAA,SAAAl4G,GACA,GAAA9B,GAAAyiC,EAAAtyB,EAAA5Q,EAAAuC,EAAA7B,OAAAu5D,EAAA13D,EAAA,GAAA7B,OAAA64C,EAAA,EAAAv5C,EAAA2qD,IACA,KAAAznB,EAAA,EAAiBA,EAAA+2B,IAAO/2B,EAAA,CACxB,IAAAziC,EAAA,EAAAmQ,EAAA,EAA0BnQ,EAAAT,EAAOS,IAAAmQ,GAAArO,EAAA9B,GAAAyiC,GAAA,EACjC,IAAAtyB,EAAA,IAAAnQ,EAAA,EAA0BA,EAAAT,EAAOS,IAAA8B,EAAA9B,GAAAyiC,GAAA,IAAAtyB,MAAyB,KAAAnQ,EAAA,EAAiBA,EAAAT,EAAOS,IAAA8B,EAAA9B,GAAAyiC,GAAA,GAAAqW,EAElF,IAAArW,EAAA,EAAiBA,EAAA+2B,IAAO/2B,EAAAynB,EAAAznB,GAAA,CACxB,OAAAynB,IAEA+vD,KAAA5uB,IA0BAviF,IAAAo/B,OAAAgyE,UAAA,WAEA,QAAAA,GAAAp4G,EAAA9B,GAEA,IADA,GAAAm6G,GAAAh4G,EAAAi4G,KAAA13G,EAAAZ,EAAAsS,IAAAimG,EAAA75G,MAAAyI,EAAAonF,EAAAlyF,KAAAqC,KAAAkC,EAAA1C,GAAA6wF,EAAAypB,EAAAn8G,KAAAqC,KAAAyI,EAAAvG,EAAA1C,MAAA,EAAAT,EAAAmD,EAAAzC,OAAAu5D,EAAAq3B,EAAA5wF,OAAA,EAAA64C,EAAAyhE,EAAA,IAAAh7G,IACAS,EAAAw5D,GACA2gD,EAAAC,EAAAp6G,MACAm6G,EAAA5iG,GAAAs5E,EAAA7wF,EAAA,IAAAm6G,EAAAh4G,EAAA0uF,EAAA7wF,IACAm6G,EAAA73G,EAAA,CAEA,IAAAk3D,EAAA,EAEA,IADAx5D,GAAA,IACAA,EAAAT,IACA4C,EAAAO,EAAA1C,KACAiJ,EAAA,IAAA9G,GAAA8G,EAAA,KACAkxG,EAAAC,EAAAtxG,GAAA6lF,OAAAkC,EAAA1uF,EAAA,EAAAq3D,GAAA,GACA2gD,EAAA73G,GAAAw2C,EACAqhE,EAAAznG,KAAA5Q,EAAA9B,IAIA,OAAAo6G,GAnBA,GAAAG,IAAA,EAAAF,EAAA5gG,OAAA42E,EAAAzE,GAAA0uB,EAAA7uB,EA2CA,OAtBAyuB,GAAAt7G,MAAA,SAAAuD,GACA,MAAAxB,WAAAV,QACAo6G,EAAAl4G,EACA+3G,GAFAG,GAIAH,EAAAjxG,MAAA,SAAA9G,GACA,MAAAxB,WAAAV,QACAowF,EAAA/wB,GAAAn9D,GACA+3G,GAFA7pB,GAIA6pB,EAAAE,KAAA,SAAAj4G,GACA,MAAAxB,WAAAV,QACAq6G,EAAA,iBAAAn4G,GAAA,SAAA8G,GACA,MAAAyiF,IAAAziF,EAAA9G,IACOm9D,GAAAn9D,GACP+3G,GAJAI,GAMAJ,EAAAK,UAAA,SAAAp4G,GACA,MAAAxB,WAAAV,QACAs6G,IAAAp4G,EACA+3G,GAFAK,GAIAL,GAaApxG,GAAAo/B,OAAAsyE,KAAA,WAEA,QAAAA,GAAA1pG,EAAA9Q,GACA,GAAAujF,GAAAgH,EAAApsF,KAAAqC,KAAAsQ,EAAA9Q,GAAA2jF,EAAAJ,EAAA,GAAAjwE,EAAAjQ,EAAA,GAAAgQ,EAAAhQ,EAAA,GAAAglD,EAAA,MAAA5f,EAAA/3B,KAAAm6B,KAAA,mBAAApC,KAAA,WACA,MAAAA,GAOA,IALAk7C,EAAAxhF,EAAAwhF,EAAArhF,EAAA,EACAqoF,GAAAhH,EAAA,SAAA7yE,GACAA,EAAAu3C,KAAAv3C,EAAAlS,SAEA+rF,GAAAhH,EAAAyI,IACA7oF,EAAA,CACA,GAAA4oF,GAAA5oF,GAAAklC,EAAA,EAAA/3B,KAAAnO,IAAA,EAAAohF,EAAAt7B,EAAA/0C,EAAA,EAAAqwE,EAAAt7B,EAAAh1C,IAAA,CACAs3E,IAAAhH,EAAA,SAAA7yE,GACAA,EAAAu3C,GAAA8jC,IAEAxB,GAAAhH,EAAAyI,IACAzB,GAAAhH,EAAA,SAAA7yE,GACAA,EAAAu3C,GAAA8jC,IAIA,MADAS,IAAAjJ,EAAArwE,EAAA,EAAAD,EAAA,EAAAo1B,EAAA,IAAA/3B,KAAAnO,IAAA,EAAAohF,EAAAt7B,EAAA/0C,EAAA,EAAAqwE,EAAAt7B,EAAAh1C,IACAkwE,EArBA,GAAA96C,GAAA8hD,EAAAzhF,GAAAo/B,OAAAqiD,YAAA1pE,KAAAgrE,IAAAtoF,EAAA,EAAAF,GAAA,IAsCA,OAfAm3G,GAAAn3G,KAAA,SAAAswD,GACA,MAAAhzD,WAAAV,QACAoD,EAAAswD,EACA6mD,GAFAn3G,GAIAm3G,EAAA/xE,OAAA,SAAAkrB,GACA,MAAAhzD,WAAAV,QACAwoC,EAAA,MAAAkrB,GAAA,mBAAAA,QACA6mD,GAFA/xE,GAIA+xE,EAAAj3G,QAAA,SAAAowD,GACA,MAAAhzD,WAAAV,QACAsD,GAAAowD,EACA6mD,GAFAj3G,GAIA+mF,GAAAkwB,EAAAjwB,IAmHAzhF,GAAAo/B,OAAAw6C,KAAA,WAEA,QAAAA,GAAA5xE,EAAA9Q,GACA,GAAAujF,GAAAgH,EAAApsF,KAAAqC,KAAAsQ,EAAA9Q,GAAAy6G,EAAAl3B,EAAA,GAAAm3B,EAAAC,EAAAF,EAGA,IAFA9vB,GAAA+vB,EAAAE,GAAAF,EAAAtpE,OAAAooB,GAAAkhD,EAAAtoD,EACAs4B,GAAAgwB,EAAAG,GACAC,EAAApwB,GAAA+vB,EAAAM,OAAoE,CACpE,GAAArjG,GAAA+iG,EAAAj3G,EAAAi3G,EAAAhjG,EAAAgjG,CACA/vB,IAAA+vB,EAAA,SAAA1iG,GACAA,EAAA5V,EAAAuV,EAAAvV,IAAAuV,EAAAK,GACAA,EAAA5V,EAAAqB,EAAArB,IAAAqB,EAAAuU,GACAA,EAAAogE,MAAA1gE,EAAA0gE,QAAA1gE,EAAAM,IAEA,IAAAijG,GAAAC,EAAAvjG,EAAAlU,GAAA,EAAAkU,EAAAvV,EAAAolF,EAAAlkF,EAAA,IAAAG,EAAArB,EAAA84G,EAAAz3G,EAAAkU,GAAA,EAAAsjG,GAAArzB,EAAAtkF,EAAA,IAAAoU,EAAA0gE,OAAA,EACAuS,IAAA+vB,EAAA,SAAA1iG,GACAA,EAAA5V,GAAA4V,EAAA5V,EAAA64G,GAAAzzB,EACAxvE,EAAAzV,EAAAyV,EAAAogE,MAAAwP,IAGA,MAAApE,GAEA,QAAAo3B,GAAAF,GAKA,IAJA,GAGOS,GAHPR,GACA/yC,EAAA,KACA8b,UAAAg3B,IACOU,GAAAT,GACP,OAAAQ,EAAAC,EAAAzrC,QACA,OAAAsb,GAAAvH,EAAAy3B,EAAAz3B,SAAAzjF,EAAA,EAAAT,EAAAkkF,EAAAxjF,OAA8ED,EAAAT,IAAOS,EACrFm7G,EAAAzoG,MAAA+wE,EAAAzjF,GAAAgrF,GACAr3B,EAAA8vB,EAAAzjF,GACAoxC,OAAA8pE,EACAz3B,UAAAuH,EAAAvH,EAAAzjF,GAAAyjF,WAAAuH,EAAAl2E,YACA6yD,EAAA,KACA/mE,EAAA,KACAwxD,EAAA,EACAoH,EAAA,EACAzzB,EAAA,EACA1xB,EAAA,EACAoc,EAAA,KACAzwB,MACWY,EAAAoqF,EAGX,OAAA0vB,GAAAj3B,SAAA,GAEA,QAAAm3B,GAAA3qG,GACA,GAAAwzE,GAAAxzE,EAAAwzE,SAAA23B,EAAAnrG,EAAAmhC,OAAAqyC,SAAAnwE,EAAArD,EAAAjQ,EAAAo7G,EAAAnrG,EAAAjQ,EAAA,OACA,IAAAyjF,EAAAxjF,OAAA,CACAstF,GAAAt9E,EACA,IAAAorG,IAAA53B,EAAA,GAAArxB,EAAAqxB,IAAAxjF,OAAA,GAAAmyD,GAAA,CACA9+C,IACArD,EAAAmiD,EAAA9+C,EAAA8+C,EAAA6oD,EAAAhrG,EAAA0jD,EAAArgD,EAAAqgD,GACA1jD,EAAAupD,EAAAvpD,EAAAmiD,EAAAipD,GAEAprG,EAAAmiD,EAAAipD,MAEO/nG,KACPrD,EAAAmiD,EAAA9+C,EAAA8+C,EAAA6oD,EAAAhrG,EAAA0jD,EAAArgD,EAAAqgD,GAEA1jD,GAAAmhC,OAAAu2B,EAAA2zC,EAAArrG,EAAAqD,EAAArD,EAAAmhC,OAAAu2B,GAAAyzC,EAAA,IAEA,QAAAP,GAAA5qG,GACAA,EAAA0jD,EAAAxxD,EAAA8N,EAAAmiD,EAAAniD,EAAAmhC,OAAAooB,EACAvpD,EAAAupD,GAAAvpD,EAAAmhC,OAAAooB,EAEA,QAAA8hD,GAAArrG,EAAAqD,EAAAo6E,GACA,GAAAp6E,EAAA,CAEA,IADA,GAAA2jC,GAAAskE,EAAAtrG,EAAAurG,EAAAvrG,EAAAw9E,EAAAn6E,EAAAmoG,EAAAF,EAAAnqE,OAAAqyC,SAAA,GAAAi4B,EAAAH,EAAA/hD,EAAAmiD,EAAAH,EAAAhiD,EAAAoiD,EAAAnuB,EAAAj0B,EAAAqiD,EAAAJ,EAAAjiD,EACAi0B,EAAAP,GAAAO,GAAA8tB,EAAAtuB,GAAAsuB,GAAA9tB,GAAA8tB,GACAE,EAAAxuB,GAAAwuB,GACAD,EAAAtuB,GAAAsuB,GACAA,EAAA56G,EAAAqP,EACAgnC,EAAAw2C,EAAAr7B,EAAAwpD,EAAAL,EAAAnpD,EAAAspD,EAAAT,EAAAxtB,EAAA95B,EAAA4nD,EAAA5nD,GACA1c,EAAA,IACAk2C,GAAAK,GAAAC,EAAAx9E,EAAAy9E,GAAAz9E,EAAAgnC,GACAykE,GAAAzkE,EACA0kE,GAAA1kE,GAEA2kE,GAAAnuB,EAAAj0B,EACAkiD,GAAAH,EAAA/hD,EACAqiD,GAAAJ,EAAAjiD,EACAmiD,GAAAH,EAAAhiD,CAEAi0B,KAAAP,GAAAsuB,KACAA,EAAA/qF,EAAAg9D,EACA+tB,EAAAhiD,GAAAoiD,EAAAD,GAEAJ,IAAAtuB,GAAAwuB,KACAA,EAAAhrF,EAAA8qF,EACAE,EAAAjiD,GAAAkiD,EAAAG,EACAnuB,EAAAz9E,GAGA,MAAAy9E,GAEA,QAAAqtB,GAAAhjG,GACAA,EAAA5V,GAAAkB,EAAA,GACA0U,EAAAzV,EAAAyV,EAAAogE,MAAA90E,EAAA,GAhGA,GAAAknF,GAAAzhF,GAAAo/B,OAAAqiD,YAAA1pE,KAAA,MAAAjiB,MAAA,MAAAq8G,EAAAjuB,GAAA3pF,GAAA,KAAAy3G,EAAA,IAiHA,OAfAp4B,GAAAu4B,WAAA,SAAA94G,GACA,MAAAxB,WAAAV,QACAg7G,EAAA94G,EACAugF,GAFAu4B,GAIAv4B,EAAAr/E,KAAA,SAAAlB,GACA,MAAAxB,WAAAV,QACA66G,EAAA,OAAAz3G,EAAAlB,GAAA44G,EAAA,KACAr4B,GAFAo4B,EAAA,KAAAz3G,GAIAq/E,EAAAo4B,SAAA,SAAA34G,GACA,MAAAxB,WAAAV,QACA66G,EAAA,OAAAz3G,EAAAlB,GAAA,KAAA44G,EACAr4B,GAFAo4B,EAAAz3G,EAAA,MAIAinF,GAAA5H,EAAA6H,IAiCAzhF,GAAAo/B,OAAA4zE,QAAA,WAEA,QAAAA,GAAAhrG,EAAA9Q,GACA,GAAA+7G,GAAAx4B,EAAAgH,EAAApsF,KAAAqC,KAAAsQ,EAAA9Q,GAAA2jF,EAAAJ,EAAA,GAAAphF,EAAA,CACAwoF,IAAAhH,EAAA,SAAA5rE,GACA,GAAA0rE,GAAA1rE,EAAA0rE,QACAA,MAAAxjF,QACA8X,EAAA5V,EAAAyrF,GAAAnK,GACA1rE,EAAAzV,EAAAqrF,GAAAlK,KAEA1rE,EAAA5V,EAAA45G,EAAA55G,GAAA84G,EAAAljG,EAAAgkG,GAAA,EACAhkG,EAAAzV,EAAA,EACAy5G,EAAAhkG,IAGA,IAAAL,GAAAm2E,GAAAlK,GAAAngF,EAAAsqF,GAAAnK,GAAAl4B,EAAA/zC,EAAAvV,EAAA84G,EAAAvjG,EAAAlU,GAAA,EAAA2lB,EAAA3lB,EAAArB,EAAA84G,EAAAz3G,EAAAkU,GAAA,CAQA,OAPAizE,IAAAhH,EAAAm3B,EAAA,SAAA/iG,GACAA,EAAA5V,GAAA4V,EAAA5V,EAAAwhF,EAAAxhF,GAAAkB,EAAA,GACA0U,EAAAzV,GAAAqhF,EAAArhF,EAAAyV,EAAAzV,GAAAe,EAAA,IACO,SAAA0U,GACPA,EAAA5V,GAAA4V,EAAA5V,EAAAspD,IAAAtiC,EAAAsiC,GAAApoD,EAAA,GACA0U,EAAAzV,GAAA,GAAAqhF,EAAArhF,EAAAyV,EAAAzV,EAAAqhF,EAAArhF,EAAA,IAAAe,EAAA,KAEAkgF,EAtBA,GAAAgH,GAAAzhF,GAAAo/B,OAAAqiD,YAAA1pE,KAAA,MAAAjiB,MAAA,MAAAq8G,EAAAjuB,GAAA3pF,GAAA,KAAAy3G,GAAA,CAuCA,OAfAgB,GAAAb,WAAA,SAAA94G,GACA,MAAAxB,WAAAV,QACAg7G,EAAA94G,EACA25G,GAFAb,GAIAa,EAAAz4G,KAAA,SAAAlB,GACA,MAAAxB,WAAAV,QACA66G,EAAA,OAAAz3G,EAAAlB,GACA25G,GAFAhB,EAAA,KAAAz3G,GAIAy4G,EAAAhB,SAAA,SAAA34G,GACA,MAAAxB,WAAAV,QACA66G,EAAA,OAAAz3G,EAAAlB,GACA25G,GAFAhB,EAAAz3G,EAAA,MAIAinF,GAAAwxB,EAAAvxB,IAoBAzhF,GAAAo/B,OAAA8zE,QAAA,WAEA,QAAAjzG,GAAA06E,EAAA3qC,GAEA,IADA,GAAAkyC,GAAAtmF,EAAA1E,GAAA,EAAAT,EAAAkkF,EAAAxjF,SACAD,EAAAT,GACAmF,GAAAsmF,EAAAvH,EAAAzjF,IAAApB,OAAAk6C,EAAA,IAAAA,GACAkyC,EAAAtmF,KAAA0wB,MAAA1wB,OAAA,IAAAA,EAGA,QAAAu3G,GAAAlkG,GACA,GAAA0rE,GAAA1rE,EAAA0rE,QACA,IAAAA,KAAAxjF,OAAA,CACA,GAAA+qF,GAAAkxB,EAAA38G,EAAAqwD,EAAAusD,EAAApkG,GAAA8hF,KAAA1kF,EAAAsuE,EAAA3uE,QAAAk7F,EAAA/3F,IAAAszD,EAAA,UAAA6wC,EAAAxsD,EAAAr4C,GAAA,SAAA6kG,EAAAxsD,EAAA35C,GAAA,eAAAmmG,EAAA,EAAArkG,EAAAogE,MAAAvoB,EAAA35C,GAAA25C,EAAAr4C,GAAA7G,KAAAlO,IAAAotD,EAAAr4C,GAAAq4C,EAAA35C,GAGA,KAFAlN,EAAAoM,EAAAy6C,EAAAr4C,GAAAq4C,EAAA35C,GAAA8B,EAAAnZ,OACAi7F,EAAAn1F,KAAA,GACAnF,EAAA4V,EAAAlV,QAAA,GACA45F,EAAAnnF,KAAAs4E,EAAA71E,EAAA5V,EAAA,IACAs6F,EAAAn1F,MAAAsmF,EAAAtmF,KACA,aAAA03G,IAAAF,EAAAG,EAAAxiB,EAAAtuB,KAAAykC,GACA76F,EAAAu6D,MACAsgC,EAAAkM,IAEAriB,EAAAn1F,MAAAm1F,EAAAnqB,MAAAhrE,KACAkY,EAAAi9E,EAAAtuB,EAAA3b,GAAA,GACA2b,EAAA76D,KAAAlO,IAAAotD,EAAAr4C,GAAAq4C,EAAA35C,IACA4jF,EAAA55F,OAAA45F,EAAAn1F,KAAA,EACAsrG,EAAA/3F,IAGA4hF,GAAA55F,SACA2c,EAAAi9E,EAAAtuB,EAAA3b,GAAA,GACAiqC,EAAA55F,OAAA45F,EAAAn1F,KAAA,GAEA++E,EAAA34E,QAAAmxG,IAGA,QAAAK,GAAAvkG,GACA,GAAA0rE,GAAA1rE,EAAA0rE,QACA,IAAAA,KAAAxjF,OAAA,CACA,GAAA+qF,GAAAp7B,EAAAusD,EAAApkG,GAAA5C,EAAAsuE,EAAA3uE,QAAA+kF,IAGA,KAFA9wF,EAAAoM,EAAAy6C,EAAAr4C,GAAAq4C,EAAA35C,GAAA8B,EAAAnZ,OACAi7F,EAAAn1F,KAAA,EACAsmF,EAAA71E,EAAAu6D,OACAmqB,EAAAnnF,KAAAs4E,GACA6O,EAAAn1F,MAAAsmF,EAAAtmF,KACA,MAAAsmF,EAAA54B,IACAx1C,EAAAi9E,EAAA7O,EAAA54B,EAAAxC,EAAAr4C,GAAAq4C,EAAA35C,GAAA25C,GAAAz6C,EAAAlV,QACA45F,EAAA55F,OAAA45F,EAAAn1F,KAAA,EAGA++E,GAAA34E,QAAAwxG,IAGA,QAAAD,GAAAxiB,EAAAtuB,GAEA,IADA,GAAAljB,GAAAh0C,EAAAwlF,EAAAn1F,KAAA63G,EAAA,EAAAC,EAAAvkG,IAAAjY,GAAA,EAAAT,EAAAs6F,EAAA55F,SACAD,EAAAT,IACA8oD,EAAAwxC,EAAA75F,GAAA0E,QACA2jD,EAAAm0D,MAAAn0D,GACAA,EAAAk0D,MAAAl0D,GAIA,OAFAh0C,MACAk3D,KACAl3D,EAAA3D,KAAAnO,IAAAgpE,EAAAgxC,EAAA7xE,EAAAr2B,KAAAk3D,EAAAixC,EAAA9xE,IAAAzyB,IAEA,QAAA2E,GAAAi9E,EAAAtuB,EAAA3b,EAAAz7B,GACA,GAAAhkB,GAAAnQ,GAAA,EAAAT,EAAAs6F,EAAA55F,OAAAkC,EAAAytD,EAAAztD,EAAAG,EAAAstD,EAAAttD,EAAA2N,EAAAs7D,EAAAv8B,EAAA6qD,EAAAn1F,KAAA6mE,GAAA,CACA,IAAAA,GAAA3b,EAAAr4C,GAAA,CAEA,KADA4c,GAAAlkB,EAAA2/C,EAAA35C,MAAAhG,EAAA2/C,EAAA35C,MACAjW,EAAAT,GACA4Q,EAAA0pF,EAAA75F,GACAmQ,EAAAhO,IACAgO,EAAA7N,IACA6N,EAAA8F,GAAAhG,EACA9N,GAAAgO,EAAAoH,GAAA7G,KAAAlO,IAAAotD,EAAAztD,EAAAytD,EAAAr4C,GAAApV,EAAA8N,EAAA++B,EAAA7+B,EAAAzL,KAAAuL,GAAA,EAEAE,GAAAiiD,GAAA,EACAjiD,EAAAoH,IAAAq4C,EAAAztD,EAAAytD,EAAAr4C,GAAApV,EACAytD,EAAAttD,GAAA2N,EACA2/C,EAAA35C,IAAAhG,MACO,CAEP,KADAkkB,GAAAlkB,EAAA2/C,EAAAr4C,MAAAtH,EAAA2/C,EAAAr4C,MACAvX,EAAAT,GACA4Q,EAAA0pF,EAAA75F,GACAmQ,EAAAhO,IACAgO,EAAA7N,IACA6N,EAAAoH,GAAAtH,EACA3N,GAAA6N,EAAA8F,GAAAvF,KAAAlO,IAAAotD,EAAAttD,EAAAstD,EAAA35C,GAAA3T,EAAA2N,EAAA++B,EAAA7+B,EAAAzL,KAAAuL,GAAA,EAEAE,GAAAiiD,GAAA,EACAjiD,EAAA8F,IAAA25C,EAAAttD,EAAAstD,EAAA35C,GAAA3T,EACAstD,EAAAztD,GAAA8N,EACA2/C,EAAAr4C,IAAAtH,GAGA,QAAA+rG,GAAAlrG,GACA,GAAAyyE,GAAAk5B,GAAAlyB,EAAAz5E,GAAA6yE,EAAAJ,EAAA,EAOA,OANAI,GAAAxhF,EAAAwhF,EAAArhF,EAAA,EACAqhF,EAAA/kF,OAAA+kF,EAAApsE,GAAAlU,EAAA,GAAAsgF,EAAA1tE,GAAA5S,EAAA,IAA2DsgF,EAAApsE,GAAAosE,EAAA1tE,GAAA,EAC3DwmG,GAAAlyB,EAAA0uB,QAAAt1B,GACA56E,GAAA46E,KAAApsE,GAAAosE,EAAA1tE,GAAA0tE,EAAA/kF,QACA69G,EAAAH,EAAAL,GAAAt4B,GACA+4B,IAAAD,EAAAl5B,GACAA,EArGA,GAAAk5B,GAAAlyB,EAAAzhF,GAAAo/B,OAAAqiD,YAAAv7C,EAAAt+B,KAAAs+B,MAAA3rC,GAAA,KAAAE,EAAA,KAAA44G,EAAApuB,GAAA2uB,GAAA,EAAAN,EAAA,WAAA1xE,EAAA,MAAAh6B,KAAAm6B,KAAA,GA+IA,OAxCAmxE,GAAA34G,KAAA,SAAAlB,GACA,MAAAxB,WAAAV,QACAoD,EAAAlB,EACA65G,GAFA34G,GAIA24G,EAAAz4G,QAAA,SAAApB,GAEA,QAAAw6G,GAAA5kG,GACA,GAAAoI,GAAAhe,EAAAhE,KAAA69G,EAAAjkG,IAAAogE,MACA,cAAAh4D,EAAA4tE,GAAAh2E,GAAAi2E,GAAAj2E,EAAA,iBAAAoI,gBAEA,QAAAy8F,GAAA7kG,GACA,MAAAi2E,IAAAj2E,EAAA5V,GANA,IAAAxB,UAAAV,OAAA,MAAAsD,EAQA,IAAAT,EAGA,OAFAq5G,GAAA,OAAA54G,EAAApB,GAAA4rF,GAAA,cAAAjrF,QAAAX,IAAAw6G,EAAA,WAAA75G,GAAAX,YACAy6G,KACAZ,GAEAA,EAAAhtE,MAAA,SAAA7sC,GACA,MAAAxB,WAAAV,QACA+uC,EAAA7sC,EAAAuO,KAAAs+B,MAAAv1B,OACAuiG,GAFAhtE,GAAAv1B,QAIAuiG,EAAAU,OAAA,SAAAv6G,GACA,MAAAxB,WAAAV,QACAy8G,EAAAv6G,EACAs6G,EAAA,KACAT,GAHAU,GAKAV,EAAAtxE,MAAA,SAAAvoC,GACA,MAAAxB,WAAAV,QACAyqC,EAAAvoC,EACA65G,GAFAtxE,GAIAsxE,EAAAI,KAAA,SAAAj6G,GACA,MAAAxB,WAAAV,QACAm8G,EAAAj6G,EAAA,GACA65G,GAFAI,GAIA9xB,GAAA0xB,EAAAzxB,IA2BAzhF,GAAAkgD,QACAqmD,OAAA,SAAAwN,EAAAC,GACA,GAAAv9G,GAAAoB,UAAAV,MAGA,OAFAV,GAAA,IAAAu9G,EAAA,GACAv9G,EAAA,IAAAs9G,EAAA,GACA,WACA,GAAA16G,GAAAG,EAAA+lD,CACA,IACAlmD,EAAA,EAAAuO,KAAAs4C,SAAA,EACA1mD,EAAA,EAAAoO,KAAAs4C,SAAA,EACAX,EAAAlmD,IAAAG,WACS+lD,KAAA,EACT,OAAAw0D,GAAAC,EAAA36G,EAAAuO,KAAAm6B,MAAA,EAAAn6B,KAAAkxD,IAAAvZ,QAGA00D,UAAA,WACA,GAAA/zD,GAAAlgD,GAAAkgD,OAAAqmD,OAAA3uG,MAAAoI,GAAAnI,UACA,mBACA,MAAA+P,MAAAssD,IAAAhU,OAGAg0D,MAAA,SAAAxjD,GACA,GAAAxQ,GAAAlgD,GAAAkgD,OAAAi0D,UAAAzjD,EACA,mBACA,MAAAxQ,KAAAwQ,IAGAyjD,UAAA,SAAAzjD,GACA,kBACA,OAAAnlD,GAAA,EAAAouB,EAAA,EAA8BA,EAAA+2B,EAAO/2B,IAAApuB,GAAA3D,KAAAs4C,QACrC,OAAA30C,MAIAvL,GAAAC,QAkCA,IAAA0lF,KACArqB,MAAA9P,EACA3jD,KAAA2jD,EAiBAxrD,IAAAC,MAAAC,OAAA,WACA,MAAA4lF,KAAA,WAAAlK,IAAA,GA+FA,IAAA+K,KACAp7E,EAAA,EACA6B,EAAA,EACAiK,EAAA,EACAkoC,EAAA,EACA/5B,EAAA,EASAxlB,IAAAC,MAAA64D,IAAA,WACA,MAAA8tB,IAAA5mF,GAAAC,MAAAC,SAAAqJ,QAAA,oBAgEA,IAAA09E,IAAAjnF,GAAA6O,OAAA,OAAAm4E,IACA1rB,MAAA,SAAAjiE,GACA,OAAAuO,KAAAC,MAAAxO,IAEAwO,KAAA,SAAAxO,GACA,OAAAuO,KAAA0zD,OAAAjiE,IAGA2G,IAAAC,MAAA62B,IAAA,WACA,MAAAowD,IAAAlnF,GAAAC,MAAAC,SAAA,UAyCAF,GAAAC,MAAA8hC,KAAA,WACA,MAAA/hC,IAAAC,MAAA62B,MAAAX,SAAA,KAEAn2B,GAAAC,MAAAm0G,QAAA,WACA,MAAA9sB,QACA3/D,EAAA,QACA7vB,UA4FAkI,GAAAC,MAAA0oC,WAAA,WACA,MAAA3oC,IAAAC,MAAAm0G,UAAAj0G,MAAAk0G,KAEAr0G,GAAAC,MAAAq0G,WAAA,WACA,MAAAt0G,IAAAC,MAAAm0G,UAAAj0G,MAAAo0G,KAEAv0G,GAAAC,MAAAu0G,YAAA,WACA,MAAAx0G,IAAAC,MAAAm0G,UAAAj0G,MAAAs0G,KAEAz0G,GAAAC,MAAAy0G,YAAA,WACA,MAAA10G,IAAAC,MAAAm0G,UAAAj0G,MAAAw0G,IAEA,IAAAN,KAAA,qFAAA/oG,IAAAyqD,IACAw+C,IAAA,+KAAAjpG,IAAAyqD,IACA0+C,IAAA,6KAAAnpG,IAAAyqD,IACA4+C,IAAA,8KAAArpG,IAAAyqD,GACA/1D,IAAAC,MAAA+nF,SAAA,WACA,MAAAF,YAmCA9nF,GAAAC,MAAA20G,SAAA,WACA,MAAAzsB,IAAA,YAiCAnoF,GAAAC,MAAA4oC,UAAA,WACA,MAAAu/C,KAAA,YAyBApoF,GAAAC,MAAAqoF,SAAA,WACA,MAAAD,KAAA,OAuBAroF,GAAAkW,OAIAlW,GAAAkW,IAAAxR,IAAA,WAEA,QAAAA,KACA,GAAA85E,GAAA52E,KAAAnO,IAAA,GAAAomC,EAAAjoC,MAAAF,KAAAG,YAAAo4B,EAAAroB,KAAAnO,IAAA,GAAAwnC,EAAArpC,MAAAF,KAAAG,YAAAi3E,EAAAruC,EAAA7oC,MAAAF,KAAAG,WAAAk8D,GAAAuX,EAAA5qC,EAAA9oC,MAAAF,KAAAG,WAAAk8D,GAAAiwB,EAAAp8E,KAAAu6B,IAAAmpC,EAAAwD,GAAAma,EAAAna,EAAAxD,EAAA,GAEA,IADAr7C,EAAAuuD,IAAAwK,EAAA/4D,IAAAuuD,IAAAwK,GACAhF,GAAA+Q,GAAA,MAAA8f,GAAA5kF,EAAAg5D,IAAAzK,EAAAq2B,EAAAr2B,EAAA,EAAAyK,GAAA,OACA,IAAAD,GAAAjgB,EAAA+rC,EAAAC,EAAApyD,EAAAvB,EAAA/gC,EAAAE,EAAAD,EAAAnQ,EAAAkkE,EAAAG,EAAAhP,EAAA,EAAAC,EAAA,EAAA38D,IAOA,KANAisG,IAAAlsB,EAAAjxF,MAAAF,KAAAG,YAAA,QACAi9G,EAAAE,IAAAC,GAAArtG,KAAAm6B,KAAAy8C,IAAAvuD,MAAA+kF,EAAAp9G,MAAAF,KAAAG,WACAoxF,IAAAxjB,IAAA,GACAx1C,IAAAw1C,EAAA3R,GAAAghD,EAAA7kF,EAAAroB,KAAAoF,IAAA+nG,KACAv2B,IAAAhZ,EAAA1R,GAAAghD,EAAAt2B,EAAA52E,KAAAoF,IAAA+nG,MAEA9kF,EAAA,CACA0yB,EAAA1yB,EAAAroB,KAAAs6B,IAAA4sC,EAAArJ,GACArkB,EAAAnxB,EAAAroB,KAAAoF,IAAA8hE,EAAArJ,GACAplD,EAAA4P,EAAAroB,KAAAs6B,IAAAopC,EAAA7F,GACAllD,EAAA0P,EAAAroB,KAAAoF,IAAAs+D,EAAA7F,EACA,IAAA4xB,GAAAzvF,KAAAu6B,IAAAmpC,EAAAwD,EAAA,EAAArJ,IAAA7R,GAAA,GACA,IAAA6R,GAAAqjB,GAAAnmC,EAAAvB,EAAA/gC,EAAAE,KAAA0oE,EAAAoO,EAAA,CACA,GAAA6d,IAAApmC,EAAAxD,GAAA,CACA3oB,GAAA1yB,EAAAroB,KAAAs6B,IAAAgzE,GACA9zD,EAAAnxB,EAAAroB,KAAAoF,IAAAkoG,GACA70F,EAAAE,EAAA,UAGAoiC,GAAAvB,EAAA,CAEA,IAAAo9B,EAAA,CACAl+D,EAAAk+D,EAAA52E,KAAAs6B,IAAAopC,EAAA9F,GACAr1D,EAAAquE,EAAA52E,KAAAoF,IAAAs+D,EAAA9F,GACA6O,EAAAmK,EAAA52E,KAAAs6B,IAAA4sC,EAAAtJ,GACAgP,EAAAgK,EAAA52E,KAAAoF,IAAA8hE,EAAAtJ,EACA,IAAA4xB,GAAAxvF,KAAAu6B,IAAA2sC,EAAAxD,EAAA,EAAA9F,IAAA5R,GAAA,GACA,IAAA4R,GAAAsjB,GAAAxoE,EAAAnQ,EAAAkkE,EAAAG,KAAA,EAAAyU,EAAAmO,EAAA,CACA,GAAA+d,IAAArmC,EAAAxD,GAAA,CACAhrD,GAAAk+D,EAAA52E,KAAAs6B,IAAAizE,GACAhlG,EAAAquE,EAAA52E,KAAAoF,IAAAmoG,GACA9gC,EAAAG,EAAA,UAGAl0D,GAAAnQ,EAAA,CAEA,IAAA6zE,EAAAtgB,KAAAslB,EAAAphF,KAAAlO,IAAAkO,KAAAu6B,IAAAlS,EAAAuuD,GAAA,GAAA42B,EAAAx9G,MAAAF,KAAAG,aAAA,MACAkxE,EAAAyV,EAAAvuD,EAAAg5D,EAAA,GACA,IAAAosB,GAAArsB,EAAAssB,EAAAtsB,CACA,IAAAhF,EAAApwB,GAAA,CACA,GAAA2hD,GAAA,MAAAlhC,GAAA/zD,EAAAnQ,GAAA,MAAAkQ,GAAAsiC,EAAAvB,GAAAgzB,IAAAzxB,EAAAvB,IAAAizB,EAAAG,IAAAn0D,EAAAE,IAAAD,EAAAnQ,IAAAw6D,EAAAhoB,EAAA4yD,EAAA,GAAA3qC,EAAAxpB,EAAAm0D,EAAA,GAAA1qC,EAAAxqD,EAAAk1F,EAAA,GAAAzqC,EAAAvqD,EAAAg1F,EAAA,GAAAC,EAAA,EAAA5tG,KAAAoF,IAAApF,KAAAisD,MAAA8W,EAAAE,EAAAD,EAAAE,IAAAljE,KAAAm6B,KAAA4oC,IAAAC,KAAAhjE,KAAAm6B,KAAA8oC,IAAAC,OAAA,GAAA2qC,EAAA7tG,KAAAm6B,KAAAwzE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAD,GAAA1tG,KAAAlO,IAAAsvF,GAAAxK,EAAAi3B,IAAAD,EAAA,IACAH,EAAAztG,KAAAlO,IAAAsvF,GAAA/4D,EAAAwlF,IAAAD,EAAA,IAEA,SAAAn1F,EAAA,CACA,GAAAq1F,GAAA3sB,GAAA,MAAA1U,GAAA/zD,EAAAnQ,IAAAkkE,EAAAG,IAAA7xB,EAAAvB,GAAAnxB,EAAAolF,EAAApsB,GAAA0sB,EAAA5sB,IAAA1oE,EAAAE,IAAAD,EAAAnQ,GAAA8f,EAAAolF,EAAApsB,EACAD,KAAAqsB,EACAvsG,EAAAc,KAAA,IAAA8rG,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAAtsC,EAAA,IAAA2sC,EAAA,OAAAzlF,EAAA,IAAAA,EAAA,QAAAg5D,EAAAH,GAAA4sB,EAAA,MAAAA,EAAA,MAAAC,EAAA,MAAAA,EAAA,WAAA1sB,EAAA,IAAA0sB,EAAA,OAAAN,EAAA,IAAAA,EAAA,QAAAtsC,EAAA,IAAA4sC,EAAA,IAEA7sG,EAAAc,KAAA,IAAA8rG,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAAtsC,EAAA,IAAA4sC,EAAA,QAGA7sG,GAAAc,KAAA,IAAA+4C,EAAA,IAAAvB,EAEA,UAAAizB,EAAA,CACA,GAAAuhC,GAAA7sB,IAAApmC,EAAAvB,IAAAizB,EAAAG,GAAAgK,GAAA82B,EAAArsB,GAAA4sB,EAAA9sB,IAAAzoE,EAAAnQ,GAAA,MAAAkQ,GAAAsiC,EAAAvB,IAAA/gC,EAAAE,GAAAi+D,GAAA82B,EAAArsB,EACAD,KAAAssB,EACAxsG,EAAAc,KAAA,IAAAisG,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAAvsC,EAAA,IAAA8sC,EAAA,OAAAr3B,EAAA,IAAAA,EAAA,MAAAyK,EAAAH,GAAA+sB,EAAA,MAAAA,EAAA,MAAAD,EAAA,MAAAA,EAAA,aAAA3sB,EAAA,IAAA2sB,EAAA,OAAAN,EAAA,IAAAA,EAAA,QAAAvsC,EAAA,IAAA6sC,EAAA,IAEA9sG,EAAAc,KAAA,IAAAisG,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAAvsC,EAAA,IAAA6sC,EAAA,QAGA9sG,GAAAc,KAAA,IAAA0W,EAAA,IAAAnQ,OAGArH,GAAAc,KAAA,IAAA+4C,EAAA,IAAAvB,GACA,MAAA/gC,GAAAvX,EAAAc,KAAA,IAAAqmB,EAAA,IAAAA,EAAA,MAAAonE,EAAA,IAAApO,EAAA,IAAA5oE,EAAA,IAAAE,GACAzX,EAAAc,KAAA,IAAA0W,EAAA,IAAAnQ,GACA,MAAAkkE,GAAAvrE,EAAAc,KAAA,IAAA40E,EAAA,IAAAA,EAAA,MAAA4Y,EAAA,MAAAnO,EAAA,IAAA5U,EAAA,IAAAG,EAGA,OADA1rE,GAAAc,KAAA,KACAd,EAAA+wD,KAAA,IAEA,QAAAg7C,GAAA5kF,EAAAg5D,GACA,YAAAh5D,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAg5D,EAAA,OAAAh5D,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAg5D,EAAA,MAAAh5D,EAhFA,GAAA4P,GAAA2oD,GAAAvnD,EAAAwnD,GAAA2sB,EAAA7sB,GAAAysB,EAAAC,GAAAx0E,EAAAioD,GAAAhoD,EAAAioD,GAAAE,EAAAD,EAyHA,OAvCAlkF,GAAAm7B,YAAA,SAAA14B,GACA,MAAAtP,WAAAV,QACA0oC,EAAA22B,GAAArvD,GACAzC,GAFAm7B,GAIAn7B,EAAAu8B,YAAA,SAAA95B,GACA,MAAAtP,WAAAV,QACA8pC,EAAAu1B,GAAArvD,GACAzC,GAFAu8B,GAIAv8B,EAAA0wG,aAAA,SAAAjuG,GACA,MAAAtP,WAAAV,QACAi+G,EAAA5+C,GAAArvD,GACAzC,GAFA0wG,GAIA1wG,EAAAswG,UAAA,SAAA7tG,GACA,MAAAtP,WAAAV,QACA69G,EAAA7tG,GAAA8tG,MAAAz+C,GAAArvD,GACAzC,GAFAswG,GAIAtwG,EAAA+7B,WAAA,SAAAt5B,GACA,MAAAtP,WAAAV,QACAspC,EAAA+1B,GAAArvD,GACAzC,GAFA+7B,GAIA/7B,EAAAg8B,SAAA,SAAAv5B,GACA,MAAAtP,WAAAV,QACAupC,EAAA81B,GAAArvD,GACAzC,GAFAg8B,GAIAh8B,EAAAmkF,SAAA,SAAA1hF,GACA,MAAAtP,WAAAV,QACA0xF,EAAAryB,GAAArvD,GACAzC,GAFAmkF,GAIAnkF,EAAA28B,SAAA,WACA,GAAAke,KAAA1f,EAAAjoC,MAAAF,KAAAG,aAAAopC,EAAArpC,MAAAF,KAAAG,YAAA,EAAAC,IAAA2oC,EAAA7oC,MAAAF,KAAAG,aAAA6oC,EAAA9oC,MAAAF,KAAAG,YAAA,EAAAk8D,EACA,QAAAnsD,KAAAs6B,IAAApqC,GAAAynD,EAAA33C,KAAAoF,IAAAlV,GAAAynD,IAEA76C,EAEA,IAAAuwG,IAAA,MAqEAj1G,IAAAkW,IAAAnd,KAAA,WACA,MAAA8wF,IAAAr+B,GAEA,IAAAy+B,IAAAjqF,GAAAsL,KACApL,OAAA6pF,GACA+rB,gBAAA5rB,GACAvuF,KAAAwuF,GACA4rB,cAAA3rB,GACA4rB,aAAA3rB,GACA4rB,MAAAlrB,GACAmrB,aAAA/qB,GACAgrB,eAAA/qB,GACAyiB,OAAAxiB,GACA+qB,SAAA1rB,GACA2rB,gBAAA/rB,GACAgsB,kBAAA7rB,GACA8rB,SAAA5qB,IAEA1B,IAAAjoF,QAAA,SAAA3K,EAAAvB,GACAA,EAAAuB,MACAvB,EAAAyrE,OAAA,WAAAtS,KAAA53D,IA8IA,IAAAi0F,KAAA,aAAAC,IAAA,aAAAN,IAAA,cA0CAjrF,IAAAkW,IAAAnd,KAAAy9G,OAAA,WACA,GAAAz9G,GAAA8wF,GAAA+B,GAGA,OAFA7yF,GAAA4mC,OAAA5mC,EAAAM,QAAAN,GAAAM,EACAN,EAAAo3B,MAAAp3B,EAAAS,QAAAT,GAAAS,EACAT,GAsFAqxF,GAAAj3C,QAAAk3C,GACAA,GAAAl3C,QAAAi3C,GACApqF,GAAAkW,IAAAta,KAAA,WACA,MAAAiwF,IAAArgC,IAEAxrD,GAAAkW,IAAAta,KAAA46G,OAAA,WACA,GAAA56G,GAAAiwF,GAAAD,GAOA,OANAhwF,GAAA+jC,OAAA/jC,EAAAvC,QAAAuC,GAAAvC,EACAuC,EAAAikC,YAAAjkC,EAAA+mD,SAAA/mD,GAAA+mD,GACA/mD,EAAAqlC,YAAArlC,EAAAykB,SAAAzkB,GAAAykB,GACAzkB,EAAAu0B,MAAAv0B,EAAApC,QAAAoC,GAAApC,EACAoC,EAAA6kC,WAAA7kC,EAAAwlD,SAAAxlD,GAAAwlD,GACAxlD,EAAA8kC,SAAA9kC,EAAA2kB,SAAA3kB,GAAA2kB,GACA3kB,GAEAoE,GAAAkW,IAAA63F,MAAA,WAEA,QAAAA,GAAA/lG,EAAA9Q,GACA,GAAAqU,GAAA8mF,EAAA36F,KAAA8E,EAAAwL,EAAA9Q,GAAAywB,EAAA0qE,EAAA36F,KAAAV,EAAAgR,EAAA9Q,EACA,WAAAqU,EAAAi6D,GAAA9gE,EAAA6G,EAAAg0C,EAAAh0C,EAAAk6D,GAAAl6D,EAAA+/D,GAAA//D,EAAAujE,KAAA2nC,EAAAlrG,EAAAoc,GAAA+uF,EAAAnrG,EAAAg0C,EAAAh0C,EAAAk6D,GAAAl6D,EAAAg0C,EAAAh0C,EAAAi6D,IAAAkxC,EAAAnrG,EAAAg0C,EAAAh0C,EAAAk6D,GAAA99C,EAAA43B,EAAA53B,EAAA69C,IAAA9gE,EAAAijB,EAAA43B,EAAA53B,EAAA89C,GAAA99C,EAAA2jD,GAAA3jD,EAAAmnD,IAAA4nC,EAAA/uF,EAAA43B,EAAA53B,EAAA89C,GAAAl6D,EAAAg0C,EAAAh0C,EAAAi6D,KAAA,IAEA,QAAA6sB,GAAAj9F,EAAAy2B,EAAA7jB,EAAA9Q,GACA,GAAAm7F,GAAAxmE,EAAAx2B,KAAAD,EAAA4S,EAAA9Q,GAAAqoD,EAAA5f,EAAAtqC,KAAAD,EAAAi9F,EAAAn7F,GAAA43E,EAAAruC,EAAAprC,KAAAD,EAAAi9F,EAAAn7F,GAAA68D,GAAAuX,EAAA5qC,EAAArrC,KAAAD,EAAAi9F,EAAAn7F,GAAA68D,EACA,QACAxU,IACAuvB,KACAxD,KACA9F,IAAAjmB,EAAA33C,KAAAs6B,IAAA4sC,GAAAvvB,EAAA33C,KAAAoF,IAAA8hE,IACArJ,IAAAlmB,EAAA33C,KAAAs6B,IAAAopC,GAAA/rB,EAAA33C,KAAAoF,IAAAs+D,KAGA,QAAAmrC,GAAA3+G,EAAAkgB,GACA,MAAAlgB,GAAAg3E,IAAA92D,EAAA82D,IAAAh3E,EAAAwzE,IAAAtzD,EAAAszD,GAEA,QAAA5mE,GAAA66C,EAAAloC,EAAAvf,GACA,UAAAynD,EAAA,IAAAA,EAAA,SAAAznD,EAAA87D,IAAA,MAAAv8C,EAEA,QAAAq/F,GAAAl4B,EAAAhZ,EAAAv1C,EAAAw1C,GACA,eAAAA,EAtBA,GAAAjpE,GAAAw1E,GAAAh7E,EAAAi7E,GAAAtyC,EAAA0sD,GAAA5rD,EAAAioD,GAAAhoD,EAAAioD,EAiDA,OAzBAolB,GAAApuE,OAAA,SAAAx4B,GACA,MAAAtP,WAAAV,QACAwoC,EAAA62B,GAAArvD,GACA4mG,GAFApuE,GAIAouE,EAAAvxG,OAAA,SAAA2K,GACA,MAAAtP,WAAAV,QACAqF,EAAAg6D,GAAArvD,GACA4mG,GAFAvxG,GAIAuxG,EAAA/2G,OAAA,SAAAmQ,GACA,MAAAtP,WAAAV,QACAH,EAAAw/D,GAAArvD,GACA4mG,GAFA/2G,GAIA+2G,EAAAttE,WAAA,SAAAt5B,GACA,MAAAtP,WAAAV,QACAspC,EAAA+1B,GAAArvD,GACA4mG,GAFAttE,GAIAstE,EAAArtE,SAAA,SAAAv5B,GACA,MAAAtP,WAAAV,QACAupC,EAAA81B,GAAArvD,GACA4mG,GAFArtE,GAIAqtE,GAKA/tG,GAAAkW,IAAAygG,SAAA,WAEA,QAAAA,GAAA3uG,EAAA9Q,GACA,GAAAsuE,GAAAhpE,EAAAnH,KAAAqC,KAAAsQ,EAAA9Q,GAAA0/G,EAAA5/G,EAAA3B,KAAAqC,KAAAsQ,EAAA9Q,GAAAw5D,GAAA8U,EAAAhsE,EAAAo9G,EAAAp9G,GAAA,EAAA6d,GAAAmuD,GACAnsE,EAAAmsE,EAAAnsE,EACAG,EAAAk3D,IAEAr3D,EAAAu9G,EAAAv9G,EACAG,EAAAk3D,GACOkmD,EAEP,OADAv/F,KAAA/L,IAAA4kE,GACA,IAAA74D,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAVA,GAAA7a,GAAAw1E,GAAAh7E,EAAAi7E,GAAA/B,EAAAoc,EA2BA,OAfAqqB,GAAAn6G,OAAA,SAAAnD,GACA,MAAAxB,WAAAV,QACAqF,EAAAg6D,GAAAn9D,GACAs9G,GAFAn6G,GAIAm6G,EAAA3/G,OAAA,SAAAqC,GACA,MAAAxB,WAAAV,QACAH,EAAAw/D,GAAAn9D,GACAs9G,GAFA3/G,GAIA2/G,EAAAzmC,WAAA,SAAA72E,GACA,MAAAxB,WAAAV,QACA+4E,EAAA72E,EACAs9G,GAFAzmC,GAIAymC,GAKA32G,GAAAkW,IAAAygG,SAAAH,OAAA,WACA,GAAAG,GAAA32G,GAAAkW,IAAAygG,WAAAzmC,EAAAoc,GAAAuqB,EAAAF,EAAAzmC,UAIA,OAHAymC,GAAAzmC,WAAA,SAAA72E,GACA,MAAAxB,WAAAV,OAAA0/G,EAAAtqB,GAAArc,EAAA72E,IAAA62E,GAEAymC,GAQA32G,GAAAkW,IAAA+iD,OAAA,WAEA,QAAAA,GAAAjxD,EAAA9Q,GACA,OAAA4/G,GAAAz4G,IAAArE,EAAA3E,KAAAqC,KAAAsQ,EAAA9Q,KAAAw1F,IAAAnyF,EAAAlF,KAAAqC,KAAAsQ,EAAA9Q,IAFA,GAAA8C,GAAAyyF,GAAAlyF,EAAAiyF,EAcA,OAVAvzB,GAAAj/D,KAAA,SAAAX,GACA,MAAAxB,WAAAV,QACA6C,EAAAw8D,GAAAn9D,GACA4/D,GAFAj/D,GAIAi/D,EAAA1+D,KAAA,SAAAlB,GACA,MAAAxB,WAAAV,QACAoD,EAAAi8D,GAAAn9D,GACA4/D,GAFA1+D,GAIA0+D,EAYA,IAAA69C,IAAA92G,GAAAsL,KACA9G,OAAAkoF,GACAqqB,MAAA,SAAAx8G,GACA,GAAAglD,GAAA33C,KAAAm6B,KAAAxnC,EAAA,IACA,cAAAglD,EAAA,KAAAA,EAAA,KAAAA,EAAA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,MAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,OAAAA,EAAA,KAEAy3D,QAAA,SAAAz8G,GACA,GAAA++E,GAAA1xE,KAAAm6B,KAAAxnC,GAAA,EAAA08G,KAAA59B,EAAAC,EAAA29B,EACA,cAAA39B,EAAA,IAAAD,EAAA,QAAAC,EAAA,KAAAD,EAAA,OAEA69B,OAAA,SAAA38G,GACA,GAAAglD,GAAA33C,KAAAm6B,KAAAxnC,GAAA,CACA,YAAAglD,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAEA43D,gBAAA,SAAA58G,GACA,GAAA8+E,GAAAzxE,KAAAm6B,KAAAxnC,EAAA68G,IAAA99B,EAAAD,EAAA+9B,GAAA,CACA,aAAA99B,EAAA,IAAAD,EAAA,KAAAC,EAAA,KAAAD,EAAA,KAAAC,EAAA,KAEA+9B,cAAA,SAAA98G,GACA,GAAA8+E,GAAAzxE,KAAAm6B,KAAAxnC,EAAA68G,IAAA99B,EAAAD,EAAA+9B,GAAA,CACA,cAAA99B,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,IAAAC,EAAA,MAGAt5E,IAAAkW,IAAAohG,YAAAR,GAAA/0G,MACA,IAAAq1G,IAAAxvG,KAAAm6B,KAAA,GAAAk1E,GAAArvG,KAAA0rE,IAAA,GAAAle,GACAnI,IAAAxuD,WAAA,SAAAgzC,GAOA,OANA4gD,GAAApjF,EAAAiD,EAAAgmF,MAAAqf,GAAArpD,EAAAm/B,GAAA57C,GAAA8gD,KAAA9zF,EAAA+4G,KACA1lG,KAAAgG,KAAAqgD,MACAn9B,KAAA+hD,GACA9kB,MAAA,EACA//C,SAAA,KAEAyhB,GAAA,EAAA+2B,EAAAh5D,KAAAP,SAAqCwiC,EAAA+2B,GAAS,CAC9C6hC,EAAA3oF,KAAAyoF,KACA,QAAA1hC,GAAAj5D,KAAAiiC,GAAAziC,GAAA,EAAAT,EAAAk6D,EAAAx5D,SAAyDD,EAAAT,IACzDwY,EAAA0hD,EAAAz5D,KAAAo2F,GAAAr+E,EAAA/X,EAAAg3D,EAAAh8C,EAAAzT,GACA4zF,EAAAzoF,KAAAqF,GAGA,MAAA+9E,IAAAuF,EAAArkC,EAAAh8C,IAEA+6C,GAAA8/B,UAAA,SAAAt7C,GACA,MAAA/5C,MAAAgT,KAAA,MAAA+mC,EAAAklD,GAAAhK,GAAAU,GAAA57C,KAEA,IAmBAymD,IAAAsf,GAnBA7gB,GAAAhK,GAAAU,MAmBAJ,MAAAsqB,GAAA,CACAtqB,IAAA53F,KAAA43D,GAAA53D,KACA43F,GAAAnoF,MAAAmoD,GAAAnoD,MACAmoF,GAAAh+E,KAAAg+C,GAAAh+C,KACAg+E,GAAA1yF,KAAA0yD,GAAA1yD,KACAyF,GAAAvB,WAAA,SAAA2K,EAAAqoC,GACA,MAAAroC,MAAA3K,WAAAy5F,GAAA9uF,EAAA3K,WAAAgzC,GAAAroC,EAAApJ,GAAAoJ,YAAA3K,WAAA2K,IAEApJ,GAAAvB,WAAA/I,UAAAu3F,GACAA,GAAAxiF,OAAA,SAAAwwC,GACA,GAAAo3C,GAAAC,EAAArjF,EAAAiD,EAAAxa,KAAAwa,GAAAg8C,EAAAx2D,KAAAo4D,UAAAyiC,IACAt3C,GAAAiS,EAAAjS,EACA,QAAAthB,IAAA,EAAA+2B,EAAAh5D,KAAAP,SAAqCwiC,EAAA+2B,GAAS,CAC9C6hC,EAAA3oF,KAAAyoF,KACA,QAAA1hC,GAAAj5D,KAAAiiC,GAAAziC,GAAA,EAAAT,EAAAk6D,EAAAx5D,SAAyDD,EAAAT,IACzDwY,EAAA0hD,EAAAz5D,MAAAo7F,EAAAr3C,EAAA5lD,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,KACA,YAAA1qB,KAAAqjF,EAAAj1D,SAAApuB,EAAAouB,UACAiwD,GAAAgF,EAAAp7F,EAAAg3D,EAAAh8C,EAAAjD,EAAAi/C,GAAAh8C,IACAmgF,EAAAzoF,KAAA0oF,IAEAD,EAAAzoF,KAAA,MAIA,MAAAojF,IAAAuF,EAAArkC,EAAAh8C,IAEA+6E,GAAAt/E,UAAA,SAAAstC,GACA,GAAAo3C,GAAAolB,EAAAxoG,EAAAqjF,EAAA7zF,EAAAyT,EAAAxa,KAAAwa,GAAAg8C,EAAAx2D,KAAAo4D,UAAAyiC,IACAt3C,GAAAmS,EAAAnS,EACA,QAAAthB,IAAA,EAAA+2B,EAAAh5D,KAAAP,SAAqCwiC,EAAA+2B,GACrC,OAAAC,GAAAj5D,KAAAiiC,GAAAziC,GAAA,EAAAT,EAAAk6D,EAAAx5D,SAAyDD,EAAAT,GACzD,GAAAwY,EAAA0hD,EAAAz5D,GAAA,CACAuH,EAAAwQ,EAAAi/C,GAAAh8C,GACAulG,EAAAx8D,EAAA5lD,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,GACA44D,EAAA3oF,KAAAyoF,KACA,QAAAriD,IAAA,EAAA3oC,EAAAowG,EAAAtgH,SAA+C64C,EAAA3oC,IAC/CirF,EAAAmlB,EAAAznE,KAAAs9C,GAAAgF,EAAAtiD,EAAAke,EAAAh8C,EAAAzT,GACA4zF,EAAAzoF,KAAA0oF,GAKA,MAAAtF,IAAAuF,EAAArkC,EAAAh8C,IAEA+6E,GAAAzvE,OAAA,SAAAA,GACA,GAAA60E,GAAA1hC,EAAA1hD,EAAAsjF,IACA,oBAAA/0E,OAAA6yC,EAAA7yC,GACA,QAAAmc,GAAA,EAAA+2B,EAAAh5D,KAAAP,OAAoCwiC,EAAA+2B,EAAO/2B,IAAA,CAC3C44D,EAAA3oF,KAAAyoF,KACA,QAAA1hC,GAAAj5D,KAAAiiC,GAAAziC,EAAA,EAAAT,EAAAk6D,EAAAx5D,OAAwDD,EAAAT,EAAOS,KAC/D+X,EAAA0hD,EAAAz5D,KAAAsmB,EAAAnoB,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,IACA04D,EAAAzoF,KAAAqF,GAIA,MAAA+9E,IAAAuF,EAAA76F,KAAAo4D,UAAAp4D,KAAAwa,KAEA+6E,GAAAE,MAAA,SAAA17C,EAAA07C,GACA,GAAAj7E,GAAAxa,KAAAwa,GAAAg8C,EAAAx2D,KAAAo4D,SACA,OAAAj4D,WAAAV,OAAA,EAAAO,KAAAuX,OAAAi/C,GAAAh8C,GAAAi7E,MAAA9uF,IAAAozC,GACAgf,EAAA/4D,KAAA,MAAAy1F,EAAA,SAAAl+E,GACAA,EAAAi/C,GAAAh8C,GAAAi7E,MAAAl/E,OAAAwjC,IACK,SAAAxiC,GACLA,EAAAi/C,GAAAh8C,GAAAi7E,MAAA/9D,IAAAqiB,EAAA07C,MAWAF,GAAA5jF,KAAA,SAAAquG,EAAA5hH,GAMA,QAAAy3D,KACA71D,KAAA81D,gBAAA/b,GAEA,QAAAgc,KACA/1D,KAAAg2D,kBAAAjc,EAAAkc,MAAAlc,EAAAmc,OAEA,QAAA7nB,GAAA/tB,GACA,aAAAA,EAAAu1C,GAAAv1C,GAAA,cACA,GAAA9gB,GAAAY,EAAAJ,KAAAo7B,aAAA2e,EACA,OAAA35C,KAAAkgB,IAAA9gB,EAAA8uC,EAAAluC,EAAAkgB,GAAA,SAAA2P,GACAjwB,KAAAm7B,aAAA4e,EAAAv6C,EAAAywB,QAIA,QAAAgwF,GAAA3/F,GACA,aAAAA,EAAAy1C,GAAAz1C,GAAA,cACA,GAAA9gB,GAAAY,EAAAJ,KAAAm7F,eAAAphD,EAAAkc,MAAAlc,EAAAmc,MACA,OAAA91D,KAAAkgB,IAAA9gB,EAAA8uC,EAAAluC,EAAAkgB,GAAA,SAAA2P,GACAjwB,KAAAq2D,eAAAtc,EAAAkc,MAAAlc,EAAAmc,MAAA12D,EAAAywB,QAvBA,GAAA9vB,UAAAV,OAAA,GACA,IAAArB,IAAA4hH,GAAAhgH,KAAA2R,KAAAvT,EAAA4hH,EAAA5hH,GACA,OAAA4B,MAEA,GAAAsuC,GAAA,aAAA0xE,EAAA73B,GAAAjE,GAAAnqC,EAAAzxC,GAAAkuD,GAAAC,QAAAupD,EAuBA,OAAAxqB,IAAAx1F,KAAA,QAAAggH,EAAA5hH,EAAA27C,EAAAmc,MAAA+pD,EAAA5xE,IAEAknD,GAAAlnD,UAAA,SAAA2xE,EAAAvqB,GAEA,QAAApnD,GAAA/9B,EAAA9Q,GACA,GAAA20B,GAAAshE,EAAA93F,KAAAqC,KAAAsQ,EAAA9Q,EAAAQ,KAAAo7B,aAAA2e,GACA,OAAA5lB,IAAA,SAAAlE,GACAjwB,KAAAm7B,aAAA4e,EAAA5lB,EAAAlE,KAGA,QAAAgwF,GAAA3vG,EAAA9Q,GACA,GAAA20B,GAAAshE,EAAA93F,KAAAqC,KAAAsQ,EAAA9Q,EAAAQ,KAAAm7F,eAAAphD,EAAAkc,MAAAlc,EAAAmc,OACA,OAAA/hC,IAAA,SAAAlE,GACAjwB,KAAAq2D,eAAAtc,EAAAkc,MAAAlc,EAAAmc,MAAA/hC,EAAAlE,KAVA,GAAA8pB,GAAAzxC,GAAAkuD,GAAAC,QAAAupD,EAaA,OAAAhgH,MAAAy1F,MAAA,QAAAuqB,EAAAjmE,EAAAmc,MAAA+pD,EAAA5xE,IAEAknD,GAAA7uF,MAAA,SAAAqzC,EAAA37C,EAAAq5D,GAUA,QAAAC,KACA13D,KAAA0G,MAAAixD,eAAA5d,GAEA,QAAAmmE,GAAA5/F,GACA,aAAAA,EAAAo3C,GAAAp3C,GAAA,cACA,GAAA9gB,GAAAY,EAAA+xD,EAAAnyD,MAAAq7F,iBAAAr7F,KAAA,MAAAs7F,iBAAAvhD,EACA,OAAA35C,KAAAkgB,IAAA9gB,EAAA0kF,GAAA9jF,EAAAkgB,GAAA,SAAA2P,GACAjwB,KAAA0G,MAAAmxD,YAAA9d,EAAAv6C,EAAAywB,GAAAwnC,OAhBA,GAAA14D,GAAAoB,UAAAV,MACA,IAAAV,EAAA,GACA,oBAAAg7C,GAAA,CACAh7C,EAAA,IAAAX,EAAA,GACA,KAAAq5D,IAAA1d,GAAA/5C,KAAA0G,MAAA+wD,EAAA1d,EAAA0d,GAAAr5D,EACA,OAAA4B,MAEAy3D,EAAA,GAaA,MAAA+9B,IAAAx1F,KAAA,SAAA+5C,EAAA37C,EAAA8hH,IAEA3qB,GAAA4qB,WAAA,SAAApmE,EAAA07C,EAAAh+B,GAEA,QAAA0oD,GAAA7vG,EAAA9Q,GACA,GAAA20B,GAAAshE,EAAA93F,KAAAqC,KAAAsQ,EAAA9Q,EAAA2yD,EAAAnyD,MAAAq7F,iBAAAr7F,KAAA,MAAAs7F,iBAAAvhD,GACA,OAAA5lB,IAAA,SAAAlE,GACAjwB,KAAA0G,MAAAmxD,YAAA9d,EAAA5lB,EAAAlE,GAAAwnC,IAGA,MAPAt3D,WAAAV,OAAA,IAAAg4D,EAAA,IAOAz3D,KAAAy1F,MAAA,SAAA17C,EAAAomE,IAEA5qB,GAAAloF,KAAA,SAAAjP,GACA,MAAAo3F,IAAAx1F,KAAA,OAAA5B,EAAAs3F,KAQAH,GAAAh/E,OAAA,WACA,GAAAigD,GAAAx2D,KAAAo4D,SACA,OAAAp4D,MAAAgT,KAAA,4BACA,GAAA2M,EACA3f,MAAAw2D,GAAAv0D,MAAA,IAAA0d,EAAA3f,KAAA8yB,aAAAnT,EAAA84C,YAAAz4D,SAGAu1F,GAAAjyD,KAAA,SAAAllC,GACA,GAAAoc,GAAAxa,KAAAwa,GAAAg8C,EAAAx2D,KAAAo4D,SACA,OAAAj4D,WAAAV,OAAA,EAAAO,KAAAuX,OAAAi/C,GAAAh8C,GAAA8oB,MACA,mBAAAllC,OAAAkK,GAAAg7B,KAAApjC,MAAAoI,GAAAnI,YACA44D,EAAA/4D,KAAA,SAAAuX,GACAA,EAAAi/C,GAAAh8C,GAAA8oB,KAAAllC,MAGAm3F,GAAAh1B,MAAA,SAAAniE,GACA,GAAAoc,GAAAxa,KAAAwa,GAAAg8C,EAAAx2D,KAAAo4D,SACA,OAAAj4D,WAAAV,OAAA,EAAAO,KAAAuX,OAAAi/C,GAAAh8C,GAAA+lD,MACAxH,EAAA/4D,KAAA,mBAAA5B,GAAA,SAAAmZ,EAAA/X,EAAAyiC,GACA1qB,EAAAi/C,GAAAh8C,GAAA+lD,OAAAniE,EAAAT,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,KACK7jC,KAAA,SAAAmZ,GACLA,EAAAi/C,GAAAh8C,GAAA+lD,MAAAniE,MAGAm3F,GAAA/0E,SAAA,SAAApiB,GACA,GAAAoc,GAAAxa,KAAAwa,GAAAg8C,EAAAx2D,KAAAo4D,SACA,OAAAj4D,WAAAV,OAAA,EAAAO,KAAAuX,OAAAi/C,GAAAh8C,GAAAgG,SACAu4C,EAAA/4D,KAAA,mBAAA5B,GAAA,SAAAmZ,EAAA/X,EAAAyiC,GACA1qB,EAAAi/C,GAAAh8C,GAAAgG,SAAAtQ,KAAAnO,IAAA,EAAA3D,EAAAT,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,MACK7jC,EAAA8R,KAAAnO,IAAA,EAAA3D,GAAA,SAAAmZ,GACLA,EAAAi/C,GAAAh8C,GAAAgG,SAAApiB,MAGAm3F,GAAAviF,KAAA,SAAA1Q,EAAAqyD,GACA,GAAAn6C,GAAAxa,KAAAwa,GAAAg8C,EAAAx2D,KAAAo4D,SACA,IAAAj4D,UAAAV,OAAA,GACA,GAAAo2F,GAAAiqB,GAAAM,EAAA5f,EACA,KACAA,GAAAhmF,EACAu+C,EAAA/4D,KAAA,SAAAuX,EAAA/X,EAAAyiC,GACA69E,GAAAvoG,EAAAi/C,GAAAh8C,GACAlY,EAAA3E,KAAA4Z,IAAAouB,SAAAnmC,EAAAyiC,KAEO,QACP69E,GAAAjqB,EACA2K,GAAA4f,OAGArnD,GAAA/4D,KAAA,SAAAuX,GACA,GAAAxQ,GAAAwQ,EAAAi/C,GAAAh8C,IACAzT,EAAAy8C,QAAAz8C,EAAAy8C,MAAAl7C,GAAAksD,SAAA,6BAAA5tC,GAAAtkB,EAAAqyD,IAGA,OAAA30D,OAEAu1F,GAAAxuF,WAAA,WAEA,OADA4zF,GAAA1hC,EAAA1hD,EAAAxQ,EAAAs5G,EAAArgH,KAAAwa,GAAA8lG,IAAAT,GAAArpD,EAAAx2D,KAAAo4D,UAAAyiC,KACA54D,EAAA,EAAA+2B,EAAAh5D,KAAAP,OAAoCwiC,EAAA+2B,EAAO/2B,IAAA,CAC3C44D,EAAA3oF,KAAAyoF,KACA,QAAA1hC,GAAAj5D,KAAAiiC,GAAAziC,EAAA,EAAAT,EAAAk6D,EAAAx5D,OAAwDD,EAAAT,EAAOS,KAC/D+X,EAAA0hD,EAAAz5D,MACAuH,EAAAwQ,EAAAi/C,GAAA6pD,GACAzqB,GAAAr+E,EAAA/X,EAAAg3D,EAAA8pD,GACAlmG,KAAArT,EAAAqT,KACAkpB,KAAAv8B,EAAAu8B,KACAi9B,MAAAx5D,EAAAw5D,MAAAx5D,EAAAyZ,SACAA,SAAAzZ,EAAAyZ,YAGAm6E,EAAAzoF,KAAAqF,GAGA,MAAA+9E,IAAAuF,EAAArkC,EAAA8pD,IAgFAh4G,GAAAkW,IAAA9c,KAAA,WAEA,QAAAA,GAAAgU,GACAA,EAAA1C,KAAA,WACA,GAEA2C,GAFAD,EAAApN,GAAAyK,OAAA/S,MACA8V,EAAA9V,KAAA+V,WAAAxN,EAAAyN,EAAAhW,KAAA+V,UAAAxN,EAAA+J,OACAL,EAAA,MAAAlJ,EAAAiN,EAAA/D,MAAA+D,EAAA/D,MAAA/R,MAAA8V,EAAAuqG,GAAAvqG,EAAAnE,SAAA9I,EAAAC,EAAA,MAAAw3G,EAAAxqG,EAAAhN,WAAAgN,EAAAhN,WAAA9I,MAAA8V,EAAAuqG,GAAAzsD,EAAA0sD,EAAA5+G,EAAA8T,EAAAO,UAAA,SAAA3U,KAAA2Q,EAAA+D,GAAAE,EAAAtU,EAAAuU,QAAAC,OAAA,eAAAzE,KAAA,gBAAAjL,MAAA,UAAAslE,IAAA31D,EAAA/N,GAAAvB,WAAAnF,EAAA0U,QAAA5P,MAAA,UAAAslE,IAAAz1D,SAAAC,EAAAlO,GAAAvB,WAAAnF,EAAA05C,SAAA50C,MAAA,aAAA+5G,EAAAvwG,KAAAnO,IAAA4G,EAAA,GAAAG,EACAL,EAAAilF,GAAA13E,GAAA5E,EAAAsE,EAAAO,UAAA,WAAA3U,MAAA,IAAAuV,GAAAzF,EAAA+E,QAAAM,OAAA,QAAA9E,KAAA,kBACArJ,GAAAvB,WAAAqK,GACA8E,GAAAO,OAAA,QACAP,EAAAO,OAAA,OACA,IAAAkS,GAAAC,EAAAC,EAAApQ,EAAAioG,EAAAxqG,EAAAnD,OAAA,QAAA2D,EAAAF,EAAAzD,OAAA,QAAA1F,EAAAzL,EAAAmR,OAAA,QAAA1F,KAAArE,GAAA23G,EAAAzqG,EAAAnD,OAAA,QAAA4D,EAAAH,EAAAzD,OAAA,QAAA8rB,EAAA,QAAAn2B,GAAA,SAAAA,GAAA,GAcA,IAbA,WAAAA,GAAA,QAAAA,GACAiN,EAAAwgF,GAAAxtE,EAAA,IAAAE,EAAA,IAAAD,EAAA,KAAAnQ,EAAA,KACApL,EAAAsE,KAAA,KAAAktB,EAAA,iBAAAn4B,MAAA,wBACAmQ,EAAAlF,KAAA,QAAAlJ,EAAA,OAAAo2B,EAAAj2B,EAAA,MAAAH,EAAA,OAAAo2B,EAAAj2B,KAEA+M,EAAAygF,GAAAztE,EAAA,IAAAE,EAAA,IAAAD,EAAA,KAAAnQ,EAAA,KACApL,EAAAsE,KAAA,cAAAjL,MAAA,cAAAm4B,EAAA,iBACAhoB,EAAAlF,KAAA,QAAAktB,EAAAj2B,EAAA,IAAAH,EAAA,SAAAA,EAAA,OAAAo2B,EAAAj2B,IAEA83G,EAAA/uG,KAAA8G,EAAAomB,EAAAl2B,GACAg4G,EAAAhvG,KAAAkX,EAAAgW,EAAA4hF,GACA/pG,EAAA/E,KAAAiX,EAAA,GAAAjX,KAAA8G,EAAAomB,EAAAl2B,GACAgO,EAAAhF,KAAAgX,EAAA,GAAAhX,KAAAkX,EAAAgW,EAAA4hF,GACAzqG,EAAAc,UAAA,CACA,GAAAnV,GAAAqU,EAAAe,EAAApV,EAAAmV,YAAA,CACAhB,GAAAE,EAAA,SAAA1F,GACA,MAAA3O,GAAA2O,GAAAyG,OAESjB,GAAAgB,UACThB,EAAAE,EAEAK,EAAA1Y,KAAAgY,EAAAK,EAAAF,EAEAI,GAAAvY,KAAAgY,EAAAG,EAAAE,GACAQ,EAAA7Y,KAAAgY,EAAAK,OAnCA,GAAAwqG,GAAAj4G,EAAAD,GAAAC,MAAAC,SAAAE,EAAAk4G,GAAAj4G,EAAA,EAAAC,EAAA,EAAAE,EAAA,EAAAy3G,GAAA,IAAAx3G,EAAA,IAwFA,OAlDArH,GAAA6G,MAAA,SAAA5G,GACA,MAAAxB,WAAAV,QACA8I,EAAA5G,EACAD,GAFA6G,GAIA7G,EAAAgH,OAAA,SAAA/G,GACA,MAAAxB,WAAAV,QACAiJ,EAAA/G,IAAAk/G,IAAAl/G,EAAA,GAAAi/G,GACAl/G,GAFAgH,GAIAhH,EAAAuQ,MAAA,WACA,MAAA9R,WAAAV,QACA8gH,EAAA1mD,GAAA15D,WACAuB,GAFA6+G,GAIA7+G,EAAAqH,WAAA,SAAApH,GACA,MAAAxB,WAAAV,QACAsJ,EAAApH,EACAD,GAFAqH,GAIArH,EAAAsH,WAAA,SAAArH,GACA,MAAAxB,WAAAV,QACA+gH,EAAA7+G,EACAD,GAFA8+G,GAIA9+G,EAAAo/G,SAAA,SAAAn/G,GACA,GAAA5C,GAAAoB,UAAAV,MACA,OAAAV,IACA4J,GAAAhH,EACAiH,GAAAzI,UAAApB,EAAA,GACA2C,GAHAiH,GAKAjH,EAAAiH,cAAA,SAAAhH,GACA,MAAAxB,WAAAV,QACAkJ,GAAAhH,EACAD,GAFAiH,GAIAjH,EAAAkH,cAAA,SAAAjH,GACA,MAAAxB,WAAAV,QACAmJ,GAAAjH,EACAD,GAFAkH,GAIAlH,EAAAoH,YAAA,SAAAnH,GACA,MAAAxB,WAAAV,QACAqJ,GAAAnH,EACAD,GAFAoH,GAIApH,EAAAq/G,cAAA,WACA,MAAA5gH,WAAAV,QAAAiC,GAEAA,EAEA,IAAAk/G,IAAA,SAAAC,IACA7pG,IAAA,EACAhU,MAAA,EACAiU,OAAA,EACAC,KAAA,EAcA5O,IAAAkW,IAAAnS,MAAA,WAEA,QAAAA,GAAAqJ,GACAA,EAAA1C,KAAA,WACA,GAAA0C,GAAApN,GAAAyK,OAAA/S,MAAA0G,MAAA,wBAAAA,MAAA,+CAAAkgB,GAAA,kBAAAo6F,GAAAp6F,GAAA,mBAAAo6F,GACAx6D,EAAA9wC,EAAAO,UAAA,eAAA3U,MAAA,GACAklD,GAAArwC,QAAAM,OAAA,QAAA9E,KAAA,sBAAAjL,MAAA,uBAAAA,MAAA,sBACAgP,EAAAO,UAAA,WAAA3U,MAAA,IAAA6U,QAAAM,OAAA,QAAA9E,KAAA,kBAAAjL,MAAA,gBACA,IAAAi6B,GAAAjrB,EAAAO,UAAA,WAAA3U,KAAA2/G,EAAAntD,EACAnzB,GAAArqB,OAAAC,SACAoqB,EAAAxqB,QAAAM,OAAA,KAAA9E,KAAA,iBAAArB,GACA,gBAAAA,IACS5J,MAAA,kBAAA4J,GACT,MAAA4wG,IAAA5wG,KACSmG,OAAA,QAAA9E,KAAA,aAAArB,GACT,cAAAinD,KAAAjnD,IAAA,SACSqB,KAAA,aAAArB,GACT,cAAAinD,KAAAjnD,IAAA,SACSqB,KAAA,WAAAA,KAAA,YAAAjL,MAAA,uBACTi6B,EAAAj6B,MAAA,UAAA2F,EAAAe,QAAA,YACA,IAAA3E,GAAA04G,EAAA74G,GAAAvB,WAAA2O,GAAA0rG,EAAA94G,GAAAvB,WAAAy/C,EACA7kD,KACA8G,EAAAilF,GAAA/rF,GACAy/G,EAAAzvG,KAAA,IAAAlJ,EAAA,IAAAkJ,KAAA,QAAAlJ,EAAA,GAAAA,EAAA,IACA44G,EAAAF,IAEAr/G,IACA2G,EAAAilF,GAAA5rF,GACAs/G,EAAAzvG,KAAA,IAAAlJ,EAAA,IAAAkJ,KAAA,SAAAlJ,EAAA,GAAAA,EAAA,IACA64G,EAAAH,IAEAxgG,EAAAwgG,KAyDA,QAAAxgG,GAAAjL,GACAA,EAAAO,UAAA,WAAAtE,KAAA,qBAAArB,GACA,mBAAAixG,GAAA,KAAAhqD,KAAAjnD,IAAA,IAAAkxG,GAAA,KAAAjqD,KAAAjnD,IAAA,MAGA,QAAA+wG,GAAA3rG,GACAA,EAAA3C,OAAA,WAAApB,KAAA,IAAA4vG,EAAA,IACA7rG,EAAAO,UAAA,2BAAAtE,KAAA,QAAA4vG,EAAA,GAAAA,EAAA,IAEA,QAAAD,GAAA5rG,GACAA,EAAA3C,OAAA,WAAApB,KAAA,IAAA6vG,EAAA,IACA9rG,EAAAO,UAAA,2BAAAtE,KAAA,SAAA6vG,EAAA,GAAAA,EAAA,IAEA,QAAAR,KAwBA,QAAAS,KACA,IAAAn5G,GAAAk7C,MAAAk+D,UACAp/F,IACAy7B,EAAA,KACAqF,EAAA,IAAAm+D,EAAA,GACAn+D,EAAA,IAAAo+D,EAAA,GACAl/F,EAAA,GAEAsyC,KAGA,QAAA+sD,KACA,IAAAr5G,GAAAk7C,MAAAk+D,SAAA,GAAAp/F,IACA8gC,EAAA,IAAAm+D,EAAA,GACAn+D,EAAA,IAAAo+D,EAAA,GACAl/F,EAAA,EACAsyC,KAGA,QAAAgtD,KACA,GAAAj6G,GAAAW,GAAAm+B,MAAAnnC,GAAAo9F,GAAA,CACA11C,KACAr/C,EAAA,IAAAq/C,EAAA,GACAr/C,EAAA,IAAAq/C,EAAA,IAEA1kC,IACAha,GAAAk7C,MAAAiD,QACA1I,QAAAwjE,EAAA,GAAAA,EAAA,OAAAC,EAAA,GAAAA,EAAA,QACAp+D,EAAA,GAAAm+D,IAAA55G,EAAA,GAAAo2C,EAAA,KACAqF,EAAA,GAAAo+D,IAAA75G,EAAA,GAAAo2C,EAAA,MACWA,EAAA,MAEX8jE,GAAAC,EAAAn6G,EAAAhG,EAAA,KACA0/G,EAAA3rG,GACAgnF,GAAA,GAEAqlB,GAAAD,EAAAn6G,EAAA7F,EAAA,KACAw/G,EAAA5rG,GACAgnF,GAAA,GAEAA,IACA/7E,EAAAjL,GACAssG,GACA1/G,KAAA,QACAs5G,KAAAt5F,EAAA,mBAIA,QAAAw/F,GAAAn6G,EAAAY,EAAA/I,GACA,GAAAwC,GAAAD,EAAA0G,EAAAilF,GAAAnlF,GAAAu+E,EAAAr+E,EAAA,GAAA8vB,EAAA9vB,EAAA,GAAA2T,EAAAgnC,EAAA5jD,GAAA8mB,EAAA9mB,EAAAgiH,EAAAD,EAAA1+G,EAAAyjB,EAAA,GAAAA,EAAA,EAiBA,IAhBAhE,IACAwkE,GAAA1qE,EACAmc,GAAA11B,EAAAuZ,GAEApa,GAAAxC,EAAAyiH,EAAAC,GAAAhyG,KAAAnO,IAAA+kF,EAAA52E,KAAAlO,IAAAu2B,EAAA5wB,EAAAnI,KAAAmI,EAAAnI,GACA8iB,EACAvgB,GAAAC,GAAAoa,GAAAvZ,GAEAk7C,IAAA3hC,EAAAlM,KAAAnO,IAAA+kF,EAAA52E,KAAAlO,IAAAu2B,EAAA,EAAAwlB,EAAAv+C,GAAAwC,KACAoa,EAAApa,GACAD,EAAAC,EACAA,EAAAoa,GAEAra,EAAAqa,GAGAkK,EAAA,IAAAtkB,GAAAskB,EAAA,IAAAvkB,EAIA,MAHAvC,GAAA2iH,EAAA,KAAsCC,EAAA,KACtC97F,EAAA,GAAAtkB,EACAskB,EAAA,GAAAvkB,GACA,EAGA,QAAAsgH,KACAT,IACAlsG,EAAAhP,MAAA,wBAAAuP,UAAA,WAAAvP,MAAA,UAAA2F,EAAAe,QAAA,aACA9E,GAAAyK,OAAA,QAAArM,MAAA,eACAoM,EAAA8T,GAAA,wBAAAA,GAAA,sBAAAA,GAAA,wBAAAA,GAAA,uBAAAA,GAAA,sBAAAA,GAAA,oBACAu2E,IACA6kB,GACA1/G,KAAA,aAvGA,GAAAy7C,GAAAiJ,EAAA1nD,EAAAU,KAAAsiH,EAAAh6G,GAAAyK,OAAAzK,GAAAk7C,MAAAlkD,QAAA0iH,EAAAx+D,EAAAwR,GAAA11D,EAAAa,WAAAuV,EAAApN,GAAAyK,OAAAzT,GAAAijH,EAAAD,EAAAlgE,QAAAy/D,GAAA,UAAAtqD,KAAAgrD,IAAA5gH,EAAAogH,GAAA,UAAAxqD,KAAAgrD,IAAAzgH,EAAAwgB,EAAAggG,EAAAhjG,QAAA,UAAA69E,EAAA7iC,GAAAh7D,GAAA8jD,EAAA96C,GAAAm+B,MAAAnnC,GACAwT,EAAAxK,GAAAyK,OAAAo/C,EAAA7yD,IAAAsnB,GAAA,gBAAA66F,GAAA76F,GAAA,cAAA+6F,EAOA,IANAr5G,GAAAk7C,MAAAsX,eACAhoD,EAAA8T,GAAA,kBAAAg7F,GAAAh7F,GAAA,iBAAAy7F,GAEAvvG,EAAA8T,GAAA,kBAAAg7F,GAAAh7F,GAAA,gBAAAy7F,GAEA3sG,EAAA2/E,YAAAp/E,UAAA,KAAAo/E,YACA/yE,EACA8gC,EAAA,GAAAm+D,EAAA,GAAAn+D,EAAA,GACAA,EAAA,GAAAo+D,EAAA,GAAAp+D,EAAA,OACO,IAAAm/D,EAAA,CACP,GAAAx4D,IAAA,KAAAwN,KAAAgrD,GAAAv4D,GAAA,KAAAuN,KAAAgrD,EACAv7D,IAAAu6D,EAAA,EAAAx3D,GAAA3G,EAAA,GAAAo+D,EAAA,EAAAx3D,GAAA5G,EAAA,IACAA,EAAA,GAAAm+D,EAAAx3D,GACA3G,EAAA,GAAAo+D,EAAAx3D,OACO1hD,IAAAk7C,MAAAiD,SAAA1I,EAAAqF,EAAA9uC,QACPoB,GAAAhP,MAAA,yBAAAuP,UAAA,WAAAvP,MAAA,gBACA4B,GAAAyK,OAAA,QAAArM,MAAA,SAAA47G,EAAA57G,MAAA,WACAs7G,GACA1/G,KAAA,eAEAs/G,IA3HA,GAAAQ,GAAAD,EAAA3+D,EAAAuR,EAAA1oD,EAAA,iCAAA1K,EAAA,KAAAG,EAAA,KAAAy/G,GAAA,KAAAC,GAAA,KAAAU,GAAA,EAAAD,GAAA,EAAAhB,EAAAuB,GAAA,EAoRA,OAnPAn2G,GAAAm3C,MAAA,SAAA9tC,GACAA,EAAA1C,KAAA,WACA,GAAAgvG,GAAAx+D,EAAAwR,GAAAh1D,KAAAG,WAAAsiH,GACA9gH,EAAA4/G,EACAz/G,EAAA0/G,EACAhiH,EAAA4iH,EACAngF,EAAAkgF,GACSO,EAAA1iH,KAAA+V,WAAA0sG,CACTziH,MAAA+V,UAAA0sG,EACAjiB,GACAl4F,GAAAyK,OAAA/S,MAAA+G,aAAAiM,KAAA,yBACAovG,EAAAM,EAAAljH,EACA2iH,EAAAO,EAAAzgF,EACAs/E,EAAAmB,EAAA/gH,EACA6/G,EAAAkB,EAAA5gH,EACAkgH,GACA1/G,KAAA,iBAEWmzF,MAAA,yBACX,GAAA3F,GAAAlL,GAAA28B,EAAAkB,EAAA9gH,GAAAghH,EAAA/9B,GAAA48B,EAAAiB,EAAA3gH,EAEA,OADAsgH,GAAAD,EAAA,KACA,SAAAlyF,GACAsxF,EAAAkB,EAAA9gH,EAAAmuF,EAAA7/D,GACAuxF,EAAAiB,EAAA3gH,EAAA6gH,EAAA1yF,GACA+xF,GACA1/G,KAAA,QACAs5G,KAAA,cAGW5oG,KAAA,uBACXovG,EAAAK,EAAAjjH,EACA2iH,EAAAM,EAAAxgF,EACA+/E,GACA1/G,KAAA,QACAs5G,KAAA,WAEAoG,GACA1/G,KAAA,gBAIA0/G,GACA1/G,KAAA,eAEA0/G,GACA1/G,KAAA,QACAs5G,KAAA,WAEAoG,GACA1/G,KAAA,iBA8HA+J,EAAA1K,EAAA,SAAAiwD,GACA,MAAAzxD,WAAAV,QACAkC,EAAAiwD,EACAqvD,EAAAuB,IAAA7gH,GAAA,GAAAG,GACAuK,GAHA1K,GAKA0K,EAAAvK,EAAA,SAAA8vD,GACA,MAAAzxD,WAAAV,QACAqC,EAAA8vD,EACAqvD,EAAAuB,IAAA7gH,GAAA,GAAAG,GACAuK,GAHAvK,GAKAuK,EAAAgiF,MAAA,SAAAz8B,GACA,MAAAzxD,WAAAV,QACAkC,GAAAG,GAAAogH,IAAAtwD,EAAA,GAAAqwD,IAAArwD,EAAA,IAAmDjwD,EAAAugH,IAAAtwD,EAA0B9vD,IAAAmgH,IAAArwD,GAC7EvlD,GAFA1K,GAAAG,GAAAogH,EAAAD,GAAAtgH,EAAAugH,EAAApgH,EAAAmgH,EAAA,MAIA51G,EAAAia,OAAA,SAAAsrC,GACA,GAAA3G,GAAAtiC,EAAA+gC,EAAA7gC,EAAAoH,CACA,OAAA9vB,WAAAV,QAqBAkC,IACAspD,EAAA2G,EAAA,GAAAjpC,EAAAipC,EAAA,GACA9vD,IAAAmpD,IAAA,GAAAtiC,IAAA,IACAy5F,GAAAn3D,EAAAtiC,GACAhnB,EAAA2rE,SAAAriB,EAAAtpD,EAAAspD,GAAAtiC,EAAAhnB,EAAAgnB,IACAA,EAAAsiC,IAAAh7B,EAAAg7B,IAAAtiC,IAAAsH,GACAg7B,GAAAs2D,EAAA,IAAA54F,GAAA44F,EAAA,KAAAA,GAAAt2D,EAAAtiC,KAEA7mB,IACA4nD,EAAAkI,EAAA,GAAA/oC,EAAA+oC,EAAA,GACAjwD,IAAA+nD,IAAA,GAAA7gC,IAAA,IACAs5F,GAAAz4D,EAAA7gC,GACA/mB,EAAAwrE,SAAA5jB,EAAA5nD,EAAA4nD,GAAA7gC,EAAA/mB,EAAA+mB,IACAA,EAAA6gC,IAAAz5B,EAAAy5B,IAAA7gC,IAAAoH,GACAy5B,GAAA83D,EAAA,IAAA34F,GAAA24F,EAAA,KAAAA,GAAA93D,EAAA7gC,KAEAxc,IApCA1K,IACAygH,GACAn3D,EAAAm3D,EAAA,GAAAz5F,EAAAy5F,EAAA,KAEAn3D,EAAAs2D,EAAA,GAAA54F,EAAA44F,EAAA,GACA5/G,EAAA2rE,SAAAriB,EAAAtpD,EAAA2rE,OAAAriB,GAAAtiC,EAAAhnB,EAAA2rE,OAAA3kD,IACAA,EAAAsiC,IAAAh7B,EAAAg7B,IAAAtiC,IAAAsH,KAGAnuB,IACAqgH,GACAz4D,EAAAy4D,EAAA,GAAAt5F,EAAAs5F,EAAA,KAEAz4D,EAAA83D,EAAA,GAAA34F,EAAA24F,EAAA,GACA1/G,EAAAwrE,SAAA5jB,EAAA5nD,EAAAwrE,OAAA5jB,GAAA7gC,EAAA/mB,EAAAwrE,OAAAzkD,IACAA,EAAA6gC,IAAAz5B,EAAAy5B,IAAA7gC,IAAAoH,KAGAtuB,GAAAG,IAAAmpD,EAAAvB,IAAA/gC,EAAAE,IAAAlnB,GAAAspD,EAAAtiC,GAAA7mB,IAAA4nD,EAAA7gC,KAoBAxc,EAAAswB,MAAA,WAKA,MAJAtwB,GAAAe,UACAm0G,GAAA,KAAAC,GAAA,KACAY,EAAAD,EAAA,MAEA91G,GAEAA,EAAAe,MAAA,WACA,QAAAzL,GAAA4/G,EAAA,IAAAA,EAAA,MAAAz/G,GAAA0/G,EAAA,IAAAA,EAAA,IAEAl5G,GAAA83D,OAAA/zD,EAAAm3C,EAAA,MAEA,IAAA09D,KACAniH,EAAA,YACA+uB,EAAA,YACAja,EAAA,YACAf,EAAA,YACA8vG,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAEAP,KAAA,6DACAz+C,GAAAwD,GAAApwD,OAAAs2F,GAAAD,WACAwV,GAAAj/C,GAAA/gD,IACAigG,GAAAD,GAAA,wBACAj/C,IAAAm/C,IAAA9iG,KAAApiB,UAAAs4F,cAAA,GAAAl2E,MAAA,4BAAAi2E,GAAA4sB,GAIA5sB,GAAA1hE,MAAA,SAAA9sB,GACA,GAAAkT,GAAA,GAAAqF,MAAAvY,EACA,OAAA+sB,OAAA7Z,GAAA,KAAAA,GAEAs7E,GAAA5hF,SAAAwuG,GAAAxuG,SACA8yD,GAAA47C,OAAA5/C,GAAA,SAAAxoD,GACA,UAAAyoD,IAAA,IAAAtzD,KAAA0zD,MAAA7oD,EAAA,OACG,SAAAA,EAAAisC,GACHjsC,EAAA+xF,QAAA/xF,EAAA6jC,UAAA,IAAA1uC,KAAA0zD,MAAA5c,KACG,SAAAjsC,GACH,MAAAA,GAAAqI,eAEAmkD,GAAA67C,QAAA77C,GAAA47C,OAAA16G,MACA8+D,GAAA67C,QAAApgG,IAAAukD,GAAA47C,OAAAngG,IAAAva,MACA8+D,GAAA87C,OAAA9/C,GAAA,SAAAxoD,GACA,UAAAyoD,IAAA,IAAAtzD,KAAA0zD,MAAA7oD,EAAA,OACG,SAAAA,EAAAisC,GACHjsC,EAAA+xF,QAAA/xF,EAAA6jC,UAAA,IAAA1uC,KAAA0zD,MAAA5c,KACG,SAAAjsC,GACH,MAAAA,GAAAsI,eAEAkkD,GAAA+7C,QAAA/7C,GAAA87C,OAAA56G,MACA8+D,GAAA+7C,QAAAtgG,IAAAukD,GAAA87C,OAAArgG,IAAAva,MACA8+D,GAAAg8C,KAAAhgD,GAAA,SAAAxoD,GACA,GAAAyoG,GAAAzoG,EAAA+tD,oBAAA,EACA,WAAAtF,IAAA,MAAAtzD,KAAA0zD,MAAA7oD,EAAA,KAAAyoG,QACG,SAAAzoG,EAAAisC,GACHjsC,EAAA+xF,QAAA/xF,EAAA6jC,UAAA,KAAA1uC,KAAA0zD,MAAA5c,KACG,SAAAjsC,GACH,MAAAA,GAAAuI,aAEAikD,GAAAk8C,MAAAl8C,GAAAg8C,KAAA96G,MACA8+D,GAAAk8C,MAAAzgG,IAAAukD,GAAAg8C,KAAAvgG,IAAAva,MACA8+D,GAAAm8C,MAAAngD,GAAA,SAAAxoD,GAGA,MAFAA,GAAAwsD,GAAAwlC,IAAAhyF,GACAA,EAAAgxF,QAAA,GACAhxF,GACG,SAAAA,EAAAisC,GACHjsC,EAAA2xF,SAAA3xF,EAAA0I,WAAAujC,IACG,SAAAjsC,GACH,MAAAA,GAAA0I,aAEA8jD,GAAAV,OAAAU,GAAAm8C,MAAAj7G,MACA8+D,GAAAV,OAAA7jD,IAAAukD,GAAAm8C,MAAA1gG,IAAAva,KAsDA,IAAAiuF,KAAA,oGACAitB,KAAAp8C,GAAA47C,OAAA,IAAA57C,GAAA47C,OAAA,IAAA57C,GAAA47C,OAAA,KAAA57C,GAAA47C,OAAA,KAAA57C,GAAA87C,OAAA,IAAA97C,GAAA87C,OAAA,IAAA97C,GAAA87C,OAAA,KAAA97C,GAAA87C,OAAA,KAAA97C,GAAAg8C,KAAA,IAAAh8C,GAAAg8C,KAAA,IAAAh8C,GAAAg8C,KAAA,IAAAh8C,GAAAg8C,KAAA,KAAAh8C,GAAAwlC,IAAA,IAAAxlC,GAAAwlC,IAAA,IAAAxlC,GAAA0lC,KAAA,IAAA1lC,GAAAm8C,MAAA,IAAAn8C,GAAAm8C,MAAA,IAAAn8C,GAAAovB,KAAA,IACAitB,GAAA7/C,GAAA7gD,QAAA,eAAA5S,GACA,MAAAA,GAAA6S,qBACG,eAAA7S,GACH,MAAAA,GAAA8S,gBACG,iBAAA9S,GACH,MAAAA,GAAA+S,gBACG,iBAAA/S,GACH,MAAAA,GAAAgT,cACG,iBAAAhT,GACH,MAAAA,GAAAiT,UAAA,GAAAjT,EAAAkT,aACG,iBAAAlT,GACH,UAAAA,EAAAkT,aACG,cAAAlT,GACH,MAAAA,GAAAmT,cACG,KAAA8pD,MACHqpB,IACAnuF,MAAA,SAAAqJ,EAAAC,EAAA9N,GACA,MAAAqE,IAAAG,MAAAyH,KAAAC,KAAA2B,EAAA7N,MAAA8N,EAAA9N,GAAA2P,IAAAijF,KAEAjzB,MAAA9P,EACA3jD,KAAA2jD,EAEA6vD,IAAAhtB,KAAApvB,GAAAovB,KACApvB,GAAAh/D,MAAA,WACA,MAAAguF,IAAAjuF,GAAAC,MAAAC,SAAAm7G,GAAAC,IAEA,IAAAC,IAAAF,GAAA/vG,IAAA,SAAAolD,GACA,OAAAA,EAAA,GAAAh2C,IAAAg2C,EAAA,MAEA8qD,GAAAd,GAAA9/F,QAAA,eAAA5S,GACA,MAAAA,GAAAq7F,wBACG,eAAAr7F,GACH,MAAAA,GAAAw7F,mBACG,iBAAAx7F,GACH,MAAAA,GAAAs7F,mBACG,iBAAAt7F,GACH,MAAAA,GAAAo7F,iBACG,iBAAAp7F,GACH,MAAAA,GAAAk7F,aAAA,GAAAl7F,EAAAi7F,gBACG,iBAAAj7F,GACH,UAAAA,EAAAi7F,gBACG,cAAAj7F,GACH,MAAAA,GAAAu7F,iBACG,KAAAt+B,KACHs2C,IAAAltB,KAAApvB,GAAAovB,KAAA3zE,IACAukD,GAAAh/D,MAAAya,IAAA,WACA,MAAAuzE,IAAAjuF,GAAAC,MAAAC,SAAAq7G,GAAAC,KAEAx7G,GAAA+E,KAAA0xD,GAAA,SAAAI,GACA,MAAAA,GAAA/nB,eAEA9uC,GAAAy5B,KAAA,SAAA6U,EAAAtiB,GACA,MAAA0qC,IAAApoB,EAAA,mBAAAogD,GAAA1iE,IAKAhsB,GAAAqd,KAAA,SAAAixB,EAAAtiB,GACA,MAAA0qC,IAAApoB,EAAA,YAAAqgD,GAAA3iE,IAOAhsB,GAAA2yF,IAAAl8B,GAAA,SAAAI,GACA,MAAAA,GAAA4kD,cAEA/jH,KAAAsI,MAAAwpD,EAAA,OAAA7+C,MAAA8+C,EAAA,mBAAAD,KAAAn0D,KAAA4G,EAAAnH,EAAAmH,EAAArH,GAAA40D,KAAA50D,EAAAqH,QAAAwtD,OLu1SMiyD,KACA,SAAU9mH,EAAQqH,EAASnH,GMrqlBjC,GAAA6mH,GAAA7mH,EAAA,KACA,kBAAA6mH,SAAA/mH,EAAAsC,EAAAykH,EAAA,KAEA,IAEAtzG,IAAeuzG,KAAA,EACfvzG,GAAA0xB,cAHAA,EAKAjlC,GAAA,MAAA6mH,EAAAtzG,EACAszG,GAAAE,SAAAjnH,EAAAqH,QAAA0/G,EAAAE,SN+qlBMC,KACA,SAAUlnH,EAAQqH,EAASnH,GO5rlBjCmH,EAAArH,EAAAqH,QAAAnH,EAAA,UAKAmH,EAAA2N,MAAAhV,EAAAsC,EAAA,4nEAAmpE,IAAQshB,QAAA,EAAAujG,SAAA,wDAAAljF,SAAAmjF,SAAA,ixCAAAC,KAAA,SAAAC,gBAAA,opGAAuiJC,WAAA","file":"static/js/67.827654d3.chunk.js","sourcesContent":["webpackJsonp([67],{\n\n/***/ 1337:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_components_LayoutComponents_Page__ = __webpack_require__(273);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_helmet__ = __webpack_require__(500);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_helmet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_helmet__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__C3__ = __webpack_require__(2284);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _class,_temp;function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var C3Page=(_temp=_class=function(_React$Component){_inherits(C3Page,_React$Component);function C3Page(){_classCallCheck(this,C3Page);return _possibleConstructorReturn(this,(C3Page.__proto__||Object.getPrototypeOf(C3Page)).apply(this,arguments));}_createClass(C3Page,[{key:'render',value:function render(){var props=this.props;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_components_LayoutComponents_Page__[\"a\" /* default */],props,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_helmet___default.a,{title:'C3.js'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__C3__[\"a\" /* default */],null));}}]);return C3Page;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component),_class.defaultProps={pathName:'C3.js',roles:['agent','administrator']},_temp);/* harmony default export */ __webpack_exports__[\"default\"] = (C3Page);\n\n/***/ }),\n\n/***/ 2284:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_c3js__ = __webpack_require__(2285);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_c3js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_c3js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_c3_c3_css__ = __webpack_require__(2288);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_c3_c3_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_c3_c3_css__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var C3Items=function(_React$Component){_inherits(C3Items,_React$Component);function C3Items(){_classCallCheck(this,C3Items);return _possibleConstructorReturn(this,(C3Items.__proto__||Object.getPrototypeOf(C3Items)).apply(this,arguments));}_createClass(C3Items,[{key:'render',value:function render(){var colors={_primary:'#01a8fe',_default:'#acb7bf',_success:'#46be8a',_danger:'#fb434a'};var line={data:{columns:[['Primary',100,165,140,270,200,140,220],['Success',110,80,100,85,125,90,100]]},color:{pattern:[colors._primary,colors._success]},axis:{x:{tick:{outer:!1}},y:{max:300,min:0,tick:{outer:!1,count:7,values:[0,50,100,150,200,250,300]}}},grid:{x:{show:!1},y:{show:!0}}};var spline={data:{columns:[['Primary',100,165,140,270,200,140,220],['Danger',110,80,100,85,125,90,100]],type:'spline'},color:{pattern:[colors._primary,colors._danger]},axis:{x:{tick:{outer:!1}},y:{max:300,min:0,tick:{outer:!1,count:7,values:[0,50,100,150,200,250,300]}}},grid:{x:{show:!1},y:{show:!0}}};var scatter={data:{xs:{Danger:'Danger_x',Primary:'Primary_x'},columns:[['Danger_x',3.5,3,3.2,3.1,3.6,3.9,3.4,3.4,2.9,3.1,3.7,3.4,3,3,4,4.2,3.9,3.5,3.8,3.8,3.4,3.7,3.6,3.3,3.4,3,3.4,3.5,3.4,3.2,3.1,3.4,4.1,4.2,3.1,3.2,3.5,3.6,3,3.4,3.5,2.3,3.2,3.5,3.8,3,3.8,3.2,3.7,3.3],['Primary_x',3.2,3.2,3.1,2.3,2.8,2.8,3.3,2.4,2.9,2.7,2,3,2.2,2.9,2.9,3.1,3,2.7,2.2,2.5,3.2,2.8,2.5,2.8,2.9,3,2.8,3,2.9,2.6,2.4,2.4,2.7,2.7,3,3.4,3.1,2.3,3,2.5,2.6,3,2.6,2.3,2.7,3,2.9,2.9,2.5,2.8],['Danger',0.2,0.2,0.2,0.2,0.2,0.4,0.3,0.2,0.2,0.1,0.2,0.2,0.1,0.1,0.2,0.4,0.4,0.3,0.3,0.3,0.2,0.4,0.2,0.5,0.2,0.2,0.4,0.2,0.2,0.2,0.2,0.4,0.1,0.2,0.2,0.2,0.2,0.1,0.2,0.2,0.3,0.3,0.2,0.6,0.4,0.3,0.2,0.2,0.2,0.2],['Primary',1.4,1.5,1.5,1.3,1.5,1.3,1.6,1,1.3,1.4,1,1.5,1,1.4,1.3,1.4,1.5,1,1.5,1.1,1.6,1.3,1.5,1.2,1.3,1.4,1.4,1.2,1.5,1,1.1,1,1.2,1.6,1.5,1.6,1.5,1.3,1.3,1.3,1.2,1.4,1.2,1,1.3,1.2,1.3,1.3,1.1,1.3]],type:'scatter'},color:{pattern:[colors._danger,colors._primary]},axis:{x:{label:'Width',tick:{outer:!1,fit:!1}},size:{height:400},padding:{right:40},y:{label:'Height',tick:{outer:!1,count:5,values:[0,0.4,0.8,1.2,1.6]}}},grid:{x:{show:!1},y:{show:!0}}};var bar={data:{columns:[['Danger',30,200,100,400,150,250],['Default',130,100,140,200,150,50],['Primary',130,-150,200,300,-200,100]],type:'bar'},bar:{width:{max:20}},color:{pattern:[colors._danger,colors._default,colors._primary]},grid:{y:{show:!0},x:{show:!1}}};var stackedBar={data:{columns:[['Primary',-30,200,300,400,-150,250,-30,200,300,400,-150,250],['Default',130,100,-400,100,-150,50,130,100,-400,100,-150,50],['Danger',-230,200,200,-300,250,250,-230,200,200,-300,250,250],['Success',100,-250,150,200,-300,-100,100,-250,150,200,-300,-100]],type:'bar',groups:[['Primary','Default','Danger','Success']]},color:{pattern:[colors._primary,colors._default,colors._danger,colors._success]},bar:{width:{max:45}},grid:{y:{show:!0,lines:[{value:0}]}}};var combination={data:{columns:[['Primary',30,20,50,40,60,50,30,20,50,40,60,50],['Default',200,130,90,240,130,220,200,130,90,240,130,220],['Success',300,200,160,400,250,250,300,200,160,400,250,250],['Danger',200,130,90,240,130,220,200,130,90,240,130,220],['Primary',130,120,150,140,160,150,130,120,150,140,160,150],['Danger2',90,70,20,50,60,120,90,70,20,50,60,120]],type:'bar',types:{Success:'spline',Danger:'line',Danger2:'area'},groups:[['Primary','Default']]},color:{pattern:[colors._primary,colors._default,colors._success,colors._danger,colors._danger]},grid:{x:{show:!1},y:{show:!0}}};var subChart={data:{columns:[['Primary',100,165,140,270,200,140,220,210,190,100,170,250],['Success',110,80,100,85,125,90,100,130,120,90,100,115]],type:'spline'},color:{pattern:[colors._primary,colors._danger]},subchart:{show:true}};var zoom={data:{columns:[['Sample',30,200,100,400,150,250,150,200,170,240,350,150,100,400,150,250,150,200,170,240,100,150,250,150,200,170,240,30,200,100,400,150,250,150,200,170,240,350,150,100,400,350,220,250,300,270,140,150,90,150,50,120,70,40]],colors:{Sample:colors._primary}},zoom:{enabled:!0}};var pie={data:{columns:[['Primary',30],['Success',120]],type:'pie'},color:{pattern:[colors._primary,colors._success]}};var donut={data:{columns:[['Danger',30],['Success',120]],type:'donut'},color:{pattern:[colors._danger,colors._success]},donut:{title:'Connections'}};var step={data:{columns:[['Primary',300,350,300,0,0,100],['Success',130,100,140,200,150,50]],types:{Primary:'step',Success:'area-step'}},color:{pattern:[colors._primary,colors._success]}};var area={data:{columns:[['Primary',300,350,300,0,0,0],['Success',130,100,140,200,150,50]],types:{Primary:'area',Success:'area-spline'}},color:{pattern:[colors._primary,colors._success]}};return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('section',{className:'card'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'card-header'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'utils__title'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'C3'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer',className:'btn btn-sm btn-primary ml-4'},'Official Documentation ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'card-body'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'row'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Simple Line')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:line.data,color:line.color,axis:line.axis,grid:line.grid}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Spline')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:spline.data,color:spline.color,axis:spline.axis,grid:spline.grid})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'row'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Step')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:step.data,color:step.color}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Area')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:area.data,color:area.color})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'row'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Scatter')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:scatter.data,color:scatter.color,axis:scatter.axis,grid:scatter.grid}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Bar')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:bar.data,color:bar.color,grid:bar.grid,bar:bar.bar})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'row'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Stacked Bar')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:stackedBar.data,color:stackedBar.color,bar:stackedBar.bar,grid:stackedBar.grid}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Combination')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:combination.data,color:combination.color,grid:combination.grid})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'row'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Sub Chart')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:subChart.data,color:subChart.color,subchart:subChart.subchart}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Zoom')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:zoom.data,color:zoom.color,zoom:zoom.zoom})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'row'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Pie Chart')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:pie.data,color:pie.color}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Donut Chart')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://c3js.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_c3js___default.a,{data:donut.data,color:donut.color,donut:donut.donut}))))));}}]);return C3Items;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"a\"] = (C3Items);\n\n/***/ }),\n\n/***/ 2285:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = __webpack_require__(9);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar c3 = void 0;\n\nvar C3Chart = function (_React$Component) {\n  _inherits(C3Chart, _React$Component);\n\n  function C3Chart() {\n    _classCallCheck(this, C3Chart);\n\n    return _possibleConstructorReturn(this, (C3Chart.__proto__ || Object.getPrototypeOf(C3Chart)).apply(this, arguments));\n  }\n\n  _createClass(C3Chart, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      c3 = __webpack_require__(2286);\n      this.updateChart(this.props);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(newProps) {\n      this.updateChart(newProps);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.destroyChart();\n    }\n  }, {\n    key: 'destroyChart',\n    value: function destroyChart() {\n      try {\n        this.chart = this.chart.destroy();\n      } catch (err) {\n        throw new Error('Internal C3 error', err);\n      }\n    }\n  }, {\n    key: 'generateChart',\n    value: function generateChart(mountNode, config) {\n      var newConfig = _extends({ bindto: mountNode }, config);\n      return c3.generate(newConfig);\n    }\n  }, {\n    key: 'loadNewData',\n    value: function loadNewData(data) {\n      this.chart.load(data);\n    }\n  }, {\n    key: 'unloadData',\n    value: function unloadData() {\n      this.chart.unload();\n    }\n  }, {\n    key: 'updateChart',\n    value: function updateChart(config) {\n      if (!this.chart) {\n        this.chart = this.generateChart((0, _reactDom.findDOMNode)(this), config);\n      }\n\n      if (config.unloadBeforeLoad) {\n        this.unloadData();\n      }\n\n      this.loadNewData(config.data);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var className = this.props.className ? ' ' + this.props.className : '';\n      var style = this.props.style ? this.props.style : {};\n      return _react2.default.createElement('div', { className: className, style: style });\n    }\n  }], [{\n    key: 'displayName',\n    get: function get() {\n      return 'C3Chart';\n    }\n  }, {\n    key: 'propTypes',\n    get: function get() {\n      return {\n        data: _propTypes2.default.object.isRequired,\n        title: _propTypes2.default.object,\n        size: _propTypes2.default.object,\n        padding: _propTypes2.default.object,\n        color: _propTypes2.default.object,\n        interaction: _propTypes2.default.object,\n        transition: _propTypes2.default.object,\n        oninit: _propTypes2.default.func,\n        onrendered: _propTypes2.default.func,\n        onmouseover: _propTypes2.default.func,\n        onmouseout: _propTypes2.default.func,\n        onresize: _propTypes2.default.func,\n        onresized: _propTypes2.default.func,\n        axis: _propTypes2.default.object,\n        grid: _propTypes2.default.object,\n        regions: _propTypes2.default.array,\n        legend: _propTypes2.default.object,\n        tooltip: _propTypes2.default.object,\n        subchart: _propTypes2.default.object,\n        zoom: _propTypes2.default.object,\n        point: _propTypes2.default.object,\n        line: _propTypes2.default.object,\n        area: _propTypes2.default.object,\n        bar: _propTypes2.default.object,\n        pie: _propTypes2.default.object,\n        donut: _propTypes2.default.object,\n        gauge: _propTypes2.default.object,\n        className: _propTypes2.default.string,\n        style: _propTypes2.default.object,\n        unloadBeforeLoad: _propTypes2.default.bool\n      };\n    }\n  }]);\n\n  return C3Chart;\n}(_react2.default.Component);\n\nexports.default = C3Chart;\n\n\n/***/ }),\n\n/***/ 2286:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* @license C3.js v0.4.23 | (c) C3 Team and other contributors | http://c3js.org/ */\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.c3 = factory());\n}(this, (function () { 'use strict';\n\n    var CLASS = {\n        target: 'c3-target',\n        chart: 'c3-chart',\n        chartLine: 'c3-chart-line',\n        chartLines: 'c3-chart-lines',\n        chartBar: 'c3-chart-bar',\n        chartBars: 'c3-chart-bars',\n        chartText: 'c3-chart-text',\n        chartTexts: 'c3-chart-texts',\n        chartArc: 'c3-chart-arc',\n        chartArcs: 'c3-chart-arcs',\n        chartArcsTitle: 'c3-chart-arcs-title',\n        chartArcsBackground: 'c3-chart-arcs-background',\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n        selectedCircle: 'c3-selected-circle',\n        selectedCircles: 'c3-selected-circles',\n        eventRect: 'c3-event-rect',\n        eventRects: 'c3-event-rects',\n        eventRectsSingle: 'c3-event-rects-single',\n        eventRectsMultiple: 'c3-event-rects-multiple',\n        zoomRect: 'c3-zoom-rect',\n        brush: 'c3-brush',\n        focused: 'c3-focused',\n        defocused: 'c3-defocused',\n        region: 'c3-region',\n        regions: 'c3-regions',\n        title: 'c3-title',\n        tooltipContainer: 'c3-tooltip-container',\n        tooltip: 'c3-tooltip',\n        tooltipName: 'c3-tooltip-name',\n        shape: 'c3-shape',\n        shapes: 'c3-shapes',\n        line: 'c3-line',\n        lines: 'c3-lines',\n        bar: 'c3-bar',\n        bars: 'c3-bars',\n        circle: 'c3-circle',\n        circles: 'c3-circles',\n        arc: 'c3-arc',\n        arcLabelLine: 'c3-arc-label-line',\n        arcs: 'c3-arcs',\n        area: 'c3-area',\n        areas: 'c3-areas',\n        empty: 'c3-empty',\n        text: 'c3-text',\n        texts: 'c3-texts',\n        gaugeValue: 'c3-gauge-value',\n        grid: 'c3-grid',\n        gridLines: 'c3-grid-lines',\n        xgrid: 'c3-xgrid',\n        xgrids: 'c3-xgrids',\n        xgridLine: 'c3-xgrid-line',\n        xgridLines: 'c3-xgrid-lines',\n        xgridFocus: 'c3-xgrid-focus',\n        ygrid: 'c3-ygrid',\n        ygrids: 'c3-ygrids',\n        ygridLine: 'c3-ygrid-line',\n        ygridLines: 'c3-ygrid-lines',\n        axis: 'c3-axis',\n        axisX: 'c3-axis-x',\n        axisXLabel: 'c3-axis-x-label',\n        axisY: 'c3-axis-y',\n        axisYLabel: 'c3-axis-y-label',\n        axisY2: 'c3-axis-y2',\n        axisY2Label: 'c3-axis-y2-label',\n        legendBackground: 'c3-legend-background',\n        legendItem: 'c3-legend-item',\n        legendItemEvent: 'c3-legend-item-event',\n        legendItemTile: 'c3-legend-item-tile',\n        legendItemHidden: 'c3-legend-item-hidden',\n        legendItemFocused: 'c3-legend-item-focused',\n        dragarea: 'c3-dragarea',\n        EXPANDED: '_expanded_',\n        SELECTED: '_selected_',\n        INCLUDED: '_included_'\n    };\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    var classCallCheck = function (instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var inherits = function (subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function (self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    var isValue = function isValue(v) {\n        return v || v === 0;\n    };\n    var isFunction = function isFunction(o) {\n        return typeof o === 'function';\n    };\n    var isArray = function isArray(o) {\n        return Array.isArray(o);\n    };\n    var isString = function isString(o) {\n        return typeof o === 'string';\n    };\n    var isUndefined = function isUndefined(v) {\n        return typeof v === 'undefined';\n    };\n    var isDefined = function isDefined(v) {\n        return typeof v !== 'undefined';\n    };\n    var ceil10 = function ceil10(v) {\n        return Math.ceil(v / 10) * 10;\n    };\n    var asHalfPixel = function asHalfPixel(n) {\n        return Math.ceil(n) + 0.5;\n    };\n    var diffDomain = function diffDomain(d) {\n        return d[1] - d[0];\n    };\n    var isEmpty = function isEmpty(o) {\n        return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;\n    };\n    var notEmpty = function notEmpty(o) {\n        return !c3_chart_internal_fn.isEmpty(o);\n    };\n    var getOption = function getOption(options, key, defaultValue) {\n        return isDefined(options[key]) ? options[key] : defaultValue;\n    };\n    var hasValue = function hasValue(dict, value) {\n        var found = false;\n        Object.keys(dict).forEach(function (key) {\n            if (dict[key] === value) {\n                found = true;\n            }\n        });\n        return found;\n    };\n    var sanitise = function sanitise(str) {\n        return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n    };\n    var getPathBox = function getPathBox(path) {\n        var box = path.getBoundingClientRect(),\n            items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n            minX = items[0].x,\n            minY = Math.min(items[0].y, items[1].y);\n        return { x: minX, y: minY, width: box.width, height: box.height };\n    };\n\n    var c3_axis_fn;\n    var c3_axis_internal_fn;\n\n    function AxisInternal(component, params) {\n        var internal = this;\n        internal.component = component;\n        internal.params = params || {};\n\n        internal.d3 = component.d3;\n        internal.scale = internal.d3.scale.linear();\n        internal.range;\n        internal.orient = \"bottom\";\n        internal.innerTickSize = 6;\n        internal.outerTickSize = this.params.withOuterTick ? 6 : 0;\n        internal.tickPadding = 3;\n        internal.tickValues = null;\n        internal.tickFormat;\n        internal.tickArguments;\n\n        internal.tickOffset = 0;\n        internal.tickCulling = true;\n        internal.tickCentered;\n        internal.tickTextCharSize;\n        internal.tickTextRotate = internal.params.tickTextRotate;\n        internal.tickLength;\n\n        internal.axis = internal.generateAxis();\n    }\n    c3_axis_internal_fn = AxisInternal.prototype;\n\n    c3_axis_internal_fn.axisX = function (selection, x, tickOffset) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n        });\n    };\n    c3_axis_internal_fn.axisY = function (selection, y) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n        });\n    };\n    c3_axis_internal_fn.scaleExtent = function (domain) {\n        var start = domain[0],\n            stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    };\n    c3_axis_internal_fn.generateTicks = function (scale) {\n        var internal = this;\n        var i,\n            domain,\n            ticks = [];\n        if (scale.ticks) {\n            return scale.ticks.apply(scale, internal.tickArguments);\n        }\n        domain = scale.domain();\n        for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n            ticks.push(i);\n        }\n        if (ticks.length > 0 && ticks[0] > 0) {\n            ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n        }\n        return ticks;\n    };\n    c3_axis_internal_fn.copyScale = function () {\n        var internal = this;\n        var newScale = internal.scale.copy(),\n            domain;\n        if (internal.params.isCategory) {\n            domain = internal.scale.domain();\n            newScale.domain([domain[0], domain[1] - 1]);\n        }\n        return newScale;\n    };\n    c3_axis_internal_fn.textFormatted = function (v) {\n        var internal = this,\n            formatted = internal.tickFormat ? internal.tickFormat(v) : v;\n        return typeof formatted !== 'undefined' ? formatted : '';\n    };\n    c3_axis_internal_fn.updateRange = function () {\n        var internal = this;\n        internal.range = internal.scale.rangeExtent ? internal.scale.rangeExtent() : internal.scaleExtent(internal.scale.range());\n        return internal.range;\n    };\n    c3_axis_internal_fn.updateTickTextCharSize = function (tick) {\n        var internal = this;\n        if (internal.tickTextCharSize) {\n            return internal.tickTextCharSize;\n        }\n        var size = {\n            h: 11.5,\n            w: 5.5\n        };\n        tick.select('text').text(function (d) {\n            return internal.textFormatted(d);\n        }).each(function (d) {\n            var box = this.getBoundingClientRect(),\n                text = internal.textFormatted(d),\n                h = box.height,\n                w = text ? box.width / text.length : undefined;\n            if (h && w) {\n                size.h = h;\n                size.w = w;\n            }\n        }).text('');\n        internal.tickTextCharSize = size;\n        return size;\n    };\n    c3_axis_internal_fn.transitionise = function (selection) {\n        return this.params.withoutTransition ? selection : this.d3.transition(selection);\n    };\n    c3_axis_internal_fn.isVertical = function () {\n        return this.orient === 'left' || this.orient === 'right';\n    };\n    c3_axis_internal_fn.tspanData = function (d, i, ticks, scale) {\n        var internal = this;\n        var splitted = internal.params.tickMultiline ? internal.splitTickText(d, ticks, scale) : [].concat(internal.textFormatted(d));\n\n        if (internal.params.tickMultiline && internal.params.tickMultilineMax > 0) {\n            splitted = internal.ellipsify(splitted, internal.params.tickMultilineMax);\n        }\n\n        return splitted.map(function (s) {\n            return { index: i, splitted: s, length: splitted.length };\n        });\n    };\n    c3_axis_internal_fn.splitTickText = function (d, ticks, scale) {\n        var internal = this,\n            tickText = internal.textFormatted(d),\n            maxWidth = internal.params.tickWidth,\n            subtext,\n            spaceIndex,\n            textWidth,\n            splitted = [];\n\n        if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n            return tickText;\n        }\n\n        if (!maxWidth || maxWidth <= 0) {\n            maxWidth = internal.isVertical() ? 95 : internal.params.isCategory ? Math.ceil(scale(ticks[1]) - scale(ticks[0])) - 12 : 110;\n        }\n\n        function split(splitted, text) {\n            spaceIndex = undefined;\n            for (var i = 1; i < text.length; i++) {\n                if (text.charAt(i) === ' ') {\n                    spaceIndex = i;\n                }\n                subtext = text.substr(0, i + 1);\n                textWidth = internal.tickTextCharSize.w * subtext.length;\n                // if text width gets over tick width, split by space index or crrent index\n                if (maxWidth < textWidth) {\n                    return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\n                }\n            }\n            return splitted.concat(text);\n        }\n\n        return split(splitted, tickText + \"\");\n    };\n    c3_axis_internal_fn.ellipsify = function (splitted, max) {\n        if (splitted.length <= max) {\n            return splitted;\n        }\n\n        var ellipsified = splitted.slice(0, max);\n        var remaining = 3;\n        for (var i = max - 1; i >= 0; i--) {\n            var available = ellipsified[i].length;\n\n            ellipsified[i] = ellipsified[i].substr(0, available - remaining).padEnd(available, '.');\n\n            remaining -= available;\n\n            if (remaining <= 0) {\n                break;\n            }\n        }\n\n        return ellipsified;\n    };\n    c3_axis_internal_fn.updateTickLength = function () {\n        var internal = this;\n        internal.tickLength = Math.max(internal.innerTickSize, 0) + internal.tickPadding;\n    };\n    c3_axis_internal_fn.lineY2 = function (d) {\n        var internal = this,\n            tickPosition = internal.scale(d) + (internal.tickCentered ? 0 : internal.tickOffset);\n        return internal.range[0] < tickPosition && tickPosition < internal.range[1] ? internal.innerTickSize : 0;\n    };\n    c3_axis_internal_fn.textY = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1) : internal.tickLength;\n    };\n    c3_axis_internal_fn.textTransform = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? \"rotate(\" + rotate + \")\" : \"\";\n    };\n    c3_axis_internal_fn.textTextAnchor = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? rotate > 0 ? \"start\" : \"end\" : \"middle\";\n    };\n    c3_axis_internal_fn.tspanDx = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 8 * Math.sin(Math.PI * (rotate / 180)) : 0;\n    };\n    c3_axis_internal_fn.tspanDy = function (d, i) {\n        var internal = this,\n            dy = internal.tickTextCharSize.h;\n        if (i === 0) {\n            if (internal.isVertical()) {\n                dy = -((d.length - 1) * (internal.tickTextCharSize.h / 2) - 3);\n            } else {\n                dy = \".71em\";\n            }\n        }\n        return dy;\n    };\n\n    c3_axis_internal_fn.generateAxis = function () {\n        var internal = this,\n            d3 = internal.d3,\n            params = internal.params;\n        function axis(g) {\n            g.each(function () {\n                var g = axis.g = d3.select(this);\n\n                var scale0 = this.__chart__ || internal.scale,\n                    scale1 = this.__chart__ = internal.copyScale();\n\n                var ticks = internal.tickValues ? internal.tickValues : internal.generateTicks(scale1),\n                    tick = g.selectAll(\".tick\").data(ticks, scale1),\n                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n\n                // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n                tickExit = tick.exit().remove(),\n                    tickUpdate = internal.transitionise(tick).style(\"opacity\", 1),\n                    tickTransform,\n                    tickX,\n                    tickY;\n\n                if (params.isCategory) {\n                    internal.tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                    tickX = internal.tickCentered ? 0 : internal.tickOffset;\n                    tickY = internal.tickCentered ? internal.tickOffset : 0;\n                } else {\n                    internal.tickOffset = tickX = 0;\n                }\n\n                tickEnter.append(\"line\");\n                tickEnter.append(\"text\");\n\n                internal.updateRange();\n                internal.updateTickLength();\n                internal.updateTickTextCharSize(g.select('.tick'));\n\n                var lineUpdate = tickUpdate.select(\"line\"),\n                    textUpdate = tickUpdate.select(\"text\"),\n                    tspanUpdate = tick.select(\"text\").selectAll('tspan').data(function (d, i) {\n                    return internal.tspanData(d, i, ticks, scale1);\n                });\n\n                tspanUpdate.enter().append('tspan');\n                tspanUpdate.exit().remove();\n                tspanUpdate.text(function (d) {\n                    return d.splitted;\n                });\n\n                var path = g.selectAll(\".domain\").data([0]),\n                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), internal.transitionise(path));\n\n                // TODO: each attr should be one function and change its behavior by internal.orient, probably\n                switch (internal.orient) {\n                    case \"bottom\":\n                        {\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return internal.textY(d, i);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + internal.outerTickSize);\n                            break;\n                        }\n                    case \"top\":\n                        {\n                            // TODO: rotated tick text\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return -1 * internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return -1 * internal.textY(d, i) - (params.isCategory ? 2 : internal.tickLength - 2);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + -internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"left\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", -internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", -internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"end\");\n                            tspanUpdate.attr('x', -internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + -internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"right\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"start\");\n                            tspanUpdate.attr('x', internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + internal.outerTickSize);\n                            break;\n                        }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1,\n                        dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function scale1(d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1, internal.tickOffset);\n                }\n                tickEnter.call(tickTransform, scale0, internal.tickOffset);\n                tickUpdate.call(tickTransform, scale1, internal.tickOffset);\n            });\n        }\n        axis.scale = function (x) {\n            if (!arguments.length) {\n                return internal.scale;\n            }\n            internal.scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) {\n                return internal.orient;\n            }\n            internal.orient = x in { top: 1, right: 1, bottom: 1, left: 1 } ? x + \"\" : \"bottom\";\n            return axis;\n        };\n        axis.tickFormat = function (format) {\n            if (!arguments.length) {\n                return internal.tickFormat;\n            }\n            internal.tickFormat = format;\n            return axis;\n        };\n        axis.tickCentered = function (isCentered) {\n            if (!arguments.length) {\n                return internal.tickCentered;\n            }\n            internal.tickCentered = isCentered;\n            return axis;\n        };\n        axis.tickOffset = function () {\n            return internal.tickOffset;\n        };\n        axis.tickInterval = function () {\n            var interval, length;\n            if (params.isCategory) {\n                interval = internal.tickOffset * 2;\n            } else {\n                length = axis.g.select('path.domain').node().getTotalLength() - internal.outerTickSize * 2;\n                interval = length / axis.g.selectAll('line').size();\n            }\n            return interval === Infinity ? 0 : interval;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) {\n                return internal.tickArguments;\n            }\n            internal.tickArguments = arguments;\n            return axis;\n        };\n        axis.tickCulling = function (culling) {\n            if (!arguments.length) {\n                return internal.tickCulling;\n            }\n            internal.tickCulling = culling;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (typeof x === 'function') {\n                internal.tickValues = function () {\n                    return x(internal.scale.domain());\n                };\n            } else {\n                if (!arguments.length) {\n                    return internal.tickValues;\n                }\n                internal.tickValues = x;\n            }\n            return axis;\n        };\n        return axis;\n    };\n\n    var Axis = function (_Component) {\n        inherits(Axis, _Component);\n\n        function Axis(owner) {\n            classCallCheck(this, Axis);\n\n            var fn = {\n                fn: c3_axis_fn,\n                internal: {\n                    fn: c3_axis_internal_fn\n                }\n            };\n\n            var _this = possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this, owner, 'axis', fn));\n\n            _this.d3 = owner.d3;\n            _this.internal = AxisInternal;\n            return _this;\n        }\n\n        return Axis;\n    }(Component);\n\n    c3_axis_fn = Axis.prototype;\n\n    c3_axis_fn.init = function init() {\n        var $$ = this.owner,\n            config = $$.config,\n            main = $$.main;\n        $$.axes.x = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisX).attr(\"clip-path\", config.axis_x_inner ? \"\" : $$.clipPathForXAxis).attr(\"transform\", $$.getTranslate('x')).style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n        $$.axes.x.append(\"text\").attr(\"class\", CLASS.axisXLabel).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n        $$.axes.y = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY).attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis).attr(\"transform\", $$.getTranslate('y')).style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n        $$.axes.y.append(\"text\").attr(\"class\", CLASS.axisYLabel).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n        $$.axes.y2 = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n        // clip-path?\n        .attr(\"transform\", $$.getTranslate('y2')).style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n        $$.axes.y2.append(\"text\").attr(\"class\", CLASS.axisY2Label).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            isCategory: $$.isCategorized(),\n            withOuterTick: withOuterTick,\n            tickMultiline: config.axis_x_tick_multiline,\n            tickMultilineMax: config.axis_x_tick_multiline ? Number(config.axis_x_tick_multilineMax) : 0,\n            tickWidth: config.axis_x_tick_width,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n            withoutTransition: withoutTransition\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient);\n\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n            tickValues = tickValues.map(function (v) {\n                return $$.parseDate(v);\n            });\n        }\n\n        // Set tick\n        axis.tickFormat(tickFormat).tickValues(tickValues);\n        if ($$.isCategorized()) {\n            axis.tickCentered(config.axis_x_tick_centered);\n            if (isEmpty(config.axis_x_tick_culling)) {\n                config.axis_x_tick_culling = false;\n            }\n        }\n\n        return axis;\n    };\n    c3_axis_fn.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n        var $$ = this.owner,\n            config = $$.config,\n            tickValues;\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n        }\n        if (axis) {\n            axis.tickValues(tickValues);\n        } else {\n            $$.xAxis.tickValues(tickValues);\n            $$.subXAxis.tickValues(tickValues);\n        }\n        return tickValues;\n    };\n    c3_axis_fn.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            withOuterTick: withOuterTick,\n            withoutTransition: withoutTransition,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient).tickFormat(tickFormat);\n        if ($$.isTimeSeriesY()) {\n            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n        } else {\n            axis.tickValues(tickValues);\n        }\n        return axis;\n    };\n    c3_axis_fn.getId = function getId(id) {\n        var config = this.owner.config;\n        return id in config.data_axes ? config.data_axes[id] : 'y';\n    };\n    c3_axis_fn.getXAxisTickFormat = function getXAxisTickFormat() {\n        var $$ = this.owner,\n            config = $$.config,\n            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {\n            return v < 0 ? v.toFixed(0) : v;\n        };\n        if (config.axis_x_tick_format) {\n            if (isFunction(config.axis_x_tick_format)) {\n                format = config.axis_x_tick_format;\n            } else if ($$.isTimeSeries()) {\n                format = function format(date) {\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n                };\n            }\n        }\n        return isFunction(format) ? function (v) {\n            return format.call($$, v);\n        } : format;\n    };\n    c3_axis_fn.getTickValues = function getTickValues(tickValues, axis) {\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n    };\n    c3_axis_fn.getXAxisTickValues = function getXAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n    };\n    c3_axis_fn.getYAxisTickValues = function getYAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n    };\n    c3_axis_fn.getY2AxisTickValues = function getY2AxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n    };\n    c3_axis_fn.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n        var $$ = this.owner,\n            config = $$.config,\n            option;\n        if (axisId === 'y') {\n            option = config.axis_y_label;\n        } else if (axisId === 'y2') {\n            option = config.axis_y2_label;\n        } else if (axisId === 'x') {\n            option = config.axis_x_label;\n        }\n        return option;\n    };\n    c3_axis_fn.getLabelText = function getLabelText(axisId) {\n        var option = this.getLabelOptionByAxisId(axisId);\n        return isString(option) ? option : option ? option.text : null;\n    };\n    c3_axis_fn.setLabelText = function setLabelText(axisId, text) {\n        var $$ = this.owner,\n            config = $$.config,\n            option = this.getLabelOptionByAxisId(axisId);\n        if (isString(option)) {\n            if (axisId === 'y') {\n                config.axis_y_label = text;\n            } else if (axisId === 'y2') {\n                config.axis_y2_label = text;\n            } else if (axisId === 'x') {\n                config.axis_x_label = text;\n            }\n        } else if (option) {\n            option.text = text;\n        }\n    };\n    c3_axis_fn.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n        var option = this.getLabelOptionByAxisId(axisId),\n            position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;\n        return {\n            isInner: position.indexOf('inner') >= 0,\n            isOuter: position.indexOf('outer') >= 0,\n            isLeft: position.indexOf('left') >= 0,\n            isCenter: position.indexOf('center') >= 0,\n            isRight: position.indexOf('right') >= 0,\n            isTop: position.indexOf('top') >= 0,\n            isMiddle: position.indexOf('middle') >= 0,\n            isBottom: position.indexOf('bottom') >= 0\n        };\n    };\n    c3_axis_fn.getXAxisLabelPosition = function getXAxisLabelPosition() {\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n    };\n    c3_axis_fn.getYAxisLabelPosition = function getYAxisLabelPosition() {\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getLabelPositionById = function getLabelPositionById(id) {\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n    };\n    c3_axis_fn.textForXAxisLabel = function textForXAxisLabel() {\n        return this.getLabelText('x');\n    };\n    c3_axis_fn.textForYAxisLabel = function textForYAxisLabel() {\n        return this.getLabelText('y');\n    };\n    c3_axis_fn.textForY2AxisLabel = function textForY2AxisLabel() {\n        return this.getLabelText('y2');\n    };\n    c3_axis_fn.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n        var $$ = this.owner;\n        if (forHorizontal) {\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n        } else {\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n        }\n    };\n    c3_axis_fn.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n        } else {\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n        }\n    };\n    c3_axis_fn.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n        } else {\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n        }\n    };\n    c3_axis_fn.xForXAxisLabel = function xForXAxisLabel() {\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.xForYAxisLabel = function xForYAxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.xForY2AxisLabel = function xForY2AxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dxForXAxisLabel = function dxForXAxisLabel() {\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.dxForYAxisLabel = function dxForYAxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.dxForY2AxisLabel = function dxForY2AxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dyForXAxisLabel = function dyForXAxisLabel() {\n        var $$ = this.owner,\n            config = $$.config,\n            position = this.getXAxisLabelPosition();\n        if (config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : -25 - ($$.config.axis_x_inner ? 0 : this.getMaxTickWidth('x'));\n        } else {\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n        }\n    };\n    c3_axis_fn.dyForYAxisLabel = function dyForYAxisLabel() {\n        var $$ = this.owner,\n            position = this.getYAxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"-0.5em\" : \"3em\";\n        } else {\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\n        }\n    };\n    c3_axis_fn.dyForY2AxisLabel = function dyForY2AxisLabel() {\n        var $$ = this.owner,\n            position = this.getY2AxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\n        } else {\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\n        }\n    };\n    c3_axis_fn.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n        var $$ = this.owner,\n            config = $$.config,\n            maxWidth = 0,\n            targetsToShow,\n            scale,\n            axis,\n            dummy,\n            svg;\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n            return $$.currentMaxTickWidths[id];\n        }\n        if ($$.svg) {\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            if (id === 'y') {\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n            } else if (id === 'y2') {\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n            } else {\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n                this.updateXAxisTickValues(targetsToShow, axis);\n            }\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {\n                $$.d3.select(this).selectAll('text').each(function () {\n                    var box = this.getBoundingClientRect();\n                    if (maxWidth < box.width) {\n                        maxWidth = box.width;\n                    }\n                });\n                dummy.remove();\n            });\n        }\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n        return $$.currentMaxTickWidths[id];\n    };\n\n    c3_axis_fn.updateLabels = function updateLabels(withTransition) {\n        var $$ = this.owner;\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n        (withTransition ? axisXLabel.transition() : axisXLabel).attr(\"x\", this.xForXAxisLabel.bind(this)).attr(\"dx\", this.dxForXAxisLabel.bind(this)).attr(\"dy\", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));\n        (withTransition ? axisYLabel.transition() : axisYLabel).attr(\"x\", this.xForYAxisLabel.bind(this)).attr(\"dx\", this.dxForYAxisLabel.bind(this)).attr(\"dy\", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));\n        (withTransition ? axisY2Label.transition() : axisY2Label).attr(\"x\", this.xForY2AxisLabel.bind(this)).attr(\"dx\", this.dxForY2AxisLabel.bind(this)).attr(\"dy\", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n        var p = typeof padding === 'number' ? padding : padding[key];\n        if (!isValue(p)) {\n            return defaultValue;\n        }\n        if (padding.unit === 'ratio') {\n            return padding[key] * domainLength;\n        }\n        // assume padding is pixels if unit is not specified\n        return this.convertPixelsToAxisPadding(p, domainLength);\n    };\n    c3_axis_fn.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n        var $$ = this.owner,\n            length = $$.config.axis_rotated ? $$.width : $$.height;\n        return domainLength * (pixels / length);\n    };\n    c3_axis_fn.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n        var tickValues = values,\n            targetCount,\n            start,\n            end,\n            count,\n            interval,\n            i,\n            tickValue;\n        if (tickCount) {\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n            // compute ticks according to tickCount\n            if (targetCount === 1) {\n                tickValues = [values[0]];\n            } else if (targetCount === 2) {\n                tickValues = [values[0], values[values.length - 1]];\n            } else if (targetCount > 2) {\n                count = targetCount - 2;\n                start = values[0];\n                end = values[values.length - 1];\n                interval = (end - start) / (count + 1);\n                // re-construct unique values\n                tickValues = [start];\n                for (i = 0; i < count; i++) {\n                    tickValue = +start + interval * (i + 1);\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n                }\n                tickValues.push(end);\n            }\n        }\n        if (!forTimeSeries) {\n            tickValues = tickValues.sort(function (a, b) {\n                return a - b;\n            });\n        }\n        return tickValues;\n    };\n    c3_axis_fn.generateTransitions = function generateTransitions(duration) {\n        var $$ = this.owner,\n            axes = $$.axes;\n        return {\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n        };\n    };\n    c3_axis_fn.redraw = function redraw(transitions, isHidden) {\n        var $$ = this.owner;\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n        transitions.axisX.call($$.xAxis);\n        transitions.axisY.call($$.yAxis);\n        transitions.axisY2.call($$.y2Axis);\n        transitions.axisSubX.call($$.subXAxis);\n    };\n\n    var c3 = { version: \"0.4.23\" };\n\n    var c3_chart_fn;\n    var c3_chart_internal_fn;\n\n    function Component(owner, componentKey, fn) {\n        this.owner = owner;\n        c3.chart.internal[componentKey] = fn;\n    }\n\n    function Chart(config) {\n        var $$ = this.internal = new ChartInternal(this);\n        $$.loadConfig(config);\n\n        $$.beforeInit(config);\n        $$.init();\n        $$.afterInit(config);\n\n        // bind \"this\" to nested API\n        (function bindThis(fn, target, argThis) {\n            Object.keys(fn).forEach(function (key) {\n                target[key] = fn[key].bind(argThis);\n                if (Object.keys(fn[key]).length > 0) {\n                    bindThis(fn[key], target[key], argThis);\n                }\n            });\n        })(c3_chart_fn, this, this);\n    }\n\n    function ChartInternal(api) {\n        var $$ = this;\n        $$.d3 = window.d3 ? window.d3 :  true ? __webpack_require__(2287) : undefined;\n        $$.api = api;\n        $$.config = $$.getDefaultConfig();\n        $$.data = {};\n        $$.cache = {};\n        $$.axes = {};\n    }\n\n    c3.generate = function (config) {\n        return new Chart(config);\n    };\n\n    c3.chart = {\n        fn: Chart.prototype,\n        internal: {\n            fn: ChartInternal.prototype\n        }\n    };\n    c3_chart_fn = c3.chart.fn;\n    c3_chart_internal_fn = c3.chart.internal.fn;\n\n    c3_chart_internal_fn.beforeInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.afterInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.init = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.initParams();\n\n        if (config.data_url) {\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n        } else if (config.data_json) {\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n        } else if (config.data_rows) {\n            $$.initWithData($$.convertRowsToData(config.data_rows));\n        } else if (config.data_columns) {\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\n        } else {\n            throw Error('url or json or rows or columns is required.');\n        }\n    };\n\n    c3_chart_internal_fn.initParams = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n        $$.clipId = \"c3-\" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;\n        $$.dragging = false;\n        $$.flowing = false;\n        $$.cancelClick = false;\n        $$.mouseover = false;\n        $$.transiting = false;\n\n        $$.color = $$.generateColor();\n        $$.levelColor = $$.generateLevelColor();\n\n        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([[\".%L\", function (d) {\n            return d.getMilliseconds();\n        }], [\":%S\", function (d) {\n            return d.getSeconds();\n        }], [\"%I:%M\", function (d) {\n            return d.getMinutes();\n        }], [\"%I %p\", function (d) {\n            return d.getHours();\n        }], [\"%-m/%-d\", function (d) {\n            return d.getDay() && d.getDate() !== 1;\n        }], [\"%-m/%-d\", function (d) {\n            return d.getDate() !== 1;\n        }], [\"%-m/%-d\", function (d) {\n            return d.getMonth();\n        }], [\"%Y/%-m/%-d\", function () {\n            return true;\n        }]]);\n\n        $$.hiddenTargetIds = [];\n        $$.hiddenLegendIds = [];\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n\n        $$.xOrient = config.axis_rotated ? config.axis_x_inner ? \"right\" : \"left\" : config.axis_x_inner ? \"top\" : \"bottom\";\n        $$.yOrient = config.axis_rotated ? config.axis_y_inner ? \"top\" : \"bottom\" : config.axis_y_inner ? \"right\" : \"left\";\n        $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? \"bottom\" : \"top\" : config.axis_y2_inner ? \"left\" : \"right\";\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n        $$.isLegendRight = config.legend_position === 'right';\n        $$.isLegendInset = config.legend_position === 'inset';\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n        $$.legendStep = 0;\n        $$.legendItemWidth = 0;\n        $$.legendItemHeight = 0;\n\n        $$.currentMaxTickWidths = {\n            x: 0,\n            y: 0,\n            y2: 0\n        };\n\n        $$.rotated_padding_left = 30;\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n        $$.rotated_padding_top = 5;\n\n        $$.withoutFadeIn = {};\n\n        $$.intervalForObserveInserted = undefined;\n\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n    };\n\n    c3_chart_internal_fn.initChartElements = function () {\n        if (this.initBar) {\n            this.initBar();\n        }\n        if (this.initLine) {\n            this.initLine();\n        }\n        if (this.initArc) {\n            this.initArc();\n        }\n        if (this.initGauge) {\n            this.initGauge();\n        }\n        if (this.initText) {\n            this.initText();\n        }\n    };\n\n    c3_chart_internal_fn.initWithData = function (data) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n        var defs,\n            main,\n            binding = true;\n\n        $$.axis = new Axis($$);\n\n        if ($$.initPie) {\n            $$.initPie();\n        }\n        if ($$.initBrush) {\n            $$.initBrush();\n        }\n        if ($$.initZoom) {\n            $$.initZoom();\n        }\n\n        if (!config.bindto) {\n            $$.selectChart = d3.selectAll([]);\n        } else if (typeof config.bindto.node === 'function') {\n            $$.selectChart = config.bindto;\n        } else {\n            $$.selectChart = d3.select(config.bindto);\n        }\n        if ($$.selectChart.empty()) {\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n            $$.observeInserted($$.selectChart);\n            binding = false;\n        }\n        $$.selectChart.html(\"\").classed(\"c3\", true);\n\n        // Init data as targets\n        $$.data.xs = {};\n        $$.data.targets = $$.convertDataToTargets(data);\n\n        if (config.data_filter) {\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\n        }\n\n        // Set targets to hide if needed\n        if (config.data_hide) {\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n        }\n        if (config.legend_hide) {\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n        }\n\n        // Init sizes and scales\n        $$.updateSizes();\n        $$.updateScales();\n\n        // Set domains for each scale\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n        $$.subX.domain($$.x.domain());\n        $$.subY.domain($$.y.domain());\n        $$.subY2.domain($$.y2.domain());\n\n        // Save original x domain for zoom update\n        $$.orgXDomain = $$.x.domain();\n\n        // Set initialized scales to brush and zoom\n        if ($$.brush) {\n            $$.brush.scale($$.subX);\n        }\n        if (config.zoom_enabled) {\n            $$.zoom.scale($$.x);\n        }\n\n        /*-- Basic Elements --*/\n\n        // Define svgs\n        $$.svg = $$.selectChart.append(\"svg\").style(\"overflow\", \"hidden\").on('mouseenter', function () {\n            return config.onmouseover.call($$);\n        }).on('mouseleave', function () {\n            return config.onmouseout.call($$);\n        });\n\n        if ($$.config.svg_classname) {\n            $$.svg.attr('class', $$.config.svg_classname);\n        }\n\n        // Define defs\n        defs = $$.svg.append(\"defs\");\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n        $$.updateSvgSize();\n\n        // Define regions\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n        if ($$.initSubchart) {\n            $$.initSubchart();\n        }\n        if ($$.initTooltip) {\n            $$.initTooltip();\n        }\n        if ($$.initLegend) {\n            $$.initLegend();\n        }\n        if ($$.initTitle) {\n            $$.initTitle();\n        }\n\n        /*-- Main Region --*/\n\n        // text when empty\n        main.append(\"text\").attr(\"class\", CLASS.text + ' ' + CLASS.empty).attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n        .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n        // Regions\n        $$.initRegion();\n\n        // Grids\n        $$.initGrid();\n\n        // Define g for chart area\n        main.append('g').attr(\"clip-path\", $$.clipPath).attr('class', CLASS.chart);\n\n        // Grid lines\n        if (config.grid_lines_front) {\n            $$.initGridLines();\n        }\n\n        // Cover whole with rects for events\n        $$.initEventRect();\n\n        // Define g for chart\n        $$.initChartElements();\n\n        // if zoom privileged, insert rect to forefront\n        // TODO: is this needed?\n        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions).attr('class', CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height).style('opacity', 0).on(\"dblclick.zoom\", null);\n\n        // Set default extent if defined\n        if (config.axis_x_extent) {\n            $$.brush.extent($$.getDefaultExtent());\n        }\n\n        // Add Axis\n        $$.axis.init();\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Draw with targets\n        if (binding) {\n            $$.updateDimension();\n            $$.config.oninit.call($$);\n            $$.redraw({\n                withTransition: false,\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransitionForAxis: false\n            });\n        }\n\n        // Bind resize event\n        $$.bindResize();\n\n        // export element of the chart\n        $$.api.element = $$.selectChart.node();\n    };\n\n    c3_chart_internal_fn.smoothLines = function (el, type) {\n        var $$ = this;\n        if (type === 'grid') {\n            el.each(function () {\n                var g = $$.d3.select(this),\n                    x1 = g.attr('x1'),\n                    x2 = g.attr('x2'),\n                    y1 = g.attr('y1'),\n                    y2 = g.attr('y2');\n                g.attr({\n                    'x1': Math.ceil(x1),\n                    'x2': Math.ceil(x2),\n                    'y1': Math.ceil(y1),\n                    'y2': Math.ceil(y2)\n                });\n            });\n        }\n    };\n\n    c3_chart_internal_fn.updateSizes = function () {\n        var $$ = this,\n            config = $$.config;\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n            hasArc = $$.hasArcType(),\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n            subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;\n\n        $$.currentWidth = $$.getCurrentWidth();\n        $$.currentHeight = $$.getCurrentHeight();\n\n        // for main\n        $$.margin = config.axis_rotated ? {\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n        } : {\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n        };\n\n        // for subchart\n        $$.margin2 = config.axis_rotated ? {\n            top: $$.margin.top,\n            right: NaN,\n            bottom: 20 + legendHeightForBottom,\n            left: $$.rotated_padding_left\n        } : {\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n            right: NaN,\n            bottom: xAxisHeight + legendHeightForBottom,\n            left: $$.margin.left\n        };\n\n        // for legend\n        $$.margin3 = {\n            top: 0,\n            right: NaN,\n            bottom: 0,\n            left: 0\n        };\n        if ($$.updateSizeForLegend) {\n            $$.updateSizeForLegend(legendHeight, legendWidth);\n        }\n\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n        if ($$.width < 0) {\n            $$.width = 0;\n        }\n        if ($$.height < 0) {\n            $$.height = 0;\n        }\n\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n        if ($$.width2 < 0) {\n            $$.width2 = 0;\n        }\n        if ($$.height2 < 0) {\n            $$.height2 = 0;\n        }\n\n        // for arc\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n        }\n        if ($$.updateRadius) {\n            $$.updateRadius();\n        }\n\n        if ($$.isLegendRight && hasArc) {\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n        }\n    };\n\n    c3_chart_internal_fn.updateTargets = function (targets) {\n        var $$ = this;\n\n        /*-- Main --*/\n\n        //-- Text --//\n        $$.updateTargetsForText(targets);\n\n        //-- Bar --//\n        $$.updateTargetsForBar(targets);\n\n        //-- Line --//\n        $$.updateTargetsForLine(targets);\n\n        //-- Arc --//\n        if ($$.hasArcType() && $$.updateTargetsForArc) {\n            $$.updateTargetsForArc(targets);\n        }\n\n        /*-- Sub --*/\n\n        if ($$.updateTargetsForSubchart) {\n            $$.updateTargetsForSubchart(targets);\n        }\n\n        // Fade-in each chart\n        $$.showTargets();\n    };\n    c3_chart_internal_fn.showTargets = function () {\n        var $$ = this;\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) {\n            return $$.isTargetToShow(d.id);\n        }).transition().duration($$.config.transition_duration).style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.redraw = function (options, transitions) {\n        var $$ = this,\n            main = $$.main,\n            d3 = $$.d3,\n            config = $$.config;\n        var areaIndices = $$.getShapeIndices($$.isAreaType),\n            barIndices = $$.getShapeIndices($$.isBarType),\n            lineIndices = $$.getShapeIndices($$.isLineType);\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\n        var hideAxis = $$.hasArcType();\n        var drawArea, drawBar, drawLine, xForText, yForText;\n        var duration, durationForExit, durationForAxis;\n        var waitForDraw, flow;\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets),\n            tickValues,\n            i,\n            intervalForCulling,\n            xDomainForZoom;\n        var xv = $$.xv.bind($$),\n            cx,\n            cy;\n\n        options = options || {};\n        withY = getOption(options, \"withY\", true);\n        withSubchart = getOption(options, \"withSubchart\", true);\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransform = getOption(options, \"withTransform\", false);\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n        withLegend = getOption(options, \"withLegend\", false);\n        withEventRect = getOption(options, \"withEventRect\", true);\n        withDimension = getOption(options, \"withDimension\", true);\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n        duration = withTransition ? config.transition_duration : 0;\n        durationForExit = withTransitionForExit ? duration : 0;\n        durationForAxis = withTransitionForAxis ? duration : 0;\n\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n        // update legend and transform each g\n        if (withLegend && config.legend_show) {\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n        } else if (withDimension) {\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n            // no need to update axis in it because they will be updated in redraw()\n            $$.updateDimension(true);\n        }\n\n        // MEMO: needed for grids calculation\n        if ($$.isCategorized() && targetsToShow.length === 0) {\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n        }\n\n        if (targetsToShow.length) {\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n            if (!config.axis_x_tick_values) {\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n            }\n        } else {\n            $$.xAxis.tickValues([]);\n            $$.subXAxis.tickValues([]);\n        }\n\n        if (config.zoom_rescale && !options.flow) {\n            xDomainForZoom = $$.x.orgDomain();\n        }\n\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n        }\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n        }\n\n        // axes\n        $$.axis.redraw(transitions, hideAxis);\n\n        // Update axis label\n        $$.axis.updateLabels(withTransition);\n\n        // show/hide if manual culling needed\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n            if (config.axis_x_tick_culling && tickValues) {\n                for (i = 1; i < tickValues.length; i++) {\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                        intervalForCulling = i;\n                        break;\n                    }\n                }\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                    var index = tickValues.indexOf(e);\n                    if (index >= 0) {\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                    }\n                });\n            } else {\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n            }\n        }\n\n        // setup drawer - MEMO: these must be called after axis updated\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n        // Update sub domain\n        if (withY) {\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n        }\n\n        // xgrid focus\n        $$.updateXgridFocus();\n\n        // Data empty label positioning and text.\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty).attr(\"x\", $$.width / 2).attr(\"y\", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1);\n\n        // grid\n        $$.updateGrid(duration);\n\n        // rect for regions\n        $$.updateRegion(duration);\n\n        // bars\n        $$.updateBar(durationForExit);\n\n        // lines, areas and cricles\n        $$.updateLine(durationForExit);\n        $$.updateArea(durationForExit);\n        $$.updateCircle();\n\n        // text\n        if ($$.hasDataLabel()) {\n            $$.updateText(durationForExit);\n        }\n\n        // title\n        if ($$.redrawTitle) {\n            $$.redrawTitle();\n        }\n\n        // arc\n        if ($$.redrawArc) {\n            $$.redrawArc(duration, durationForExit, withTransform);\n        }\n\n        // subchart\n        if ($$.redrawSubchart) {\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n        }\n\n        // circles for select\n        main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove();\n\n        // event rects will redrawn when flow called\n        if (config.interaction_enabled && !options.flow && withEventRect) {\n            $$.redrawEventRect();\n            if ($$.updateZoom) {\n                $$.updateZoom();\n            }\n        }\n\n        // update circleY based on updated parameters\n        $$.updateCircleY();\n\n        // generate circle x/y functions depending on updated params\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n        if (options.flow) {\n            flow = $$.generateFlow({\n                targets: targetsToShow,\n                flow: options.flow,\n                duration: options.flow.duration,\n                drawBar: drawBar,\n                drawLine: drawLine,\n                drawArea: drawArea,\n                cx: cx,\n                cy: cy,\n                xv: xv,\n                xForText: xForText,\n                yForText: yForText\n            });\n        }\n\n        if ((duration || flow) && $$.isTabVisible()) {\n            // Only use transition if tab visible. See #938.\n            // transition should be derived from one transition\n            d3.transition().duration(duration).each(function () {\n                var transitionsToWait = [];\n\n                // redraw and gather transitions\n                [$$.redrawBar(drawBar, true), $$.redrawLine(drawLine, true), $$.redrawArea(drawArea, true), $$.redrawCircle(cx, cy, true), $$.redrawText(xForText, yForText, options.flow, true), $$.redrawRegion(true), $$.redrawGrid(true)].forEach(function (transitions) {\n                    transitions.forEach(function (transition) {\n                        transitionsToWait.push(transition);\n                    });\n                });\n\n                // Wait for end of transitions to call flow and onrendered callback\n                waitForDraw = $$.generateWait();\n                transitionsToWait.forEach(function (t) {\n                    waitForDraw.add(t);\n                });\n            }).call(waitForDraw, function () {\n                if (flow) {\n                    flow();\n                }\n                if (config.onrendered) {\n                    config.onrendered.call($$);\n                }\n            });\n        } else {\n            $$.redrawBar(drawBar);\n            $$.redrawLine(drawLine);\n            $$.redrawArea(drawArea);\n            $$.redrawCircle(cx, cy);\n            $$.redrawText(xForText, yForText, options.flow);\n            $$.redrawRegion();\n            $$.redrawGrid();\n            if (config.onrendered) {\n                config.onrendered.call($$);\n            }\n        }\n\n        // update fadein condition\n        $$.mapToIds($$.data.targets).forEach(function (id) {\n            $$.withoutFadeIn[id] = true;\n        });\n    };\n\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\n        var $$ = this,\n            config = $$.config,\n            transitions;\n        options = options || {};\n        // same with redraw\n        options.withTransition = getOption(options, \"withTransition\", true);\n        options.withTransform = getOption(options, \"withTransform\", false);\n        options.withLegend = getOption(options, \"withLegend\", false);\n        // NOT same with redraw\n        options.withUpdateXDomain = true;\n        options.withUpdateOrgXDomain = true;\n        options.withTransitionForExit = false;\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n        $$.updateSizes();\n        // MEMO: called in updateLegend in redraw if withLegend\n        if (!(options.withLegend && config.legend_show)) {\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n            // Update scales\n            $$.updateScales();\n            $$.updateSvgSize();\n            // Update g positions\n            $$.transformAll(options.withTransitionForTransform, transitions);\n        }\n        // Draw with new sizes & scales\n        $$.redraw(options, transitions);\n    };\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\n        this.redraw({\n            withY: false,\n            withSubchart: false,\n            withEventRect: false,\n            withTransitionForAxis: false\n        });\n    };\n\n    c3_chart_internal_fn.isTimeSeries = function () {\n        return this.config.axis_x_type === 'timeseries';\n    };\n    c3_chart_internal_fn.isCategorized = function () {\n        return this.config.axis_x_type.indexOf('categor') >= 0;\n    };\n    c3_chart_internal_fn.isCustomX = function () {\n        var $$ = this,\n            config = $$.config;\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n    };\n\n    c3_chart_internal_fn.isTimeSeriesY = function () {\n        return this.config.axis_y_type === 'timeseries';\n    };\n\n    c3_chart_internal_fn.getTranslate = function (target) {\n        var $$ = this,\n            config = $$.config,\n            x,\n            y;\n        if (target === 'main') {\n            x = asHalfPixel($$.margin.left);\n            y = asHalfPixel($$.margin.top);\n        } else if (target === 'context') {\n            x = asHalfPixel($$.margin2.left);\n            y = asHalfPixel($$.margin2.top);\n        } else if (target === 'legend') {\n            x = $$.margin3.left;\n            y = $$.margin3.top;\n        } else if (target === 'x') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height;\n        } else if (target === 'y') {\n            x = 0;\n            y = config.axis_rotated ? $$.height : 0;\n        } else if (target === 'y2') {\n            x = config.axis_rotated ? 0 : $$.width;\n            y = config.axis_rotated ? 1 : 0;\n        } else if (target === 'subx') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height2;\n        } else if (target === 'arc') {\n            x = $$.arcWidth / 2;\n            y = $$.arcHeight / 2 - ($$.hasType('gauge') ? 6 : 0); // to prevent wrong display of min and max label\n        }\n        return \"translate(\" + x + \",\" + y + \")\";\n    };\n    c3_chart_internal_fn.initialOpacity = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n    };\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n    };\n    c3_chart_internal_fn.opacityForCircle = function (d) {\n        var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;\n        var opacity = isPointShouldBeShown ? 1 : 0;\n        return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;\n    };\n    c3_chart_internal_fn.opacityForText = function () {\n        return this.hasDataLabel() ? 1 : 0;\n    };\n    c3_chart_internal_fn.xx = function (d) {\n        return d ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.xv = function (d) {\n        var $$ = this,\n            value = d.value;\n        if ($$.isTimeSeries()) {\n            value = $$.parseDate(d.value);\n        } else if ($$.isCategorized() && typeof d.value === 'string') {\n            value = $$.config.axis_x_categories.indexOf(d.value);\n        }\n        return Math.ceil($$.x(value));\n    };\n    c3_chart_internal_fn.yv = function (d) {\n        var $$ = this,\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n        return Math.ceil(yScale(d.value));\n    };\n    c3_chart_internal_fn.subxx = function (d) {\n        return d ? this.subX(d.x) : null;\n    };\n\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n        var $$ = this,\n            xAxis,\n            yAxis,\n            y2Axis;\n        if (transitions && transitions.axisX) {\n            xAxis = transitions.axisX;\n        } else {\n            xAxis = $$.main.select('.' + CLASS.axisX);\n            if (withTransition) {\n                xAxis = xAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY) {\n            yAxis = transitions.axisY;\n        } else {\n            yAxis = $$.main.select('.' + CLASS.axisY);\n            if (withTransition) {\n                yAxis = yAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY2) {\n            y2Axis = transitions.axisY2;\n        } else {\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\n            if (withTransition) {\n                y2Axis = y2Axis.transition();\n            }\n        }\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    };\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n        var $$ = this;\n        $$.transformMain(withTransition, transitions);\n        if ($$.config.subchart_show) {\n            $$.transformContext(withTransition, transitions);\n        }\n        if ($$.legend) {\n            $$.transformLegend(withTransition);\n        }\n    };\n\n    c3_chart_internal_fn.updateSvgSize = function () {\n        var $$ = this,\n            brush = $$.svg.select(\".c3-brush .background\");\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);\n        $$.svg.select('.' + CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height);\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n    };\n\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n        var $$ = this;\n        if (!withoutAxis) {\n            if ($$.config.axis_rotated) {\n                $$.axes.x.call($$.xAxis);\n                $$.axes.subx.call($$.subXAxis);\n            } else {\n                $$.axes.y.call($$.yAxis);\n                $$.axes.y2.call($$.y2Axis);\n            }\n        }\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        $$.transformAll(false);\n    };\n\n    c3_chart_internal_fn.observeInserted = function (selection) {\n        var $$ = this,\n            observer;\n        if (typeof MutationObserver === 'undefined') {\n            window.console.error(\"MutationObserver not defined.\");\n            return;\n        }\n        observer = new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList' && mutation.previousSibling) {\n                    observer.disconnect();\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                    $$.intervalForObserveInserted = window.setInterval(function () {\n                        // parentNode will NOT be null when completed\n                        if (selection.node().parentNode) {\n                            window.clearInterval($$.intervalForObserveInserted);\n                            $$.updateDimension();\n                            if ($$.brush) {\n                                $$.brush.update();\n                            }\n                            $$.config.oninit.call($$);\n                            $$.redraw({\n                                withTransform: true,\n                                withUpdateXDomain: true,\n                                withUpdateOrgXDomain: true,\n                                withTransition: false,\n                                withTransitionForTransform: false,\n                                withLegend: true\n                            });\n                            selection.transition().style('opacity', 1);\n                        }\n                    }, 10);\n                }\n            });\n        });\n        observer.observe(selection.node(), { attributes: true, childList: true, characterData: true });\n    };\n\n    c3_chart_internal_fn.bindResize = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.resizeFunction = $$.generateResize(); // need to call .remove\n\n        $$.resizeFunction.add(function () {\n            config.onresize.call($$);\n        });\n        if (config.resize_auto) {\n            $$.resizeFunction.add(function () {\n                if ($$.resizeTimeout !== undefined) {\n                    window.clearTimeout($$.resizeTimeout);\n                }\n                $$.resizeTimeout = window.setTimeout(function () {\n                    delete $$.resizeTimeout;\n                    $$.api.flush();\n                }, 100);\n            });\n        }\n        $$.resizeFunction.add(function () {\n            config.onresized.call($$);\n        });\n\n        $$.resizeIfElementDisplayed = function () {\n            // if element not displayed skip it\n            if ($$.api == null || !$$.api.element.offsetParent) {\n                return;\n            }\n\n            $$.resizeFunction();\n        };\n\n        if (window.attachEvent) {\n            window.attachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', $$.resizeIfElementDisplayed, false);\n        } else {\n            // fallback to this, if this is a very old browser\n            var wrapper = window.onresize;\n            if (!wrapper) {\n                // create a wrapper that will call all charts\n                wrapper = $$.generateResize();\n            } else if (!wrapper.add || !wrapper.remove) {\n                // there is already a handler registered, make sure we call it too\n                wrapper = $$.generateResize();\n                wrapper.add(window.onresize);\n            }\n            // add this graph to the wrapper, we will be removed if the user calls destroy\n            wrapper.add($$.resizeFunction);\n            window.onresize = function () {\n                // if element not displayed skip it\n                if (!$$.api.element.offsetParent) {\n                    return;\n                }\n\n                wrapper();\n            };\n        }\n    };\n\n    c3_chart_internal_fn.generateResize = function () {\n        var resizeFunctions = [];\n        function callResizeFunctions() {\n            resizeFunctions.forEach(function (f) {\n                f();\n            });\n        }\n        callResizeFunctions.add = function (f) {\n            resizeFunctions.push(f);\n        };\n        callResizeFunctions.remove = function (f) {\n            for (var i = 0; i < resizeFunctions.length; i++) {\n                if (resizeFunctions[i] === f) {\n                    resizeFunctions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        return callResizeFunctions;\n    };\n\n    c3_chart_internal_fn.endall = function (transition, callback) {\n        var n = 0;\n        transition.each(function () {\n            ++n;\n        }).each(\"end\", function () {\n            if (! --n) {\n                callback.apply(this, arguments);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateWait = function () {\n        var transitionsToWait = [],\n            f = function f(transition, callback) {\n            var timer = setInterval(function () {\n                var done = 0;\n                transitionsToWait.forEach(function (t) {\n                    if (t.empty()) {\n                        done += 1;\n                        return;\n                    }\n                    try {\n                        t.transition();\n                    } catch (e) {\n                        done += 1;\n                    }\n                });\n                if (done === transitionsToWait.length) {\n                    clearInterval(timer);\n                    if (callback) {\n                        callback();\n                    }\n                }\n            }, 10);\n        };\n        f.add = function (transition) {\n            transitionsToWait.push(transition);\n        };\n        return f;\n    };\n\n    c3_chart_internal_fn.parseDate = function (date) {\n        var $$ = this,\n            parsedDate;\n        if (date instanceof Date) {\n            parsedDate = date;\n        } else if (typeof date === 'string') {\n            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n        } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {\n            parsedDate = new Date(+date);\n        } else if (typeof date === 'number' && !isNaN(date)) {\n            parsedDate = new Date(+date);\n        }\n        if (!parsedDate || isNaN(+parsedDate)) {\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n        }\n        return parsedDate;\n    };\n\n    c3_chart_internal_fn.isTabVisible = function () {\n        var hidden;\n        if (typeof document.hidden !== \"undefined\") {\n            // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n        }\n\n        return document[hidden] ? false : true;\n    };\n\n    c3_chart_internal_fn.isValue = isValue;\n    c3_chart_internal_fn.isFunction = isFunction;\n    c3_chart_internal_fn.isString = isString;\n    c3_chart_internal_fn.isUndefined = isUndefined;\n    c3_chart_internal_fn.isDefined = isDefined;\n    c3_chart_internal_fn.ceil10 = ceil10;\n    c3_chart_internal_fn.asHalfPixel = asHalfPixel;\n    c3_chart_internal_fn.diffDomain = diffDomain;\n    c3_chart_internal_fn.isEmpty = isEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.getOption = getOption;\n    c3_chart_internal_fn.hasValue = hasValue;\n    c3_chart_internal_fn.sanitise = sanitise;\n    c3_chart_internal_fn.getPathBox = getPathBox;\n    c3_chart_internal_fn.CLASS = CLASS;\n\n    /* jshint ignore:start */\n\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n    // this polyfill to avoid the confusion.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (oThis) {\n            if (typeof this !== 'function') {\n                // closest thing possible to the ECMAScript 5\n                // internal IsCallable function\n                throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n            }\n\n            var aArgs = Array.prototype.slice.call(arguments, 1),\n                fToBind = this,\n                fNOP = function fNOP() {},\n                fBound = function fBound() {\n                return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n            fNOP.prototype = this.prototype;\n            fBound.prototype = new fNOP();\n\n            return fBound;\n        };\n    }\n\n    // SVGPathSeg API polyfill\n    // https://github.com/progers/pathseg\n    //\n    // This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n    // SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n    // changes which were implemented in Firefox 43 and Chrome 46.\n\n    (function () {\n\n        if (!(\"SVGPathSeg\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n            window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\n                this.pathSegType = type;\n                this.pathSegTypeAsLetter = typeAsLetter;\n                this._owningPathSegList = owningPathSegList;\n            };\n\n            window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\n\n            window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\n            window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n            window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n            window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n            window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n            window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n            window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\n            window.SVGPathSeg.PATHSEG_ARC_REL = 11;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n            // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n            window.SVGPathSeg.prototype._segmentChanged = function () {\n                if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);\n            };\n\n            window.SVGPathSegClosePath = function (owningPathSegList) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n            };\n            window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegClosePath.prototype.toString = function () {\n                return \"[object SVGPathSegClosePath]\";\n            };\n            window.SVGPathSegClosePath.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter;\n            };\n            window.SVGPathSegClosePath.prototype.clone = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n\n            window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoAbs]\";\n            };\n            window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoRel]\";\n            };\n            window.SVGPathSegMovetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoRel.prototype.clone = function () {\n                return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoAbs]\";\n            };\n            window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoRel]\";\n            };\n            window.SVGPathSegLinetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicRel]\";\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcAbs.prototype.toString = function () {\n                return \"[object SVGPathSegArcAbs]\";\n            };\n            window.SVGPathSegArcAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcAbs.prototype.clone = function () {\n                return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcRel.prototype.toString = function () {\n                return \"[object SVGPathSegArcRel]\";\n            };\n            window.SVGPathSegArcRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcRel.prototype.clone = function () {\n                return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalAbs]\";\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalRel]\";\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalAbs]\";\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalRel]\";\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            // Add createSVGPathSeg* functions to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\n            window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\n                return new window.SVGPathSegMovetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\n                return new window.SVGPathSegMovetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\n                return new window.SVGPathSegLinetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\n                return new window.SVGPathSegLinetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\n            };\n\n            if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\n                // Add getPathSegAtLength to SVGPathElement.\n                // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\n                // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\n                window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\n                    if (distance === undefined || !isFinite(distance)) throw \"Invalid arguments.\";\n\n                    var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                    measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\n                    var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\n\n                    // If the path is empty, return 0.\n                    if (lastPathSegment <= 0) return 0;\n\n                    do {\n                        measurementElement.pathSegList.removeItem(lastPathSegment);\n                        if (distance > measurementElement.getTotalLength()) break;\n                        lastPathSegment--;\n                    } while (lastPathSegment > 0);\n                    return lastPathSegment;\n                };\n            }\n        }\n\n        if (!(\"SVGPathSegList\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n            window.SVGPathSegList = function (pathElement) {\n                this._pathElement = pathElement;\n                this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n                // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n                this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n                this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\n\n            Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\n                get: function get() {\n                    this._checkPathSynchronizedToList();\n                    return this._list.length;\n                },\n                enumerable: true\n            });\n\n            // Add the pathSegList accessors to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n            Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\n                get: function get() {\n                    if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);\n                    return this._pathSegList;\n                },\n                enumerable: true\n            });\n            // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\n            Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n\n            // Process any pending mutations to the path element and update the list as needed.\n            // This should be the first call of all public functions and is needed because\n            // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n            window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\n                this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n            };\n\n            window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\n                if (!this._pathElement) return;\n                var hasPathMutations = false;\n                mutationRecords.forEach(function (record) {\n                    if (record.attributeName == \"d\") hasPathMutations = true;\n                });\n                if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n            };\n\n            // Serialize the list and update the path's 'd' attribute.\n            window.SVGPathSegList.prototype._writeListToPath = function () {\n                this._pathElementMutationObserver.disconnect();\n                this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            // When a path segment changes the list needs to be synchronized back to the path element.\n            window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.clear = function () {\n                this._checkPathSynchronizedToList();\n\n                this._list.forEach(function (pathSeg) {\n                    pathSeg._owningPathSegList = null;\n                });\n                this._list = [];\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.initialize = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                this._list = [newItem];\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype._checkValidIndex = function (index) {\n                if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw \"INDEX_SIZE_ERR\";\n            };\n\n            window.SVGPathSegList.prototype.getItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                return this._list[index];\n            };\n\n            window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n                if (index > this.numberOfItems) index = this.numberOfItems;\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.splice(index, 0, newItem);\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._checkValidIndex(index);\n                this._list[index] = newItem;\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.removeItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                var item = this._list[index];\n                this._list.splice(index, 1);\n                this._writeListToPath();\n                return item;\n            };\n\n            window.SVGPathSegList.prototype.appendItem = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.push(newItem);\n                newItem._owningPathSegList = this;\n                // TODO: Optimize this to just append to the existing attribute.\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\n                var string = \"\";\n                var first = true;\n                pathSegArray.forEach(function (pathSeg) {\n                    if (first) {\n                        first = false;\n                        string += pathSeg._asPathString();\n                    } else {\n                        string += \" \" + pathSeg._asPathString();\n                    }\n                });\n                return string;\n            };\n\n            // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n            window.SVGPathSegList.prototype._parsePath = function (string) {\n                if (!string || string.length == 0) return [];\n\n                var owningPathSegList = this;\n\n                var Builder = function Builder() {\n                    this.pathSegList = [];\n                };\n\n                Builder.prototype.appendSegment = function (pathSeg) {\n                    this.pathSegList.push(pathSeg);\n                };\n\n                var Source = function Source(string) {\n                    this._string = string;\n                    this._currentIndex = 0;\n                    this._endIndex = this._string.length;\n                    this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\n\n                    this._skipOptionalSpaces();\n                };\n\n                Source.prototype._isCurrentSpace = function () {\n                    var character = this._string[this._currentIndex];\n                    return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n                };\n\n                Source.prototype._skipOptionalSpaces = function () {\n                    while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\n                        this._currentIndex++;\n                    }return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype._skipOptionalSpacesOrDelimiter = function () {\n                    if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\") return false;\n                    if (this._skipOptionalSpaces()) {\n                        if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                            this._currentIndex++;\n                            this._skipOptionalSpaces();\n                        }\n                    }\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.hasMoreData = function () {\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.peekSegmentType = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    return this._pathSegTypeFromChar(lookahead);\n                };\n\n                Source.prototype._pathSegTypeFromChar = function (lookahead) {\n                    switch (lookahead) {\n                        case \"Z\":\n                        case \"z\":\n                            return window.SVGPathSeg.PATHSEG_CLOSEPATH;\n                        case \"M\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\n                        case \"m\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                        case \"L\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        case \"l\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        case \"C\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                        case \"c\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                        case \"Q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                        case \"q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                        case \"A\":\n                            return window.SVGPathSeg.PATHSEG_ARC_ABS;\n                        case \"a\":\n                            return window.SVGPathSeg.PATHSEG_ARC_REL;\n                        case \"H\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                        case \"h\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                        case \"V\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                        case \"v\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                        case \"S\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                        case \"s\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                        case \"T\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                        case \"t\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                        default:\n                            return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                    }\n                };\n\n                Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\n                    // Check for remaining coordinates in the current command.\n                    if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || lookahead >= \"0\" && lookahead <= \"9\") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        return previousCommand;\n                    }\n                    return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                };\n\n                Source.prototype.initialCommandIsMoveTo = function () {\n                    // If the path is empty it is still valid, so return true.\n                    if (!this.hasMoreData()) return true;\n                    var command = this.peekSegmentType();\n                    // Path must start with moveTo.\n                    return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                };\n\n                // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n                // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n                Source.prototype._parseNumber = function () {\n                    var exponent = 0;\n                    var integer = 0;\n                    var frac = 1;\n                    var decimal = 0;\n                    var sign = 1;\n                    var expsign = 1;\n\n                    var startIndex = this._currentIndex;\n\n                    this._skipOptionalSpaces();\n\n                    // Read the sign.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                        this._currentIndex++;\n                        sign = -1;\n                    }\n\n                    if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\")\n                        // The first character of a number must be one of [0-9+-.].\n                        return undefined;\n\n                    // Read the integer part, build right-to-left.\n                    var startIntPartIndex = this._currentIndex;\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                        this._currentIndex++;\n                    } // Advance to first non-digit.\n\n                    if (this._currentIndex != startIntPartIndex) {\n                        var scanIntPartIndex = this._currentIndex - 1;\n                        var multiplier = 1;\n                        while (scanIntPartIndex >= startIntPartIndex) {\n                            integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                            multiplier *= 10;\n                        }\n                    }\n\n                    // Read the decimals.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                        this._currentIndex++;\n\n                        // There must be a least one digit following the .\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            frac *= 10;\n                            decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n                            this._currentIndex += 1;\n                        }\n                    }\n\n                    // Read the exponent part.\n                    if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\") {\n                        this._currentIndex++;\n\n                        // Read the sign of the exponent.\n                        if (this._string.charAt(this._currentIndex) == \"+\") {\n                            this._currentIndex++;\n                        } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                            this._currentIndex++;\n                            expsign = -1;\n                        }\n\n                        // There must be an exponent.\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            exponent *= 10;\n                            exponent += this._string.charAt(this._currentIndex) - \"0\";\n                            this._currentIndex++;\n                        }\n                    }\n\n                    var number = integer + decimal;\n                    number *= sign;\n\n                    if (exponent) number *= Math.pow(10, expsign * exponent);\n\n                    if (startIndex == this._currentIndex) return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n\n                    return number;\n                };\n\n                Source.prototype._parseArcFlag = function () {\n                    if (this._currentIndex >= this._endIndex) return undefined;\n                    var flag = false;\n                    var flagChar = this._string.charAt(this._currentIndex++);\n                    if (flagChar == \"0\") flag = false;else if (flagChar == \"1\") flag = true;else return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n                    return flag;\n                };\n\n                Source.prototype.parseSegment = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    var command = this._pathSegTypeFromChar(lookahead);\n                    if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\n                        // Possibly an implicit command. Not allowed if this is the first command.\n                        if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                        command = this._nextCommandHelper(lookahead, this._previousCommand);\n                        if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                    } else {\n                        this._currentIndex++;\n                    }\n\n                    this._previousCommand = command;\n\n                    switch (command) {\n                        case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                            return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                            return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                            return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                            return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                            return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                            return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                            return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                            return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                            this._skipOptionalSpaces();\n                            return new window.SVGPathSegClosePath(owningPathSegList);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_ARC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        default:\n                            throw \"Unknown path seg type.\";\n                    }\n                };\n\n                var builder = new Builder();\n                var source = new Source(string);\n\n                if (!source.initialCommandIsMoveTo()) return [];\n                while (source.hasMoreData()) {\n                    var pathSeg = source.parseSegment();\n                    if (!pathSeg) return [];\n                    builder.appendSegment(pathSeg);\n                }\n\n                return builder.pathSegList;\n            };\n        }\n    })();\n\n    // String.padEnd polyfill for IE11\n    //\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\n    if (!String.prototype.padEnd) {\n        String.prototype.padEnd = function padEnd(targetLength, padString) {\n            targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\n            padString = String(typeof padString !== 'undefined' ? padString : ' ');\n            if (this.length > targetLength) {\n                return String(this);\n            } else {\n                targetLength = targetLength - this.length;\n                if (targetLength > padString.length) {\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n                }\n                return String(this) + padString.slice(0, targetLength);\n            }\n        };\n    }\n\n    /* jshint ignore:end */\n\n    c3_chart_fn.axis = function () {};\n    c3_chart_fn.axis.labels = function (labels) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            Object.keys(labels).forEach(function (axisId) {\n                $$.axis.setLabelText(axisId, labels[axisId]);\n            });\n            $$.axis.updateLabels();\n        }\n        // TODO: return some values?\n    };\n    c3_chart_fn.axis.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {\n                if (isValue(max.x)) {\n                    config.axis_x_max = max.x;\n                }\n                if (isValue(max.y)) {\n                    config.axis_y_max = max.y;\n                }\n                if (isValue(max.y2)) {\n                    config.axis_y2_max = max.y2;\n                }\n            } else {\n                config.axis_y_max = config.axis_y2_max = max;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_max,\n                y: config.axis_y_max,\n                y2: config.axis_y2_max\n            };\n        }\n    };\n    c3_chart_fn.axis.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {\n                if (isValue(min.x)) {\n                    config.axis_x_min = min.x;\n                }\n                if (isValue(min.y)) {\n                    config.axis_y_min = min.y;\n                }\n                if (isValue(min.y2)) {\n                    config.axis_y2_min = min.y2;\n                }\n            } else {\n                config.axis_y_min = config.axis_y2_min = min;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_min,\n                y: config.axis_y_min,\n                y2: config.axis_y2_min\n            };\n        }\n    };\n    c3_chart_fn.axis.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.axis.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.axis.min(range.min);\n            }\n        } else {\n            return {\n                max: this.axis.max(),\n                min: this.axis.min()\n            };\n        }\n    };\n\n    c3_chart_fn.category = function (i, category) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length > 1) {\n            config.axis_x_categories[i] = category;\n            $$.redraw();\n        }\n        return config.axis_x_categories[i];\n    };\n    c3_chart_fn.categories = function (categories) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!arguments.length) {\n            return config.axis_x_categories;\n        }\n        config.axis_x_categories = categories;\n        $$.redraw();\n        return config.axis_x_categories;\n    };\n\n    c3_chart_fn.resize = function (size) {\n        var $$ = this.internal,\n            config = $$.config;\n        config.size_width = size ? size.width : null;\n        config.size_height = size ? size.height : null;\n        this.flush();\n    };\n\n    c3_chart_fn.flush = function () {\n        var $$ = this.internal;\n        $$.updateAndRedraw({ withLegend: true, withTransition: false, withTransitionForTransform: false });\n    };\n\n    c3_chart_fn.destroy = function () {\n        var $$ = this.internal;\n\n        window.clearInterval($$.intervalForObserveInserted);\n\n        if ($$.resizeTimeout !== undefined) {\n            window.clearTimeout($$.resizeTimeout);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', $$.resizeIfElementDisplayed);\n        } else {\n            var wrapper = window.onresize;\n            // check if no one else removed our wrapper and remove our resizeFunction from it\n            if (wrapper && wrapper.add && wrapper.remove) {\n                wrapper.remove($$.resizeFunction);\n            }\n        }\n\n        // remove the inner resize functions\n        $$.resizeFunction.remove();\n\n        $$.selectChart.classed('c3', false).html(\"\");\n\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n        Object.keys($$).forEach(function (key) {\n            $$[key] = null;\n        });\n\n        return null;\n    };\n\n    // TODO: fix\n    c3_chart_fn.color = function (id) {\n        var $$ = this.internal;\n        return $$.color(id); // more patterns\n    };\n\n    c3_chart_fn.data = function (targetIds) {\n        var targets = this.internal.data.targets;\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n            return [].concat(targetIds).indexOf(t.id) >= 0;\n        });\n    };\n    c3_chart_fn.data.shown = function (targetIds) {\n        return this.internal.filterTargetsToShow(this.data(targetIds));\n    };\n    c3_chart_fn.data.values = function (targetId) {\n        var targets,\n            values = null;\n        if (targetId) {\n            targets = this.data(targetId);\n            values = targets[0] ? targets[0].values.map(function (d) {\n                return d.value;\n            }) : null;\n        }\n        return values;\n    };\n    c3_chart_fn.data.names = function (names) {\n        this.internal.clearLegendItemTextBoxCache();\n        return this.internal.updateDataAttributes('names', names);\n    };\n    c3_chart_fn.data.colors = function (colors) {\n        return this.internal.updateDataAttributes('colors', colors);\n    };\n    c3_chart_fn.data.axes = function (axes) {\n        return this.internal.updateDataAttributes('axes', axes);\n    };\n\n    c3_chart_fn.flow = function (args) {\n        var $$ = this.internal,\n            targets,\n            data,\n            notfoundIds = [],\n            orgDataCount = $$.getMaxDataCount(),\n            dataCount,\n            domain,\n            baseTarget,\n            baseValue,\n            length = 0,\n            tail = 0,\n            diff,\n            to;\n\n        if (args.json) {\n            data = $$.convertJsonToData(args.json, args.keys);\n        } else if (args.rows) {\n            data = $$.convertRowsToData(args.rows);\n        } else if (args.columns) {\n            data = $$.convertColumnsToData(args.columns);\n        } else {\n            return;\n        }\n        targets = $$.convertDataToTargets(data, true);\n\n        // Update/Add data\n        $$.data.targets.forEach(function (t) {\n            var found = false,\n                i,\n                j;\n            for (i = 0; i < targets.length; i++) {\n                if (t.id === targets[i].id) {\n                    found = true;\n\n                    if (t.values[t.values.length - 1]) {\n                        tail = t.values[t.values.length - 1].index + 1;\n                    }\n                    length = targets[i].values.length;\n\n                    for (j = 0; j < length; j++) {\n                        targets[i].values[j].index = tail + j;\n                        if (!$$.isTimeSeries()) {\n                            targets[i].values[j].x = tail + j;\n                        }\n                    }\n                    t.values = t.values.concat(targets[i].values);\n\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n            if (!found) {\n                notfoundIds.push(t.id);\n            }\n        });\n\n        // Append null for not found targets\n        $$.data.targets.forEach(function (t) {\n            var i, j;\n            for (i = 0; i < notfoundIds.length; i++) {\n                if (t.id === notfoundIds[i]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                    for (j = 0; j < length; j++) {\n                        t.values.push({\n                            id: t.id,\n                            index: tail + j,\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                            value: null\n                        });\n                    }\n                }\n            }\n        });\n\n        // Generate null values for new target\n        if ($$.data.targets.length) {\n            targets.forEach(function (t) {\n                var i,\n                    missing = [];\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                    missing.push({\n                        id: t.id,\n                        index: i,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                        value: null\n                    });\n                }\n                t.values.forEach(function (v) {\n                    v.index += tail;\n                    if (!$$.isTimeSeries()) {\n                        v.x += tail;\n                    }\n                });\n                t.values = missing.concat(t.values);\n            });\n        }\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n        // check data count because behavior needs to change when it's only one\n        dataCount = $$.getMaxDataCount();\n        baseTarget = $$.data.targets[0];\n        baseValue = baseTarget.values[0];\n\n        // Update length to flow if needed\n        if (isDefined(args.to)) {\n            length = 0;\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n            baseTarget.values.forEach(function (v) {\n                if (v.x < to) {\n                    length++;\n                }\n            });\n        } else if (isDefined(args.length)) {\n            length = args.length;\n        }\n\n        // If only one data, update the domain to flow from left edge of the chart\n        if (!orgDataCount) {\n            if ($$.isTimeSeries()) {\n                if (baseTarget.values.length > 1) {\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n                } else {\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n                }\n            } else {\n                diff = 1;\n            }\n            domain = [baseValue.x - diff, baseValue.x];\n            $$.updateXDomain(null, true, true, false, domain);\n        } else if (orgDataCount === 1) {\n            if ($$.isTimeSeries()) {\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n                $$.updateXDomain(null, true, true, false, domain);\n            }\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({\n            flow: {\n                index: baseValue.index,\n                length: length,\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n                done: args.done,\n                orgDataCount: orgDataCount\n            },\n            withLegend: true,\n            withTransition: orgDataCount > 1,\n            withTrimXDomain: false,\n            withUpdateXAxis: true\n        });\n    };\n\n    c3_chart_internal_fn.generateFlow = function (args) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n\n        return function () {\n            var targets = args.targets,\n                flow = args.flow,\n                drawBar = args.drawBar,\n                drawLine = args.drawLine,\n                drawArea = args.drawArea,\n                cx = args.cx,\n                cy = args.cy,\n                xv = args.xv,\n                xForText = args.xForText,\n                yForText = args.yForText,\n                duration = args.duration;\n\n            var translateX,\n                scaleX = 1,\n                transform,\n                flowIndex = flow.index,\n                flowLength = flow.length,\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n                orgDomain = $$.x.domain(),\n                domain,\n                durationForFlow = flow.duration || duration,\n                done = flow.done || function () {},\n                wait = $$.generateWait();\n\n            var xgrid = $$.xgrid || d3.selectAll([]),\n                xgridLines = $$.xgridLines || d3.selectAll([]),\n                mainRegion = $$.mainRegion || d3.selectAll([]),\n                mainText = $$.mainText || d3.selectAll([]),\n                mainBar = $$.mainBar || d3.selectAll([]),\n                mainLine = $$.mainLine || d3.selectAll([]),\n                mainArea = $$.mainArea || d3.selectAll([]),\n                mainCircle = $$.mainCircle || d3.selectAll([]);\n\n            // set flag\n            $$.flowing = true;\n\n            // remove head data after rendered\n            $$.data.targets.forEach(function (d) {\n                d.values.splice(0, flowLength);\n            });\n\n            // update x domain to generate axis elements for flow\n            domain = $$.updateXDomain(targets, true, true);\n            // update elements related to x scale\n            if ($$.updateXGrid) {\n                $$.updateXGrid(true);\n            }\n\n            // generate transform to flow\n            if (!flow.orgDataCount) {\n                // if empty\n                if ($$.data.targets[0].values.length !== 1) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    if ($$.isTimeSeries()) {\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                    } else {\n                        translateX = diffDomain(domain) / 2;\n                    }\n                }\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                }\n            }\n            scaleX = diffDomain(orgDomain) / diffDomain(domain);\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n            $$.hideXGridFocus();\n\n            d3.transition().ease('linear').duration(durationForFlow).each(function () {\n                wait.add($$.axes.x.transition().call($$.xAxis));\n                wait.add(mainBar.transition().attr('transform', transform));\n                wait.add(mainLine.transition().attr('transform', transform));\n                wait.add(mainArea.transition().attr('transform', transform));\n                wait.add(mainCircle.transition().attr('transform', transform));\n                wait.add(mainText.transition().attr('transform', transform));\n                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n                wait.add(xgrid.transition().attr('transform', transform));\n                wait.add(xgridLines.transition().attr('transform', transform));\n            }).call(wait, function () {\n                var i,\n                    shapes = [],\n                    texts = [],\n                    eventRects = [];\n\n                // remove flowed elements\n                if (flowLength) {\n                    for (i = 0; i < flowLength; i++) {\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n                    }\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n                    $$.svg.select('.' + CLASS.xgrid).remove();\n                }\n\n                // draw again for removing flowed elements and reverting attr\n                xgrid.attr('transform', null).attr($$.xgridAttr);\n                xgridLines.attr('transform', null);\n                xgridLines.select('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv);\n                xgridLines.select('text').attr(\"x\", config.axis_rotated ? $$.width : 0).attr(\"y\", xv);\n                mainBar.attr('transform', null).attr(\"d\", drawBar);\n                mainLine.attr('transform', null).attr(\"d\", drawLine);\n                mainArea.attr('transform', null).attr(\"d\", drawArea);\n                mainCircle.attr('transform', null).attr(\"cx\", cx).attr(\"cy\", cy);\n                mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));\n                mainRegion.attr('transform', null);\n                mainRegion.select('rect').filter($$.isRegionOnX).attr(\"x\", $$.regionX.bind($$)).attr(\"width\", $$.regionWidth.bind($$));\n\n                if (config.interaction_enabled) {\n                    $$.redrawEventRect();\n                }\n\n                // callback for end of flow\n                done();\n\n                $$.flowing = false;\n            });\n        };\n    };\n\n    c3_chart_fn.focus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();\n        this.defocus();\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.expandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, true);\n\n        $$.focusedTargetIds = targetIds;\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n\n    c3_chart_fn.defocus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, false);\n\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n        $$.defocusedTargetIds = targetIds;\n    };\n\n    c3_chart_fn.revert = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        if ($$.config.legend_show) {\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n            $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {\n                return $$.d3.select(this).classed(CLASS.legendItemFocused);\n            }).classed(CLASS.legendItemFocused, false);\n        }\n\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n    };\n\n    c3_chart_fn.xgrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_x_lines;\n        }\n        config.grid_x_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_x_lines;\n    };\n    c3_chart_fn.xgrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.xgrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, true);\n    };\n\n    c3_chart_fn.ygrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_y_lines;\n        }\n        config.grid_y_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_y_lines;\n    };\n    c3_chart_fn.ygrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.ygrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, false);\n    };\n\n    c3_chart_fn.groups = function (groups) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (isUndefined(groups)) {\n            return config.data_groups;\n        }\n        config.data_groups = groups;\n        $$.redraw();\n        return config.data_groups;\n    };\n\n    c3_chart_fn.legend = function () {};\n    c3_chart_fn.legend.show = function (targetIds) {\n        var $$ = this.internal;\n        $$.showLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n    c3_chart_fn.legend.hide = function (targetIds) {\n        var $$ = this.internal;\n        $$.hideLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n\n    c3_chart_fn.load = function (args) {\n        var $$ = this.internal,\n            config = $$.config;\n        // update xs if specified\n        if (args.xs) {\n            $$.addXs(args.xs);\n        }\n        // update names if exists\n        if ('names' in args) {\n            c3_chart_fn.data.names.bind(this)(args.names);\n        }\n        // update classes if exists\n        if ('classes' in args) {\n            Object.keys(args.classes).forEach(function (id) {\n                config.data_classes[id] = args.classes[id];\n            });\n        }\n        // update categories if exists\n        if ('categories' in args && $$.isCategorized()) {\n            config.axis_x_categories = args.categories;\n        }\n        // update axes if exists\n        if ('axes' in args) {\n            Object.keys(args.axes).forEach(function (id) {\n                config.data_axes[id] = args.axes[id];\n            });\n        }\n        // update colors if exists\n        if ('colors' in args) {\n            Object.keys(args.colors).forEach(function (id) {\n                config.data_colors[id] = args.colors[id];\n            });\n        }\n        // use cache if exists\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n            $$.load($$.getCaches(args.cacheIds), args.done);\n            return;\n        }\n        // unload if needed\n        if ('unload' in args) {\n            // TODO: do not unload if target will load (included in url/rows/columns)\n            $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {\n                $$.loadFromArgs(args);\n            });\n        } else {\n            $$.loadFromArgs(args);\n        }\n    };\n\n    c3_chart_fn.unload = function (args) {\n        var $$ = this.internal;\n        args = args || {};\n        if (args instanceof Array) {\n            args = { ids: args };\n        } else if (typeof args === 'string') {\n            args = { ids: [args] };\n        }\n        $$.unload($$.mapToTargetIds(args.ids), function () {\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n            if (args.done) {\n                args.done();\n            }\n        });\n    };\n\n    c3_chart_fn.regions = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = regions;\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.add = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = config.regions.concat(regions);\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.remove = function (options) {\n        var $$ = this.internal,\n            config = $$.config,\n            duration,\n            classes,\n            regions;\n\n        options = options || {};\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\n            return '.' + c;\n        }));\n        (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();\n\n        config.regions = config.regions.filter(function (region) {\n            var found = false;\n            if (!region['class']) {\n                return true;\n            }\n            region['class'].split(' ').forEach(function (c) {\n                if (classes.indexOf(c) >= 0) {\n                    found = true;\n                }\n            });\n            return !found;\n        });\n\n        return config.regions;\n    };\n\n    c3_chart_fn.selected = function (targetId) {\n        var $$ = this.internal,\n            d3 = $$.d3;\n        return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {\n            return d3.select(this).classed(CLASS.SELECTED);\n        }).map(function (d) {\n            return d.map(function (d) {\n                var data = d.__data__;return data.data ? data.data : data;\n            });\n        }));\n    };\n    c3_chart_fn.select = function (ids, indices, resetOther) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d) && !isSelected) {\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n                }\n            } else if (isDefined(resetOther) && resetOther) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        });\n    };\n    c3_chart_fn.unselect = function (ids, indices) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d)) {\n                    if (isSelected) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                }\n            }\n        });\n    };\n\n    c3_chart_fn.show = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.removeHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('opacity', 1, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 1);\n        });\n\n        if (options.withLegend) {\n            $$.showLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.hide = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.addHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('opacity', 0, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 0);\n        });\n\n        if (options.withLegend) {\n            $$.hideLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.toggle = function (targetIds, options) {\n        var that = this,\n            $$ = this.internal;\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n        });\n    };\n\n    c3_chart_fn.tooltip = function () {};\n    c3_chart_fn.tooltip.show = function (args) {\n        var $$ = this.internal,\n            index,\n            mouse;\n\n        // determine mouse position on the chart\n        if (args.mouse) {\n            mouse = args.mouse;\n        }\n\n        // determine focus data\n        if (args.data) {\n            if ($$.isMultipleX()) {\n                // if multiple xs, target point will be determined by mouse\n                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n                index = null;\n            } else {\n                // TODO: when tooltip_grouped = false\n                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n            }\n        } else if (typeof args.x !== 'undefined') {\n            index = $$.getIndexByX(args.x);\n        } else if (typeof args.index !== 'undefined') {\n            index = args.index;\n        }\n\n        // emulate mouse events to show\n        $$.dispatchEvent('mouseover', index, mouse);\n        $$.dispatchEvent('mousemove', index, mouse);\n\n        $$.config.tooltip_onshow.call($$, args.data);\n    };\n    c3_chart_fn.tooltip.hide = function () {\n        // TODO: get target data by checking the state of focus\n        this.internal.dispatchEvent('mouseout', 0);\n\n        this.internal.config.tooltip_onhide.call(this);\n    };\n\n    c3_chart_fn.transform = function (type, targetIds) {\n        var $$ = this.internal,\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? { withTransform: true } : null;\n        $$.transformTo(targetIds, type, options);\n    };\n\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n        var $$ = this,\n            withTransitionForAxis = !$$.hasArcType(),\n            options = optionsForRedraw || { withTransitionForAxis: withTransitionForAxis };\n        options.withTransitionForTransform = false;\n        $$.transiting = false;\n        $$.setTargetType(targetIds, type);\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n        $$.updateAndRedraw(options);\n    };\n\n    c3_chart_fn.x = function (x) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetX($$.data.targets, x);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n    c3_chart_fn.xs = function (xs) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetXs($$.data.targets, xs);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n\n    c3_chart_fn.zoom = function (domain) {\n        var $$ = this.internal;\n        if (domain) {\n            if ($$.isTimeSeries()) {\n                domain = domain.map(function (x) {\n                    return $$.parseDate(x);\n                });\n            }\n            $$.brush.extent(domain);\n            $$.redraw({ withUpdateXDomain: true, withY: $$.config.zoom_rescale });\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n        }\n        return $$.brush.extent();\n    };\n    c3_chart_fn.zoom.enable = function (enabled) {\n        var $$ = this.internal;\n        $$.config.zoom_enabled = enabled;\n        $$.updateAndRedraw();\n    };\n    c3_chart_fn.unzoom = function () {\n        var $$ = this.internal;\n        $$.brush.clear().update();\n        $$.redraw({ withUpdateXDomain: true });\n    };\n\n    c3_chart_fn.zoom.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (max === 0 || max) {\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n        } else {\n            return config.zoom_x_max;\n        }\n    };\n\n    c3_chart_fn.zoom.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (min === 0 || min) {\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n        } else {\n            return config.zoom_x_min;\n        }\n    };\n\n    c3_chart_fn.zoom.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.domain.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.domain.min(range.min);\n            }\n        } else {\n            return {\n                max: this.domain.max(),\n                min: this.domain.min()\n            };\n        }\n    };\n\n    c3_chart_internal_fn.initPie = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.pie = d3.layout.pie().value(function (d) {\n            return d.values.reduce(function (a, b) {\n                return a + b.value;\n            }, 0);\n        });\n        $$.pie.sort($$.getOrderFunction() || null);\n    };\n\n    c3_chart_internal_fn.updateRadius = function () {\n        var $$ = this,\n            config = $$.config,\n            w = config.gauge_width || config.donut_width,\n            gaugeArcWidth = $$.filterTargetsToShow($$.data.targets).length * $$.config.gauge_arcs_minWidth;\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2 * ($$.hasType('gauge') ? 0.85 : 1);\n        $$.radius = $$.radiusExpanded * 0.95;\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n        $$.gaugeArcWidth = w ? w : gaugeArcWidth <= $$.radius - $$.innerRadius ? $$.radius - $$.innerRadius : gaugeArcWidth <= $$.radius ? gaugeArcWidth : $$.radius;\n    };\n\n    c3_chart_internal_fn.updateArc = function () {\n        var $$ = this;\n        $$.svgArc = $$.getSvgArc();\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n    };\n\n    c3_chart_internal_fn.updateAngle = function (d) {\n        var $$ = this,\n            config = $$.config,\n            found = false,\n            index = 0,\n            gMin,\n            gMax,\n            gTic,\n            gValue;\n\n        if (!config) {\n            return null;\n        }\n\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n            if (!found && t.data.id === d.data.id) {\n                found = true;\n                d = t;\n                d.index = index;\n            }\n            index++;\n        });\n        if (isNaN(d.startAngle)) {\n            d.startAngle = 0;\n        }\n        if (isNaN(d.endAngle)) {\n            d.endAngle = d.startAngle;\n        }\n        if ($$.isGaugeType(d.data)) {\n            gMin = config.gauge_min;\n            gMax = config.gauge_max;\n            gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\n            d.startAngle = config.gauge_startingAngle;\n            d.endAngle = d.startAngle + gTic * gValue;\n        }\n        return found ? d : null;\n    };\n\n    c3_chart_internal_fn.getSvgArc = function () {\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            arc = $$.d3.svg.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index : $$.radius;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        }),\n            newArc = function newArc(d, withoutUpdate) {\n            var updated;\n            if (withoutUpdate) {\n                return arc(d);\n            } // for interpolate\n            updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n        // TODO: extends all function\n        newArc.centroid = arc.centroid;\n        return newArc;\n    };\n\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n        rate = rate || 1;\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            expandWidth = Math.min($$.radiusExpanded * rate - $$.radius, singleArcWidth * 0.8 - (1 - rate) * 100),\n            arc = $$.d3.svg.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index + expandWidth : $$.radiusExpanded * rate;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        });\n        return function (d) {\n            var updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n    };\n\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n    };\n\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\n        var $$ = this,\n            config = $$.config,\n            updated = $$.updateAngle(d),\n            c,\n            x,\n            y,\n            h,\n            ratio,\n            translate = \"\",\n            hasGauge = $$.hasType('gauge');\n        if (updated && !hasGauge) {\n            c = this.svgArc.centroid(updated);\n            x = isNaN(c[0]) ? 0 : c[0];\n            y = isNaN(c[1]) ? 0 : c[1];\n            h = Math.sqrt(x * x + y * y);\n            if ($$.hasType('donut') && config.donut_label_ratio) {\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n            } else {\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n            }\n            translate = \"translate(\" + x * ratio + ',' + y * ratio + \")\";\n        } else if (updated && hasGauge && $$.filterTargetsToShow($$.data.targets).length > 1) {\n            var y1 = Math.sin(updated.endAngle - Math.PI / 2);\n            x = Math.cos(updated.endAngle - Math.PI / 2) * ($$.radiusExpanded + 25);\n            y = y1 * ($$.radiusExpanded + 15 - Math.abs(y1 * 10)) + 3;\n            translate = \"translate(\" + x + ',' + y + \")\";\n        }\n        return translate;\n    };\n\n    c3_chart_internal_fn.getArcRatio = function (d) {\n        var $$ = this,\n            config = $$.config,\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n        return d ? (d.endAngle - d.startAngle) / whole : null;\n    };\n\n    c3_chart_internal_fn.convertToArcData = function (d) {\n        return this.addName({\n            id: d.data.id,\n            value: d.value,\n            ratio: this.getArcRatio(d),\n            index: d.index\n        });\n    };\n\n    c3_chart_internal_fn.textForArcLabel = function (d) {\n        var $$ = this,\n            updated,\n            value,\n            ratio,\n            id,\n            format;\n        if (!$$.shouldShowArcLabel()) {\n            return \"\";\n        }\n        updated = $$.updateAngle(d);\n        value = updated ? updated.value : null;\n        ratio = $$.getArcRatio(updated);\n        id = d.data.id;\n        if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\n            return \"\";\n        }\n        format = $$.getArcLabelFormat();\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n    };\n\n    c3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {\n        var $$ = this,\n            format = $$.getGaugeLabelExtents();\n\n        return format ? format(value, isMax) : value;\n    };\n\n    c3_chart_internal_fn.expandArc = function (targetIds) {\n        var $$ = this,\n            interval;\n\n        // MEMO: avoid to cancel transition\n        if ($$.transiting) {\n            interval = window.setInterval(function () {\n                if (!$$.transiting) {\n                    window.clearInterval(interval);\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                        $$.expandArc(targetIds);\n                    }\n                }\n            }, 10);\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n            if (!$$.shouldExpand(d.data.id)) {\n                return;\n            }\n            $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr(\"d\", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr(\"d\", $$.svgArcExpandedSub).each(function (d) {\n                if ($$.isDonutType(d.data)) {\n                    // callback here\n                }\n            });\n        });\n    };\n\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n        var $$ = this;\n\n        if ($$.transiting) {\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {\n            return $$.expandDuration(d.data.id);\n        }).attr(\"d\", $$.svgArc);\n        $$.svg.selectAll('.' + CLASS.arc);\n    };\n\n    c3_chart_internal_fn.expandDuration = function (id) {\n        var $$ = this,\n            config = $$.config;\n\n        if ($$.isDonutType(id)) {\n            return config.donut_expand_duration;\n        } else if ($$.isGaugeType(id)) {\n            return config.gauge_expand_duration;\n        } else if ($$.isPieType(id)) {\n            return config.pie_expand_duration;\n        } else {\n            return 50;\n        }\n    };\n\n    c3_chart_internal_fn.shouldExpand = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;\n    };\n\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\n        var $$ = this,\n            config = $$.config,\n            shouldShow = true;\n        if ($$.hasType('donut')) {\n            shouldShow = config.donut_label_show;\n        } else if ($$.hasType('pie')) {\n            shouldShow = config.pie_label_show;\n        }\n        // when gauge, always true\n        return shouldShow;\n    };\n\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n        var $$ = this,\n            config = $$.config,\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n        return ratio >= threshold;\n    };\n\n    c3_chart_internal_fn.getArcLabelFormat = function () {\n        var $$ = this,\n            config = $$.config,\n            format = config.pie_label_format;\n        if ($$.hasType('gauge')) {\n            format = config.gauge_label_format;\n        } else if ($$.hasType('donut')) {\n            format = config.donut_label_format;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.getGaugeLabelExtents = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.gauge_label_extents;\n    };\n\n    c3_chart_internal_fn.getArcTitle = function () {\n        var $$ = this;\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n    };\n\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n        var $$ = this,\n            main = $$.main,\n            mainPieUpdate,\n            mainPieEnter,\n            classChartArc = $$.classChartArc.bind($$),\n            classArcs = $$.classArcs.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr(\"class\", function (d) {\n            return classChartArc(d) + classFocus(d.data);\n        });\n        mainPieEnter = mainPieUpdate.enter().append(\"g\").attr(\"class\", classChartArc);\n        mainPieEnter.append('g').attr('class', classArcs);\n        mainPieEnter.append(\"text\").attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\").style(\"opacity\", 0).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        // MEMO: can not keep same color..., but not bad to update color in redraw\n        //mainPieUpdate.exit().remove();\n    };\n\n    c3_chart_internal_fn.initArc = function () {\n        var $$ = this;\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n        $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style(\"text-anchor\", \"middle\").text($$.getArcTitle());\n    };\n\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            main = $$.main,\n            mainArc,\n            backgroundArc,\n            mainArcLabelLine,\n            hasGaugeType = $$.hasType('gauge');\n        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));\n        mainArc.enter().append('path').attr(\"class\", $$.classArc.bind($$)).style(\"fill\", function (d) {\n            return $$.color(d.data);\n        }).style(\"cursor\", function (d) {\n            return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null;\n        }).each(function (d) {\n            if ($$.isGaugeType(d.data)) {\n                d.startAngle = d.endAngle = config.gauge_startingAngle;\n            }\n            this._current = d;\n        });\n        if (hasGaugeType) {\n            mainArcLabelLine = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arcLabelLine).data($$.arcData.bind($$));\n            mainArcLabelLine.enter().append('rect').attr(\"class\", function (d) {\n                return CLASS.arcLabelLine + ' ' + CLASS.target + ' ' + CLASS.target + '-' + d.data.id;\n            });\n            if ($$.filterTargetsToShow($$.data.targets).length === 1) {\n                mainArcLabelLine.style(\"display\", \"none\");\n            } else {\n                mainArcLabelLine.style(\"fill\", function (d) {\n                    return config.color_pattern.length > 0 ? $$.levelColor(d.data.values[0].value) : $$.color(d.data);\n                }).style(\"display\", config.gauge_labelLine_show ? \"\" : \"none\").each(function (d) {\n                    var lineLength = 0,\n                        lineThickness = 2,\n                        x = 0,\n                        y = 0,\n                        transform = \"\";\n                    if ($$.hiddenTargetIds.indexOf(d.data.id) < 0) {\n                        var updated = $$.updateAngle(d),\n                            innerLineLength = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length * (updated.index + 1),\n                            lineAngle = updated.endAngle - Math.PI / 2,\n                            arcInnerRadius = $$.radius - innerLineLength,\n                            linePositioningAngle = lineAngle - (arcInnerRadius === 0 ? 0 : 1 / arcInnerRadius);\n                        lineLength = $$.radiusExpanded - $$.radius + innerLineLength;\n                        x = Math.cos(linePositioningAngle) * arcInnerRadius;\n                        y = Math.sin(linePositioningAngle) * arcInnerRadius;\n                        transform = \"rotate(\" + lineAngle * 180 / Math.PI + \", \" + x + \", \" + y + \")\";\n                    }\n                    d3.select(this).attr({ x: x, y: y, width: lineLength, height: lineThickness, transform: transform }).style(\"stroke-dasharray\", \"0, \" + (lineLength + lineThickness) + \", 0\");\n                });\n            }\n        }\n        mainArc.attr(\"transform\", function (d) {\n            return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\";\n        }).on('mouseover', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.expandArc(updated.data.id);\n                $$.api.focus(updated.data.id);\n                $$.toggleFocusLegend(updated.data.id, true);\n                $$.config.data_onmouseover(arcData, this);\n            }\n        } : null).on('mousemove', config.interaction_enabled ? function (d) {\n            var updated = $$.updateAngle(d),\n                arcData,\n                selectedData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated), selectedData = [arcData];\n                $$.showTooltip(selectedData, this);\n            }\n        } : null).on('mouseout', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.unexpandArc(updated.data.id);\n                $$.api.revert();\n                $$.revertLegend();\n                $$.hideTooltip();\n                $$.config.data_onmouseout(arcData, this);\n            }\n        } : null).on('click', config.interaction_enabled ? function (d, i) {\n            var updated = $$.updateAngle(d),\n                arcData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                if ($$.toggleShape) {\n                    $$.toggleShape(this, arcData, i);\n                }\n                $$.config.data_onclick.call($$.api, arcData, this);\n            }\n        } : null).each(function () {\n            $$.transiting = true;\n        }).transition().duration(duration).attrTween(\"d\", function (d) {\n            var updated = $$.updateAngle(d),\n                interpolate;\n            if (!updated) {\n                return function () {\n                    return \"M 0 0\";\n                };\n            }\n            //                if (this._current === d) {\n            //                    this._current = {\n            //                        startAngle: Math.PI*2,\n            //                        endAngle: Math.PI*2,\n            //                    };\n            //                }\n            if (isNaN(this._current.startAngle)) {\n                this._current.startAngle = 0;\n            }\n            if (isNaN(this._current.endAngle)) {\n                this._current.endAngle = this._current.startAngle;\n            }\n            interpolate = d3.interpolate(this._current, updated);\n            this._current = interpolate(0);\n            return function (t) {\n                var interpolated = interpolate(t);\n                interpolated.data = d.data; // data.id will be updated by interporator\n                return $$.getArc(interpolated, true);\n            };\n        }).attr(\"transform\", withTransform ? \"scale(1)\" : \"\").style(\"fill\", function (d) {\n            return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n        }) // Where gauge reading color would receive customization.\n        .call($$.endall, function () {\n            $$.transiting = false;\n        });\n        mainArc.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        main.selectAll('.' + CLASS.chartArc).select('text').style(\"opacity\", 0).attr('class', function (d) {\n            return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\n        }).text($$.textForArcLabel.bind($$)).attr(\"transform\", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {\n            return $$.isGaugeType(d.data) && $$.filterTargetsToShow($$.data.targets).length === 1 ? Math.round($$.radius / 5) + 'px' : '';\n        }).transition().duration(duration).style(\"opacity\", function (d) {\n            return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\n        });\n        main.select('.' + CLASS.chartArcsTitle).style(\"opacity\", $$.hasType('donut') || hasGaugeType ? 1 : 0);\n\n        if (hasGaugeType) {\n            var index = 0;\n            backgroundArc = $$.arcs.select('g.' + CLASS.chartArcsBackground).selectAll('path.' + CLASS.chartArcsBackground).data($$.data.targets);\n            backgroundArc.enter().append(\"path\");\n            backgroundArc.attr(\"class\", function (d, i) {\n                return CLASS.chartArcsBackground + ' ' + CLASS.chartArcsBackground + '-' + i;\n            }).attr(\"d\", function (d1) {\n                if ($$.hiddenTargetIds.indexOf(d1.id) >= 0) {\n                    return \"M 0 0\";\n                }\n\n                var d = {\n                    data: [{ value: config.gauge_max }],\n                    startAngle: config.gauge_startingAngle,\n                    endAngle: -1 * config.gauge_startingAngle * (config.gauge_fullCircle ? Math.PI : 1),\n                    index: index++\n                };\n                return $$.getArc(d, true, true);\n            });\n            backgroundArc.exit().remove();\n\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr(\"dy\", \".75em\").text(config.gauge_label_show ? config.gauge_units : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr(\"dx\", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr(\"dx\", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');\n        }\n    };\n    c3_chart_internal_fn.initGauge = function () {\n        var arcs = this.arcs;\n        if (this.hasType('gauge')) {\n            arcs.append('g').attr(\"class\", CLASS.chartArcsBackground);\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeUnit).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMin).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMax).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        }\n    };\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n        return this.config.gauge_label_show ? 20 : 0;\n    };\n\n    c3_chart_internal_fn.hasCaches = function (ids) {\n        for (var i = 0; i < ids.length; i++) {\n            if (!(ids[i] in this.cache)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    c3_chart_internal_fn.addCache = function (id, target) {\n        this.cache[id] = this.cloneTarget(target);\n    };\n    c3_chart_internal_fn.getCaches = function (ids) {\n        var targets = [],\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] in this.cache) {\n                targets.push(this.cloneTarget(this.cache[ids[i]]));\n            }\n        }\n        return targets;\n    };\n\n    c3_chart_internal_fn.categoryName = function (i) {\n        var config = this.config;\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n    };\n\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n    };\n    c3_chart_internal_fn.classText = function (d) {\n        return this.generateClass(CLASS.text, d.index);\n    };\n    c3_chart_internal_fn.classTexts = function (d) {\n        return this.generateClass(CLASS.texts, d.id);\n    };\n    c3_chart_internal_fn.classShape = function (d) {\n        return this.generateClass(CLASS.shape, d.index);\n    };\n    c3_chart_internal_fn.classShapes = function (d) {\n        return this.generateClass(CLASS.shapes, d.id);\n    };\n    c3_chart_internal_fn.classLine = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n    };\n    c3_chart_internal_fn.classLines = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n    };\n    c3_chart_internal_fn.classCircle = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n    };\n    c3_chart_internal_fn.classCircles = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n    };\n    c3_chart_internal_fn.classBar = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n    };\n    c3_chart_internal_fn.classBars = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n    };\n    c3_chart_internal_fn.classArc = function (d) {\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n    };\n    c3_chart_internal_fn.classArcs = function (d) {\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n    };\n    c3_chart_internal_fn.classArea = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n    };\n    c3_chart_internal_fn.classAreas = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n    };\n    c3_chart_internal_fn.classRegion = function (d, i) {\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n    };\n    c3_chart_internal_fn.classEvent = function (d) {\n        return this.generateClass(CLASS.eventRect, d.index);\n    };\n    c3_chart_internal_fn.classTarget = function (id) {\n        var $$ = this;\n        var additionalClassSuffix = $$.config.data_classes[id],\n            additionalClass = '';\n        if (additionalClassSuffix) {\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n        }\n        return $$.generateClass(CLASS.target, id) + additionalClass;\n    };\n    c3_chart_internal_fn.classFocus = function (d) {\n        return this.classFocused(d) + this.classDefocused(d);\n    };\n    c3_chart_internal_fn.classFocused = function (d) {\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n    };\n    c3_chart_internal_fn.classDefocused = function (d) {\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n    };\n    c3_chart_internal_fn.classChartText = function (d) {\n        return CLASS.chartText + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartLine = function (d) {\n        return CLASS.chartLine + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartBar = function (d) {\n        return CLASS.chartBar + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartArc = function (d) {\n        return CLASS.chartArc + this.classTarget(d.data.id);\n    };\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n    };\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n        var $$ = this;\n        ids = ids || [];\n        return ids.length ? ids.map(function (id) {\n            return $$.selectorTarget(id, prefix);\n        }) : null;\n    };\n    c3_chart_internal_fn.selectorLegend = function (id) {\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorLegends = function (ids) {\n        var $$ = this;\n        return ids && ids.length ? ids.map(function (id) {\n            return $$.selectorLegend(id);\n        }) : null;\n    };\n\n    c3_chart_internal_fn.getClipPath = function (id) {\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n    };\n    c3_chart_internal_fn.appendClip = function (parent, id) {\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n    };\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n        // axis line width + padding for left\n        var left = Math.max(30, this.margin.left);\n        return forHorizontal ? -(1 + left) : -(left - 1);\n    };\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n        return forHorizontal ? -20 : -this.margin.top;\n    };\n    c3_chart_internal_fn.getXAxisClipX = function () {\n        var $$ = this;\n        return $$.getAxisClipX(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipX = function () {\n        var $$ = this;\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n        var $$ = this,\n            left = Math.max(30, $$.margin.left),\n            right = Math.max(30, $$.margin.right);\n        // width + axis line width + padding for left/right\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n    };\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n        // less than 20 is not enough to show the axis label 'outer' without legend\n        return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;\n    };\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n    };\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight($$.config.axis_rotated);\n    };\n\n    c3_chart_internal_fn.generateColor = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            colors = config.data_colors,\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n            callback = config.data_color,\n            ids = [];\n\n        return function (d) {\n            var id = d.id || d.data && d.data.id || d,\n                color;\n\n            // if callback function is provided\n            if (colors[id] instanceof Function) {\n                color = colors[id](d);\n            }\n            // if specified, choose that color\n            else if (colors[id]) {\n                    color = colors[id];\n                }\n                // if not specified, choose from pattern\n                else {\n                        if (ids.indexOf(id) < 0) {\n                            ids.push(id);\n                        }\n                        color = pattern[ids.indexOf(id) % pattern.length];\n                        colors[id] = color;\n                    }\n            return callback instanceof Function ? callback(color, d) : color;\n        };\n    };\n    c3_chart_internal_fn.generateLevelColor = function () {\n        var $$ = this,\n            config = $$.config,\n            colors = config.color_pattern,\n            threshold = config.color_threshold,\n            asValue = threshold.unit === 'value',\n            values = threshold.values && threshold.values.length ? threshold.values : [],\n            max = threshold.max || 100;\n        return notEmpty(config.color_threshold) ? function (value) {\n            var i,\n                v,\n                color = colors[colors.length - 1];\n            for (i = 0; i < values.length; i++) {\n                v = asValue ? value : value * 100 / max;\n                if (v < values[i]) {\n                    color = colors[i];\n                    break;\n                }\n            }\n            return color;\n        } : null;\n    };\n\n    c3_chart_internal_fn.getDefaultConfig = function () {\n        var config = {\n            bindto: '#chart',\n            svg_classname: undefined,\n            size_width: undefined,\n            size_height: undefined,\n            padding_left: undefined,\n            padding_right: undefined,\n            padding_top: undefined,\n            padding_bottom: undefined,\n            resize_auto: true,\n            zoom_enabled: false,\n            zoom_extent: undefined,\n            zoom_privileged: false,\n            zoom_rescale: false,\n            zoom_onzoom: function zoom_onzoom() {},\n            zoom_onzoomstart: function zoom_onzoomstart() {},\n            zoom_onzoomend: function zoom_onzoomend() {},\n            zoom_x_min: undefined,\n            zoom_x_max: undefined,\n            interaction_brighten: true,\n            interaction_enabled: true,\n            onmouseover: function onmouseover() {},\n            onmouseout: function onmouseout() {},\n            onresize: function onresize() {},\n            onresized: function onresized() {},\n            oninit: function oninit() {},\n            onrendered: function onrendered() {},\n            transition_duration: 350,\n            data_x: undefined,\n            data_xs: {},\n            data_xFormat: '%Y-%m-%d',\n            data_xLocaltime: true,\n            data_xSort: true,\n            data_idConverter: function data_idConverter(id) {\n                return id;\n            },\n            data_names: {},\n            data_classes: {},\n            data_groups: [],\n            data_axes: {},\n            data_type: undefined,\n            data_types: {},\n            data_labels: {},\n            data_order: 'desc',\n            data_regions: {},\n            data_color: undefined,\n            data_colors: {},\n            data_hide: false,\n            data_filter: undefined,\n            data_selection_enabled: false,\n            data_selection_grouped: false,\n            data_selection_isselectable: function data_selection_isselectable() {\n                return true;\n            },\n            data_selection_multiple: true,\n            data_selection_draggable: false,\n            data_onclick: function data_onclick() {},\n            data_onmouseover: function data_onmouseover() {},\n            data_onmouseout: function data_onmouseout() {},\n            data_onselected: function data_onselected() {},\n            data_onunselected: function data_onunselected() {},\n            data_url: undefined,\n            data_headers: undefined,\n            data_json: undefined,\n            data_rows: undefined,\n            data_columns: undefined,\n            data_mimeType: undefined,\n            data_keys: undefined,\n            // configuration for no plot-able data supplied.\n            data_empty_label_text: \"\",\n            // subchart\n            subchart_show: false,\n            subchart_size_height: 60,\n            subchart_axis_x_show: true,\n            subchart_onbrush: function subchart_onbrush() {},\n            // color\n            color_pattern: [],\n            color_threshold: {},\n            // legend\n            legend_show: true,\n            legend_hide: false,\n            legend_position: 'bottom',\n            legend_inset_anchor: 'top-left',\n            legend_inset_x: 10,\n            legend_inset_y: 0,\n            legend_inset_step: undefined,\n            legend_item_onclick: undefined,\n            legend_item_onmouseover: undefined,\n            legend_item_onmouseout: undefined,\n            legend_equally: false,\n            legend_padding: 0,\n            legend_item_tile_width: 10,\n            legend_item_tile_height: 10,\n            // axis\n            axis_rotated: false,\n            axis_x_show: true,\n            axis_x_type: 'indexed',\n            axis_x_localtime: true,\n            axis_x_categories: [],\n            axis_x_tick_centered: false,\n            axis_x_tick_format: undefined,\n            axis_x_tick_culling: {},\n            axis_x_tick_culling_max: 10,\n            axis_x_tick_count: undefined,\n            axis_x_tick_fit: true,\n            axis_x_tick_values: null,\n            axis_x_tick_rotate: 0,\n            axis_x_tick_outer: true,\n            axis_x_tick_multiline: true,\n            axis_x_tick_multilineMax: 0,\n            axis_x_tick_width: null,\n            axis_x_max: undefined,\n            axis_x_min: undefined,\n            axis_x_padding: {},\n            axis_x_height: undefined,\n            axis_x_extent: undefined,\n            axis_x_label: {},\n            axis_x_inner: undefined,\n            axis_y_show: true,\n            axis_y_type: undefined,\n            axis_y_max: undefined,\n            axis_y_min: undefined,\n            axis_y_inverted: false,\n            axis_y_center: undefined,\n            axis_y_inner: undefined,\n            axis_y_label: {},\n            axis_y_tick_format: undefined,\n            axis_y_tick_outer: true,\n            axis_y_tick_values: null,\n            axis_y_tick_rotate: 0,\n            axis_y_tick_count: undefined,\n            axis_y_tick_time_value: undefined,\n            axis_y_tick_time_interval: undefined,\n            axis_y_padding: {},\n            axis_y_default: undefined,\n            axis_y2_show: false,\n            axis_y2_max: undefined,\n            axis_y2_min: undefined,\n            axis_y2_inverted: false,\n            axis_y2_center: undefined,\n            axis_y2_inner: undefined,\n            axis_y2_label: {},\n            axis_y2_tick_format: undefined,\n            axis_y2_tick_outer: true,\n            axis_y2_tick_values: null,\n            axis_y2_tick_count: undefined,\n            axis_y2_padding: {},\n            axis_y2_default: undefined,\n            // grid\n            grid_x_show: false,\n            grid_x_type: 'tick',\n            grid_x_lines: [],\n            grid_y_show: false,\n            // not used\n            // grid_y_type: 'tick',\n            grid_y_lines: [],\n            grid_y_ticks: 10,\n            grid_focus_show: true,\n            grid_lines_front: true,\n            // point - point of each data\n            point_show: true,\n            point_r: 2.5,\n            point_sensitivity: 10,\n            point_focus_expand_enabled: true,\n            point_focus_expand_r: undefined,\n            point_select_r: undefined,\n            // line\n            line_connectNull: false,\n            line_step_type: 'step',\n            // bar\n            bar_width: undefined,\n            bar_width_ratio: 0.6,\n            bar_width_max: undefined,\n            bar_zerobased: true,\n            bar_space: 0,\n            // area\n            area_zerobased: true,\n            area_above: false,\n            // pie\n            pie_label_show: true,\n            pie_label_format: undefined,\n            pie_label_threshold: 0.05,\n            pie_label_ratio: undefined,\n            pie_expand: {},\n            pie_expand_duration: 50,\n            // gauge\n            gauge_fullCircle: false,\n            gauge_label_show: true,\n            gauge_labelLine_show: true,\n            gauge_label_format: undefined,\n            gauge_min: 0,\n            gauge_max: 100,\n            gauge_startingAngle: -1 * Math.PI / 2,\n            gauge_label_extents: undefined,\n            gauge_units: undefined,\n            gauge_width: undefined,\n            gauge_arcs_minWidth: 5,\n            gauge_expand: {},\n            gauge_expand_duration: 50,\n            // donut\n            donut_label_show: true,\n            donut_label_format: undefined,\n            donut_label_threshold: 0.05,\n            donut_label_ratio: undefined,\n            donut_width: undefined,\n            donut_title: \"\",\n            donut_expand: {},\n            donut_expand_duration: 50,\n            // spline\n            spline_interpolation_type: 'cardinal',\n            // region - region to change style\n            regions: [],\n            // tooltip - show when mouseover on each data\n            tooltip_show: true,\n            tooltip_grouped: true,\n            tooltip_order: undefined,\n            tooltip_format_title: undefined,\n            tooltip_format_name: undefined,\n            tooltip_format_value: undefined,\n            tooltip_position: undefined,\n            tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n            },\n            tooltip_init_show: false,\n            tooltip_init_x: 0,\n            tooltip_init_position: { top: '0px', left: '50px' },\n            tooltip_onshow: function tooltip_onshow() {},\n            tooltip_onhide: function tooltip_onhide() {},\n            // title\n            title_text: undefined,\n            title_padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            title_position: 'top-center'\n        };\n\n        Object.keys(this.additionalConfig).forEach(function (key) {\n            config[key] = this.additionalConfig[key];\n        }, this);\n\n        return config;\n    };\n    c3_chart_internal_fn.additionalConfig = {};\n\n    c3_chart_internal_fn.loadConfig = function (config) {\n        var this_config = this.config,\n            target,\n            keys,\n            read;\n        function find() {\n            var key = keys.shift();\n            //        console.log(\"key =>\", key, \", target =>\", target);\n            if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {\n                target = target[key];\n                return find();\n            } else if (!key) {\n                return target;\n            } else {\n                return undefined;\n            }\n        }\n        Object.keys(this_config).forEach(function (key) {\n            target = config;\n            keys = key.split('_');\n            read = find();\n            //        console.log(\"CONFIG : \", key, read);\n            if (isDefined(read)) {\n                this_config[key] = read;\n            }\n        });\n    };\n\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n        var $$ = this,\n            type = mimeType ? mimeType : 'csv';\n        var req = $$.d3.xhr(url);\n        if (headers) {\n            Object.keys(headers).forEach(function (header) {\n                req.header(header, headers[header]);\n            });\n        }\n        req.get(function (error, data) {\n            var d;\n            var dataResponse = data.response || data.responseText; // Fixes IE9 XHR issue; see #1345\n            if (!data) {\n                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n            }\n            if (type === 'json') {\n                d = $$.convertJsonToData(JSON.parse(dataResponse), keys);\n            } else if (type === 'tsv') {\n                d = $$.convertTsvToData(dataResponse);\n            } else {\n                d = $$.convertCsvToData(dataResponse);\n            }\n            done.call($$, d);\n        });\n    };\n    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n        var rows = parser.parseRows(xsv),\n            d;\n        if (rows.length === 1) {\n            d = [{}];\n            rows[0].forEach(function (id) {\n                d[0][id] = null;\n            });\n        } else {\n            d = parser.parse(xsv);\n        }\n        return d;\n    };\n    c3_chart_internal_fn.convertCsvToData = function (csv) {\n        return this.convertXsvToData(csv, this.d3.csv);\n    };\n    c3_chart_internal_fn.convertTsvToData = function (tsv) {\n        return this.convertXsvToData(tsv, this.d3.tsv);\n    };\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n        var $$ = this,\n            new_rows = [],\n            targetKeys,\n            data;\n        if (keys) {\n            // when keys specified, json would be an array that includes objects\n            if (keys.x) {\n                targetKeys = keys.value.concat(keys.x);\n                $$.config.data_x = keys.x;\n            } else {\n                targetKeys = keys.value;\n            }\n            new_rows.push(targetKeys);\n            json.forEach(function (o) {\n                var new_row = [];\n                targetKeys.forEach(function (key) {\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                    var v = $$.findValueInJson(o, key);\n                    if (isUndefined(v)) {\n                        v = null;\n                    }\n                    new_row.push(v);\n                });\n                new_rows.push(new_row);\n            });\n            data = $$.convertRowsToData(new_rows);\n        } else {\n            Object.keys(json).forEach(function (key) {\n                new_rows.push([key].concat(json[key]));\n            });\n            data = $$.convertColumnsToData(new_rows);\n        }\n        return data;\n    };\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n        path = path.replace(/^\\./, ''); // strip a leading dot\n        var pathArray = path.split('.');\n        for (var i = 0; i < pathArray.length; ++i) {\n            var k = pathArray[i];\n            if (k in object) {\n                object = object[k];\n            } else {\n                return;\n            }\n        }\n        return object;\n    };\n\n    /**\n     * Converts the rows to normalized data.\n     * @param {any[][]} rows The row data\n     * @return {Object[]}\n     */\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\n        var newRows = [];\n        var keys = rows[0];\n\n        for (var i = 1; i < rows.length; i++) {\n            var newRow = {};\n            for (var j = 0; j < rows[i].length; j++) {\n                if (isUndefined(rows[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRow[keys[j]] = rows[i][j];\n            }\n            newRows.push(newRow);\n        }\n        return newRows;\n    };\n\n    /**\n     * Converts the columns to normalized data.\n     * @param {any[][]} columns The column data\n     * @return {Object[]}\n     */\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n        var newRows = [];\n\n        for (var i = 0; i < columns.length; i++) {\n            var key = columns[i][0];\n            for (var j = 1; j < columns[i].length; j++) {\n                if (isUndefined(newRows[j - 1])) {\n                    newRows[j - 1] = {};\n                }\n                if (isUndefined(columns[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRows[j - 1][key] = columns[i][j];\n            }\n        }\n\n        return newRows;\n    };\n\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n            targets;\n\n        // save x for update data by load when custom x and c3.x API\n        ids.forEach(function (id) {\n            var xKey = $$.getXKey(id);\n\n            if ($$.isCustomX() || $$.isTimeSeries()) {\n                // if included in input data\n                if (xs.indexOf(xKey) >= 0) {\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {\n                        return d[xKey];\n                    }).filter(isValue).map(function (rawX, i) {\n                        return $$.generateTargetX(rawX, id, i);\n                    }));\n                }\n                // if not included in input data, find from preloaded data of other id's x\n                else if (config.data_x) {\n                        $$.data.xs[id] = $$.getOtherTargetXs();\n                    }\n                    // if not included in input data, find from preloaded data\n                    else if (notEmpty(config.data_xs)) {\n                            $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                        }\n                // MEMO: if no x included, use same x of current will be used\n            } else {\n                $$.data.xs[id] = data.map(function (d, i) {\n                    return i;\n                });\n            }\n        });\n\n        // check x is defined\n        ids.forEach(function (id) {\n            if (!$$.data.xs[id]) {\n                throw new Error('x is not defined for id = \"' + id + '\".');\n            }\n        });\n\n        // convert to target\n        targets = ids.map(function (id, index) {\n            var convertedId = config.data_idConverter(id);\n            return {\n                id: convertedId,\n                id_org: id,\n                values: data.map(function (d, i) {\n                    var xKey = $$.getXKey(id),\n                        rawX = d[xKey],\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,\n                        x;\n                    // use x as categories if custom x and categorized\n                    if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\n                        if (index === 0 && i === 0) {\n                            config.axis_x_categories = [];\n                        }\n                        x = config.axis_x_categories.indexOf(rawX);\n                        if (x === -1) {\n                            x = config.axis_x_categories.length;\n                            config.axis_x_categories.push(rawX);\n                        }\n                    } else {\n                        x = $$.generateTargetX(rawX, id, i);\n                    }\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                        x = undefined;\n                    }\n                    return { x: x, value: value, id: convertedId };\n                }).filter(function (v) {\n                    return isDefined(v.x);\n                })\n            };\n        });\n\n        // finish targets\n        targets.forEach(function (t) {\n            var i;\n            // sort values by its x\n            if (config.data_xSort) {\n                t.values = t.values.sort(function (v1, v2) {\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                    return x1 - x2;\n                });\n            }\n            // indexing each value\n            i = 0;\n            t.values.forEach(function (v) {\n                v.index = i++;\n            });\n            // this needs to be sorted because its index and value.index is identical\n            $$.data.xs[t.id].sort(function (v1, v2) {\n                return v1 - v2;\n            });\n        });\n\n        // cache information about values\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n        // set target types\n        if (config.data_type) {\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) {\n                return !(id in config.data_types);\n            }), config.data_type);\n        }\n\n        // cache as original id keyed\n        targets.forEach(function (d) {\n            $$.addCache(d.id_org, d);\n        });\n\n        return targets;\n    };\n\n    c3_chart_internal_fn.isX = function (key) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);\n    };\n    c3_chart_internal_fn.isNotX = function (key) {\n        return !this.isX(key);\n    };\n    c3_chart_internal_fn.getXKey = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n    };\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n        var $$ = this,\n            xValues,\n            ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n        ids.forEach(function (id) {\n            if ($$.getXKey(id) === key) {\n                xValues = $$.data.xs[id];\n            }\n        });\n        return xValues;\n    };\n    c3_chart_internal_fn.getIndexByX = function (x) {\n        var $$ = this,\n            data = $$.filterByX($$.data.targets, x);\n        return data.length ? data[0].index : null;\n    };\n    c3_chart_internal_fn.getXValue = function (id, i) {\n        var $$ = this;\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n    };\n    c3_chart_internal_fn.getOtherTargetXs = function () {\n        var $$ = this,\n            idsForX = Object.keys($$.data.xs);\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n    };\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\n        var xs = this.getOtherTargetXs();\n        return xs && index < xs.length ? xs[index] : null;\n    };\n    c3_chart_internal_fn.addXs = function (xs) {\n        var $$ = this;\n        Object.keys(xs).forEach(function (id) {\n            $$.config.data_xs[id] = xs[id];\n        });\n    };\n    c3_chart_internal_fn.hasMultipleX = function (xs) {\n        return this.d3.set(Object.keys(xs).map(function (id) {\n            return xs[id];\n        })).size() > 1;\n    };\n    c3_chart_internal_fn.isMultipleX = function () {\n        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n    };\n    c3_chart_internal_fn.addName = function (data) {\n        var $$ = this,\n            name;\n        if (data) {\n            name = $$.config.data_names[data.id];\n            data.name = name !== undefined ? name : data.id;\n        }\n        return data;\n    };\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n        var valueOnIndex = values.filter(function (v) {\n            return v.index === index;\n        });\n        return valueOnIndex.length ? valueOnIndex[0] : null;\n    };\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            t.values.forEach(function (v, i) {\n                v.x = $$.generateTargetX(x[i], t.id, i);\n            });\n            $$.data.xs[t.id] = x;\n        });\n    };\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            if (xs[t.id]) {\n                $$.updateTargetX([t], xs[t.id]);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n        var $$ = this,\n            x;\n        if ($$.isTimeSeries()) {\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n        } else if ($$.isCustomX() && !$$.isCategorized()) {\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n        } else {\n            x = index;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.cloneTarget = function (target) {\n        return {\n            id: target.id,\n            id_org: target.id_org,\n            values: target.values.map(function (d) {\n                return { x: d.x, value: d.value, id: d.id };\n            })\n        };\n    };\n    c3_chart_internal_fn.updateXs = function () {\n        var $$ = this;\n        if ($$.data.targets.length) {\n            $$.xs = [];\n            $$.data.targets[0].values.forEach(function (v) {\n                $$.xs[v.index] = v.x;\n            });\n        }\n    };\n    c3_chart_internal_fn.getPrevX = function (i) {\n        var x = this.xs[i - 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getNextX = function (i) {\n        var x = this.xs[i + 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getMaxDataCount = function () {\n        var $$ = this;\n        return $$.d3.max($$.data.targets, function (t) {\n            return t.values.length;\n        });\n    };\n    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n        var length = targets.length,\n            max = 0,\n            maxTarget;\n        if (length > 1) {\n            targets.forEach(function (t) {\n                if (t.values.length > max) {\n                    maxTarget = t;\n                    max = t.values.length;\n                }\n            });\n        } else {\n            maxTarget = length ? targets[0] : null;\n        }\n        return maxTarget;\n    };\n    c3_chart_internal_fn.getEdgeX = function (targets) {\n        var $$ = this;\n        return !targets.length ? [0, 0] : [$$.d3.min(targets, function (t) {\n            return t.values[0].x;\n        }), $$.d3.max(targets, function (t) {\n            return t.values[t.values.length - 1].x;\n        })];\n    };\n    c3_chart_internal_fn.mapToIds = function (targets) {\n        return targets.map(function (d) {\n            return d.id;\n        });\n    };\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n        var $$ = this;\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n    };\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\n        var ids = this.mapToIds(targets),\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n        var $$ = this;\n        return targets.filter(function (t) {\n            return $$.isTargetToShow(t.id);\n        });\n    };\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n        var $$ = this;\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {\n            return t.values.map(function (v) {\n                return +v.x;\n            });\n        }))).values();\n        xs = $$.isTimeSeries() ? xs.map(function (x) {\n            return new Date(+x);\n        }) : xs.map(function (x) {\n            return +x;\n        });\n        return xs.sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n        });\n    };\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n        var ys = {};\n        targets.forEach(function (t) {\n            ys[t.id] = [];\n            t.values.forEach(function (v) {\n                ys[t.id].push(v.value);\n            });\n        });\n        return ys;\n    };\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n        var ids = Object.keys(targets),\n            i,\n            j,\n            values;\n        for (i = 0; i < ids.length; i++) {\n            values = targets[ids[i]].values;\n            for (j = 0; j < values.length; j++) {\n                if (checker(values[j].value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v < 0;\n        });\n    };\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v > 0;\n        });\n    };\n    c3_chart_internal_fn.isOrderDesc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';\n    };\n    c3_chart_internal_fn.isOrderAsc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';\n    };\n    c3_chart_internal_fn.getOrderFunction = function () {\n        var $$ = this,\n            config = $$.config,\n            orderAsc = $$.isOrderAsc(),\n            orderDesc = $$.isOrderDesc();\n        if (orderAsc || orderDesc) {\n            return function (t1, t2) {\n                var reducer = function reducer(p, c) {\n                    return p + Math.abs(c.value);\n                };\n                var t1Sum = t1.values.reduce(reducer, 0),\n                    t2Sum = t2.values.reduce(reducer, 0);\n                return orderDesc ? t2Sum - t1Sum : t1Sum - t2Sum;\n            };\n        } else if (isFunction(config.data_order)) {\n            return config.data_order;\n        } else if (isArray(config.data_order)) {\n            var order = config.data_order;\n            return function (t1, t2) {\n                return order.indexOf(t1.id) - order.indexOf(t2.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.orderTargets = function (targets) {\n        var fct = this.getOrderFunction();\n        if (fct) {\n            targets.sort(fct);\n            if (this.isOrderAsc() || this.isOrderDesc()) {\n                targets.reverse();\n            }\n        }\n        return targets;\n    };\n    c3_chart_internal_fn.filterByX = function (targets, x) {\n        return this.d3.merge(targets.map(function (t) {\n            return t.values;\n        })).filter(function (v) {\n            return v.x - x === 0;\n        });\n    };\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\n        return data.filter(function (d) {\n            return isValue(d.value);\n        });\n    };\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n        return targets.map(function (t) {\n            return {\n                id: t.id,\n                id_org: t.id_org,\n                values: t.values.filter(function (v) {\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n                })\n            };\n        });\n    };\n    c3_chart_internal_fn.hasDataLabel = function () {\n        var config = this.config;\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n            return true;\n        } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {\n            return true;\n        }\n        return false;\n    };\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n        var $$ = this,\n            lengths = [0, 0],\n            paddingCoef = 1.3;\n        $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {\n            return $$.dataLabelFormat(d.id)(d);\n        }).each(function (d, i) {\n            lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n        }).remove();\n        return lengths;\n    };\n    c3_chart_internal_fn.isNoneArc = function (d) {\n        return this.hasTarget(this.data.targets, d.id);\n    }, c3_chart_internal_fn.isArc = function (d) {\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n    };\n    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n        var i,\n            targetX = values[index].x,\n            sames = [];\n        for (i = index - 1; i >= 0; i--) {\n            if (targetX !== values[i].x) {\n                break;\n            }\n            sames.push(values[i]);\n        }\n        for (i = index; i < values.length; i++) {\n            if (targetX !== values[i].x) {\n                break;\n            }\n            sames.push(values[i]);\n        }\n        return sames;\n    };\n\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n        var $$ = this,\n            candidates;\n\n        // map to array of closest points of each target\n        candidates = targets.map(function (target) {\n            return $$.findClosest(target.values, pos);\n        });\n\n        // decide closest point and return\n        return $$.findClosest(candidates, pos);\n    };\n    c3_chart_internal_fn.findClosest = function (values, pos) {\n        var $$ = this,\n            minDist = $$.config.point_sensitivity,\n            closest;\n\n        // find mouseovering bar\n        values.filter(function (v) {\n            return v && $$.isBarType(v.id);\n        }).forEach(function (v) {\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n            if (!closest && $$.isWithinBar(shape)) {\n                closest = v;\n            }\n        });\n\n        // find closest point from non-bar\n        values.filter(function (v) {\n            return v && !$$.isBarType(v.id);\n        }).forEach(function (v) {\n            var d = $$.dist(v, pos);\n            if (d < minDist) {\n                minDist = d;\n                closest = v;\n            }\n        });\n\n        return closest;\n    };\n    c3_chart_internal_fn.dist = function (data, pos) {\n        var $$ = this,\n            config = $$.config,\n            xIndex = config.axis_rotated ? 1 : 0,\n            yIndex = config.axis_rotated ? 0 : 1,\n            y = $$.circleY(data, data.index),\n            x = $$.x(data.x);\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n    };\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\n        var converted = [].concat(values),\n            i;\n\n        if (!this.isCategorized()) {\n            return values;\n        }\n\n        for (i = values.length + 1; 0 < i; i--) {\n            converted[i] = converted[i - 1];\n        }\n\n        converted[0] = {\n            x: converted[0].x - 1,\n            value: converted[0].value,\n            id: converted[0].id\n        };\n        converted[values.length + 1] = {\n            x: converted[values.length].x + 1,\n            value: converted[values.length].value,\n            id: converted[values.length].id\n        };\n\n        return converted;\n    };\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n        var $$ = this,\n            config = $$.config,\n            current = config['data_' + name];\n        if (typeof attrs === 'undefined') {\n            return current;\n        }\n        Object.keys(attrs).forEach(function (id) {\n            current[id] = attrs[id];\n        });\n        $$.redraw({ withLegend: true });\n        return current;\n    };\n\n    c3_chart_internal_fn.load = function (targets, args) {\n        var $$ = this;\n        if (targets) {\n            // filter loading targets if needed\n            if (args.filter) {\n                targets = targets.filter(args.filter);\n            }\n            // set type if args.types || args.type specified\n            if (args.type || args.types) {\n                targets.forEach(function (t) {\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                    $$.setTargetType(t.id, type);\n                });\n            }\n            // Update/Add data\n            $$.data.targets.forEach(function (d) {\n                for (var i = 0; i < targets.length; i++) {\n                    if (d.id === targets[i].id) {\n                        d.values = targets[i].values;\n                        targets.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n\n        if (args.done) {\n            args.done();\n        }\n    };\n    c3_chart_internal_fn.loadFromArgs = function (args) {\n        var $$ = this;\n        if (args.data) {\n            $$.load($$.convertDataToTargets(args.data), args);\n        } else if (args.url) {\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n                $$.load($$.convertDataToTargets(data), args);\n            });\n        } else if (args.json) {\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n        } else if (args.rows) {\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n        } else if (args.columns) {\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n        } else {\n            $$.load(null, args);\n        }\n    };\n    c3_chart_internal_fn.unload = function (targetIds, done) {\n        var $$ = this;\n        if (!done) {\n            done = function done() {};\n        }\n        // filter existing target\n        targetIds = targetIds.filter(function (id) {\n            return $$.hasTarget($$.data.targets, id);\n        });\n        // If no target, call done and return\n        if (!targetIds || targetIds.length === 0) {\n            done();\n            return;\n        }\n        $$.svg.selectAll(targetIds.map(function (id) {\n            return $$.selectorTarget(id);\n        })).transition().style('opacity', 0).remove().call($$.endall, done);\n        targetIds.forEach(function (id) {\n            // Reset fadein for future load\n            $$.withoutFadeIn[id] = false;\n            // Remove target's elements\n            if ($$.legend) {\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n            }\n            // Remove target\n            $$.data.targets = $$.data.targets.filter(function (t) {\n                return t.id !== id;\n            });\n        });\n    };\n\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasNegativeValue;\n        if (config.data_groups.length > 0) {\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider negative values\n                if (hasNegativeValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v < 0 ? v : 0;\n                    });\n                }\n                // Compute min\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.min(Object.keys(ys).map(function (key) {\n            return $$.d3.min(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasPositiveValue;\n        if (config.data_groups.length > 0) {\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider positive values\n                if (hasPositiveValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v > 0 ? v : 0;\n                    });\n                }\n                // Compute max\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.max(Object.keys(ys).map(function (key) {\n            return $$.d3.max(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n        var $$ = this,\n            config = $$.config,\n            targetsByAxisId = targets.filter(function (t) {\n            return $$.axis.getId(t.id) === axisId;\n        }),\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n            yDomainMin = $$.getYDomainMin(yTargets),\n            yDomainMax = $$.getYDomainMax(yTargets),\n            domain,\n            domainLength,\n            padding,\n            padding_top,\n            padding_bottom,\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n            yDomainAbs,\n            lengths,\n            diff,\n            ratio,\n            isAllPositive,\n            isAllNegative,\n            isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n        // MEMO: avoid inverting domain unexpectedly\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;\n\n        if (yTargets.length === 0) {\n            // use current domain if target of axisId is none\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n        }\n        if (isNaN(yDomainMin)) {\n            // set minimum to zero when not number\n            yDomainMin = 0;\n        }\n        if (isNaN(yDomainMax)) {\n            // set maximum to have same value as yDomainMin\n            yDomainMax = yDomainMin;\n        }\n        if (yDomainMin === yDomainMax) {\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n        }\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n        // Cancel zerobased if axis_*_min / axis_*_max specified\n        if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {\n            isZeroBased = false;\n        }\n\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                yDomainMin = 0;\n            }\n            if (isAllNegative) {\n                yDomainMax = 0;\n            }\n        }\n\n        domainLength = Math.abs(yDomainMax - yDomainMin);\n        padding = padding_top = padding_bottom = domainLength * 0.1;\n\n        if (typeof center !== 'undefined') {\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n            yDomainMax = center + yDomainAbs;\n            yDomainMin = center - yDomainAbs;\n        }\n        // add padding for data label\n        if (showHorizontalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n            diff = diffDomain($$.y.range());\n            ratio = [lengths[0] / diff, lengths[1] / diff];\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n        } else if (showVerticalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n        }\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n        }\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n        }\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                padding_bottom = yDomainMin;\n            }\n            if (isAllNegative) {\n                padding_top = -yDomainMax;\n            }\n        }\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n        return isInverted ? domain.reverse() : domain;\n    };\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {\n            return $$.d3.min(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {\n            return $$.d3.max(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n        var $$ = this,\n            config = $$.config,\n            diff = domain[1] - domain[0],\n            maxDataCount,\n            padding,\n            paddingLeft,\n            paddingRight;\n        if ($$.isCategorized()) {\n            padding = 0;\n        } else if ($$.hasType('bar')) {\n            maxDataCount = $$.getMaxDataCount();\n            padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\n        } else {\n            padding = diff * 0.01;\n        }\n        if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n        } else if (typeof config.axis_x_padding === 'number') {\n            paddingLeft = paddingRight = config.axis_x_padding;\n        } else {\n            paddingLeft = paddingRight = padding;\n        }\n        return { left: paddingLeft, right: paddingRight };\n    };\n    c3_chart_internal_fn.getXDomain = function (targets) {\n        var $$ = this,\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n            firstX = xDomain[0],\n            lastX = xDomain[1],\n            padding = $$.getXDomainPadding(xDomain),\n            min = 0,\n            max = 0;\n        // show center of x domain if min and max are the same\n        if (firstX - lastX === 0 && !$$.isCategorized()) {\n            if ($$.isTimeSeries()) {\n                firstX = new Date(firstX.getTime() * 0.5);\n                lastX = new Date(lastX.getTime() * 1.5);\n            } else {\n                firstX = firstX === 0 ? 1 : firstX * 0.5;\n                lastX = lastX === 0 ? -1 : lastX * 1.5;\n            }\n        }\n        if (firstX || firstX === 0) {\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n        }\n        if (lastX || lastX === 0) {\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n        }\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n        var $$ = this,\n            config = $$.config;\n\n        if (withUpdateOrgXDomain) {\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n            $$.orgXDomain = $$.x.domain();\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x).updateScaleExtent();\n            }\n            $$.subX.domain($$.x.domain());\n            if ($$.brush) {\n                $$.brush.scale($$.subX);\n            }\n        }\n        if (withUpdateXDomain) {\n            $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.extent());\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x).updateScaleExtent();\n            }\n        }\n\n        // Trim domain when too big by zoom mousemove event\n        if (withTrim) {\n            $$.x.domain($$.trimXDomain($$.x.orgDomain()));\n        }\n\n        return $$.x.domain();\n    };\n    c3_chart_internal_fn.trimXDomain = function (domain) {\n        var zoomDomain = this.getZoomDomain(),\n            min = zoomDomain[0],\n            max = zoomDomain[1];\n        if (domain[0] <= min) {\n            domain[1] = +domain[1] + (min - domain[0]);\n            domain[0] = min;\n        }\n        if (max <= domain[1]) {\n            domain[0] = +domain[0] - (domain[1] - max);\n            domain[1] = max;\n        }\n        return domain;\n    };\n\n    c3_chart_internal_fn.drag = function (mouse) {\n        var $$ = this,\n            config = $$.config,\n            main = $$.main,\n            d3 = $$.d3;\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        if (config.zoom_enabled && !$$.zoom.altDomain) {\n            return;\n        } // skip if zoomable because of conflict drag dehavior\n        if (!config.data_selection_multiple) {\n            return;\n        } // skip when single selection because drag is used for multiple selection\n\n        sx = $$.dragStart[0];\n        sy = $$.dragStart[1];\n        mx = mouse[0];\n        my = mouse[1];\n        minX = Math.min(sx, mx);\n        maxX = Math.max(sx, mx);\n        minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\n        maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\n\n        main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY);\n        // TODO: binary search when multiple xs\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {\n            return config.data_selection_isselectable(d);\n        }).each(function (d, i) {\n            var shape = d3.select(this),\n                isSelected = shape.classed(CLASS.SELECTED),\n                isIncluded = shape.classed(CLASS.INCLUDED),\n                _x,\n                _y,\n                _w,\n                _h,\n                toggle,\n                isWithin = false,\n                box;\n            if (shape.classed(CLASS.circle)) {\n                _x = shape.attr(\"cx\") * 1;\n                _y = shape.attr(\"cy\") * 1;\n                toggle = $$.togglePoint;\n                isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n            } else if (shape.classed(CLASS.bar)) {\n                box = getPathBox(this);\n                _x = box.x;\n                _y = box.y;\n                _w = box.width;\n                _h = box.height;\n                toggle = $$.togglePath;\n                isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n            } else {\n                // line/area selection not supported yet\n                return;\n            }\n            if (isWithin ^ isIncluded) {\n                shape.classed(CLASS.INCLUDED, !isIncluded);\n                // TODO: included/unincluded callback here\n                shape.classed(CLASS.SELECTED, !isSelected);\n                toggle.call($$, !isSelected, shape, d, i);\n            }\n        });\n    };\n\n    c3_chart_internal_fn.dragstart = function (mouse) {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.dragStart = mouse;\n        $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);\n        $$.dragging = true;\n    };\n\n    c3_chart_internal_fn.dragend = function () {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();\n        $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\n        $$.dragging = false;\n    };\n\n    c3_chart_internal_fn.getYFormat = function (forArc) {\n        var $$ = this,\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n        return function (v, ratio, id) {\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n            return format.call($$, v, ratio);\n        };\n    };\n    c3_chart_internal_fn.yFormat = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.y2Format = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\n        return isValue(v) ? +v : \"\";\n    };\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n        return (ratio * 100).toFixed(1) + '%';\n    };\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n        var $$ = this,\n            data_labels = $$.config.data_labels,\n            format,\n            defaultFormat = function defaultFormat(v) {\n            return isValue(v) ? +v : \"\";\n        };\n        // find format according to axis id\n        if (typeof data_labels.format === 'function') {\n            format = data_labels.format;\n        } else if (_typeof(data_labels.format) === 'object') {\n            if (data_labels.format[targetId]) {\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n            } else {\n                format = function format() {\n                    return '';\n                };\n            }\n        } else {\n            format = defaultFormat;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.initGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        $$.grid = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid);\n        if (config.grid_x_show) {\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n        }\n        if (config.grid_y_show) {\n            $$.grid.append('g').attr('class', CLASS.ygrids);\n        }\n        if (config.grid_focus_show) {\n            $$.grid.append('g').attr(\"class\", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);\n        }\n        $$.xgrid = d3.selectAll([]);\n        if (!config.grid_lines_front) {\n            $$.initGridLines();\n        }\n    };\n    c3_chart_internal_fn.initGridLines = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.gridLines = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n        $$.xgridLines = d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n        $$.xgridAttr = config.axis_rotated ? {\n            'x1': 0,\n            'x2': $$.width,\n            'y1': function y1(d) {\n                return $$.x(d) - tickOffset;\n            },\n            'y2': function y2(d) {\n                return $$.x(d) - tickOffset;\n            }\n        } : {\n            'x1': function x1(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'x2': function x2(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'y1': 0,\n            'y2': $$.height\n        };\n\n        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);\n        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n        if (!withoutUpdate) {\n            $$.xgrid.attr($$.xgridAttr).style(\"opacity\", function () {\n                return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\n            });\n        }\n        $$.xgrid.exit().remove();\n    };\n\n    c3_chart_internal_fn.updateYGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);\n        $$.ygrid.enter().append('line').attr('class', CLASS.ygrid);\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0).attr(\"x2\", config.axis_rotated ? $$.y : $$.width).attr(\"y1\", config.axis_rotated ? 0 : $$.y).attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n        $$.ygrid.exit().remove();\n        $$.smoothLines($$.ygrid, 'grid');\n    };\n\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\n        return d.position ? d.position : \"end\";\n    };\n    c3_chart_internal_fn.gridTextDx = function (d) {\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n    };\n    c3_chart_internal_fn.xGridTextX = function (d) {\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n    };\n    c3_chart_internal_fn.yGridTextX = function (d) {\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n    };\n    c3_chart_internal_fn.updateGrid = function (duration) {\n        var $$ = this,\n            main = $$.main,\n            config = $$.config,\n            xgridLine,\n            ygridLine,\n            yv;\n\n        // hide if arc type\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n        if (config.grid_x_show) {\n            $$.updateXGrid();\n        }\n        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines);\n        // enter\n        xgridLine = $$.xgridLines.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        xgridLine.append('line').style(\"opacity\", 0);\n        xgridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // udpate\n        // done in d3.transition() of the end of this function\n        // exit\n        $$.xgridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n\n        // Y-Grid\n        if (config.grid_y_show) {\n            $$.updateYGrid();\n        }\n        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines);\n        // enter\n        ygridLine = $$.ygridLines.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        ygridLine.append('line').style(\"opacity\", 0);\n        ygridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // update\n        yv = $$.yv.bind($$);\n        $$.ygridLines.select('line').transition().duration(duration).attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 1);\n        $$.ygridLines.select('text').transition().duration(duration).attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr(\"y\", yv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1);\n        // exit\n        $$.ygridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawGrid = function (withTransition) {\n        var $$ = this,\n            config = $$.config,\n            xv = $$.xv.bind($$),\n            lines = $$.xgridLines.select('line'),\n            texts = $$.xgridLines.select('text');\n        return [(withTransition ? lines.transition() : lines).attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 1), (withTransition ? texts.transition() : texts).attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr(\"y\", xv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n        var $$ = this,\n            config = $$.config,\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n            xx = $$.xx.bind($$);\n        if (!config.tooltip_show) {\n            return;\n        }\n        // Hide when scatter plot exists\n        if ($$.hasType('scatter') || $$.hasArcType()) {\n            return;\n        }\n        focusEl.style(\"visibility\", \"visible\").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);\n        $$.smoothLines(focusEl, 'grid');\n    };\n    c3_chart_internal_fn.hideXGridFocus = function () {\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    };\n    c3_chart_internal_fn.updateXgridFocus = function () {\n        var $$ = this,\n            config = $$.config;\n        $$.main.select('line.' + CLASS.xgridFocus).attr(\"x1\", config.axis_rotated ? 0 : -10).attr(\"x2\", config.axis_rotated ? $$.width : -10).attr(\"y1\", config.axis_rotated ? -10 : 0).attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n    };\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\n        var $$ = this,\n            gridData = [],\n            xDomain,\n            firstYear,\n            lastYear,\n            i,\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n        if (type === 'year') {\n            xDomain = $$.getXDomain();\n            firstYear = xDomain[0].getFullYear();\n            lastYear = xDomain[1].getFullYear();\n            for (i = firstYear; i <= lastYear; i++) {\n                gridData.push(new Date(i + '-01-01 00:00:00'));\n            }\n        } else {\n            gridData = scale.ticks(10);\n            if (gridData.length > tickNum) {\n                // use only int\n                gridData = gridData.filter(function (d) {\n                    return (\"\" + d).indexOf('.') < 0;\n                });\n            }\n        }\n        return gridData;\n    };\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n        return params ? function (line) {\n            var found = false;\n            [].concat(params).forEach(function (param) {\n                if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {\n                    found = true;\n                }\n            });\n            return found;\n        } : function () {\n            return true;\n        };\n    };\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n        var $$ = this,\n            config = $$.config,\n            toRemove = $$.getGridFilterToRemove(params),\n            toShow = function toShow(line) {\n            return !toRemove(line);\n        },\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();\n        if (forX) {\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n        } else {\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n        }\n    };\n\n    c3_chart_internal_fn.initEventRect = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.eventRects).style('fill-opacity', 0);\n    };\n    c3_chart_internal_fn.redrawEventRect = function () {\n        var $$ = this,\n            config = $$.config,\n            eventRectUpdate,\n            maxDataCountTarget,\n            isMultipleX = $$.isMultipleX();\n\n        // rects for mouseover\n        var eventRects = $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null).classed(CLASS.eventRectsMultiple, isMultipleX).classed(CLASS.eventRectsSingle, !isMultipleX);\n\n        // clear old rects\n        eventRects.selectAll('.' + CLASS.eventRect).remove();\n\n        // open as public variable\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n        if (isMultipleX) {\n            eventRectUpdate = $$.eventRect.data([0]);\n            // enter : only one rect will be added\n            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit : not needed because always only one rect exists\n        } else {\n            // Set data and update $$.eventRect\n            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n            eventRectUpdate = $$.eventRect.data(function (d) {\n                return d;\n            });\n            // enter\n            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit\n            eventRectUpdate.exit().remove();\n        }\n    };\n    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n        var $$ = this,\n            config = $$.config,\n            x,\n            y,\n            w,\n            h,\n            rectW,\n            rectX;\n\n        // set update selection if null\n        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) {\n            return d;\n        });\n\n        if ($$.isMultipleX()) {\n            // TODO: rotated not supported yet\n            x = 0;\n            y = 0;\n            w = $$.width;\n            h = $$.height;\n        } else {\n            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\n                // update index for x that is used by prevX and nextX\n                $$.updateXs();\n\n                rectW = function rectW(d) {\n                    var prevX = $$.getPrevX(d.index),\n                        nextX = $$.getNextX(d.index);\n\n                    // if there this is a single data point make the eventRect full width (or height)\n                    if (prevX === null && nextX === null) {\n                        return config.axis_rotated ? $$.height : $$.width;\n                    }\n\n                    if (prevX === null) {\n                        prevX = $$.x.domain()[0];\n                    }\n                    if (nextX === null) {\n                        nextX = $$.x.domain()[1];\n                    }\n\n                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n                };\n                rectX = function rectX(d) {\n                    var prevX = $$.getPrevX(d.index),\n                        nextX = $$.getNextX(d.index),\n                        thisX = $$.data.xs[d.id][d.index];\n\n                    // if there this is a single data point position the eventRect at 0\n                    if (prevX === null && nextX === null) {\n                        return 0;\n                    }\n\n                    if (prevX === null) {\n                        prevX = $$.x.domain()[0];\n                    }\n\n                    return ($$.x(thisX) + $$.x(prevX)) / 2;\n                };\n            } else {\n                rectW = $$.getEventRectWidth();\n                rectX = function rectX(d) {\n                    return $$.x(d.x) - rectW / 2;\n                };\n            }\n            x = config.axis_rotated ? 0 : rectX;\n            y = config.axis_rotated ? rectX : 0;\n            w = config.axis_rotated ? $$.width : rectW;\n            h = config.axis_rotated ? rectW : $$.height;\n        }\n\n        eventRectUpdate.attr('class', $$.classEvent.bind($$)).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h);\n    };\n    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n        eventRectEnter.append(\"rect\").attr(\"class\", $$.classEvent.bind($$)).style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null).on('mouseover', function (d) {\n            var index = d.index;\n\n            if ($$.dragging || $$.flowing) {\n                return;\n            } // do nothing while dragging/flowing\n            if ($$.hasArcType()) {\n                return;\n            }\n\n            // Expand shapes for selection\n            if (config.point_focus_expand_enabled) {\n                $$.expandCircles(index, null, true);\n            }\n            $$.expandBars(index, null, true);\n\n            // Call event handler\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                config.data_onmouseover.call($$.api, d);\n            });\n        }).on('mouseout', function (d) {\n            var index = d.index;\n            if (!$$.config) {\n                return;\n            } // chart is destroyed\n            if ($$.hasArcType()) {\n                return;\n            }\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            // Undo expanded shapes\n            $$.unexpandCircles();\n            $$.unexpandBars();\n            // Call event handler\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                config.data_onmouseout.call($$.api, d);\n            });\n        }).on('mousemove', function (d) {\n            var selectedData,\n                index = d.index,\n                eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n            if ($$.dragging || $$.flowing) {\n                return;\n            } // do nothing while dragging/flowing\n            if ($$.hasArcType()) {\n                return;\n            }\n\n            if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                index -= 1;\n            }\n\n            // Show tooltip\n            selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n                return $$.addName($$.getValueOnIndex(t.values, index));\n            });\n\n            if (config.tooltip_grouped) {\n                $$.showTooltip(selectedData, this);\n                $$.showXGridFocus(selectedData);\n            }\n\n            if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n                return;\n            }\n\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function () {\n                d3.select(this).classed(CLASS.EXPANDED, true);\n                if (config.data_selection_enabled) {\n                    eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n                }\n                if (!config.tooltip_grouped) {\n                    $$.hideXGridFocus();\n                    $$.hideTooltip();\n                    if (!config.data_selection_grouped) {\n                        $$.unexpandCircles(index);\n                        $$.unexpandBars(index);\n                    }\n                }\n            }).filter(function (d) {\n                return $$.isWithinShape(this, d);\n            }).each(function (d) {\n                if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n                    eventRect.style('cursor', 'pointer');\n                }\n                if (!config.tooltip_grouped) {\n                    $$.showTooltip([d], this);\n                    $$.showXGridFocus([d]);\n                    if (config.point_focus_expand_enabled) {\n                        $$.expandCircles(index, d.id, true);\n                    }\n                    $$.expandBars(index, d.id, true);\n                }\n            });\n        }).on('click', function (d) {\n            var index = d.index;\n            if ($$.hasArcType() || !$$.toggleShape) {\n                return;\n            }\n            if ($$.cancelClick) {\n                $$.cancelClick = false;\n                return;\n            }\n            if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                index -= 1;\n            }\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                    $$.toggleShape(this, d, index);\n                    $$.config.data_onclick.call($$.api, d, this);\n                }\n            });\n        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n            $$.drag(d3.mouse(this));\n        }).on('dragstart', function () {\n            $$.dragstart(d3.mouse(this));\n        }).on('dragend', function () {\n            $$.dragend();\n        }) : function () {});\n    };\n\n    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n\n        function mouseout() {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            $$.unexpandCircles();\n            $$.unexpandBars();\n        }\n\n        eventRectEnter.append('rect').attr('x', 0).attr('y', 0).attr('width', $$.width).attr('height', $$.height).attr('class', CLASS.eventRect).on('mouseout', function () {\n            if (!$$.config) {\n                return;\n            } // chart is destroyed\n            if ($$.hasArcType()) {\n                return;\n            }\n            mouseout();\n        }).on('mousemove', function () {\n            var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            var mouse, closest, sameXData, selectedData;\n\n            if ($$.dragging) {\n                return;\n            } // do nothing when dragging\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n            if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n                config.data_onmouseout.call($$.api, $$.mouseover);\n                $$.mouseover = undefined;\n            }\n\n            if (!closest) {\n                mouseout();\n                return;\n            }\n\n            if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n                sameXData = [closest];\n            } else {\n                sameXData = $$.filterByX(targetsToShow, closest.x);\n            }\n\n            // show tooltip when cursor is close to some point\n            selectedData = sameXData.map(function (d) {\n                return $$.addName(d);\n            });\n            $$.showTooltip(selectedData, this);\n\n            // expand points\n            if (config.point_focus_expand_enabled) {\n                $$.expandCircles(closest.index, closest.id, true);\n            }\n            $$.expandBars(closest.index, closest.id, true);\n\n            // Show xgrid focus line\n            $$.showXGridFocus(selectedData);\n\n            // Show cursor as pointer if point is close to mouse position\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n                if (!$$.mouseover) {\n                    config.data_onmouseover.call($$.api, closest);\n                    $$.mouseover = closest;\n                }\n            }\n        }).on('click', function () {\n            var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            var mouse, closest;\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n            if (!closest) {\n                return;\n            }\n            // select if selection enabled\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n                    if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n                        $$.toggleShape(this, closest, closest.index);\n                        $$.config.data_onclick.call($$.api, closest, this);\n                    }\n                });\n            }\n        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n            $$.drag(d3.mouse(this));\n        }).on('dragstart', function () {\n            $$.dragstart(d3.mouse(this));\n        }).on('dragend', function () {\n            $$.dragend();\n        }) : function () {});\n    };\n    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n        var $$ = this,\n            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n            eventRect = $$.main.select(selector).node(),\n            box = eventRect.getBoundingClientRect(),\n            x = box.left + (mouse ? mouse[0] : 0),\n            y = box.top + (mouse ? mouse[1] : 0),\n            event = document.createEvent(\"MouseEvents\");\n\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\n        eventRect.dispatchEvent(event);\n    };\n\n    c3_chart_internal_fn.initLegend = function () {\n        var $$ = this;\n        $$.legendItemTextBox = {};\n        $$.legendHasRendered = false;\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n        if (!$$.config.legend_show) {\n            $$.legend.style('visibility', 'hidden');\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n            return;\n        }\n        // MEMO: call here to update legend box and tranlate for all\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n        $$.updateLegendWithDefaults();\n    };\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n        var $$ = this;\n        $$.updateLegend($$.mapToIds($$.data.targets), { withTransform: false, withTransitionForTransform: false, withTransition: false });\n    };\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n        var $$ = this,\n            config = $$.config,\n            insetLegendPosition = {\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n        };\n\n        $$.margin3 = {\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n            right: NaN,\n            bottom: 0,\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n        };\n    };\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\n        var $$ = this;\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n    };\n    c3_chart_internal_fn.updateLegendStep = function (step) {\n        this.legendStep = step;\n    };\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n        this.legendItemWidth = w;\n    };\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n        this.legendItemHeight = h;\n    };\n    c3_chart_internal_fn.getLegendWidth = function () {\n        var $$ = this;\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n    };\n    c3_chart_internal_fn.getLegendHeight = function () {\n        var $$ = this,\n            h = 0;\n        if ($$.config.legend_show) {\n            if ($$.isLegendRight) {\n                h = $$.currentHeight;\n            } else {\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n            }\n        }\n        return h;\n    };\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n    };\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n    };\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n        var $$ = this;\n        targetIds = $$.mapToTargetIds(targetIds);\n        $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {\n            return targetIds.indexOf(id) >= 0;\n        }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {\n            var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n            return opacity.call($$, $$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.revertLegend = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {\n            return $$.opacityForLegend(d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.showLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (!config.legend_show) {\n            config.legend_show = true;\n            $$.legend.style('visibility', 'visible');\n            if (!$$.legendHasRendered) {\n                $$.updateLegendWithDefaults();\n            }\n        }\n        $$.removeHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {\n            return $$.opacityForLegend($$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (config.legend_show && isEmpty(targetIds)) {\n            config.legend_show = false;\n            $$.legend.style('visibility', 'hidden');\n        }\n        $$.addHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');\n    };\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n        this.legendItemTextBox = {};\n    };\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n        var $$ = this,\n            config = $$.config;\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n        var paddingTop = 4,\n            paddingRight = 10,\n            maxWidth = 0,\n            maxHeight = 0,\n            posMin = 10,\n            tileWidth = config.legend_item_tile_width + 5;\n        var l,\n            totalLength = 0,\n            offsets = {},\n            widths = {},\n            heights = {},\n            margins = [0],\n            steps = {},\n            step = 0;\n        var withTransition, withTransitionForTransform;\n        var texts, rects, tiles, background;\n\n        // Skip elements when their name is set to null\n        targetIds = targetIds.filter(function (id) {\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n        });\n\n        options = options || {};\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n        function getTextBox(textElement, id) {\n            if (!$$.legendItemTextBox[id]) {\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n            }\n            return $$.legendItemTextBox[id];\n        }\n\n        function updatePositions(textElement, id, index) {\n            var reset = index === 0,\n                isLast = index === targetIds.length - 1,\n                box = getTextBox(textElement, id),\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n                itemHeight = box.height + paddingTop,\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n                margin,\n                maxLength;\n\n            // MEMO: care about condifion of step, totalLength\n            function updateValues(id, withoutStep) {\n                if (!withoutStep) {\n                    margin = (areaLength - totalLength - itemLength) / 2;\n                    if (margin < posMin) {\n                        margin = (areaLength - itemLength) / 2;\n                        totalLength = 0;\n                        step++;\n                    }\n                }\n                steps[id] = step;\n                margins[step] = $$.isLegendInset ? 10 : margin;\n                offsets[id] = totalLength;\n                totalLength += itemLength;\n            }\n\n            if (reset) {\n                totalLength = 0;\n                step = 0;\n                maxWidth = 0;\n                maxHeight = 0;\n            }\n\n            if (config.legend_show && !$$.isLegendToShow(id)) {\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n                return;\n            }\n\n            widths[id] = itemWidth;\n            heights[id] = itemHeight;\n\n            if (!maxWidth || itemWidth >= maxWidth) {\n                maxWidth = itemWidth;\n            }\n            if (!maxHeight || itemHeight >= maxHeight) {\n                maxHeight = itemHeight;\n            }\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n            if (config.legend_equally) {\n                Object.keys(widths).forEach(function (id) {\n                    widths[id] = maxWidth;\n                });\n                Object.keys(heights).forEach(function (id) {\n                    heights[id] = maxHeight;\n                });\n                margin = (areaLength - maxLength * targetIds.length) / 2;\n                if (margin < posMin) {\n                    totalLength = 0;\n                    step = 0;\n                    targetIds.forEach(function (id) {\n                        updateValues(id);\n                    });\n                } else {\n                    updateValues(id, true);\n                }\n            } else {\n                updateValues(id);\n            }\n        }\n\n        if ($$.isLegendInset) {\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n            $$.updateLegendStep(step);\n        }\n\n        if ($$.isLegendRight) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else if ($$.isLegendInset) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id] + 10;\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else {\n            xForLegend = function xForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return maxHeight * steps[id];\n            };\n        }\n        xForLegendText = function xForLegendText(id, i) {\n            return xForLegend(id, i) + 4 + config.legend_item_tile_width;\n        };\n        yForLegendText = function yForLegendText(id, i) {\n            return yForLegend(id, i) + 9;\n        };\n        xForLegendRect = function xForLegendRect(id, i) {\n            return xForLegend(id, i);\n        };\n        yForLegendRect = function yForLegendRect(id, i) {\n            return yForLegend(id, i) - 5;\n        };\n        x1ForLegendTile = function x1ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2;\n        };\n        x2ForLegendTile = function x2ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2 + config.legend_item_tile_width;\n        };\n        yForLegendTile = function yForLegendTile(id, i) {\n            return yForLegend(id, i) + 4;\n        };\n\n        // Define g for legend area\n        l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {\n            return $$.generateClass(CLASS.legendItem, id);\n        }).style('visibility', function (id) {\n            return $$.isLegendToShow(id) ? 'visible' : 'hidden';\n        }).style('cursor', 'pointer').on('click', function (id) {\n            if (config.legend_item_onclick) {\n                config.legend_item_onclick.call($$, id);\n            } else {\n                if ($$.d3.event.altKey) {\n                    $$.api.hide();\n                    $$.api.show(id);\n                } else {\n                    $$.api.toggle(id);\n                    $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n                }\n            }\n        }).on('mouseover', function (id) {\n            if (config.legend_item_onmouseover) {\n                config.legend_item_onmouseover.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n                if (!$$.transiting && $$.isTargetToShow(id)) {\n                    $$.api.focus(id);\n                }\n            }\n        }).on('mouseout', function (id) {\n            if (config.legend_item_onmouseout) {\n                config.legend_item_onmouseout.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n                $$.api.revert();\n            }\n        });\n        l.append('text').text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }).each(function (id, i) {\n            updatePositions(this, id, i);\n        }).style(\"pointer-events\", \"none\").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n        l.append('rect').attr(\"class\", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n        l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style(\"pointer-events\", \"none\").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height);\n\n        // Set background for inset legend\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n            background = $$.legend.insert('g', '.' + CLASS.legendItem).attr(\"class\", CLASS.legendBackground).append('rect');\n        }\n\n        texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }) // MEMO: needed for update\n        .each(function (id, i) {\n            updatePositions(this, id, i);\n        });\n        (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);\n\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\n        (withTransition ? rects.transition() : rects).attr('width', function (id) {\n            return widths[id];\n        }).attr('height', function (id) {\n            return heights[id];\n        }).attr('x', xForLegendRect).attr('y', yForLegendRect);\n\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\n        (withTransition ? tiles.transition() : tiles).style('stroke', $$.levelColor ? function (id) {\n            return $$.levelColor($$.cache[id].values[0].value);\n        } : $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);\n\n        if (background) {\n            (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);\n        }\n\n        // toggle legend state\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {\n            return !$$.isTargetToShow(id);\n        });\n\n        // Update all to reflect change of legend\n        $$.updateLegendItemWidth(maxWidth);\n        $$.updateLegendItemHeight(maxHeight);\n        $$.updateLegendStep(step);\n        // Update size and scale\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(withTransitionForTransform, transitions);\n        $$.legendHasRendered = true;\n    };\n\n    c3_chart_internal_fn.initRegion = function () {\n        var $$ = this;\n        $$.region = $$.main.append('g').attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.regions);\n    };\n    c3_chart_internal_fn.updateRegion = function (duration) {\n        var $$ = this,\n            config = $$.config;\n\n        // hide if arc type\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);\n        $$.mainRegion.enter().append('g').append('rect').style(\"fill-opacity\", 0);\n        $$.mainRegion.attr('class', $$.classRegion.bind($$));\n        $$.mainRegion.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawRegion = function (withTransition) {\n        var $$ = this,\n            regions = $$.mainRegion.selectAll('rect').each(function () {\n            // data is binded to g and it's not transferred to rect (child node) automatically,\n            // then data of each rect has to be updated manually.\n            // TODO: there should be more efficient way to solve this?\n            var parentData = $$.d3.select(this.parentNode).datum();\n            $$.d3.select(this).datum(parentData);\n        }),\n            x = $$.regionX.bind($$),\n            y = $$.regionY.bind($$),\n            w = $$.regionWidth.bind($$),\n            h = $$.regionHeight.bind($$);\n        return [(withTransition ? regions.transition() : regions).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h).style(\"fill-opacity\", function (d) {\n            return isValue(d.opacity) ? d.opacity : 0.1;\n        })];\n    };\n    c3_chart_internal_fn.regionX = function (d) {\n        var $$ = this,\n            config = $$.config,\n            xPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;\n        } else {\n            xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.regionY = function (d) {\n        var $$ = this,\n            config = $$.config,\n            yPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\n        } else {\n            yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;\n        }\n        return yPos;\n    };\n    c3_chart_internal_fn.regionWidth = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = $$.regionX(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;\n        } else {\n            end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.regionHeight = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = this.regionY(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;\n        } else {\n            end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.isRegionOnX = function (d) {\n        return !d.axis || d.axis === 'x';\n    };\n\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n    };\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n        var $$ = this,\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\n            _scale = domain ? scale.domain(domain) : scale,\n            key;\n        // Define customized scale if categorized axis\n        if ($$.isCategorized()) {\n            offset = offset || function () {\n                return 0;\n            };\n            scale = function scale(d, raw) {\n                var v = _scale(d) + offset(d);\n                return raw ? v : Math.ceil(v);\n            };\n        } else {\n            scale = function scale(d, raw) {\n                var v = _scale(d);\n                return raw ? v : Math.ceil(v);\n            };\n        }\n        // define functions\n        for (key in _scale) {\n            scale[key] = _scale[key];\n        }\n        scale.orgDomain = function () {\n            return _scale.domain();\n        };\n        // define custom domain() for categorized axis\n        if ($$.isCategorized()) {\n            scale.domain = function (domain) {\n                if (!arguments.length) {\n                    domain = this.orgDomain();\n                    return [domain[0], domain[1] + 1];\n                }\n                _scale.domain(domain);\n                return scale;\n            };\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getY = function (min, max, domain) {\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\n        if (domain) {\n            scale.domain(domain);\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n    };\n    c3_chart_internal_fn.getSubYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n    };\n    c3_chart_internal_fn.updateScales = function () {\n        var $$ = this,\n            config = $$.config,\n            forInit = !$$.x;\n        // update edges\n        $$.xMin = config.axis_rotated ? 1 : 0;\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\n        $$.yMax = config.axis_rotated ? $$.width : 1;\n        $$.subXMin = $$.xMin;\n        $$.subXMax = $$.xMax;\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n        // update scales\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\n            return $$.xAxis.tickOffset();\n        });\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\n            return d % 1 ? 0 : $$.subXAxis.tickOffset();\n        });\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n        // update axes\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n        // Set initialized scales to brush and zoom\n        if (!forInit) {\n            if ($$.brush) {\n                $$.brush.scale($$.subX);\n            }\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x);\n            }\n        }\n        // update for arc\n        if ($$.updateArc) {\n            $$.updateArc();\n        }\n    };\n\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n        var $$ = this,\n            config = $$.config,\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n            r = $$.pointSelectR.bind($$);\n        config.data_onselected.call($$.api, d, target.node());\n        // add selected-circle on low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr(\"class\", function () {\n            return $$.generateClass(CLASS.selectedCircle, i);\n        }).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"stroke\", function () {\n            return $$.color(d);\n        }).attr(\"r\", function (d) {\n            return $$.pointSelectR(d) * 1.4;\n        }).transition().duration(100).attr(\"r\", r);\n    };\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$.api, d, target.node());\n        // remove selected-circle from low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();\n    };\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n    };\n    c3_chart_internal_fn.selectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.d3.rgb($$.color(d)).brighter(0.75);\n            });\n        }\n    };\n    c3_chart_internal_fn.unselectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.color(d);\n            });\n        }\n    };\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n    };\n    c3_chart_internal_fn.getToggle = function (that, d) {\n        var $$ = this,\n            toggle;\n        if (that.nodeName === 'circle') {\n            if ($$.isStepType(d)) {\n                // circle is hidden in step chart, so treat as within the click area\n                toggle = function toggle() {}; // TODO: how to select step chart?\n            } else {\n                toggle = $$.togglePoint;\n            }\n        } else if (that.nodeName === 'path') {\n            toggle = $$.togglePath;\n        }\n        return toggle;\n    };\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            shape = d3.select(that),\n            isSelected = shape.classed(CLASS.SELECTED),\n            toggle = $$.getToggle(that, d).bind($$);\n\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n            if (!config.data_selection_multiple) {\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                    var shape = d3.select(this);\n                    if (shape.classed(CLASS.SELECTED)) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                });\n            }\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle(!isSelected, shape, d, i);\n        }\n    };\n\n    c3_chart_internal_fn.initBar = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n    };\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainBarUpdate,\n            mainBarEnter,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {\n            return classChartBar(d) + classFocus(d);\n        });\n        mainBarEnter = mainBarUpdate.enter().append('g').attr('class', classChartBar).style(\"pointer-events\", \"none\");\n        // Bars for each data\n        mainBarEnter.append('g').attr(\"class\", classBars).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n    };\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\n        var $$ = this,\n            barData = $$.barData.bind($$),\n            classBar = $$.classBar.bind($$),\n            initialOpacity = $$.initialOpacity.bind($$),\n            color = function color(d) {\n            return $$.color(d.id);\n        };\n        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);\n        $$.mainBar.enter().append('path').attr(\"class\", classBar).style(\"stroke\", color).style(\"fill\", color);\n        $$.mainBar.style(\"opacity\", initialOpacity);\n        $$.mainBar.exit().transition().duration(durationForExit).remove();\n    };\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n        return [(withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar).attr('d', drawBar).style(\"stroke\", this.color).style(\"fill\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n        var $$ = this,\n            config = $$.config,\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n    };\n    c3_chart_internal_fn.getBars = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n        var $$ = this;\n        if (reset) {\n            $$.unexpandBars();\n        }\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n    };\n    c3_chart_internal_fn.unexpandBars = function (i) {\n        var $$ = this;\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\n    };\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n        return function (d, i) {\n            // 4 points that make a bar\n            var points = getPoints(d, i);\n\n            // switch points if axis is rotated, not applicable for sub chart\n            var indexX = config.axis_rotated ? 1 : 0;\n            var indexY = config.axis_rotated ? 0 : 1;\n\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';\n\n            return path;\n        };\n    };\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n        var $$ = this,\n            axis = isSub ? $$.subXAxis : $$.xAxis,\n            barTargetsNum = barIndices.__max__ + 1,\n            barW = $$.getBarW(axis, barTargetsNum),\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n            barY = $$.getShapeY(!!isSub),\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n            barSpaceOffset = barW * ($$.config.bar_space / 2),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = barOffset(d, i) || y0,\n                // offset is for stacked bar chart\n            posX = barX(d),\n                posY = barY(d);\n            // fix posY not to overflow opposite quadrant\n            if ($$.config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 4 points that make a bar\n            return [[posX + barSpaceOffset, offset], [posX + barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, offset]];\n        };\n    };\n    c3_chart_internal_fn.isWithinBar = function (that) {\n        var mouse = this.d3.mouse(that),\n            box = that.getBoundingClientRect(),\n            seg0 = that.pathSegList.getItem(0),\n            seg1 = that.pathSegList.getItem(1),\n            x = Math.min(seg0.x, seg1.x),\n            y = Math.min(seg0.y, seg1.y),\n            w = box.width,\n            h = box.height,\n            offset = 2,\n            sx = x - offset,\n            ex = x + w + offset,\n            sy = y + h + offset,\n            ey = y - offset;\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n    };\n\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n        var $$ = this,\n            config = $$.config,\n            indices = {},\n            i = 0,\n            j,\n            k;\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n            for (j = 0; j < config.data_groups.length; j++) {\n                if (config.data_groups[j].indexOf(d.id) < 0) {\n                    continue;\n                }\n                for (k = 0; k < config.data_groups[j].length; k++) {\n                    if (config.data_groups[j][k] in indices) {\n                        indices[d.id] = indices[config.data_groups[j][k]];\n                        break;\n                    }\n                }\n            }\n            if (isUndefined(indices[d.id])) {\n                indices[d.id] = i++;\n            }\n        });\n        indices.__max__ = i - 1;\n        return indices;\n    };\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n        var $$ = this,\n            scale = isSub ? $$.subX : $$.x;\n        return function (d) {\n            var index = d.id in indices ? indices[d.id] : 0;\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n        };\n    };\n    c3_chart_internal_fn.getShapeY = function (isSub) {\n        var $$ = this;\n        return function (d) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n            return scale(d.value);\n        };\n    };\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n        var $$ = this,\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n            targetIds = targets.map(function (t) {\n            return t.id;\n        });\n        return function (d, i) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n                y0 = scale(0),\n                offset = y0;\n            targets.forEach(function (t) {\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) {\n                    return;\n                }\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                    // check if the x values line up\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {\n                        // \"+\" for timeseries\n                        // if not, try to find the value that does line up\n                        i = -1;\n                        values.forEach(function (v, j) {\n                            if (v.x === d.x) {\n                                i = j;\n                            }\n                        });\n                    }\n                    if (i in values && values[i].value * d.value >= 0) {\n                        offset += scale(values[i].value) - y0;\n                    }\n                }\n            });\n            return offset;\n        };\n    };\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\n        var $$ = this,\n            shape = $$.d3.select(that),\n            isWithin;\n        if (!$$.isTargetToShow(d.id)) {\n            isWithin = false;\n        } else if (that.nodeName === 'circle') {\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n        } else if (that.nodeName === 'path') {\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n        }\n        return isWithin;\n    };\n\n    c3_chart_internal_fn.getInterpolate = function (d) {\n        var $$ = this,\n            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n    };\n\n    c3_chart_internal_fn.initLine = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n    };\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainLineUpdate,\n            mainLineEnter,\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$),\n            classCircles = $$.classCircles.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {\n            return classChartLine(d) + classFocus(d);\n        });\n        mainLineEnter = mainLineUpdate.enter().append('g').attr('class', classChartLine).style('opacity', 0).style(\"pointer-events\", \"none\");\n        // Lines for each data\n        mainLineEnter.append('g').attr(\"class\", classLines);\n        // Areas\n        mainLineEnter.append('g').attr('class', classAreas);\n        // Circles for each data point on lines\n        mainLineEnter.append('g').attr(\"class\", function (d) {\n            return $$.generateClass(CLASS.selectedCircles, d.id);\n        });\n        mainLineEnter.append('g').attr(\"class\", classCircles).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n        // Update date for selected circles\n        targets.forEach(function (t) {\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n                d.value = t.values[d.index].value;\n            });\n        });\n        // MEMO: can not keep same color...\n        //mainLineUpdate.exit().remove();\n    };\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\n        var $$ = this;\n        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        $$.mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style(\"stroke\", $$.color);\n        $$.mainLine.style(\"opacity\", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {\n            return $$.isStepType(d) ? 'crispEdges' : '';\n        }).attr('transform', null);\n        $$.mainLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n        return [(withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine).attr(\"d\", drawLine).style(\"stroke\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            line = $$.d3.svg.line(),\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            yValue = function yValue(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n        if (!config.line_connectNull) {\n            line = line.defined(function (d) {\n                return d.value != null;\n            });\n        }\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x = isSub ? $$.x : $$.subX,\n                y = yScaleGetter.call($$, d.id),\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isLineType(d)) {\n                if (config.data_regions[d.id]) {\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n                } else {\n                    if ($$.isStepType(d)) {\n                        values = $$.convertValuesToStep(values);\n                    }\n                    path = line.interpolate($$.getInterpolate(d))(values);\n                }\n            } else {\n                if (values[0]) {\n                    x0 = x(values[0].x);\n                    y0 = y(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            lineTargetsNum = lineIndices.__max__ + 1,\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = lineOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the line position\n            return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n        var $$ = this,\n            config = $$.config,\n            prev = -1,\n            i,\n            j,\n            s = \"M\",\n            sWithRegion,\n            xp,\n            yp,\n            dx,\n            dy,\n            dd,\n            diff,\n            diffx2,\n            xOffset = $$.isCategorized() ? 0.5 : 0,\n            xValue,\n            yValue,\n            regions = [];\n\n        function isWithinRegions(x, regions) {\n            var i;\n            for (i = 0; i < regions.length; i++) {\n                if (regions[i].start < x && x <= regions[i].end) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        // Check start/end of regions\n        if (isDefined(_regions)) {\n            for (i = 0; i < _regions.length; i++) {\n                regions[i] = {};\n                if (isUndefined(_regions[i].start)) {\n                    regions[i].start = d[0].x;\n                } else {\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n                }\n                if (isUndefined(_regions[i].end)) {\n                    regions[i].end = d[d.length - 1].x;\n                } else {\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n                }\n            }\n        }\n\n        // Set scales\n        xValue = config.axis_rotated ? function (d) {\n            return y(d.value);\n        } : function (d) {\n            return x(d.x);\n        };\n        yValue = config.axis_rotated ? function (d) {\n            return x(d.x);\n        } : function (d) {\n            return y(d.value);\n        };\n\n        // Define svg generator function for region\n        function generateM(points) {\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n        }\n        if ($$.isTimeSeries()) {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var x0 = d0.x.getTime(),\n                    x_diff = d1.x - d0.x,\n                    xv0 = new Date(x0 + x_diff * j),\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\n                    points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n                } else {\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        } else {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n                } else {\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        }\n\n        // Generate\n        for (i = 0; i < d.length; i++) {\n\n            // Draw as normal\n            if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n            }\n            // Draw with region // TODO: Fix for horizotal charts\n            else {\n                    xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                    yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                    dx = x(d[i].x) - x(d[i - 1].x);\n                    dy = y(d[i].value) - y(d[i - 1].value);\n                    dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                    diff = 2 / dd;\n                    diffx2 = diff * 2;\n\n                    for (j = diff; j <= 1; j += diffx2) {\n                        s += sWithRegion(d[i - 1], d[i], j, diff);\n                    }\n                }\n            prev = d[i].x;\n        }\n\n        return s;\n    };\n\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        $$.mainArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        $$.mainArea.style(\"opacity\", $$.orgAreaOpacity);\n        $$.mainArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n        return [(withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea).attr(\"d\", drawArea).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity)];\n    };\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            area = $$.d3.svg.area(),\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            value0 = function value0(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n        },\n            value1 = function value1(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n        if (!config.line_connectNull) {\n            area = area.defined(function (d) {\n                return d.value !== null;\n            });\n        }\n\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isAreaType(d)) {\n                if ($$.isStepType(d)) {\n                    values = $$.convertValuesToStep(values);\n                }\n                path = area.interpolate($$.getInterpolate(d))(values);\n            } else {\n                if (values[0]) {\n                    x0 = $$.x(values[0].x);\n                    y0 = $$.getYScale(d.id)(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.getAreaBaseValue = function () {\n        return 0;\n    };\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            areaTargetsNum = areaIndices.__max__ + 1,\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = areaOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the area position\n            return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, offset] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.updateCircle = function () {\n        var $$ = this;\n        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));\n        $$.mainCircle.enter().append(\"circle\").attr(\"class\", $$.classCircle.bind($$)).attr(\"r\", $$.pointR.bind($$)).style(\"fill\", $$.color);\n        $$.mainCircle.style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n        $$.mainCircle.exit().remove();\n    };\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n        return [(withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle).style('opacity', this.opacityForCircle.bind(this)).style(\"fill\", this.color).attr(\"cx\", cx).attr(\"cy\", cy), (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles).attr(\"cx\", cx).attr(\"cy\", cy)];\n    };\n    c3_chart_internal_fn.circleX = function (d) {\n        return d.x || d.x === 0 ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.updateCircleY = function () {\n        var $$ = this,\n            lineIndices,\n            getPoints;\n        if ($$.config.data_groups.length > 0) {\n            lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);\n            $$.circleY = function (d, i) {\n                return getPoints(d, i)[0][1];\n            };\n        } else {\n            $$.circleY = function (d) {\n                return $$.getYScale(d.id)(d.value);\n            };\n        }\n    };\n    c3_chart_internal_fn.getCircles = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n        var $$ = this,\n            r = $$.pointExpandedR.bind($$);\n        if (reset) {\n            $$.unexpandCircles();\n        }\n        $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);\n    };\n    c3_chart_internal_fn.unexpandCircles = function (i) {\n        var $$ = this,\n            r = $$.pointR.bind($$);\n        $$.getCircles(i).filter(function () {\n            return $$.d3.select(this).classed(CLASS.EXPANDED);\n        }).classed(CLASS.EXPANDED, false).attr('r', r);\n    };\n    c3_chart_internal_fn.pointR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;\n    };\n    c3_chart_internal_fn.pointExpandedR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        if (config.point_focus_expand_enabled) {\n            return isFunction(config.point_focus_expand_r) ? config.point_focus_expand_r(d) : config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75;\n        } else {\n            return $$.pointR(d);\n        }\n    };\n    c3_chart_internal_fn.pointSelectR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;\n    };\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n        var d3 = this.d3,\n            mouse = d3.mouse(that),\n            d3_this = d3.select(that),\n            cx = +d3_this.attr(\"cx\"),\n            cy = +d3_this.attr(\"cy\");\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n    };\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n    };\n\n    c3_chart_internal_fn.getCurrentWidth = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.size_width ? config.size_width : $$.getParentWidth();\n    };\n    c3_chart_internal_fn.getCurrentHeight = function () {\n        var $$ = this,\n            config = $$.config,\n            h = config.size_height ? config.size_height : $$.getParentHeight();\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\n    };\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n        var $$ = this,\n            config = $$.config,\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\n        if ($$.title && $$.title.node()) {\n            padding += $$.getTitlePadding();\n        }\n        return padding;\n    };\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n        var config = this.config;\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n    };\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config;\n        if (isValue(config.padding_left)) {\n            return config.padding_left;\n        } else if (config.axis_rotated) {\n            return !config.axis_x_show || config.axis_x_inner ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n        } else if (!config.axis_y_show || config.axis_y_inner) {\n            // && !config.axis_rotated\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n        }\n    };\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n        var $$ = this,\n            config = $$.config,\n            defaultPadding = 10,\n            legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n        if (isValue(config.padding_right)) {\n            return config.padding_right + 1; // 1 is needed not to hide tick line\n        } else if (config.axis_rotated) {\n            return defaultPadding + legendWidthOnRight;\n        } else if (!config.axis_y2_show || config.axis_y2_inner) {\n            // && !config.axis_rotated\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n        }\n    };\n\n    c3_chart_internal_fn.getParentRectValue = function (key) {\n        var parent = this.selectChart.node(),\n            v;\n        while (parent && parent.tagName !== 'BODY') {\n            try {\n                v = parent.getBoundingClientRect()[key];\n            } catch (e) {\n                if (key === 'width') {\n                    // In IE in certain cases getBoundingClientRect\n                    // will cause an \"unspecified error\"\n                    v = parent.offsetWidth;\n                }\n            }\n            if (v) {\n                break;\n            }\n            parent = parent.parentNode;\n        }\n        return v;\n    };\n    c3_chart_internal_fn.getParentWidth = function () {\n        return this.getParentRectValue('width');\n    };\n    c3_chart_internal_fn.getParentHeight = function () {\n        var h = this.selectChart.style('height');\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n    };\n\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config,\n            hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : { right: 0 },\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\n            hasArc = $$.hasArcType(),\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n        return svgLeft > 0 ? svgLeft : 0;\n    };\n\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n        var $$ = this,\n            position = $$.axis.getLabelPositionById(id);\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n    };\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n        var $$ = this,\n            config = $$.config,\n            h = 30;\n        if (axisId === 'x' && !config.axis_x_show) {\n            return 8;\n        }\n        if (axisId === 'x' && config.axis_x_height) {\n            return config.axis_x_height;\n        }\n        if (axisId === 'y' && !config.axis_y_show) {\n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\n        }\n        if (axisId === 'y2' && !config.axis_y2_show) {\n            return $$.rotated_padding_top;\n        }\n        // Calculate x axis height when tick rotated\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n        }\n        // Calculate y axis height when tick rotated\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n        }\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n    };\n\n    c3_chart_internal_fn.getEventRectWidth = function () {\n        return Math.max(0, this.xAxis.tickInterval());\n    };\n\n    c3_chart_internal_fn.initBrush = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.brush = d3.svg.brush().on(\"brush\", function () {\n            $$.redrawForBrush();\n        });\n        $$.brush.update = function () {\n            if ($$.context) {\n                $$.context.select('.' + CLASS.brush).call(this);\n            }\n            return this;\n        };\n        $$.brush.scale = function (scale) {\n            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n    };\n    c3_chart_internal_fn.initSubchart = function () {\n        var $$ = this,\n            config = $$.config,\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n            visibility = config.subchart_show ? 'visible' : 'hidden';\n\n        context.style('visibility', visibility);\n\n        // Define g for chart area\n        context.append('g').attr(\"clip-path\", $$.clipPathForSubchart).attr('class', CLASS.chart);\n\n        // Define g for bar chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n\n        // Define g for line chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n\n        // Add extent rect for Brush\n        context.append(\"g\").attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.brush).call($$.brush);\n\n        // ATTENTION: This must be called AFTER chart added\n        // Add Axis\n        $$.axes.subx = context.append(\"g\").attr(\"class\", CLASS.axisX).attr(\"transform\", $$.getTranslate('subx')).attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis).style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n    };\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n        var $$ = this,\n            context = $$.context,\n            config = $$.config,\n            contextLineEnter,\n            contextLineUpdate,\n            contextBarEnter,\n            contextBarUpdate,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$);\n\n        if (config.subchart_show) {\n            //-- Bar --//\n            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', classChartBar);\n            contextBarEnter = contextBarUpdate.enter().append('g').style('opacity', 0).attr('class', classChartBar);\n            // Bars for each data\n            contextBarEnter.append('g').attr(\"class\", classBars);\n\n            //-- Line --//\n            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', classChartLine);\n            contextLineEnter = contextLineUpdate.enter().append('g').style('opacity', 0).attr('class', classChartLine);\n            // Lines for each data\n            contextLineEnter.append(\"g\").attr(\"class\", classLines);\n            // Area\n            contextLineEnter.append(\"g\").attr(\"class\", classAreas);\n\n            //-- Brush --//\n            context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n        }\n    };\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));\n        $$.contextBar.enter().append('path').attr(\"class\", $$.classBar.bind($$)).style(\"stroke\", 'none').style(\"fill\", $$.color);\n        $$.contextBar.style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        $$.contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);\n        $$.contextLine.style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr(\"d\", drawLineOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        $$.contextArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        $$.contextArea.style(\"opacity\", 0);\n        $$.contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr(\"d\", drawAreaOnSub).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity);\n    };\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            drawAreaOnSub,\n            drawBarOnSub,\n            drawLineOnSub;\n\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n        // subchart\n        if (config.subchart_show) {\n            // reflect main chart to extent on subchart if zoomed\n            if (d3.event && d3.event.type === 'zoom') {\n                $$.brush.extent($$.x.orgDomain()).update();\n            }\n            // update subchart elements if needed\n            if (withSubchart) {\n\n                // extent rect\n                if (!$$.brush.empty()) {\n                    $$.brush.extent($$.x.orgDomain()).update();\n                }\n                // setup drawer - MEMO: this must be called after axis updated\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n                $$.updateBarForSubchart(duration);\n                $$.updateLineForSubchart(duration);\n                $$.updateAreaForSubchart(duration);\n\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawForBrush = function () {\n        var $$ = this,\n            x = $$.x;\n        $$.redraw({\n            withTransition: false,\n            withY: $$.config.zoom_rescale,\n            withSubchart: false,\n            withUpdateXDomain: true,\n            withDimension: false\n        });\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n    };\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n        var $$ = this,\n            subXAxis;\n        if (transitions && transitions.axisSubX) {\n            subXAxis = transitions.axisSubX;\n        } else {\n            subXAxis = $$.context.select('.' + CLASS.axisX);\n            if (withTransition) {\n                subXAxis = subXAxis.transition();\n            }\n        }\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n    };\n    c3_chart_internal_fn.getDefaultExtent = function () {\n        var $$ = this,\n            config = $$.config,\n            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n        if ($$.isTimeSeries()) {\n            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n        }\n        return extent;\n    };\n\n    c3_chart_internal_fn.initText = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartTexts);\n        $$.mainText = $$.d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n        var $$ = this,\n            mainTextUpdate,\n            mainTextEnter,\n            classChartText = $$.classChartText.bind($$),\n            classTexts = $$.classTexts.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets).attr('class', function (d) {\n            return classChartText(d) + classFocus(d);\n        });\n        mainTextEnter = mainTextUpdate.enter().append('g').attr('class', classChartText).style('opacity', 0).style(\"pointer-events\", \"none\");\n        mainTextEnter.append('g').attr('class', classTexts);\n    };\n    c3_chart_internal_fn.updateText = function (durationForExit) {\n        var $$ = this,\n            config = $$.config,\n            barOrLineData = $$.barOrLineData.bind($$),\n            classText = $$.classText.bind($$);\n        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);\n        $$.mainText.enter().append('text').attr(\"class\", classText).attr('text-anchor', function (d) {\n            return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';\n        }).style(\"stroke\", 'none').style(\"fill\", function (d) {\n            return $$.color(d);\n        }).style(\"fill-opacity\", 0);\n        $$.mainText.text(function (d, i, j) {\n            return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\n        });\n        $$.mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n        return [(withTransition ? this.mainText.transition() : this.mainText).attr('x', xForText).attr('y', yForText).style(\"fill\", this.color).style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))];\n    };\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            font = this.d3.select(element).style('font'),\n            rect;\n        svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : \"\", true).style('font', font).text(text).each(function () {\n            rect = this.getBoundingClientRect();\n        });\n        dummy.remove();\n        return rect;\n    };\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n        var $$ = this,\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n            getter = forX ? $$.getXForText : $$.getYForText;\n        return function (d, i) {\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n            return getter.call($$, getPoints(d, i), d, this);\n        };\n    };\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            xPos,\n            padding;\n        if ($$.config.axis_rotated) {\n            padding = $$.isBarType(d) ? 4 : 6;\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n        } else {\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null) {\n            if (xPos > $$.width) {\n                xPos = $$.width - box.width;\n            } else if (xPos < 0) {\n                xPos = 4;\n            }\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            yPos;\n        if ($$.config.axis_rotated) {\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n        } else {\n            yPos = points[2][1];\n            if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {\n                yPos += box.height;\n                if ($$.isBarType(d) && $$.isSafari()) {\n                    yPos -= 3;\n                } else if (!$$.isBarType(d) && $$.isChrome()) {\n                    yPos += 3;\n                }\n            } else {\n                yPos += $$.isBarType(d) ? -3 : -6;\n            }\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null && !$$.config.axis_rotated) {\n            if (yPos < box.height) {\n                yPos = box.height;\n            } else if (yPos > this.height) {\n                yPos = this.height - 4;\n            }\n        }\n        return yPos;\n    };\n\n    c3_chart_internal_fn.initTitle = function () {\n        var $$ = this;\n        $$.title = $$.svg.append(\"text\").text($$.config.title_text).attr(\"class\", $$.CLASS.title);\n    };\n    c3_chart_internal_fn.redrawTitle = function () {\n        var $$ = this;\n        $$.title.attr(\"x\", $$.xForTitle.bind($$)).attr(\"y\", $$.yForTitle.bind($$));\n    };\n    c3_chart_internal_fn.xForTitle = function () {\n        var $$ = this,\n            config = $$.config,\n            position = config.title_position || 'left',\n            x;\n        if (position.indexOf('right') >= 0) {\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n        } else if (position.indexOf('center') >= 0) {\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n        } else {\n            // left\n            x = config.title_padding.left;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.yForTitle = function () {\n        var $$ = this;\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n    };\n    c3_chart_internal_fn.getTitlePadding = function () {\n        var $$ = this;\n        return $$.yForTitle() + $$.config.title_padding.bottom;\n    };\n\n    c3_chart_internal_fn.initTooltip = function () {\n        var $$ = this,\n            config = $$.config,\n            i;\n        $$.tooltip = $$.selectChart.style(\"position\", \"relative\").append(\"div\").attr('class', CLASS.tooltipContainer).style(\"position\", \"absolute\").style(\"pointer-events\", \"none\").style(\"display\", \"none\");\n        // Show tooltip if needed\n        if (config.tooltip_init_show) {\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                    if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\n                        break;\n                    }\n                }\n                config.tooltip_init_x = i;\n            }\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n                return $$.addName(d.values[config.tooltip_init_x]);\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top).style(\"left\", config.tooltip_init_position.left).style(\"display\", \"block\");\n        }\n    };\n    c3_chart_internal_fn.getTooltipSortFunction = function () {\n        var $$ = this,\n            config = $$.config;\n\n        if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\n            // if data are not grouped or if an order is specified\n            // for the tooltip values we sort them by their values\n\n            var order = config.tooltip_order;\n            if (order === undefined) {\n                order = config.data_order;\n            }\n\n            var valueOf = function valueOf(obj) {\n                return obj ? obj.value : null;\n            };\n\n            // if data are not grouped, we sort them by their value\n            if (isString(order) && order.toLowerCase() === 'asc') {\n                return function (a, b) {\n                    return valueOf(a) - valueOf(b);\n                };\n            } else if (isString(order) && order.toLowerCase() === 'desc') {\n                return function (a, b) {\n                    return valueOf(b) - valueOf(a);\n                };\n            } else if (isFunction(order)) {\n\n                // if the function is from data_order we need\n                // to wrap the returned function in order to format\n                // the sorted value to the expected format\n\n                var sortFunction = order;\n\n                if (config.tooltip_order === undefined) {\n                    sortFunction = function sortFunction(a, b) {\n                        return order(a ? {\n                            id: a.id,\n                            values: [a]\n                        } : null, b ? {\n                            id: b.id,\n                            values: [b]\n                        } : null);\n                    };\n                }\n\n                return sortFunction;\n            } else if (isArray(order)) {\n                return function (a, b) {\n                    return order.indexOf(a.id) - order.indexOf(b.id);\n                };\n            }\n        } else {\n            // if data are grouped, we follow the order of grouped targets\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n                return i.id;\n            });\n\n            // if it was either asc or desc we need to invert the order\n            // returned by orderTargets\n            if ($$.isOrderAsc() || $$.isOrderDesc()) {\n                ids = ids.reverse();\n            }\n\n            return function (a, b) {\n                return ids.indexOf(a.id) - ids.indexOf(b.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n        var $$ = this,\n            config = $$.config,\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n            nameFormat = config.tooltip_format_name || function (name) {\n            return name;\n        },\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\n            text,\n            i,\n            title,\n            value,\n            name,\n            bgcolor;\n\n        var tooltipSortFunction = this.getTooltipSortFunction();\n        if (tooltipSortFunction) {\n            d.sort(tooltipSortFunction);\n        }\n\n        for (i = 0; i < d.length; i++) {\n            if (!(d[i] && (d[i].value || d[i].value === 0))) {\n                continue;\n            }\n\n            if (!text) {\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n            }\n\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n            if (value !== undefined) {\n                // Skip elements when their name is set to null\n                if (d[i].name === null) {\n                    continue;\n                }\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n                text += \"<td class='value'>\" + value + \"</td>\";\n                text += \"</tr>\";\n            }\n        }\n        return text + \"</table>\";\n    };\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n        var forArc = $$.hasArcType(),\n            mouse = d3.mouse(element);\n        // Determin tooltip position\n        if (forArc) {\n            tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\n            tooltipTop = ($$.hasType('gauge') ? $$.height : $$.height / 2) + mouse[1] + 20;\n        } else {\n            svgLeft = $$.getSvgLeft(true);\n            if (config.axis_rotated) {\n                tooltipLeft = svgLeft + mouse[0] + 100;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\n            } else {\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = mouse[1] + 15;\n            }\n\n            if (tooltipRight > chartRight) {\n                // 20 is needed for Firefox to keep tooltip width\n                tooltipLeft -= tooltipRight - chartRight + 20;\n            }\n            if (tooltipTop + tHeight > $$.currentHeight) {\n                tooltipTop -= tHeight + 30;\n            }\n        }\n        if (tooltipTop < 0) {\n            tooltipTop = 0;\n        }\n        return { top: tooltipTop, left: tooltipLeft };\n    };\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n        var $$ = this,\n            config = $$.config;\n        var tWidth, tHeight, position;\n        var forArc = $$.hasArcType(),\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n        if (dataToShow.length === 0 || !config.tooltip_show) {\n            return;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n        // Get tooltip dimensions\n        tWidth = $$.tooltip.property('offsetWidth');\n        tHeight = $$.tooltip.property('offsetHeight');\n\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n        // Set tooltip\n        $$.tooltip.style(\"top\", position.top + \"px\").style(\"left\", position.left + 'px');\n    };\n    c3_chart_internal_fn.hideTooltip = function () {\n        this.tooltip.style(\"display\", \"none\");\n    };\n\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n        var $$ = this,\n            config = $$.config;\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\n            $$.withoutFadeIn[id] = type === config.data_types[id];\n            config.data_types[id] = type;\n        });\n        if (!targetIds) {\n            config.data_type = type;\n        }\n    };\n    c3_chart_internal_fn.hasType = function (type, targets) {\n        var $$ = this,\n            types = $$.config.data_types,\n            has = false;\n        targets = targets || $$.data.targets;\n        if (targets && targets.length) {\n            targets.forEach(function (target) {\n                var t = types[target.id];\n                if (t && t.indexOf(type) >= 0 || !t && type === 'line') {\n                    has = true;\n                }\n            });\n        } else if (Object.keys(types).length) {\n            Object.keys(types).forEach(function (id) {\n                if (types[id] === type) {\n                    has = true;\n                }\n            });\n        } else {\n            has = $$.config.data_type === type;\n        }\n        return has;\n    };\n    c3_chart_internal_fn.hasArcType = function (targets) {\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n    };\n    c3_chart_internal_fn.isLineType = function (d) {\n        var config = this.config,\n            id = isString(d) ? d : d.id;\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isStepType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isSplineType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isAreaType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isBarType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'bar';\n    };\n    c3_chart_internal_fn.isScatterType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'scatter';\n    };\n    c3_chart_internal_fn.isPieType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'pie';\n    };\n    c3_chart_internal_fn.isGaugeType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'gauge';\n    };\n    c3_chart_internal_fn.isDonutType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'donut';\n    };\n    c3_chart_internal_fn.isArcType = function (d) {\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n    };\n    c3_chart_internal_fn.lineData = function (d) {\n        return this.isLineType(d) ? [d] : [];\n    };\n    c3_chart_internal_fn.arcData = function (d) {\n        return this.isArcType(d.data) ? [d] : [];\n    };\n    /* not used\n     function scatterData(d) {\n     return isScatterType(d) ? d.values : [];\n     }\n     */\n    c3_chart_internal_fn.barData = function (d) {\n        return this.isBarType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.barOrLineData = function (d) {\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.isInterpolationType = function (type) {\n        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n    };\n\n    c3_chart_internal_fn.isSafari = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n    };\n    c3_chart_internal_fn.isChrome = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Chrome') >= 0;\n    };\n\n    c3_chart_internal_fn.initZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            startEvent;\n\n        $$.zoom = d3.behavior.zoom().on(\"zoomstart\", function () {\n            startEvent = d3.event.sourceEvent;\n            $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n            config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n        }).on(\"zoom\", function () {\n            $$.redrawForZoom.call($$);\n        }).on('zoomend', function () {\n            var event = d3.event.sourceEvent;\n            // if click, do nothing. otherwise, click interaction will be canceled.\n            if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n                return;\n            }\n            $$.redrawEventRect();\n            $$.updateZoom();\n            config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n        });\n        $$.zoom.scale = function (scale) {\n            return config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n        $$.zoom.orgScaleExtent = function () {\n            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n        };\n        $$.zoom.updateScaleExtent = function () {\n            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n                extent = this.orgScaleExtent();\n            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n            return this;\n        };\n    };\n    c3_chart_internal_fn.getZoomDomain = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateZoom = function () {\n        var $$ = this,\n            z = $$.config.zoom_enabled ? $$.zoom : function () {};\n        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n    };\n    c3_chart_internal_fn.redrawForZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            zoom = $$.zoom,\n            x = $$.x;\n        if (!config.zoom_enabled) {\n            return;\n        }\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n            return;\n        }\n        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n            x.domain(zoom.altDomain);\n            zoom.scale(x).updateScaleExtent();\n            return;\n        }\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n        }\n        $$.redraw({\n            withTransition: false,\n            withY: config.zoom_rescale,\n            withSubchart: false,\n            withEventRect: false,\n            withDimension: false\n        });\n        if (d3.event.sourceEvent.type === 'mousemove') {\n            $$.cancelClick = true;\n        }\n        config.zoom_onzoom.call($$.api, x.orgDomain());\n    };\n\n    return c3;\n\n})));\n\n\n/***/ }),\n\n/***/ 2287:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n\n/***/ 2288:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2289);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(1302)(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n/***/ }),\n\n/***/ 2289:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(1301)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".c3 svg{font:10px sans-serif;-webkit-tap-highlight-color:transparent}.c3 line,.c3 path{fill:none;stroke:#000}.c3 text{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.c3-bars path,.c3-event-rect,.c3-legend-item-tile,.c3-xgrid-focus,.c3-ygrid{shape-rendering:crispEdges}.c3-chart-arc path{stroke:#fff}.c3-chart-arc rect{stroke:#fff;stroke-width:1}.c3-chart-arc text{fill:#fff;font-size:13px}.c3-grid line{stroke:#aaa}.c3-grid text{fill:#aaa}.c3-xgrid,.c3-ygrid{stroke-dasharray:3 3}.c3-text.c3-empty{fill:gray;font-size:2em}.c3-line{stroke-width:1px}.c3-circle._expanded_{stroke-width:1px;stroke:#fff}.c3-selected-circle{fill:#fff;stroke-width:2px}.c3-bar{stroke-width:0}.c3-bar._expanded_{fill-opacity:1;fill-opacity:.75}.c3-target.c3-focused{opacity:1}.c3-target.c3-focused path.c3-line,.c3-target.c3-focused path.c3-step{stroke-width:2px}.c3-target.c3-defocused{opacity:.3!important}.c3-region{fill:#4682b4;fill-opacity:.1}.c3-brush .extent{fill-opacity:.1}.c3-legend-item{font-size:12px}.c3-legend-item-hidden{opacity:.15}.c3-legend-background{opacity:.75;fill:#fff;stroke:#d3d3d3;stroke-width:1}.c3-title{font:14px sans-serif}.c3-tooltip-container{z-index:10}.c3-tooltip{border-collapse:collapse;border-spacing:0;background-color:#fff;empty-cells:show;-webkit-box-shadow:7px 7px 12px -9px #777;box-shadow:7px 7px 12px -9px #777;opacity:.9}.c3-tooltip tr{border:1px solid #ccc}.c3-tooltip th{background-color:#aaa;font-size:14px;padding:2px 5px;text-align:left;color:#fff}.c3-tooltip td{font-size:13px;padding:3px 6px;background-color:#fff;border-left:1px dotted #999}.c3-tooltip td>span{display:inline-block;width:10px;height:10px;margin-right:6px}.c3-tooltip td.value{text-align:right}.c3-area{stroke-width:0;opacity:.2}.c3-chart-arcs-title{dominant-baseline:middle;font-size:1.3em}.c3-chart-arcs .c3-chart-arcs-background{fill:#e0e0e0;stroke:#fff}.c3-chart-arcs .c3-chart-arcs-gauge-unit{fill:#000;font-size:16px}.c3-chart-arcs .c3-chart-arcs-gauge-max,.c3-chart-arcs .c3-chart-arcs-gauge-min{fill:#777}.c3-chart-arc .c3-gauge-value{fill:#000}.c3-chart-arc.c3-target.c3-focused g path,.c3-chart-arc.c3-target g path{opacity:1}\", \"\", {\"version\":3,\"sources\":[\"/NOBACKUP/dtig-data-dashboard/node_modules/c3/c3.css\"],\"names\":[],\"mappings\":\"AACA,QACE,qBAAsB,AACtB,uCAAyC,CAAE,AAE7C,kBACE,UAAW,AACX,WAAa,CAAE,AAEjB,SACE,yBAA0B,AAC1B,sBAAuB,AACvB,qBAAsB,AAClB,gBAAkB,CAAE,AAE1B,4EAKE,0BAA4B,CAAE,AAEhC,mBACE,WAAa,CAAE,AAEjB,mBACE,YAAc,AACd,cAAgB,CAAE,AAEpB,mBACE,UAAW,AACX,cAAgB,CAAE,AAIpB,cACE,WAAa,CAAE,AAEjB,cACE,SAAW,CAAE,AAEf,oBACE,oBAAsB,CAAE,AAG1B,kBACE,UAAc,AACd,aAAe,CAAE,AAGnB,SACE,gBAAkB,CAAE,AAGtB,sBACE,iBAAkB,AAClB,WAAc,CAAE,AAElB,oBACE,UAAY,AACZ,gBAAkB,CAAE,AAGtB,QACE,cAAgB,CAAE,AAEpB,mBACE,eAAgB,AAChB,gBAAmB,CAAE,AAGvB,sBACE,SAAW,CAAE,AAEf,sEACE,gBAAkB,CAAE,AAEtB,wBACE,oBAAwB,CAAE,AAG5B,WACE,aAAgB,AAChB,eAAiB,CAAE,AAGrB,kBACE,eAAiB,CAAE,AAIrB,gBACE,cAAgB,CAAE,AAEpB,uBACE,WAAc,CAAE,AAElB,sBACE,YAAc,AACd,UAAY,AACZ,eAAkB,AAClB,cAAgB,CAAE,AAGpB,UACE,oBAAsB,CAAE,AAG1B,sBACE,UAAY,CAAE,AAEhB,YACE,yBAA0B,AAC1B,iBAAkB,AAClB,sBAAuB,AACvB,iBAAkB,AAClB,0CAA8C,AAC9C,kCAAsC,AACtC,UAAa,CAAE,AAEjB,eACE,qBAAuB,CAAE,AAE3B,eACE,sBAAuB,AACvB,eAAgB,AAChB,gBAAiB,AACjB,gBAAiB,AACjB,UAAY,CAAE,AAEhB,eACE,eAAgB,AAChB,gBAAiB,AACjB,sBAAuB,AACvB,2BAA6B,CAAE,AAEjC,oBACE,qBAAsB,AACtB,WAAY,AACZ,YAAa,AACb,gBAAkB,CAAE,AAEtB,qBACE,gBAAkB,CAAE,AAGtB,SACE,eAAgB,AAChB,UAAa,CAAE,AAGjB,qBACE,yBAA0B,AAC1B,eAAiB,CAAE,AAErB,yCACE,aAAc,AACd,WAAa,CAAE,AAEjB,yCACE,UAAW,AACX,cAAgB,CAAE,AAKpB,gFACE,SAAW,CAAE,AAEf,8BACE,SAAW,CACwB,AAKrC,yEACE,SAAW,CAAE\",\"file\":\"c3.css\",\"sourcesContent\":[\"/*-- Chart --*/\\n.c3 svg {\\n  font: 10px sans-serif;\\n  -webkit-tap-highlight-color: transparent; }\\n\\n.c3 path, .c3 line {\\n  fill: none;\\n  stroke: #000; }\\n\\n.c3 text {\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n      user-select: none; }\\n\\n.c3-legend-item-tile,\\n.c3-xgrid-focus,\\n.c3-ygrid,\\n.c3-event-rect,\\n.c3-bars path {\\n  shape-rendering: crispEdges; }\\n\\n.c3-chart-arc path {\\n  stroke: #fff; }\\n\\n.c3-chart-arc rect {\\n  stroke: white;\\n  stroke-width: 1; }\\n\\n.c3-chart-arc text {\\n  fill: #fff;\\n  font-size: 13px; }\\n\\n/*-- Axis --*/\\n/*-- Grid --*/\\n.c3-grid line {\\n  stroke: #aaa; }\\n\\n.c3-grid text {\\n  fill: #aaa; }\\n\\n.c3-xgrid, .c3-ygrid {\\n  stroke-dasharray: 3 3; }\\n\\n/*-- Text on Chart --*/\\n.c3-text.c3-empty {\\n  fill: #808080;\\n  font-size: 2em; }\\n\\n/*-- Line --*/\\n.c3-line {\\n  stroke-width: 1px; }\\n\\n/*-- Point --*/\\n.c3-circle._expanded_ {\\n  stroke-width: 1px;\\n  stroke: white; }\\n\\n.c3-selected-circle {\\n  fill: white;\\n  stroke-width: 2px; }\\n\\n/*-- Bar --*/\\n.c3-bar {\\n  stroke-width: 0; }\\n\\n.c3-bar._expanded_ {\\n  fill-opacity: 1;\\n  fill-opacity: 0.75; }\\n\\n/*-- Focus --*/\\n.c3-target.c3-focused {\\n  opacity: 1; }\\n\\n.c3-target.c3-focused path.c3-line, .c3-target.c3-focused path.c3-step {\\n  stroke-width: 2px; }\\n\\n.c3-target.c3-defocused {\\n  opacity: 0.3 !important; }\\n\\n/*-- Region --*/\\n.c3-region {\\n  fill: steelblue;\\n  fill-opacity: .1; }\\n\\n/*-- Brush --*/\\n.c3-brush .extent {\\n  fill-opacity: .1; }\\n\\n/*-- Select - Drag --*/\\n/*-- Legend --*/\\n.c3-legend-item {\\n  font-size: 12px; }\\n\\n.c3-legend-item-hidden {\\n  opacity: 0.15; }\\n\\n.c3-legend-background {\\n  opacity: 0.75;\\n  fill: white;\\n  stroke: lightgray;\\n  stroke-width: 1; }\\n\\n/*-- Title --*/\\n.c3-title {\\n  font: 14px sans-serif; }\\n\\n/*-- Tooltip --*/\\n.c3-tooltip-container {\\n  z-index: 10; }\\n\\n.c3-tooltip {\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n  background-color: #fff;\\n  empty-cells: show;\\n  -webkit-box-shadow: 7px 7px 12px -9px #777777;\\n  box-shadow: 7px 7px 12px -9px #777777;\\n  opacity: 0.9; }\\n\\n.c3-tooltip tr {\\n  border: 1px solid #CCC; }\\n\\n.c3-tooltip th {\\n  background-color: #aaa;\\n  font-size: 14px;\\n  padding: 2px 5px;\\n  text-align: left;\\n  color: #FFF; }\\n\\n.c3-tooltip td {\\n  font-size: 13px;\\n  padding: 3px 6px;\\n  background-color: #fff;\\n  border-left: 1px dotted #999; }\\n\\n.c3-tooltip td > span {\\n  display: inline-block;\\n  width: 10px;\\n  height: 10px;\\n  margin-right: 6px; }\\n\\n.c3-tooltip td.value {\\n  text-align: right; }\\n\\n/*-- Area --*/\\n.c3-area {\\n  stroke-width: 0;\\n  opacity: 0.2; }\\n\\n/*-- Arc --*/\\n.c3-chart-arcs-title {\\n  dominant-baseline: middle;\\n  font-size: 1.3em; }\\n\\n.c3-chart-arcs .c3-chart-arcs-background {\\n  fill: #e0e0e0;\\n  stroke: #FFF; }\\n\\n.c3-chart-arcs .c3-chart-arcs-gauge-unit {\\n  fill: #000;\\n  font-size: 16px; }\\n\\n.c3-chart-arcs .c3-chart-arcs-gauge-max {\\n  fill: #777; }\\n\\n.c3-chart-arcs .c3-chart-arcs-gauge-min {\\n  fill: #777; }\\n\\n.c3-chart-arc .c3-gauge-value {\\n  fill: #000;\\n  /*  font-size: 28px !important;*/ }\\n\\n.c3-chart-arc.c3-target g path {\\n  opacity: 1; }\\n\\n.c3-chart-arc.c3-target.c3-focused g path {\\n  opacity: 1; }\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/67.827654d3.chunk.js","import React from 'react'\r\nimport Page from 'components/LayoutComponents/Page'\r\nimport Helmet from 'react-helmet'\r\nimport C3Items from './C3'\r\n\r\nclass C3Page extends React.Component {\r\n  static defaultProps = {\r\n    pathName: 'C3.js',\r\n    roles: ['agent', 'administrator'],\r\n  }\r\n\r\n  render() {\r\n    const props = this.props\r\n    return (\r\n      <Page {...props}>\r\n        <Helmet title=\"C3.js\" />\r\n        <C3Items />\r\n      </Page>\r\n    )\r\n  }\r\n}\r\n\r\nexport default C3Page\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/Charts/C3Page/index.js","import React from 'react'\r\nimport C3Chart from 'react-c3js'\r\nimport 'c3/c3.css'\r\n\r\nclass C3Items extends React.Component {\r\n  render() {\r\n    let colors = {\r\n      _primary: '#01a8fe',\r\n      _default: '#acb7bf',\r\n      _success: '#46be8a',\r\n      _danger: '#fb434a',\r\n    }\r\n\r\n    let line = {\r\n      data: {\r\n        columns: [\r\n          ['Primary', 100, 165, 140, 270, 200, 140, 220],\r\n          ['Success', 110, 80, 100, 85, 125, 90, 100],\r\n        ],\r\n      },\r\n      color: {\r\n        pattern: [colors._primary, colors._success],\r\n      },\r\n      axis: {\r\n        x: {\r\n          tick: {\r\n            outer: !1,\r\n          },\r\n        },\r\n        y: {\r\n          max: 300,\r\n          min: 0,\r\n          tick: {\r\n            outer: !1,\r\n            count: 7,\r\n            values: [0, 50, 100, 150, 200, 250, 300],\r\n          },\r\n        },\r\n      },\r\n      grid: {\r\n        x: {\r\n          show: !1,\r\n        },\r\n        y: {\r\n          show: !0,\r\n        },\r\n      },\r\n    }\r\n    let spline = {\r\n      data: {\r\n        columns: [\r\n          ['Primary', 100, 165, 140, 270, 200, 140, 220],\r\n          ['Danger', 110, 80, 100, 85, 125, 90, 100],\r\n        ],\r\n        type: 'spline',\r\n      },\r\n      color: {\r\n        pattern: [colors._primary, colors._danger],\r\n      },\r\n      axis: {\r\n        x: {\r\n          tick: {\r\n            outer: !1,\r\n          },\r\n        },\r\n        y: {\r\n          max: 300,\r\n          min: 0,\r\n          tick: {\r\n            outer: !1,\r\n            count: 7,\r\n            values: [0, 50, 100, 150, 200, 250, 300],\r\n          },\r\n        },\r\n      },\r\n      grid: {\r\n        x: {\r\n          show: !1,\r\n        },\r\n        y: {\r\n          show: !0,\r\n        },\r\n      },\r\n    }\r\n    let scatter = {\r\n      data: {\r\n        xs: {\r\n          Danger: 'Danger_x',\r\n          Primary: 'Primary_x',\r\n        },\r\n        columns: [\r\n          [\r\n            'Danger_x',\r\n            3.5,\r\n            3,\r\n            3.2,\r\n            3.1,\r\n            3.6,\r\n            3.9,\r\n            3.4,\r\n            3.4,\r\n            2.9,\r\n            3.1,\r\n            3.7,\r\n            3.4,\r\n            3,\r\n            3,\r\n            4,\r\n            4.2,\r\n            3.9,\r\n            3.5,\r\n            3.8,\r\n            3.8,\r\n            3.4,\r\n            3.7,\r\n            3.6,\r\n            3.3,\r\n            3.4,\r\n            3,\r\n            3.4,\r\n            3.5,\r\n            3.4,\r\n            3.2,\r\n            3.1,\r\n            3.4,\r\n            4.1,\r\n            4.2,\r\n            3.1,\r\n            3.2,\r\n            3.5,\r\n            3.6,\r\n            3,\r\n            3.4,\r\n            3.5,\r\n            2.3,\r\n            3.2,\r\n            3.5,\r\n            3.8,\r\n            3,\r\n            3.8,\r\n            3.2,\r\n            3.7,\r\n            3.3,\r\n          ],\r\n          [\r\n            'Primary_x',\r\n            3.2,\r\n            3.2,\r\n            3.1,\r\n            2.3,\r\n            2.8,\r\n            2.8,\r\n            3.3,\r\n            2.4,\r\n            2.9,\r\n            2.7,\r\n            2,\r\n            3,\r\n            2.2,\r\n            2.9,\r\n            2.9,\r\n            3.1,\r\n            3,\r\n            2.7,\r\n            2.2,\r\n            2.5,\r\n            3.2,\r\n            2.8,\r\n            2.5,\r\n            2.8,\r\n            2.9,\r\n            3,\r\n            2.8,\r\n            3,\r\n            2.9,\r\n            2.6,\r\n            2.4,\r\n            2.4,\r\n            2.7,\r\n            2.7,\r\n            3,\r\n            3.4,\r\n            3.1,\r\n            2.3,\r\n            3,\r\n            2.5,\r\n            2.6,\r\n            3,\r\n            2.6,\r\n            2.3,\r\n            2.7,\r\n            3,\r\n            2.9,\r\n            2.9,\r\n            2.5,\r\n            2.8,\r\n          ],\r\n          [\r\n            'Danger',\r\n            0.2,\r\n            0.2,\r\n            0.2,\r\n            0.2,\r\n            0.2,\r\n            0.4,\r\n            0.3,\r\n            0.2,\r\n            0.2,\r\n            0.1,\r\n            0.2,\r\n            0.2,\r\n            0.1,\r\n            0.1,\r\n            0.2,\r\n            0.4,\r\n            0.4,\r\n            0.3,\r\n            0.3,\r\n            0.3,\r\n            0.2,\r\n            0.4,\r\n            0.2,\r\n            0.5,\r\n            0.2,\r\n            0.2,\r\n            0.4,\r\n            0.2,\r\n            0.2,\r\n            0.2,\r\n            0.2,\r\n            0.4,\r\n            0.1,\r\n            0.2,\r\n            0.2,\r\n            0.2,\r\n            0.2,\r\n            0.1,\r\n            0.2,\r\n            0.2,\r\n            0.3,\r\n            0.3,\r\n            0.2,\r\n            0.6,\r\n            0.4,\r\n            0.3,\r\n            0.2,\r\n            0.2,\r\n            0.2,\r\n            0.2,\r\n          ],\r\n          [\r\n            'Primary',\r\n            1.4,\r\n            1.5,\r\n            1.5,\r\n            1.3,\r\n            1.5,\r\n            1.3,\r\n            1.6,\r\n            1,\r\n            1.3,\r\n            1.4,\r\n            1,\r\n            1.5,\r\n            1,\r\n            1.4,\r\n            1.3,\r\n            1.4,\r\n            1.5,\r\n            1,\r\n            1.5,\r\n            1.1,\r\n            1.6,\r\n            1.3,\r\n            1.5,\r\n            1.2,\r\n            1.3,\r\n            1.4,\r\n            1.4,\r\n            1.2,\r\n            1.5,\r\n            1,\r\n            1.1,\r\n            1,\r\n            1.2,\r\n            1.6,\r\n            1.5,\r\n            1.6,\r\n            1.5,\r\n            1.3,\r\n            1.3,\r\n            1.3,\r\n            1.2,\r\n            1.4,\r\n            1.2,\r\n            1,\r\n            1.3,\r\n            1.2,\r\n            1.3,\r\n            1.3,\r\n            1.1,\r\n            1.3,\r\n          ],\r\n        ],\r\n        type: 'scatter',\r\n      },\r\n      color: {\r\n        pattern: [colors._danger, colors._primary],\r\n      },\r\n      axis: {\r\n        x: {\r\n          label: 'Width',\r\n          tick: {\r\n            outer: !1,\r\n            fit: !1,\r\n          },\r\n        },\r\n        size: {\r\n          height: 400,\r\n        },\r\n        padding: {\r\n          right: 40,\r\n        },\r\n        y: {\r\n          label: 'Height',\r\n          tick: {\r\n            outer: !1,\r\n            count: 5,\r\n            values: [0, 0.4, 0.8, 1.2, 1.6],\r\n          },\r\n        },\r\n      },\r\n      grid: {\r\n        x: {\r\n          show: !1,\r\n        },\r\n        y: {\r\n          show: !0,\r\n        },\r\n      },\r\n    }\r\n    let bar = {\r\n      data: {\r\n        columns: [\r\n          ['Danger', 30, 200, 100, 400, 150, 250],\r\n          ['Default', 130, 100, 140, 200, 150, 50],\r\n          ['Primary', 130, -150, 200, 300, -200, 100],\r\n        ],\r\n        type: 'bar',\r\n      },\r\n      bar: {\r\n        width: {\r\n          max: 20,\r\n        },\r\n      },\r\n      color: {\r\n        pattern: [colors._danger, colors._default, colors._primary],\r\n      },\r\n      grid: {\r\n        y: {\r\n          show: !0,\r\n        },\r\n        x: {\r\n          show: !1,\r\n        },\r\n      },\r\n    }\r\n    let stackedBar = {\r\n      data: {\r\n        columns: [\r\n          ['Primary', -30, 200, 300, 400, -150, 250, -30, 200, 300, 400, -150, 250],\r\n          ['Default', 130, 100, -400, 100, -150, 50, 130, 100, -400, 100, -150, 50],\r\n          ['Danger', -230, 200, 200, -300, 250, 250, -230, 200, 200, -300, 250, 250],\r\n          ['Success', 100, -250, 150, 200, -300, -100, 100, -250, 150, 200, -300, -100],\r\n        ],\r\n        type: 'bar',\r\n        groups: [['Primary', 'Default', 'Danger', 'Success']],\r\n      },\r\n      color: {\r\n        pattern: [colors._primary, colors._default, colors._danger, colors._success],\r\n      },\r\n      bar: {\r\n        width: {\r\n          max: 45,\r\n        },\r\n      },\r\n      grid: {\r\n        y: {\r\n          show: !0,\r\n          lines: [\r\n            {\r\n              value: 0,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }\r\n    let combination = {\r\n      data: {\r\n        columns: [\r\n          ['Primary', 30, 20, 50, 40, 60, 50, 30, 20, 50, 40, 60, 50],\r\n          ['Default', 200, 130, 90, 240, 130, 220, 200, 130, 90, 240, 130, 220],\r\n          ['Success', 300, 200, 160, 400, 250, 250, 300, 200, 160, 400, 250, 250],\r\n          ['Danger', 200, 130, 90, 240, 130, 220, 200, 130, 90, 240, 130, 220],\r\n          ['Primary', 130, 120, 150, 140, 160, 150, 130, 120, 150, 140, 160, 150],\r\n          ['Danger2', 90, 70, 20, 50, 60, 120, 90, 70, 20, 50, 60, 120],\r\n        ],\r\n        type: 'bar',\r\n        types: {\r\n          Success: 'spline',\r\n          Danger: 'line',\r\n          Danger2: 'area',\r\n        },\r\n        groups: [['Primary', 'Default']],\r\n      },\r\n      color: {\r\n        pattern: [\r\n          colors._primary,\r\n          colors._default,\r\n          colors._success,\r\n          colors._danger,\r\n          colors._danger,\r\n        ],\r\n      },\r\n      grid: {\r\n        x: {\r\n          show: !1,\r\n        },\r\n        y: {\r\n          show: !0,\r\n        },\r\n      },\r\n    }\r\n    let subChart = {\r\n      data: {\r\n        columns: [\r\n          ['Primary', 100, 165, 140, 270, 200, 140, 220, 210, 190, 100, 170, 250],\r\n          ['Success', 110, 80, 100, 85, 125, 90, 100, 130, 120, 90, 100, 115],\r\n        ],\r\n        type: 'spline',\r\n      },\r\n      color: {\r\n        pattern: [colors._primary, colors._danger],\r\n      },\r\n      subchart: {\r\n        show: true,\r\n      },\r\n    }\r\n    let zoom = {\r\n      data: {\r\n        columns: [\r\n          [\r\n            'Sample',\r\n            30,\r\n            200,\r\n            100,\r\n            400,\r\n            150,\r\n            250,\r\n            150,\r\n            200,\r\n            170,\r\n            240,\r\n            350,\r\n            150,\r\n            100,\r\n            400,\r\n            150,\r\n            250,\r\n            150,\r\n            200,\r\n            170,\r\n            240,\r\n            100,\r\n            150,\r\n            250,\r\n            150,\r\n            200,\r\n            170,\r\n            240,\r\n            30,\r\n            200,\r\n            100,\r\n            400,\r\n            150,\r\n            250,\r\n            150,\r\n            200,\r\n            170,\r\n            240,\r\n            350,\r\n            150,\r\n            100,\r\n            400,\r\n            350,\r\n            220,\r\n            250,\r\n            300,\r\n            270,\r\n            140,\r\n            150,\r\n            90,\r\n            150,\r\n            50,\r\n            120,\r\n            70,\r\n            40,\r\n          ],\r\n        ],\r\n        colors: {\r\n          Sample: colors._primary,\r\n        },\r\n      },\r\n      zoom: {\r\n        enabled: !0,\r\n      },\r\n    }\r\n    let pie = {\r\n      data: {\r\n        columns: [['Primary', 30], ['Success', 120]],\r\n        type: 'pie',\r\n      },\r\n      color: {\r\n        pattern: [colors._primary, colors._success],\r\n      },\r\n    }\r\n    let donut = {\r\n      data: {\r\n        columns: [['Danger', 30], ['Success', 120]],\r\n        type: 'donut',\r\n      },\r\n      color: {\r\n        pattern: [colors._danger, colors._success],\r\n      },\r\n      donut: {\r\n        title: 'Connections',\r\n      },\r\n    }\r\n    let step = {\r\n      data: {\r\n        columns: [['Primary', 300, 350, 300, 0, 0, 100], ['Success', 130, 100, 140, 200, 150, 50]],\r\n        types: {\r\n          Primary: 'step',\r\n          Success: 'area-step',\r\n        },\r\n      },\r\n      color: {\r\n        pattern: [colors._primary, colors._success],\r\n      },\r\n    }\r\n    let area = {\r\n      data: {\r\n        columns: [['Primary', 300, 350, 300, 0, 0, 0], ['Success', 130, 100, 140, 200, 150, 50]],\r\n        types: {\r\n          Primary: 'area',\r\n          Success: 'area-spline',\r\n        },\r\n      },\r\n      color: {\r\n        pattern: [colors._primary, colors._success],\r\n      },\r\n    }\r\n\r\n    return (\r\n      <section className=\"card\">\r\n        <div className=\"card-header\">\r\n          <div className=\"utils__title\">\r\n            <strong>C3</strong>\r\n            <a\r\n              href=\"http://c3js.org/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"btn btn-sm btn-primary ml-4\"\r\n            >\r\n              Official Documentation <i className=\"icmn-link ml-1\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Simple Line</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart data={line.data} color={line.color} axis={line.axis} grid={line.grid} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Spline</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart\r\n                  data={spline.data}\r\n                  color={spline.color}\r\n                  axis={spline.axis}\r\n                  grid={spline.grid}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Step</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart data={step.data} color={step.color} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Area</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart data={area.data} color={area.color} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Scatter</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart\r\n                  data={scatter.data}\r\n                  color={scatter.color}\r\n                  axis={scatter.axis}\r\n                  grid={scatter.grid}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Bar</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart data={bar.data} color={bar.color} grid={bar.grid} bar={bar.bar} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Stacked Bar</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart\r\n                  data={stackedBar.data}\r\n                  color={stackedBar.color}\r\n                  bar={stackedBar.bar}\r\n                  grid={stackedBar.grid}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Combination</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart\r\n                  data={combination.data}\r\n                  color={combination.color}\r\n                  grid={combination.grid}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Sub Chart</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart data={subChart.data} color={subChart.color} subchart={subChart.subchart} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Zoom</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart data={zoom.data} color={zoom.color} zoom={zoom.zoom} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Pie Chart</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart data={pie.data} color={pie.color} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <h5 className=\"text-black\">\r\n                <strong>Donut Chart</strong>\r\n              </h5>\r\n              <p className=\"text-muted\">\r\n                Element: read{' '}\r\n                <a href=\"http://c3js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  official documentation<small>\r\n                    <i className=\"icmn-link ml-1\" />\r\n                  </small>\r\n                </a>\r\n              </p>\r\n              <div className=\"mb-5\">\r\n                <C3Chart data={donut.data} color={donut.color} donut={donut.donut} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default C3Items\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/Charts/C3Page/C3/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar c3 = void 0;\n\nvar C3Chart = function (_React$Component) {\n  _inherits(C3Chart, _React$Component);\n\n  function C3Chart() {\n    _classCallCheck(this, C3Chart);\n\n    return _possibleConstructorReturn(this, (C3Chart.__proto__ || Object.getPrototypeOf(C3Chart)).apply(this, arguments));\n  }\n\n  _createClass(C3Chart, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      c3 = require('c3');\n      this.updateChart(this.props);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(newProps) {\n      this.updateChart(newProps);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.destroyChart();\n    }\n  }, {\n    key: 'destroyChart',\n    value: function destroyChart() {\n      try {\n        this.chart = this.chart.destroy();\n      } catch (err) {\n        throw new Error('Internal C3 error', err);\n      }\n    }\n  }, {\n    key: 'generateChart',\n    value: function generateChart(mountNode, config) {\n      var newConfig = _extends({ bindto: mountNode }, config);\n      return c3.generate(newConfig);\n    }\n  }, {\n    key: 'loadNewData',\n    value: function loadNewData(data) {\n      this.chart.load(data);\n    }\n  }, {\n    key: 'unloadData',\n    value: function unloadData() {\n      this.chart.unload();\n    }\n  }, {\n    key: 'updateChart',\n    value: function updateChart(config) {\n      if (!this.chart) {\n        this.chart = this.generateChart((0, _reactDom.findDOMNode)(this), config);\n      }\n\n      if (config.unloadBeforeLoad) {\n        this.unloadData();\n      }\n\n      this.loadNewData(config.data);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var className = this.props.className ? ' ' + this.props.className : '';\n      var style = this.props.style ? this.props.style : {};\n      return _react2.default.createElement('div', { className: className, style: style });\n    }\n  }], [{\n    key: 'displayName',\n    get: function get() {\n      return 'C3Chart';\n    }\n  }, {\n    key: 'propTypes',\n    get: function get() {\n      return {\n        data: _propTypes2.default.object.isRequired,\n        title: _propTypes2.default.object,\n        size: _propTypes2.default.object,\n        padding: _propTypes2.default.object,\n        color: _propTypes2.default.object,\n        interaction: _propTypes2.default.object,\n        transition: _propTypes2.default.object,\n        oninit: _propTypes2.default.func,\n        onrendered: _propTypes2.default.func,\n        onmouseover: _propTypes2.default.func,\n        onmouseout: _propTypes2.default.func,\n        onresize: _propTypes2.default.func,\n        onresized: _propTypes2.default.func,\n        axis: _propTypes2.default.object,\n        grid: _propTypes2.default.object,\n        regions: _propTypes2.default.array,\n        legend: _propTypes2.default.object,\n        tooltip: _propTypes2.default.object,\n        subchart: _propTypes2.default.object,\n        zoom: _propTypes2.default.object,\n        point: _propTypes2.default.object,\n        line: _propTypes2.default.object,\n        area: _propTypes2.default.object,\n        bar: _propTypes2.default.object,\n        pie: _propTypes2.default.object,\n        donut: _propTypes2.default.object,\n        gauge: _propTypes2.default.object,\n        className: _propTypes2.default.string,\n        style: _propTypes2.default.object,\n        unloadBeforeLoad: _propTypes2.default.bool\n      };\n    }\n  }]);\n\n  return C3Chart;\n}(_react2.default.Component);\n\nexports.default = C3Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-c3js/react-c3js.js\n// module id = 2285\n// module chunks = 67","/* @license C3.js v0.4.23 | (c) C3 Team and other contributors | http://c3js.org/ */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.c3 = factory());\n}(this, (function () { 'use strict';\n\n    var CLASS = {\n        target: 'c3-target',\n        chart: 'c3-chart',\n        chartLine: 'c3-chart-line',\n        chartLines: 'c3-chart-lines',\n        chartBar: 'c3-chart-bar',\n        chartBars: 'c3-chart-bars',\n        chartText: 'c3-chart-text',\n        chartTexts: 'c3-chart-texts',\n        chartArc: 'c3-chart-arc',\n        chartArcs: 'c3-chart-arcs',\n        chartArcsTitle: 'c3-chart-arcs-title',\n        chartArcsBackground: 'c3-chart-arcs-background',\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n        selectedCircle: 'c3-selected-circle',\n        selectedCircles: 'c3-selected-circles',\n        eventRect: 'c3-event-rect',\n        eventRects: 'c3-event-rects',\n        eventRectsSingle: 'c3-event-rects-single',\n        eventRectsMultiple: 'c3-event-rects-multiple',\n        zoomRect: 'c3-zoom-rect',\n        brush: 'c3-brush',\n        focused: 'c3-focused',\n        defocused: 'c3-defocused',\n        region: 'c3-region',\n        regions: 'c3-regions',\n        title: 'c3-title',\n        tooltipContainer: 'c3-tooltip-container',\n        tooltip: 'c3-tooltip',\n        tooltipName: 'c3-tooltip-name',\n        shape: 'c3-shape',\n        shapes: 'c3-shapes',\n        line: 'c3-line',\n        lines: 'c3-lines',\n        bar: 'c3-bar',\n        bars: 'c3-bars',\n        circle: 'c3-circle',\n        circles: 'c3-circles',\n        arc: 'c3-arc',\n        arcLabelLine: 'c3-arc-label-line',\n        arcs: 'c3-arcs',\n        area: 'c3-area',\n        areas: 'c3-areas',\n        empty: 'c3-empty',\n        text: 'c3-text',\n        texts: 'c3-texts',\n        gaugeValue: 'c3-gauge-value',\n        grid: 'c3-grid',\n        gridLines: 'c3-grid-lines',\n        xgrid: 'c3-xgrid',\n        xgrids: 'c3-xgrids',\n        xgridLine: 'c3-xgrid-line',\n        xgridLines: 'c3-xgrid-lines',\n        xgridFocus: 'c3-xgrid-focus',\n        ygrid: 'c3-ygrid',\n        ygrids: 'c3-ygrids',\n        ygridLine: 'c3-ygrid-line',\n        ygridLines: 'c3-ygrid-lines',\n        axis: 'c3-axis',\n        axisX: 'c3-axis-x',\n        axisXLabel: 'c3-axis-x-label',\n        axisY: 'c3-axis-y',\n        axisYLabel: 'c3-axis-y-label',\n        axisY2: 'c3-axis-y2',\n        axisY2Label: 'c3-axis-y2-label',\n        legendBackground: 'c3-legend-background',\n        legendItem: 'c3-legend-item',\n        legendItemEvent: 'c3-legend-item-event',\n        legendItemTile: 'c3-legend-item-tile',\n        legendItemHidden: 'c3-legend-item-hidden',\n        legendItemFocused: 'c3-legend-item-focused',\n        dragarea: 'c3-dragarea',\n        EXPANDED: '_expanded_',\n        SELECTED: '_selected_',\n        INCLUDED: '_included_'\n    };\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    var classCallCheck = function (instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var inherits = function (subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function (self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    var isValue = function isValue(v) {\n        return v || v === 0;\n    };\n    var isFunction = function isFunction(o) {\n        return typeof o === 'function';\n    };\n    var isArray = function isArray(o) {\n        return Array.isArray(o);\n    };\n    var isString = function isString(o) {\n        return typeof o === 'string';\n    };\n    var isUndefined = function isUndefined(v) {\n        return typeof v === 'undefined';\n    };\n    var isDefined = function isDefined(v) {\n        return typeof v !== 'undefined';\n    };\n    var ceil10 = function ceil10(v) {\n        return Math.ceil(v / 10) * 10;\n    };\n    var asHalfPixel = function asHalfPixel(n) {\n        return Math.ceil(n) + 0.5;\n    };\n    var diffDomain = function diffDomain(d) {\n        return d[1] - d[0];\n    };\n    var isEmpty = function isEmpty(o) {\n        return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;\n    };\n    var notEmpty = function notEmpty(o) {\n        return !c3_chart_internal_fn.isEmpty(o);\n    };\n    var getOption = function getOption(options, key, defaultValue) {\n        return isDefined(options[key]) ? options[key] : defaultValue;\n    };\n    var hasValue = function hasValue(dict, value) {\n        var found = false;\n        Object.keys(dict).forEach(function (key) {\n            if (dict[key] === value) {\n                found = true;\n            }\n        });\n        return found;\n    };\n    var sanitise = function sanitise(str) {\n        return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n    };\n    var getPathBox = function getPathBox(path) {\n        var box = path.getBoundingClientRect(),\n            items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n            minX = items[0].x,\n            minY = Math.min(items[0].y, items[1].y);\n        return { x: minX, y: minY, width: box.width, height: box.height };\n    };\n\n    var c3_axis_fn;\n    var c3_axis_internal_fn;\n\n    function AxisInternal(component, params) {\n        var internal = this;\n        internal.component = component;\n        internal.params = params || {};\n\n        internal.d3 = component.d3;\n        internal.scale = internal.d3.scale.linear();\n        internal.range;\n        internal.orient = \"bottom\";\n        internal.innerTickSize = 6;\n        internal.outerTickSize = this.params.withOuterTick ? 6 : 0;\n        internal.tickPadding = 3;\n        internal.tickValues = null;\n        internal.tickFormat;\n        internal.tickArguments;\n\n        internal.tickOffset = 0;\n        internal.tickCulling = true;\n        internal.tickCentered;\n        internal.tickTextCharSize;\n        internal.tickTextRotate = internal.params.tickTextRotate;\n        internal.tickLength;\n\n        internal.axis = internal.generateAxis();\n    }\n    c3_axis_internal_fn = AxisInternal.prototype;\n\n    c3_axis_internal_fn.axisX = function (selection, x, tickOffset) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n        });\n    };\n    c3_axis_internal_fn.axisY = function (selection, y) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n        });\n    };\n    c3_axis_internal_fn.scaleExtent = function (domain) {\n        var start = domain[0],\n            stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    };\n    c3_axis_internal_fn.generateTicks = function (scale) {\n        var internal = this;\n        var i,\n            domain,\n            ticks = [];\n        if (scale.ticks) {\n            return scale.ticks.apply(scale, internal.tickArguments);\n        }\n        domain = scale.domain();\n        for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n            ticks.push(i);\n        }\n        if (ticks.length > 0 && ticks[0] > 0) {\n            ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n        }\n        return ticks;\n    };\n    c3_axis_internal_fn.copyScale = function () {\n        var internal = this;\n        var newScale = internal.scale.copy(),\n            domain;\n        if (internal.params.isCategory) {\n            domain = internal.scale.domain();\n            newScale.domain([domain[0], domain[1] - 1]);\n        }\n        return newScale;\n    };\n    c3_axis_internal_fn.textFormatted = function (v) {\n        var internal = this,\n            formatted = internal.tickFormat ? internal.tickFormat(v) : v;\n        return typeof formatted !== 'undefined' ? formatted : '';\n    };\n    c3_axis_internal_fn.updateRange = function () {\n        var internal = this;\n        internal.range = internal.scale.rangeExtent ? internal.scale.rangeExtent() : internal.scaleExtent(internal.scale.range());\n        return internal.range;\n    };\n    c3_axis_internal_fn.updateTickTextCharSize = function (tick) {\n        var internal = this;\n        if (internal.tickTextCharSize) {\n            return internal.tickTextCharSize;\n        }\n        var size = {\n            h: 11.5,\n            w: 5.5\n        };\n        tick.select('text').text(function (d) {\n            return internal.textFormatted(d);\n        }).each(function (d) {\n            var box = this.getBoundingClientRect(),\n                text = internal.textFormatted(d),\n                h = box.height,\n                w = text ? box.width / text.length : undefined;\n            if (h && w) {\n                size.h = h;\n                size.w = w;\n            }\n        }).text('');\n        internal.tickTextCharSize = size;\n        return size;\n    };\n    c3_axis_internal_fn.transitionise = function (selection) {\n        return this.params.withoutTransition ? selection : this.d3.transition(selection);\n    };\n    c3_axis_internal_fn.isVertical = function () {\n        return this.orient === 'left' || this.orient === 'right';\n    };\n    c3_axis_internal_fn.tspanData = function (d, i, ticks, scale) {\n        var internal = this;\n        var splitted = internal.params.tickMultiline ? internal.splitTickText(d, ticks, scale) : [].concat(internal.textFormatted(d));\n\n        if (internal.params.tickMultiline && internal.params.tickMultilineMax > 0) {\n            splitted = internal.ellipsify(splitted, internal.params.tickMultilineMax);\n        }\n\n        return splitted.map(function (s) {\n            return { index: i, splitted: s, length: splitted.length };\n        });\n    };\n    c3_axis_internal_fn.splitTickText = function (d, ticks, scale) {\n        var internal = this,\n            tickText = internal.textFormatted(d),\n            maxWidth = internal.params.tickWidth,\n            subtext,\n            spaceIndex,\n            textWidth,\n            splitted = [];\n\n        if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n            return tickText;\n        }\n\n        if (!maxWidth || maxWidth <= 0) {\n            maxWidth = internal.isVertical() ? 95 : internal.params.isCategory ? Math.ceil(scale(ticks[1]) - scale(ticks[0])) - 12 : 110;\n        }\n\n        function split(splitted, text) {\n            spaceIndex = undefined;\n            for (var i = 1; i < text.length; i++) {\n                if (text.charAt(i) === ' ') {\n                    spaceIndex = i;\n                }\n                subtext = text.substr(0, i + 1);\n                textWidth = internal.tickTextCharSize.w * subtext.length;\n                // if text width gets over tick width, split by space index or crrent index\n                if (maxWidth < textWidth) {\n                    return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\n                }\n            }\n            return splitted.concat(text);\n        }\n\n        return split(splitted, tickText + \"\");\n    };\n    c3_axis_internal_fn.ellipsify = function (splitted, max) {\n        if (splitted.length <= max) {\n            return splitted;\n        }\n\n        var ellipsified = splitted.slice(0, max);\n        var remaining = 3;\n        for (var i = max - 1; i >= 0; i--) {\n            var available = ellipsified[i].length;\n\n            ellipsified[i] = ellipsified[i].substr(0, available - remaining).padEnd(available, '.');\n\n            remaining -= available;\n\n            if (remaining <= 0) {\n                break;\n            }\n        }\n\n        return ellipsified;\n    };\n    c3_axis_internal_fn.updateTickLength = function () {\n        var internal = this;\n        internal.tickLength = Math.max(internal.innerTickSize, 0) + internal.tickPadding;\n    };\n    c3_axis_internal_fn.lineY2 = function (d) {\n        var internal = this,\n            tickPosition = internal.scale(d) + (internal.tickCentered ? 0 : internal.tickOffset);\n        return internal.range[0] < tickPosition && tickPosition < internal.range[1] ? internal.innerTickSize : 0;\n    };\n    c3_axis_internal_fn.textY = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1) : internal.tickLength;\n    };\n    c3_axis_internal_fn.textTransform = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? \"rotate(\" + rotate + \")\" : \"\";\n    };\n    c3_axis_internal_fn.textTextAnchor = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? rotate > 0 ? \"start\" : \"end\" : \"middle\";\n    };\n    c3_axis_internal_fn.tspanDx = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 8 * Math.sin(Math.PI * (rotate / 180)) : 0;\n    };\n    c3_axis_internal_fn.tspanDy = function (d, i) {\n        var internal = this,\n            dy = internal.tickTextCharSize.h;\n        if (i === 0) {\n            if (internal.isVertical()) {\n                dy = -((d.length - 1) * (internal.tickTextCharSize.h / 2) - 3);\n            } else {\n                dy = \".71em\";\n            }\n        }\n        return dy;\n    };\n\n    c3_axis_internal_fn.generateAxis = function () {\n        var internal = this,\n            d3 = internal.d3,\n            params = internal.params;\n        function axis(g) {\n            g.each(function () {\n                var g = axis.g = d3.select(this);\n\n                var scale0 = this.__chart__ || internal.scale,\n                    scale1 = this.__chart__ = internal.copyScale();\n\n                var ticks = internal.tickValues ? internal.tickValues : internal.generateTicks(scale1),\n                    tick = g.selectAll(\".tick\").data(ticks, scale1),\n                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n\n                // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n                tickExit = tick.exit().remove(),\n                    tickUpdate = internal.transitionise(tick).style(\"opacity\", 1),\n                    tickTransform,\n                    tickX,\n                    tickY;\n\n                if (params.isCategory) {\n                    internal.tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                    tickX = internal.tickCentered ? 0 : internal.tickOffset;\n                    tickY = internal.tickCentered ? internal.tickOffset : 0;\n                } else {\n                    internal.tickOffset = tickX = 0;\n                }\n\n                tickEnter.append(\"line\");\n                tickEnter.append(\"text\");\n\n                internal.updateRange();\n                internal.updateTickLength();\n                internal.updateTickTextCharSize(g.select('.tick'));\n\n                var lineUpdate = tickUpdate.select(\"line\"),\n                    textUpdate = tickUpdate.select(\"text\"),\n                    tspanUpdate = tick.select(\"text\").selectAll('tspan').data(function (d, i) {\n                    return internal.tspanData(d, i, ticks, scale1);\n                });\n\n                tspanUpdate.enter().append('tspan');\n                tspanUpdate.exit().remove();\n                tspanUpdate.text(function (d) {\n                    return d.splitted;\n                });\n\n                var path = g.selectAll(\".domain\").data([0]),\n                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), internal.transitionise(path));\n\n                // TODO: each attr should be one function and change its behavior by internal.orient, probably\n                switch (internal.orient) {\n                    case \"bottom\":\n                        {\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return internal.textY(d, i);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + internal.outerTickSize);\n                            break;\n                        }\n                    case \"top\":\n                        {\n                            // TODO: rotated tick text\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return -1 * internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return -1 * internal.textY(d, i) - (params.isCategory ? 2 : internal.tickLength - 2);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + -internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"left\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", -internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", -internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"end\");\n                            tspanUpdate.attr('x', -internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + -internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"right\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"start\");\n                            tspanUpdate.attr('x', internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + internal.outerTickSize);\n                            break;\n                        }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1,\n                        dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function scale1(d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1, internal.tickOffset);\n                }\n                tickEnter.call(tickTransform, scale0, internal.tickOffset);\n                tickUpdate.call(tickTransform, scale1, internal.tickOffset);\n            });\n        }\n        axis.scale = function (x) {\n            if (!arguments.length) {\n                return internal.scale;\n            }\n            internal.scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) {\n                return internal.orient;\n            }\n            internal.orient = x in { top: 1, right: 1, bottom: 1, left: 1 } ? x + \"\" : \"bottom\";\n            return axis;\n        };\n        axis.tickFormat = function (format) {\n            if (!arguments.length) {\n                return internal.tickFormat;\n            }\n            internal.tickFormat = format;\n            return axis;\n        };\n        axis.tickCentered = function (isCentered) {\n            if (!arguments.length) {\n                return internal.tickCentered;\n            }\n            internal.tickCentered = isCentered;\n            return axis;\n        };\n        axis.tickOffset = function () {\n            return internal.tickOffset;\n        };\n        axis.tickInterval = function () {\n            var interval, length;\n            if (params.isCategory) {\n                interval = internal.tickOffset * 2;\n            } else {\n                length = axis.g.select('path.domain').node().getTotalLength() - internal.outerTickSize * 2;\n                interval = length / axis.g.selectAll('line').size();\n            }\n            return interval === Infinity ? 0 : interval;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) {\n                return internal.tickArguments;\n            }\n            internal.tickArguments = arguments;\n            return axis;\n        };\n        axis.tickCulling = function (culling) {\n            if (!arguments.length) {\n                return internal.tickCulling;\n            }\n            internal.tickCulling = culling;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (typeof x === 'function') {\n                internal.tickValues = function () {\n                    return x(internal.scale.domain());\n                };\n            } else {\n                if (!arguments.length) {\n                    return internal.tickValues;\n                }\n                internal.tickValues = x;\n            }\n            return axis;\n        };\n        return axis;\n    };\n\n    var Axis = function (_Component) {\n        inherits(Axis, _Component);\n\n        function Axis(owner) {\n            classCallCheck(this, Axis);\n\n            var fn = {\n                fn: c3_axis_fn,\n                internal: {\n                    fn: c3_axis_internal_fn\n                }\n            };\n\n            var _this = possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this, owner, 'axis', fn));\n\n            _this.d3 = owner.d3;\n            _this.internal = AxisInternal;\n            return _this;\n        }\n\n        return Axis;\n    }(Component);\n\n    c3_axis_fn = Axis.prototype;\n\n    c3_axis_fn.init = function init() {\n        var $$ = this.owner,\n            config = $$.config,\n            main = $$.main;\n        $$.axes.x = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisX).attr(\"clip-path\", config.axis_x_inner ? \"\" : $$.clipPathForXAxis).attr(\"transform\", $$.getTranslate('x')).style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n        $$.axes.x.append(\"text\").attr(\"class\", CLASS.axisXLabel).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n        $$.axes.y = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY).attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis).attr(\"transform\", $$.getTranslate('y')).style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n        $$.axes.y.append(\"text\").attr(\"class\", CLASS.axisYLabel).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n        $$.axes.y2 = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n        // clip-path?\n        .attr(\"transform\", $$.getTranslate('y2')).style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n        $$.axes.y2.append(\"text\").attr(\"class\", CLASS.axisY2Label).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            isCategory: $$.isCategorized(),\n            withOuterTick: withOuterTick,\n            tickMultiline: config.axis_x_tick_multiline,\n            tickMultilineMax: config.axis_x_tick_multiline ? Number(config.axis_x_tick_multilineMax) : 0,\n            tickWidth: config.axis_x_tick_width,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n            withoutTransition: withoutTransition\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient);\n\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n            tickValues = tickValues.map(function (v) {\n                return $$.parseDate(v);\n            });\n        }\n\n        // Set tick\n        axis.tickFormat(tickFormat).tickValues(tickValues);\n        if ($$.isCategorized()) {\n            axis.tickCentered(config.axis_x_tick_centered);\n            if (isEmpty(config.axis_x_tick_culling)) {\n                config.axis_x_tick_culling = false;\n            }\n        }\n\n        return axis;\n    };\n    c3_axis_fn.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n        var $$ = this.owner,\n            config = $$.config,\n            tickValues;\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n        }\n        if (axis) {\n            axis.tickValues(tickValues);\n        } else {\n            $$.xAxis.tickValues(tickValues);\n            $$.subXAxis.tickValues(tickValues);\n        }\n        return tickValues;\n    };\n    c3_axis_fn.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            withOuterTick: withOuterTick,\n            withoutTransition: withoutTransition,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient).tickFormat(tickFormat);\n        if ($$.isTimeSeriesY()) {\n            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n        } else {\n            axis.tickValues(tickValues);\n        }\n        return axis;\n    };\n    c3_axis_fn.getId = function getId(id) {\n        var config = this.owner.config;\n        return id in config.data_axes ? config.data_axes[id] : 'y';\n    };\n    c3_axis_fn.getXAxisTickFormat = function getXAxisTickFormat() {\n        var $$ = this.owner,\n            config = $$.config,\n            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {\n            return v < 0 ? v.toFixed(0) : v;\n        };\n        if (config.axis_x_tick_format) {\n            if (isFunction(config.axis_x_tick_format)) {\n                format = config.axis_x_tick_format;\n            } else if ($$.isTimeSeries()) {\n                format = function format(date) {\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n                };\n            }\n        }\n        return isFunction(format) ? function (v) {\n            return format.call($$, v);\n        } : format;\n    };\n    c3_axis_fn.getTickValues = function getTickValues(tickValues, axis) {\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n    };\n    c3_axis_fn.getXAxisTickValues = function getXAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n    };\n    c3_axis_fn.getYAxisTickValues = function getYAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n    };\n    c3_axis_fn.getY2AxisTickValues = function getY2AxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n    };\n    c3_axis_fn.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n        var $$ = this.owner,\n            config = $$.config,\n            option;\n        if (axisId === 'y') {\n            option = config.axis_y_label;\n        } else if (axisId === 'y2') {\n            option = config.axis_y2_label;\n        } else if (axisId === 'x') {\n            option = config.axis_x_label;\n        }\n        return option;\n    };\n    c3_axis_fn.getLabelText = function getLabelText(axisId) {\n        var option = this.getLabelOptionByAxisId(axisId);\n        return isString(option) ? option : option ? option.text : null;\n    };\n    c3_axis_fn.setLabelText = function setLabelText(axisId, text) {\n        var $$ = this.owner,\n            config = $$.config,\n            option = this.getLabelOptionByAxisId(axisId);\n        if (isString(option)) {\n            if (axisId === 'y') {\n                config.axis_y_label = text;\n            } else if (axisId === 'y2') {\n                config.axis_y2_label = text;\n            } else if (axisId === 'x') {\n                config.axis_x_label = text;\n            }\n        } else if (option) {\n            option.text = text;\n        }\n    };\n    c3_axis_fn.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n        var option = this.getLabelOptionByAxisId(axisId),\n            position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;\n        return {\n            isInner: position.indexOf('inner') >= 0,\n            isOuter: position.indexOf('outer') >= 0,\n            isLeft: position.indexOf('left') >= 0,\n            isCenter: position.indexOf('center') >= 0,\n            isRight: position.indexOf('right') >= 0,\n            isTop: position.indexOf('top') >= 0,\n            isMiddle: position.indexOf('middle') >= 0,\n            isBottom: position.indexOf('bottom') >= 0\n        };\n    };\n    c3_axis_fn.getXAxisLabelPosition = function getXAxisLabelPosition() {\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n    };\n    c3_axis_fn.getYAxisLabelPosition = function getYAxisLabelPosition() {\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getLabelPositionById = function getLabelPositionById(id) {\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n    };\n    c3_axis_fn.textForXAxisLabel = function textForXAxisLabel() {\n        return this.getLabelText('x');\n    };\n    c3_axis_fn.textForYAxisLabel = function textForYAxisLabel() {\n        return this.getLabelText('y');\n    };\n    c3_axis_fn.textForY2AxisLabel = function textForY2AxisLabel() {\n        return this.getLabelText('y2');\n    };\n    c3_axis_fn.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n        var $$ = this.owner;\n        if (forHorizontal) {\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n        } else {\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n        }\n    };\n    c3_axis_fn.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n        } else {\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n        }\n    };\n    c3_axis_fn.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n        } else {\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n        }\n    };\n    c3_axis_fn.xForXAxisLabel = function xForXAxisLabel() {\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.xForYAxisLabel = function xForYAxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.xForY2AxisLabel = function xForY2AxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dxForXAxisLabel = function dxForXAxisLabel() {\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.dxForYAxisLabel = function dxForYAxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.dxForY2AxisLabel = function dxForY2AxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dyForXAxisLabel = function dyForXAxisLabel() {\n        var $$ = this.owner,\n            config = $$.config,\n            position = this.getXAxisLabelPosition();\n        if (config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : -25 - ($$.config.axis_x_inner ? 0 : this.getMaxTickWidth('x'));\n        } else {\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n        }\n    };\n    c3_axis_fn.dyForYAxisLabel = function dyForYAxisLabel() {\n        var $$ = this.owner,\n            position = this.getYAxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"-0.5em\" : \"3em\";\n        } else {\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\n        }\n    };\n    c3_axis_fn.dyForY2AxisLabel = function dyForY2AxisLabel() {\n        var $$ = this.owner,\n            position = this.getY2AxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\n        } else {\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\n        }\n    };\n    c3_axis_fn.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n        var $$ = this.owner,\n            config = $$.config,\n            maxWidth = 0,\n            targetsToShow,\n            scale,\n            axis,\n            dummy,\n            svg;\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n            return $$.currentMaxTickWidths[id];\n        }\n        if ($$.svg) {\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            if (id === 'y') {\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n            } else if (id === 'y2') {\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n            } else {\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n                this.updateXAxisTickValues(targetsToShow, axis);\n            }\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {\n                $$.d3.select(this).selectAll('text').each(function () {\n                    var box = this.getBoundingClientRect();\n                    if (maxWidth < box.width) {\n                        maxWidth = box.width;\n                    }\n                });\n                dummy.remove();\n            });\n        }\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n        return $$.currentMaxTickWidths[id];\n    };\n\n    c3_axis_fn.updateLabels = function updateLabels(withTransition) {\n        var $$ = this.owner;\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n        (withTransition ? axisXLabel.transition() : axisXLabel).attr(\"x\", this.xForXAxisLabel.bind(this)).attr(\"dx\", this.dxForXAxisLabel.bind(this)).attr(\"dy\", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));\n        (withTransition ? axisYLabel.transition() : axisYLabel).attr(\"x\", this.xForYAxisLabel.bind(this)).attr(\"dx\", this.dxForYAxisLabel.bind(this)).attr(\"dy\", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));\n        (withTransition ? axisY2Label.transition() : axisY2Label).attr(\"x\", this.xForY2AxisLabel.bind(this)).attr(\"dx\", this.dxForY2AxisLabel.bind(this)).attr(\"dy\", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n        var p = typeof padding === 'number' ? padding : padding[key];\n        if (!isValue(p)) {\n            return defaultValue;\n        }\n        if (padding.unit === 'ratio') {\n            return padding[key] * domainLength;\n        }\n        // assume padding is pixels if unit is not specified\n        return this.convertPixelsToAxisPadding(p, domainLength);\n    };\n    c3_axis_fn.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n        var $$ = this.owner,\n            length = $$.config.axis_rotated ? $$.width : $$.height;\n        return domainLength * (pixels / length);\n    };\n    c3_axis_fn.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n        var tickValues = values,\n            targetCount,\n            start,\n            end,\n            count,\n            interval,\n            i,\n            tickValue;\n        if (tickCount) {\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n            // compute ticks according to tickCount\n            if (targetCount === 1) {\n                tickValues = [values[0]];\n            } else if (targetCount === 2) {\n                tickValues = [values[0], values[values.length - 1]];\n            } else if (targetCount > 2) {\n                count = targetCount - 2;\n                start = values[0];\n                end = values[values.length - 1];\n                interval = (end - start) / (count + 1);\n                // re-construct unique values\n                tickValues = [start];\n                for (i = 0; i < count; i++) {\n                    tickValue = +start + interval * (i + 1);\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n                }\n                tickValues.push(end);\n            }\n        }\n        if (!forTimeSeries) {\n            tickValues = tickValues.sort(function (a, b) {\n                return a - b;\n            });\n        }\n        return tickValues;\n    };\n    c3_axis_fn.generateTransitions = function generateTransitions(duration) {\n        var $$ = this.owner,\n            axes = $$.axes;\n        return {\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n        };\n    };\n    c3_axis_fn.redraw = function redraw(transitions, isHidden) {\n        var $$ = this.owner;\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n        transitions.axisX.call($$.xAxis);\n        transitions.axisY.call($$.yAxis);\n        transitions.axisY2.call($$.y2Axis);\n        transitions.axisSubX.call($$.subXAxis);\n    };\n\n    var c3 = { version: \"0.4.23\" };\n\n    var c3_chart_fn;\n    var c3_chart_internal_fn;\n\n    function Component(owner, componentKey, fn) {\n        this.owner = owner;\n        c3.chart.internal[componentKey] = fn;\n    }\n\n    function Chart(config) {\n        var $$ = this.internal = new ChartInternal(this);\n        $$.loadConfig(config);\n\n        $$.beforeInit(config);\n        $$.init();\n        $$.afterInit(config);\n\n        // bind \"this\" to nested API\n        (function bindThis(fn, target, argThis) {\n            Object.keys(fn).forEach(function (key) {\n                target[key] = fn[key].bind(argThis);\n                if (Object.keys(fn[key]).length > 0) {\n                    bindThis(fn[key], target[key], argThis);\n                }\n            });\n        })(c3_chart_fn, this, this);\n    }\n\n    function ChartInternal(api) {\n        var $$ = this;\n        $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\n        $$.api = api;\n        $$.config = $$.getDefaultConfig();\n        $$.data = {};\n        $$.cache = {};\n        $$.axes = {};\n    }\n\n    c3.generate = function (config) {\n        return new Chart(config);\n    };\n\n    c3.chart = {\n        fn: Chart.prototype,\n        internal: {\n            fn: ChartInternal.prototype\n        }\n    };\n    c3_chart_fn = c3.chart.fn;\n    c3_chart_internal_fn = c3.chart.internal.fn;\n\n    c3_chart_internal_fn.beforeInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.afterInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.init = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.initParams();\n\n        if (config.data_url) {\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n        } else if (config.data_json) {\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n        } else if (config.data_rows) {\n            $$.initWithData($$.convertRowsToData(config.data_rows));\n        } else if (config.data_columns) {\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\n        } else {\n            throw Error('url or json or rows or columns is required.');\n        }\n    };\n\n    c3_chart_internal_fn.initParams = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n        $$.clipId = \"c3-\" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;\n        $$.dragging = false;\n        $$.flowing = false;\n        $$.cancelClick = false;\n        $$.mouseover = false;\n        $$.transiting = false;\n\n        $$.color = $$.generateColor();\n        $$.levelColor = $$.generateLevelColor();\n\n        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([[\".%L\", function (d) {\n            return d.getMilliseconds();\n        }], [\":%S\", function (d) {\n            return d.getSeconds();\n        }], [\"%I:%M\", function (d) {\n            return d.getMinutes();\n        }], [\"%I %p\", function (d) {\n            return d.getHours();\n        }], [\"%-m/%-d\", function (d) {\n            return d.getDay() && d.getDate() !== 1;\n        }], [\"%-m/%-d\", function (d) {\n            return d.getDate() !== 1;\n        }], [\"%-m/%-d\", function (d) {\n            return d.getMonth();\n        }], [\"%Y/%-m/%-d\", function () {\n            return true;\n        }]]);\n\n        $$.hiddenTargetIds = [];\n        $$.hiddenLegendIds = [];\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n\n        $$.xOrient = config.axis_rotated ? config.axis_x_inner ? \"right\" : \"left\" : config.axis_x_inner ? \"top\" : \"bottom\";\n        $$.yOrient = config.axis_rotated ? config.axis_y_inner ? \"top\" : \"bottom\" : config.axis_y_inner ? \"right\" : \"left\";\n        $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? \"bottom\" : \"top\" : config.axis_y2_inner ? \"left\" : \"right\";\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n        $$.isLegendRight = config.legend_position === 'right';\n        $$.isLegendInset = config.legend_position === 'inset';\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n        $$.legendStep = 0;\n        $$.legendItemWidth = 0;\n        $$.legendItemHeight = 0;\n\n        $$.currentMaxTickWidths = {\n            x: 0,\n            y: 0,\n            y2: 0\n        };\n\n        $$.rotated_padding_left = 30;\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n        $$.rotated_padding_top = 5;\n\n        $$.withoutFadeIn = {};\n\n        $$.intervalForObserveInserted = undefined;\n\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n    };\n\n    c3_chart_internal_fn.initChartElements = function () {\n        if (this.initBar) {\n            this.initBar();\n        }\n        if (this.initLine) {\n            this.initLine();\n        }\n        if (this.initArc) {\n            this.initArc();\n        }\n        if (this.initGauge) {\n            this.initGauge();\n        }\n        if (this.initText) {\n            this.initText();\n        }\n    };\n\n    c3_chart_internal_fn.initWithData = function (data) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n        var defs,\n            main,\n            binding = true;\n\n        $$.axis = new Axis($$);\n\n        if ($$.initPie) {\n            $$.initPie();\n        }\n        if ($$.initBrush) {\n            $$.initBrush();\n        }\n        if ($$.initZoom) {\n            $$.initZoom();\n        }\n\n        if (!config.bindto) {\n            $$.selectChart = d3.selectAll([]);\n        } else if (typeof config.bindto.node === 'function') {\n            $$.selectChart = config.bindto;\n        } else {\n            $$.selectChart = d3.select(config.bindto);\n        }\n        if ($$.selectChart.empty()) {\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n            $$.observeInserted($$.selectChart);\n            binding = false;\n        }\n        $$.selectChart.html(\"\").classed(\"c3\", true);\n\n        // Init data as targets\n        $$.data.xs = {};\n        $$.data.targets = $$.convertDataToTargets(data);\n\n        if (config.data_filter) {\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\n        }\n\n        // Set targets to hide if needed\n        if (config.data_hide) {\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n        }\n        if (config.legend_hide) {\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n        }\n\n        // Init sizes and scales\n        $$.updateSizes();\n        $$.updateScales();\n\n        // Set domains for each scale\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n        $$.subX.domain($$.x.domain());\n        $$.subY.domain($$.y.domain());\n        $$.subY2.domain($$.y2.domain());\n\n        // Save original x domain for zoom update\n        $$.orgXDomain = $$.x.domain();\n\n        // Set initialized scales to brush and zoom\n        if ($$.brush) {\n            $$.brush.scale($$.subX);\n        }\n        if (config.zoom_enabled) {\n            $$.zoom.scale($$.x);\n        }\n\n        /*-- Basic Elements --*/\n\n        // Define svgs\n        $$.svg = $$.selectChart.append(\"svg\").style(\"overflow\", \"hidden\").on('mouseenter', function () {\n            return config.onmouseover.call($$);\n        }).on('mouseleave', function () {\n            return config.onmouseout.call($$);\n        });\n\n        if ($$.config.svg_classname) {\n            $$.svg.attr('class', $$.config.svg_classname);\n        }\n\n        // Define defs\n        defs = $$.svg.append(\"defs\");\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n        $$.updateSvgSize();\n\n        // Define regions\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n        if ($$.initSubchart) {\n            $$.initSubchart();\n        }\n        if ($$.initTooltip) {\n            $$.initTooltip();\n        }\n        if ($$.initLegend) {\n            $$.initLegend();\n        }\n        if ($$.initTitle) {\n            $$.initTitle();\n        }\n\n        /*-- Main Region --*/\n\n        // text when empty\n        main.append(\"text\").attr(\"class\", CLASS.text + ' ' + CLASS.empty).attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n        .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n        // Regions\n        $$.initRegion();\n\n        // Grids\n        $$.initGrid();\n\n        // Define g for chart area\n        main.append('g').attr(\"clip-path\", $$.clipPath).attr('class', CLASS.chart);\n\n        // Grid lines\n        if (config.grid_lines_front) {\n            $$.initGridLines();\n        }\n\n        // Cover whole with rects for events\n        $$.initEventRect();\n\n        // Define g for chart\n        $$.initChartElements();\n\n        // if zoom privileged, insert rect to forefront\n        // TODO: is this needed?\n        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions).attr('class', CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height).style('opacity', 0).on(\"dblclick.zoom\", null);\n\n        // Set default extent if defined\n        if (config.axis_x_extent) {\n            $$.brush.extent($$.getDefaultExtent());\n        }\n\n        // Add Axis\n        $$.axis.init();\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Draw with targets\n        if (binding) {\n            $$.updateDimension();\n            $$.config.oninit.call($$);\n            $$.redraw({\n                withTransition: false,\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransitionForAxis: false\n            });\n        }\n\n        // Bind resize event\n        $$.bindResize();\n\n        // export element of the chart\n        $$.api.element = $$.selectChart.node();\n    };\n\n    c3_chart_internal_fn.smoothLines = function (el, type) {\n        var $$ = this;\n        if (type === 'grid') {\n            el.each(function () {\n                var g = $$.d3.select(this),\n                    x1 = g.attr('x1'),\n                    x2 = g.attr('x2'),\n                    y1 = g.attr('y1'),\n                    y2 = g.attr('y2');\n                g.attr({\n                    'x1': Math.ceil(x1),\n                    'x2': Math.ceil(x2),\n                    'y1': Math.ceil(y1),\n                    'y2': Math.ceil(y2)\n                });\n            });\n        }\n    };\n\n    c3_chart_internal_fn.updateSizes = function () {\n        var $$ = this,\n            config = $$.config;\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n            hasArc = $$.hasArcType(),\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n            subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;\n\n        $$.currentWidth = $$.getCurrentWidth();\n        $$.currentHeight = $$.getCurrentHeight();\n\n        // for main\n        $$.margin = config.axis_rotated ? {\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n        } : {\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n        };\n\n        // for subchart\n        $$.margin2 = config.axis_rotated ? {\n            top: $$.margin.top,\n            right: NaN,\n            bottom: 20 + legendHeightForBottom,\n            left: $$.rotated_padding_left\n        } : {\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n            right: NaN,\n            bottom: xAxisHeight + legendHeightForBottom,\n            left: $$.margin.left\n        };\n\n        // for legend\n        $$.margin3 = {\n            top: 0,\n            right: NaN,\n            bottom: 0,\n            left: 0\n        };\n        if ($$.updateSizeForLegend) {\n            $$.updateSizeForLegend(legendHeight, legendWidth);\n        }\n\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n        if ($$.width < 0) {\n            $$.width = 0;\n        }\n        if ($$.height < 0) {\n            $$.height = 0;\n        }\n\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n        if ($$.width2 < 0) {\n            $$.width2 = 0;\n        }\n        if ($$.height2 < 0) {\n            $$.height2 = 0;\n        }\n\n        // for arc\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n        }\n        if ($$.updateRadius) {\n            $$.updateRadius();\n        }\n\n        if ($$.isLegendRight && hasArc) {\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n        }\n    };\n\n    c3_chart_internal_fn.updateTargets = function (targets) {\n        var $$ = this;\n\n        /*-- Main --*/\n\n        //-- Text --//\n        $$.updateTargetsForText(targets);\n\n        //-- Bar --//\n        $$.updateTargetsForBar(targets);\n\n        //-- Line --//\n        $$.updateTargetsForLine(targets);\n\n        //-- Arc --//\n        if ($$.hasArcType() && $$.updateTargetsForArc) {\n            $$.updateTargetsForArc(targets);\n        }\n\n        /*-- Sub --*/\n\n        if ($$.updateTargetsForSubchart) {\n            $$.updateTargetsForSubchart(targets);\n        }\n\n        // Fade-in each chart\n        $$.showTargets();\n    };\n    c3_chart_internal_fn.showTargets = function () {\n        var $$ = this;\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) {\n            return $$.isTargetToShow(d.id);\n        }).transition().duration($$.config.transition_duration).style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.redraw = function (options, transitions) {\n        var $$ = this,\n            main = $$.main,\n            d3 = $$.d3,\n            config = $$.config;\n        var areaIndices = $$.getShapeIndices($$.isAreaType),\n            barIndices = $$.getShapeIndices($$.isBarType),\n            lineIndices = $$.getShapeIndices($$.isLineType);\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\n        var hideAxis = $$.hasArcType();\n        var drawArea, drawBar, drawLine, xForText, yForText;\n        var duration, durationForExit, durationForAxis;\n        var waitForDraw, flow;\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets),\n            tickValues,\n            i,\n            intervalForCulling,\n            xDomainForZoom;\n        var xv = $$.xv.bind($$),\n            cx,\n            cy;\n\n        options = options || {};\n        withY = getOption(options, \"withY\", true);\n        withSubchart = getOption(options, \"withSubchart\", true);\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransform = getOption(options, \"withTransform\", false);\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n        withLegend = getOption(options, \"withLegend\", false);\n        withEventRect = getOption(options, \"withEventRect\", true);\n        withDimension = getOption(options, \"withDimension\", true);\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n        duration = withTransition ? config.transition_duration : 0;\n        durationForExit = withTransitionForExit ? duration : 0;\n        durationForAxis = withTransitionForAxis ? duration : 0;\n\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n        // update legend and transform each g\n        if (withLegend && config.legend_show) {\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n        } else if (withDimension) {\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n            // no need to update axis in it because they will be updated in redraw()\n            $$.updateDimension(true);\n        }\n\n        // MEMO: needed for grids calculation\n        if ($$.isCategorized() && targetsToShow.length === 0) {\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n        }\n\n        if (targetsToShow.length) {\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n            if (!config.axis_x_tick_values) {\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n            }\n        } else {\n            $$.xAxis.tickValues([]);\n            $$.subXAxis.tickValues([]);\n        }\n\n        if (config.zoom_rescale && !options.flow) {\n            xDomainForZoom = $$.x.orgDomain();\n        }\n\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n        }\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n        }\n\n        // axes\n        $$.axis.redraw(transitions, hideAxis);\n\n        // Update axis label\n        $$.axis.updateLabels(withTransition);\n\n        // show/hide if manual culling needed\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n            if (config.axis_x_tick_culling && tickValues) {\n                for (i = 1; i < tickValues.length; i++) {\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                        intervalForCulling = i;\n                        break;\n                    }\n                }\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                    var index = tickValues.indexOf(e);\n                    if (index >= 0) {\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                    }\n                });\n            } else {\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n            }\n        }\n\n        // setup drawer - MEMO: these must be called after axis updated\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n        // Update sub domain\n        if (withY) {\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n        }\n\n        // xgrid focus\n        $$.updateXgridFocus();\n\n        // Data empty label positioning and text.\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty).attr(\"x\", $$.width / 2).attr(\"y\", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1);\n\n        // grid\n        $$.updateGrid(duration);\n\n        // rect for regions\n        $$.updateRegion(duration);\n\n        // bars\n        $$.updateBar(durationForExit);\n\n        // lines, areas and cricles\n        $$.updateLine(durationForExit);\n        $$.updateArea(durationForExit);\n        $$.updateCircle();\n\n        // text\n        if ($$.hasDataLabel()) {\n            $$.updateText(durationForExit);\n        }\n\n        // title\n        if ($$.redrawTitle) {\n            $$.redrawTitle();\n        }\n\n        // arc\n        if ($$.redrawArc) {\n            $$.redrawArc(duration, durationForExit, withTransform);\n        }\n\n        // subchart\n        if ($$.redrawSubchart) {\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n        }\n\n        // circles for select\n        main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove();\n\n        // event rects will redrawn when flow called\n        if (config.interaction_enabled && !options.flow && withEventRect) {\n            $$.redrawEventRect();\n            if ($$.updateZoom) {\n                $$.updateZoom();\n            }\n        }\n\n        // update circleY based on updated parameters\n        $$.updateCircleY();\n\n        // generate circle x/y functions depending on updated params\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n        if (options.flow) {\n            flow = $$.generateFlow({\n                targets: targetsToShow,\n                flow: options.flow,\n                duration: options.flow.duration,\n                drawBar: drawBar,\n                drawLine: drawLine,\n                drawArea: drawArea,\n                cx: cx,\n                cy: cy,\n                xv: xv,\n                xForText: xForText,\n                yForText: yForText\n            });\n        }\n\n        if ((duration || flow) && $$.isTabVisible()) {\n            // Only use transition if tab visible. See #938.\n            // transition should be derived from one transition\n            d3.transition().duration(duration).each(function () {\n                var transitionsToWait = [];\n\n                // redraw and gather transitions\n                [$$.redrawBar(drawBar, true), $$.redrawLine(drawLine, true), $$.redrawArea(drawArea, true), $$.redrawCircle(cx, cy, true), $$.redrawText(xForText, yForText, options.flow, true), $$.redrawRegion(true), $$.redrawGrid(true)].forEach(function (transitions) {\n                    transitions.forEach(function (transition) {\n                        transitionsToWait.push(transition);\n                    });\n                });\n\n                // Wait for end of transitions to call flow and onrendered callback\n                waitForDraw = $$.generateWait();\n                transitionsToWait.forEach(function (t) {\n                    waitForDraw.add(t);\n                });\n            }).call(waitForDraw, function () {\n                if (flow) {\n                    flow();\n                }\n                if (config.onrendered) {\n                    config.onrendered.call($$);\n                }\n            });\n        } else {\n            $$.redrawBar(drawBar);\n            $$.redrawLine(drawLine);\n            $$.redrawArea(drawArea);\n            $$.redrawCircle(cx, cy);\n            $$.redrawText(xForText, yForText, options.flow);\n            $$.redrawRegion();\n            $$.redrawGrid();\n            if (config.onrendered) {\n                config.onrendered.call($$);\n            }\n        }\n\n        // update fadein condition\n        $$.mapToIds($$.data.targets).forEach(function (id) {\n            $$.withoutFadeIn[id] = true;\n        });\n    };\n\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\n        var $$ = this,\n            config = $$.config,\n            transitions;\n        options = options || {};\n        // same with redraw\n        options.withTransition = getOption(options, \"withTransition\", true);\n        options.withTransform = getOption(options, \"withTransform\", false);\n        options.withLegend = getOption(options, \"withLegend\", false);\n        // NOT same with redraw\n        options.withUpdateXDomain = true;\n        options.withUpdateOrgXDomain = true;\n        options.withTransitionForExit = false;\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n        $$.updateSizes();\n        // MEMO: called in updateLegend in redraw if withLegend\n        if (!(options.withLegend && config.legend_show)) {\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n            // Update scales\n            $$.updateScales();\n            $$.updateSvgSize();\n            // Update g positions\n            $$.transformAll(options.withTransitionForTransform, transitions);\n        }\n        // Draw with new sizes & scales\n        $$.redraw(options, transitions);\n    };\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\n        this.redraw({\n            withY: false,\n            withSubchart: false,\n            withEventRect: false,\n            withTransitionForAxis: false\n        });\n    };\n\n    c3_chart_internal_fn.isTimeSeries = function () {\n        return this.config.axis_x_type === 'timeseries';\n    };\n    c3_chart_internal_fn.isCategorized = function () {\n        return this.config.axis_x_type.indexOf('categor') >= 0;\n    };\n    c3_chart_internal_fn.isCustomX = function () {\n        var $$ = this,\n            config = $$.config;\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n    };\n\n    c3_chart_internal_fn.isTimeSeriesY = function () {\n        return this.config.axis_y_type === 'timeseries';\n    };\n\n    c3_chart_internal_fn.getTranslate = function (target) {\n        var $$ = this,\n            config = $$.config,\n            x,\n            y;\n        if (target === 'main') {\n            x = asHalfPixel($$.margin.left);\n            y = asHalfPixel($$.margin.top);\n        } else if (target === 'context') {\n            x = asHalfPixel($$.margin2.left);\n            y = asHalfPixel($$.margin2.top);\n        } else if (target === 'legend') {\n            x = $$.margin3.left;\n            y = $$.margin3.top;\n        } else if (target === 'x') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height;\n        } else if (target === 'y') {\n            x = 0;\n            y = config.axis_rotated ? $$.height : 0;\n        } else if (target === 'y2') {\n            x = config.axis_rotated ? 0 : $$.width;\n            y = config.axis_rotated ? 1 : 0;\n        } else if (target === 'subx') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height2;\n        } else if (target === 'arc') {\n            x = $$.arcWidth / 2;\n            y = $$.arcHeight / 2 - ($$.hasType('gauge') ? 6 : 0); // to prevent wrong display of min and max label\n        }\n        return \"translate(\" + x + \",\" + y + \")\";\n    };\n    c3_chart_internal_fn.initialOpacity = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n    };\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n    };\n    c3_chart_internal_fn.opacityForCircle = function (d) {\n        var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;\n        var opacity = isPointShouldBeShown ? 1 : 0;\n        return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;\n    };\n    c3_chart_internal_fn.opacityForText = function () {\n        return this.hasDataLabel() ? 1 : 0;\n    };\n    c3_chart_internal_fn.xx = function (d) {\n        return d ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.xv = function (d) {\n        var $$ = this,\n            value = d.value;\n        if ($$.isTimeSeries()) {\n            value = $$.parseDate(d.value);\n        } else if ($$.isCategorized() && typeof d.value === 'string') {\n            value = $$.config.axis_x_categories.indexOf(d.value);\n        }\n        return Math.ceil($$.x(value));\n    };\n    c3_chart_internal_fn.yv = function (d) {\n        var $$ = this,\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n        return Math.ceil(yScale(d.value));\n    };\n    c3_chart_internal_fn.subxx = function (d) {\n        return d ? this.subX(d.x) : null;\n    };\n\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n        var $$ = this,\n            xAxis,\n            yAxis,\n            y2Axis;\n        if (transitions && transitions.axisX) {\n            xAxis = transitions.axisX;\n        } else {\n            xAxis = $$.main.select('.' + CLASS.axisX);\n            if (withTransition) {\n                xAxis = xAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY) {\n            yAxis = transitions.axisY;\n        } else {\n            yAxis = $$.main.select('.' + CLASS.axisY);\n            if (withTransition) {\n                yAxis = yAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY2) {\n            y2Axis = transitions.axisY2;\n        } else {\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\n            if (withTransition) {\n                y2Axis = y2Axis.transition();\n            }\n        }\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    };\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n        var $$ = this;\n        $$.transformMain(withTransition, transitions);\n        if ($$.config.subchart_show) {\n            $$.transformContext(withTransition, transitions);\n        }\n        if ($$.legend) {\n            $$.transformLegend(withTransition);\n        }\n    };\n\n    c3_chart_internal_fn.updateSvgSize = function () {\n        var $$ = this,\n            brush = $$.svg.select(\".c3-brush .background\");\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);\n        $$.svg.select('.' + CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height);\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n    };\n\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n        var $$ = this;\n        if (!withoutAxis) {\n            if ($$.config.axis_rotated) {\n                $$.axes.x.call($$.xAxis);\n                $$.axes.subx.call($$.subXAxis);\n            } else {\n                $$.axes.y.call($$.yAxis);\n                $$.axes.y2.call($$.y2Axis);\n            }\n        }\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        $$.transformAll(false);\n    };\n\n    c3_chart_internal_fn.observeInserted = function (selection) {\n        var $$ = this,\n            observer;\n        if (typeof MutationObserver === 'undefined') {\n            window.console.error(\"MutationObserver not defined.\");\n            return;\n        }\n        observer = new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList' && mutation.previousSibling) {\n                    observer.disconnect();\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                    $$.intervalForObserveInserted = window.setInterval(function () {\n                        // parentNode will NOT be null when completed\n                        if (selection.node().parentNode) {\n                            window.clearInterval($$.intervalForObserveInserted);\n                            $$.updateDimension();\n                            if ($$.brush) {\n                                $$.brush.update();\n                            }\n                            $$.config.oninit.call($$);\n                            $$.redraw({\n                                withTransform: true,\n                                withUpdateXDomain: true,\n                                withUpdateOrgXDomain: true,\n                                withTransition: false,\n                                withTransitionForTransform: false,\n                                withLegend: true\n                            });\n                            selection.transition().style('opacity', 1);\n                        }\n                    }, 10);\n                }\n            });\n        });\n        observer.observe(selection.node(), { attributes: true, childList: true, characterData: true });\n    };\n\n    c3_chart_internal_fn.bindResize = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.resizeFunction = $$.generateResize(); // need to call .remove\n\n        $$.resizeFunction.add(function () {\n            config.onresize.call($$);\n        });\n        if (config.resize_auto) {\n            $$.resizeFunction.add(function () {\n                if ($$.resizeTimeout !== undefined) {\n                    window.clearTimeout($$.resizeTimeout);\n                }\n                $$.resizeTimeout = window.setTimeout(function () {\n                    delete $$.resizeTimeout;\n                    $$.api.flush();\n                }, 100);\n            });\n        }\n        $$.resizeFunction.add(function () {\n            config.onresized.call($$);\n        });\n\n        $$.resizeIfElementDisplayed = function () {\n            // if element not displayed skip it\n            if ($$.api == null || !$$.api.element.offsetParent) {\n                return;\n            }\n\n            $$.resizeFunction();\n        };\n\n        if (window.attachEvent) {\n            window.attachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', $$.resizeIfElementDisplayed, false);\n        } else {\n            // fallback to this, if this is a very old browser\n            var wrapper = window.onresize;\n            if (!wrapper) {\n                // create a wrapper that will call all charts\n                wrapper = $$.generateResize();\n            } else if (!wrapper.add || !wrapper.remove) {\n                // there is already a handler registered, make sure we call it too\n                wrapper = $$.generateResize();\n                wrapper.add(window.onresize);\n            }\n            // add this graph to the wrapper, we will be removed if the user calls destroy\n            wrapper.add($$.resizeFunction);\n            window.onresize = function () {\n                // if element not displayed skip it\n                if (!$$.api.element.offsetParent) {\n                    return;\n                }\n\n                wrapper();\n            };\n        }\n    };\n\n    c3_chart_internal_fn.generateResize = function () {\n        var resizeFunctions = [];\n        function callResizeFunctions() {\n            resizeFunctions.forEach(function (f) {\n                f();\n            });\n        }\n        callResizeFunctions.add = function (f) {\n            resizeFunctions.push(f);\n        };\n        callResizeFunctions.remove = function (f) {\n            for (var i = 0; i < resizeFunctions.length; i++) {\n                if (resizeFunctions[i] === f) {\n                    resizeFunctions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        return callResizeFunctions;\n    };\n\n    c3_chart_internal_fn.endall = function (transition, callback) {\n        var n = 0;\n        transition.each(function () {\n            ++n;\n        }).each(\"end\", function () {\n            if (! --n) {\n                callback.apply(this, arguments);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateWait = function () {\n        var transitionsToWait = [],\n            f = function f(transition, callback) {\n            var timer = setInterval(function () {\n                var done = 0;\n                transitionsToWait.forEach(function (t) {\n                    if (t.empty()) {\n                        done += 1;\n                        return;\n                    }\n                    try {\n                        t.transition();\n                    } catch (e) {\n                        done += 1;\n                    }\n                });\n                if (done === transitionsToWait.length) {\n                    clearInterval(timer);\n                    if (callback) {\n                        callback();\n                    }\n                }\n            }, 10);\n        };\n        f.add = function (transition) {\n            transitionsToWait.push(transition);\n        };\n        return f;\n    };\n\n    c3_chart_internal_fn.parseDate = function (date) {\n        var $$ = this,\n            parsedDate;\n        if (date instanceof Date) {\n            parsedDate = date;\n        } else if (typeof date === 'string') {\n            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n        } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {\n            parsedDate = new Date(+date);\n        } else if (typeof date === 'number' && !isNaN(date)) {\n            parsedDate = new Date(+date);\n        }\n        if (!parsedDate || isNaN(+parsedDate)) {\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n        }\n        return parsedDate;\n    };\n\n    c3_chart_internal_fn.isTabVisible = function () {\n        var hidden;\n        if (typeof document.hidden !== \"undefined\") {\n            // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n        }\n\n        return document[hidden] ? false : true;\n    };\n\n    c3_chart_internal_fn.isValue = isValue;\n    c3_chart_internal_fn.isFunction = isFunction;\n    c3_chart_internal_fn.isString = isString;\n    c3_chart_internal_fn.isUndefined = isUndefined;\n    c3_chart_internal_fn.isDefined = isDefined;\n    c3_chart_internal_fn.ceil10 = ceil10;\n    c3_chart_internal_fn.asHalfPixel = asHalfPixel;\n    c3_chart_internal_fn.diffDomain = diffDomain;\n    c3_chart_internal_fn.isEmpty = isEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.getOption = getOption;\n    c3_chart_internal_fn.hasValue = hasValue;\n    c3_chart_internal_fn.sanitise = sanitise;\n    c3_chart_internal_fn.getPathBox = getPathBox;\n    c3_chart_internal_fn.CLASS = CLASS;\n\n    /* jshint ignore:start */\n\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n    // this polyfill to avoid the confusion.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (oThis) {\n            if (typeof this !== 'function') {\n                // closest thing possible to the ECMAScript 5\n                // internal IsCallable function\n                throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n            }\n\n            var aArgs = Array.prototype.slice.call(arguments, 1),\n                fToBind = this,\n                fNOP = function fNOP() {},\n                fBound = function fBound() {\n                return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n            fNOP.prototype = this.prototype;\n            fBound.prototype = new fNOP();\n\n            return fBound;\n        };\n    }\n\n    // SVGPathSeg API polyfill\n    // https://github.com/progers/pathseg\n    //\n    // This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n    // SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n    // changes which were implemented in Firefox 43 and Chrome 46.\n\n    (function () {\n\n        if (!(\"SVGPathSeg\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n            window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\n                this.pathSegType = type;\n                this.pathSegTypeAsLetter = typeAsLetter;\n                this._owningPathSegList = owningPathSegList;\n            };\n\n            window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\n\n            window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\n            window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n            window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n            window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n            window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n            window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n            window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\n            window.SVGPathSeg.PATHSEG_ARC_REL = 11;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n            // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n            window.SVGPathSeg.prototype._segmentChanged = function () {\n                if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);\n            };\n\n            window.SVGPathSegClosePath = function (owningPathSegList) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n            };\n            window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegClosePath.prototype.toString = function () {\n                return \"[object SVGPathSegClosePath]\";\n            };\n            window.SVGPathSegClosePath.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter;\n            };\n            window.SVGPathSegClosePath.prototype.clone = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n\n            window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoAbs]\";\n            };\n            window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoRel]\";\n            };\n            window.SVGPathSegMovetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoRel.prototype.clone = function () {\n                return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoAbs]\";\n            };\n            window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoRel]\";\n            };\n            window.SVGPathSegLinetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicRel]\";\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcAbs.prototype.toString = function () {\n                return \"[object SVGPathSegArcAbs]\";\n            };\n            window.SVGPathSegArcAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcAbs.prototype.clone = function () {\n                return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcRel.prototype.toString = function () {\n                return \"[object SVGPathSegArcRel]\";\n            };\n            window.SVGPathSegArcRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcRel.prototype.clone = function () {\n                return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalAbs]\";\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalRel]\";\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalAbs]\";\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalRel]\";\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            // Add createSVGPathSeg* functions to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\n            window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\n                return new window.SVGPathSegMovetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\n                return new window.SVGPathSegMovetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\n                return new window.SVGPathSegLinetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\n                return new window.SVGPathSegLinetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\n            };\n\n            if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\n                // Add getPathSegAtLength to SVGPathElement.\n                // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\n                // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\n                window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\n                    if (distance === undefined || !isFinite(distance)) throw \"Invalid arguments.\";\n\n                    var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                    measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\n                    var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\n\n                    // If the path is empty, return 0.\n                    if (lastPathSegment <= 0) return 0;\n\n                    do {\n                        measurementElement.pathSegList.removeItem(lastPathSegment);\n                        if (distance > measurementElement.getTotalLength()) break;\n                        lastPathSegment--;\n                    } while (lastPathSegment > 0);\n                    return lastPathSegment;\n                };\n            }\n        }\n\n        if (!(\"SVGPathSegList\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n            window.SVGPathSegList = function (pathElement) {\n                this._pathElement = pathElement;\n                this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n                // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n                this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n                this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\n\n            Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\n                get: function get() {\n                    this._checkPathSynchronizedToList();\n                    return this._list.length;\n                },\n                enumerable: true\n            });\n\n            // Add the pathSegList accessors to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n            Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\n                get: function get() {\n                    if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);\n                    return this._pathSegList;\n                },\n                enumerable: true\n            });\n            // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\n            Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n\n            // Process any pending mutations to the path element and update the list as needed.\n            // This should be the first call of all public functions and is needed because\n            // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n            window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\n                this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n            };\n\n            window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\n                if (!this._pathElement) return;\n                var hasPathMutations = false;\n                mutationRecords.forEach(function (record) {\n                    if (record.attributeName == \"d\") hasPathMutations = true;\n                });\n                if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n            };\n\n            // Serialize the list and update the path's 'd' attribute.\n            window.SVGPathSegList.prototype._writeListToPath = function () {\n                this._pathElementMutationObserver.disconnect();\n                this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            // When a path segment changes the list needs to be synchronized back to the path element.\n            window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.clear = function () {\n                this._checkPathSynchronizedToList();\n\n                this._list.forEach(function (pathSeg) {\n                    pathSeg._owningPathSegList = null;\n                });\n                this._list = [];\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.initialize = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                this._list = [newItem];\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype._checkValidIndex = function (index) {\n                if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw \"INDEX_SIZE_ERR\";\n            };\n\n            window.SVGPathSegList.prototype.getItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                return this._list[index];\n            };\n\n            window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n                if (index > this.numberOfItems) index = this.numberOfItems;\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.splice(index, 0, newItem);\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._checkValidIndex(index);\n                this._list[index] = newItem;\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.removeItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                var item = this._list[index];\n                this._list.splice(index, 1);\n                this._writeListToPath();\n                return item;\n            };\n\n            window.SVGPathSegList.prototype.appendItem = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.push(newItem);\n                newItem._owningPathSegList = this;\n                // TODO: Optimize this to just append to the existing attribute.\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\n                var string = \"\";\n                var first = true;\n                pathSegArray.forEach(function (pathSeg) {\n                    if (first) {\n                        first = false;\n                        string += pathSeg._asPathString();\n                    } else {\n                        string += \" \" + pathSeg._asPathString();\n                    }\n                });\n                return string;\n            };\n\n            // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n            window.SVGPathSegList.prototype._parsePath = function (string) {\n                if (!string || string.length == 0) return [];\n\n                var owningPathSegList = this;\n\n                var Builder = function Builder() {\n                    this.pathSegList = [];\n                };\n\n                Builder.prototype.appendSegment = function (pathSeg) {\n                    this.pathSegList.push(pathSeg);\n                };\n\n                var Source = function Source(string) {\n                    this._string = string;\n                    this._currentIndex = 0;\n                    this._endIndex = this._string.length;\n                    this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\n\n                    this._skipOptionalSpaces();\n                };\n\n                Source.prototype._isCurrentSpace = function () {\n                    var character = this._string[this._currentIndex];\n                    return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n                };\n\n                Source.prototype._skipOptionalSpaces = function () {\n                    while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\n                        this._currentIndex++;\n                    }return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype._skipOptionalSpacesOrDelimiter = function () {\n                    if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\") return false;\n                    if (this._skipOptionalSpaces()) {\n                        if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                            this._currentIndex++;\n                            this._skipOptionalSpaces();\n                        }\n                    }\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.hasMoreData = function () {\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.peekSegmentType = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    return this._pathSegTypeFromChar(lookahead);\n                };\n\n                Source.prototype._pathSegTypeFromChar = function (lookahead) {\n                    switch (lookahead) {\n                        case \"Z\":\n                        case \"z\":\n                            return window.SVGPathSeg.PATHSEG_CLOSEPATH;\n                        case \"M\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\n                        case \"m\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                        case \"L\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        case \"l\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        case \"C\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                        case \"c\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                        case \"Q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                        case \"q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                        case \"A\":\n                            return window.SVGPathSeg.PATHSEG_ARC_ABS;\n                        case \"a\":\n                            return window.SVGPathSeg.PATHSEG_ARC_REL;\n                        case \"H\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                        case \"h\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                        case \"V\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                        case \"v\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                        case \"S\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                        case \"s\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                        case \"T\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                        case \"t\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                        default:\n                            return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                    }\n                };\n\n                Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\n                    // Check for remaining coordinates in the current command.\n                    if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || lookahead >= \"0\" && lookahead <= \"9\") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        return previousCommand;\n                    }\n                    return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                };\n\n                Source.prototype.initialCommandIsMoveTo = function () {\n                    // If the path is empty it is still valid, so return true.\n                    if (!this.hasMoreData()) return true;\n                    var command = this.peekSegmentType();\n                    // Path must start with moveTo.\n                    return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                };\n\n                // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n                // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n                Source.prototype._parseNumber = function () {\n                    var exponent = 0;\n                    var integer = 0;\n                    var frac = 1;\n                    var decimal = 0;\n                    var sign = 1;\n                    var expsign = 1;\n\n                    var startIndex = this._currentIndex;\n\n                    this._skipOptionalSpaces();\n\n                    // Read the sign.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                        this._currentIndex++;\n                        sign = -1;\n                    }\n\n                    if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\")\n                        // The first character of a number must be one of [0-9+-.].\n                        return undefined;\n\n                    // Read the integer part, build right-to-left.\n                    var startIntPartIndex = this._currentIndex;\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                        this._currentIndex++;\n                    } // Advance to first non-digit.\n\n                    if (this._currentIndex != startIntPartIndex) {\n                        var scanIntPartIndex = this._currentIndex - 1;\n                        var multiplier = 1;\n                        while (scanIntPartIndex >= startIntPartIndex) {\n                            integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                            multiplier *= 10;\n                        }\n                    }\n\n                    // Read the decimals.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                        this._currentIndex++;\n\n                        // There must be a least one digit following the .\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            frac *= 10;\n                            decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n                            this._currentIndex += 1;\n                        }\n                    }\n\n                    // Read the exponent part.\n                    if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\") {\n                        this._currentIndex++;\n\n                        // Read the sign of the exponent.\n                        if (this._string.charAt(this._currentIndex) == \"+\") {\n                            this._currentIndex++;\n                        } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                            this._currentIndex++;\n                            expsign = -1;\n                        }\n\n                        // There must be an exponent.\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            exponent *= 10;\n                            exponent += this._string.charAt(this._currentIndex) - \"0\";\n                            this._currentIndex++;\n                        }\n                    }\n\n                    var number = integer + decimal;\n                    number *= sign;\n\n                    if (exponent) number *= Math.pow(10, expsign * exponent);\n\n                    if (startIndex == this._currentIndex) return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n\n                    return number;\n                };\n\n                Source.prototype._parseArcFlag = function () {\n                    if (this._currentIndex >= this._endIndex) return undefined;\n                    var flag = false;\n                    var flagChar = this._string.charAt(this._currentIndex++);\n                    if (flagChar == \"0\") flag = false;else if (flagChar == \"1\") flag = true;else return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n                    return flag;\n                };\n\n                Source.prototype.parseSegment = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    var command = this._pathSegTypeFromChar(lookahead);\n                    if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\n                        // Possibly an implicit command. Not allowed if this is the first command.\n                        if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                        command = this._nextCommandHelper(lookahead, this._previousCommand);\n                        if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                    } else {\n                        this._currentIndex++;\n                    }\n\n                    this._previousCommand = command;\n\n                    switch (command) {\n                        case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                            return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                            return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                            return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                            return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                            return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                            return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                            return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                            return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                            this._skipOptionalSpaces();\n                            return new window.SVGPathSegClosePath(owningPathSegList);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_ARC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        default:\n                            throw \"Unknown path seg type.\";\n                    }\n                };\n\n                var builder = new Builder();\n                var source = new Source(string);\n\n                if (!source.initialCommandIsMoveTo()) return [];\n                while (source.hasMoreData()) {\n                    var pathSeg = source.parseSegment();\n                    if (!pathSeg) return [];\n                    builder.appendSegment(pathSeg);\n                }\n\n                return builder.pathSegList;\n            };\n        }\n    })();\n\n    // String.padEnd polyfill for IE11\n    //\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\n    if (!String.prototype.padEnd) {\n        String.prototype.padEnd = function padEnd(targetLength, padString) {\n            targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\n            padString = String(typeof padString !== 'undefined' ? padString : ' ');\n            if (this.length > targetLength) {\n                return String(this);\n            } else {\n                targetLength = targetLength - this.length;\n                if (targetLength > padString.length) {\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n                }\n                return String(this) + padString.slice(0, targetLength);\n            }\n        };\n    }\n\n    /* jshint ignore:end */\n\n    c3_chart_fn.axis = function () {};\n    c3_chart_fn.axis.labels = function (labels) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            Object.keys(labels).forEach(function (axisId) {\n                $$.axis.setLabelText(axisId, labels[axisId]);\n            });\n            $$.axis.updateLabels();\n        }\n        // TODO: return some values?\n    };\n    c3_chart_fn.axis.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {\n                if (isValue(max.x)) {\n                    config.axis_x_max = max.x;\n                }\n                if (isValue(max.y)) {\n                    config.axis_y_max = max.y;\n                }\n                if (isValue(max.y2)) {\n                    config.axis_y2_max = max.y2;\n                }\n            } else {\n                config.axis_y_max = config.axis_y2_max = max;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_max,\n                y: config.axis_y_max,\n                y2: config.axis_y2_max\n            };\n        }\n    };\n    c3_chart_fn.axis.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {\n                if (isValue(min.x)) {\n                    config.axis_x_min = min.x;\n                }\n                if (isValue(min.y)) {\n                    config.axis_y_min = min.y;\n                }\n                if (isValue(min.y2)) {\n                    config.axis_y2_min = min.y2;\n                }\n            } else {\n                config.axis_y_min = config.axis_y2_min = min;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_min,\n                y: config.axis_y_min,\n                y2: config.axis_y2_min\n            };\n        }\n    };\n    c3_chart_fn.axis.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.axis.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.axis.min(range.min);\n            }\n        } else {\n            return {\n                max: this.axis.max(),\n                min: this.axis.min()\n            };\n        }\n    };\n\n    c3_chart_fn.category = function (i, category) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length > 1) {\n            config.axis_x_categories[i] = category;\n            $$.redraw();\n        }\n        return config.axis_x_categories[i];\n    };\n    c3_chart_fn.categories = function (categories) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!arguments.length) {\n            return config.axis_x_categories;\n        }\n        config.axis_x_categories = categories;\n        $$.redraw();\n        return config.axis_x_categories;\n    };\n\n    c3_chart_fn.resize = function (size) {\n        var $$ = this.internal,\n            config = $$.config;\n        config.size_width = size ? size.width : null;\n        config.size_height = size ? size.height : null;\n        this.flush();\n    };\n\n    c3_chart_fn.flush = function () {\n        var $$ = this.internal;\n        $$.updateAndRedraw({ withLegend: true, withTransition: false, withTransitionForTransform: false });\n    };\n\n    c3_chart_fn.destroy = function () {\n        var $$ = this.internal;\n\n        window.clearInterval($$.intervalForObserveInserted);\n\n        if ($$.resizeTimeout !== undefined) {\n            window.clearTimeout($$.resizeTimeout);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', $$.resizeIfElementDisplayed);\n        } else {\n            var wrapper = window.onresize;\n            // check if no one else removed our wrapper and remove our resizeFunction from it\n            if (wrapper && wrapper.add && wrapper.remove) {\n                wrapper.remove($$.resizeFunction);\n            }\n        }\n\n        // remove the inner resize functions\n        $$.resizeFunction.remove();\n\n        $$.selectChart.classed('c3', false).html(\"\");\n\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n        Object.keys($$).forEach(function (key) {\n            $$[key] = null;\n        });\n\n        return null;\n    };\n\n    // TODO: fix\n    c3_chart_fn.color = function (id) {\n        var $$ = this.internal;\n        return $$.color(id); // more patterns\n    };\n\n    c3_chart_fn.data = function (targetIds) {\n        var targets = this.internal.data.targets;\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n            return [].concat(targetIds).indexOf(t.id) >= 0;\n        });\n    };\n    c3_chart_fn.data.shown = function (targetIds) {\n        return this.internal.filterTargetsToShow(this.data(targetIds));\n    };\n    c3_chart_fn.data.values = function (targetId) {\n        var targets,\n            values = null;\n        if (targetId) {\n            targets = this.data(targetId);\n            values = targets[0] ? targets[0].values.map(function (d) {\n                return d.value;\n            }) : null;\n        }\n        return values;\n    };\n    c3_chart_fn.data.names = function (names) {\n        this.internal.clearLegendItemTextBoxCache();\n        return this.internal.updateDataAttributes('names', names);\n    };\n    c3_chart_fn.data.colors = function (colors) {\n        return this.internal.updateDataAttributes('colors', colors);\n    };\n    c3_chart_fn.data.axes = function (axes) {\n        return this.internal.updateDataAttributes('axes', axes);\n    };\n\n    c3_chart_fn.flow = function (args) {\n        var $$ = this.internal,\n            targets,\n            data,\n            notfoundIds = [],\n            orgDataCount = $$.getMaxDataCount(),\n            dataCount,\n            domain,\n            baseTarget,\n            baseValue,\n            length = 0,\n            tail = 0,\n            diff,\n            to;\n\n        if (args.json) {\n            data = $$.convertJsonToData(args.json, args.keys);\n        } else if (args.rows) {\n            data = $$.convertRowsToData(args.rows);\n        } else if (args.columns) {\n            data = $$.convertColumnsToData(args.columns);\n        } else {\n            return;\n        }\n        targets = $$.convertDataToTargets(data, true);\n\n        // Update/Add data\n        $$.data.targets.forEach(function (t) {\n            var found = false,\n                i,\n                j;\n            for (i = 0; i < targets.length; i++) {\n                if (t.id === targets[i].id) {\n                    found = true;\n\n                    if (t.values[t.values.length - 1]) {\n                        tail = t.values[t.values.length - 1].index + 1;\n                    }\n                    length = targets[i].values.length;\n\n                    for (j = 0; j < length; j++) {\n                        targets[i].values[j].index = tail + j;\n                        if (!$$.isTimeSeries()) {\n                            targets[i].values[j].x = tail + j;\n                        }\n                    }\n                    t.values = t.values.concat(targets[i].values);\n\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n            if (!found) {\n                notfoundIds.push(t.id);\n            }\n        });\n\n        // Append null for not found targets\n        $$.data.targets.forEach(function (t) {\n            var i, j;\n            for (i = 0; i < notfoundIds.length; i++) {\n                if (t.id === notfoundIds[i]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                    for (j = 0; j < length; j++) {\n                        t.values.push({\n                            id: t.id,\n                            index: tail + j,\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                            value: null\n                        });\n                    }\n                }\n            }\n        });\n\n        // Generate null values for new target\n        if ($$.data.targets.length) {\n            targets.forEach(function (t) {\n                var i,\n                    missing = [];\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                    missing.push({\n                        id: t.id,\n                        index: i,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                        value: null\n                    });\n                }\n                t.values.forEach(function (v) {\n                    v.index += tail;\n                    if (!$$.isTimeSeries()) {\n                        v.x += tail;\n                    }\n                });\n                t.values = missing.concat(t.values);\n            });\n        }\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n        // check data count because behavior needs to change when it's only one\n        dataCount = $$.getMaxDataCount();\n        baseTarget = $$.data.targets[0];\n        baseValue = baseTarget.values[0];\n\n        // Update length to flow if needed\n        if (isDefined(args.to)) {\n            length = 0;\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n            baseTarget.values.forEach(function (v) {\n                if (v.x < to) {\n                    length++;\n                }\n            });\n        } else if (isDefined(args.length)) {\n            length = args.length;\n        }\n\n        // If only one data, update the domain to flow from left edge of the chart\n        if (!orgDataCount) {\n            if ($$.isTimeSeries()) {\n                if (baseTarget.values.length > 1) {\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n                } else {\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n                }\n            } else {\n                diff = 1;\n            }\n            domain = [baseValue.x - diff, baseValue.x];\n            $$.updateXDomain(null, true, true, false, domain);\n        } else if (orgDataCount === 1) {\n            if ($$.isTimeSeries()) {\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n                $$.updateXDomain(null, true, true, false, domain);\n            }\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({\n            flow: {\n                index: baseValue.index,\n                length: length,\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n                done: args.done,\n                orgDataCount: orgDataCount\n            },\n            withLegend: true,\n            withTransition: orgDataCount > 1,\n            withTrimXDomain: false,\n            withUpdateXAxis: true\n        });\n    };\n\n    c3_chart_internal_fn.generateFlow = function (args) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n\n        return function () {\n            var targets = args.targets,\n                flow = args.flow,\n                drawBar = args.drawBar,\n                drawLine = args.drawLine,\n                drawArea = args.drawArea,\n                cx = args.cx,\n                cy = args.cy,\n                xv = args.xv,\n                xForText = args.xForText,\n                yForText = args.yForText,\n                duration = args.duration;\n\n            var translateX,\n                scaleX = 1,\n                transform,\n                flowIndex = flow.index,\n                flowLength = flow.length,\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n                orgDomain = $$.x.domain(),\n                domain,\n                durationForFlow = flow.duration || duration,\n                done = flow.done || function () {},\n                wait = $$.generateWait();\n\n            var xgrid = $$.xgrid || d3.selectAll([]),\n                xgridLines = $$.xgridLines || d3.selectAll([]),\n                mainRegion = $$.mainRegion || d3.selectAll([]),\n                mainText = $$.mainText || d3.selectAll([]),\n                mainBar = $$.mainBar || d3.selectAll([]),\n                mainLine = $$.mainLine || d3.selectAll([]),\n                mainArea = $$.mainArea || d3.selectAll([]),\n                mainCircle = $$.mainCircle || d3.selectAll([]);\n\n            // set flag\n            $$.flowing = true;\n\n            // remove head data after rendered\n            $$.data.targets.forEach(function (d) {\n                d.values.splice(0, flowLength);\n            });\n\n            // update x domain to generate axis elements for flow\n            domain = $$.updateXDomain(targets, true, true);\n            // update elements related to x scale\n            if ($$.updateXGrid) {\n                $$.updateXGrid(true);\n            }\n\n            // generate transform to flow\n            if (!flow.orgDataCount) {\n                // if empty\n                if ($$.data.targets[0].values.length !== 1) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    if ($$.isTimeSeries()) {\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                    } else {\n                        translateX = diffDomain(domain) / 2;\n                    }\n                }\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                }\n            }\n            scaleX = diffDomain(orgDomain) / diffDomain(domain);\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n            $$.hideXGridFocus();\n\n            d3.transition().ease('linear').duration(durationForFlow).each(function () {\n                wait.add($$.axes.x.transition().call($$.xAxis));\n                wait.add(mainBar.transition().attr('transform', transform));\n                wait.add(mainLine.transition().attr('transform', transform));\n                wait.add(mainArea.transition().attr('transform', transform));\n                wait.add(mainCircle.transition().attr('transform', transform));\n                wait.add(mainText.transition().attr('transform', transform));\n                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n                wait.add(xgrid.transition().attr('transform', transform));\n                wait.add(xgridLines.transition().attr('transform', transform));\n            }).call(wait, function () {\n                var i,\n                    shapes = [],\n                    texts = [],\n                    eventRects = [];\n\n                // remove flowed elements\n                if (flowLength) {\n                    for (i = 0; i < flowLength; i++) {\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n                    }\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n                    $$.svg.select('.' + CLASS.xgrid).remove();\n                }\n\n                // draw again for removing flowed elements and reverting attr\n                xgrid.attr('transform', null).attr($$.xgridAttr);\n                xgridLines.attr('transform', null);\n                xgridLines.select('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv);\n                xgridLines.select('text').attr(\"x\", config.axis_rotated ? $$.width : 0).attr(\"y\", xv);\n                mainBar.attr('transform', null).attr(\"d\", drawBar);\n                mainLine.attr('transform', null).attr(\"d\", drawLine);\n                mainArea.attr('transform', null).attr(\"d\", drawArea);\n                mainCircle.attr('transform', null).attr(\"cx\", cx).attr(\"cy\", cy);\n                mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));\n                mainRegion.attr('transform', null);\n                mainRegion.select('rect').filter($$.isRegionOnX).attr(\"x\", $$.regionX.bind($$)).attr(\"width\", $$.regionWidth.bind($$));\n\n                if (config.interaction_enabled) {\n                    $$.redrawEventRect();\n                }\n\n                // callback for end of flow\n                done();\n\n                $$.flowing = false;\n            });\n        };\n    };\n\n    c3_chart_fn.focus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();\n        this.defocus();\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.expandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, true);\n\n        $$.focusedTargetIds = targetIds;\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n\n    c3_chart_fn.defocus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, false);\n\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n        $$.defocusedTargetIds = targetIds;\n    };\n\n    c3_chart_fn.revert = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        if ($$.config.legend_show) {\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n            $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {\n                return $$.d3.select(this).classed(CLASS.legendItemFocused);\n            }).classed(CLASS.legendItemFocused, false);\n        }\n\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n    };\n\n    c3_chart_fn.xgrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_x_lines;\n        }\n        config.grid_x_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_x_lines;\n    };\n    c3_chart_fn.xgrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.xgrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, true);\n    };\n\n    c3_chart_fn.ygrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_y_lines;\n        }\n        config.grid_y_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_y_lines;\n    };\n    c3_chart_fn.ygrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.ygrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, false);\n    };\n\n    c3_chart_fn.groups = function (groups) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (isUndefined(groups)) {\n            return config.data_groups;\n        }\n        config.data_groups = groups;\n        $$.redraw();\n        return config.data_groups;\n    };\n\n    c3_chart_fn.legend = function () {};\n    c3_chart_fn.legend.show = function (targetIds) {\n        var $$ = this.internal;\n        $$.showLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n    c3_chart_fn.legend.hide = function (targetIds) {\n        var $$ = this.internal;\n        $$.hideLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n\n    c3_chart_fn.load = function (args) {\n        var $$ = this.internal,\n            config = $$.config;\n        // update xs if specified\n        if (args.xs) {\n            $$.addXs(args.xs);\n        }\n        // update names if exists\n        if ('names' in args) {\n            c3_chart_fn.data.names.bind(this)(args.names);\n        }\n        // update classes if exists\n        if ('classes' in args) {\n            Object.keys(args.classes).forEach(function (id) {\n                config.data_classes[id] = args.classes[id];\n            });\n        }\n        // update categories if exists\n        if ('categories' in args && $$.isCategorized()) {\n            config.axis_x_categories = args.categories;\n        }\n        // update axes if exists\n        if ('axes' in args) {\n            Object.keys(args.axes).forEach(function (id) {\n                config.data_axes[id] = args.axes[id];\n            });\n        }\n        // update colors if exists\n        if ('colors' in args) {\n            Object.keys(args.colors).forEach(function (id) {\n                config.data_colors[id] = args.colors[id];\n            });\n        }\n        // use cache if exists\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n            $$.load($$.getCaches(args.cacheIds), args.done);\n            return;\n        }\n        // unload if needed\n        if ('unload' in args) {\n            // TODO: do not unload if target will load (included in url/rows/columns)\n            $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {\n                $$.loadFromArgs(args);\n            });\n        } else {\n            $$.loadFromArgs(args);\n        }\n    };\n\n    c3_chart_fn.unload = function (args) {\n        var $$ = this.internal;\n        args = args || {};\n        if (args instanceof Array) {\n            args = { ids: args };\n        } else if (typeof args === 'string') {\n            args = { ids: [args] };\n        }\n        $$.unload($$.mapToTargetIds(args.ids), function () {\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n            if (args.done) {\n                args.done();\n            }\n        });\n    };\n\n    c3_chart_fn.regions = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = regions;\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.add = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = config.regions.concat(regions);\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.remove = function (options) {\n        var $$ = this.internal,\n            config = $$.config,\n            duration,\n            classes,\n            regions;\n\n        options = options || {};\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\n            return '.' + c;\n        }));\n        (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();\n\n        config.regions = config.regions.filter(function (region) {\n            var found = false;\n            if (!region['class']) {\n                return true;\n            }\n            region['class'].split(' ').forEach(function (c) {\n                if (classes.indexOf(c) >= 0) {\n                    found = true;\n                }\n            });\n            return !found;\n        });\n\n        return config.regions;\n    };\n\n    c3_chart_fn.selected = function (targetId) {\n        var $$ = this.internal,\n            d3 = $$.d3;\n        return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {\n            return d3.select(this).classed(CLASS.SELECTED);\n        }).map(function (d) {\n            return d.map(function (d) {\n                var data = d.__data__;return data.data ? data.data : data;\n            });\n        }));\n    };\n    c3_chart_fn.select = function (ids, indices, resetOther) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d) && !isSelected) {\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n                }\n            } else if (isDefined(resetOther) && resetOther) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        });\n    };\n    c3_chart_fn.unselect = function (ids, indices) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d)) {\n                    if (isSelected) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                }\n            }\n        });\n    };\n\n    c3_chart_fn.show = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.removeHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('opacity', 1, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 1);\n        });\n\n        if (options.withLegend) {\n            $$.showLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.hide = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.addHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('opacity', 0, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 0);\n        });\n\n        if (options.withLegend) {\n            $$.hideLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.toggle = function (targetIds, options) {\n        var that = this,\n            $$ = this.internal;\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n        });\n    };\n\n    c3_chart_fn.tooltip = function () {};\n    c3_chart_fn.tooltip.show = function (args) {\n        var $$ = this.internal,\n            index,\n            mouse;\n\n        // determine mouse position on the chart\n        if (args.mouse) {\n            mouse = args.mouse;\n        }\n\n        // determine focus data\n        if (args.data) {\n            if ($$.isMultipleX()) {\n                // if multiple xs, target point will be determined by mouse\n                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n                index = null;\n            } else {\n                // TODO: when tooltip_grouped = false\n                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n            }\n        } else if (typeof args.x !== 'undefined') {\n            index = $$.getIndexByX(args.x);\n        } else if (typeof args.index !== 'undefined') {\n            index = args.index;\n        }\n\n        // emulate mouse events to show\n        $$.dispatchEvent('mouseover', index, mouse);\n        $$.dispatchEvent('mousemove', index, mouse);\n\n        $$.config.tooltip_onshow.call($$, args.data);\n    };\n    c3_chart_fn.tooltip.hide = function () {\n        // TODO: get target data by checking the state of focus\n        this.internal.dispatchEvent('mouseout', 0);\n\n        this.internal.config.tooltip_onhide.call(this);\n    };\n\n    c3_chart_fn.transform = function (type, targetIds) {\n        var $$ = this.internal,\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? { withTransform: true } : null;\n        $$.transformTo(targetIds, type, options);\n    };\n\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n        var $$ = this,\n            withTransitionForAxis = !$$.hasArcType(),\n            options = optionsForRedraw || { withTransitionForAxis: withTransitionForAxis };\n        options.withTransitionForTransform = false;\n        $$.transiting = false;\n        $$.setTargetType(targetIds, type);\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n        $$.updateAndRedraw(options);\n    };\n\n    c3_chart_fn.x = function (x) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetX($$.data.targets, x);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n    c3_chart_fn.xs = function (xs) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetXs($$.data.targets, xs);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n\n    c3_chart_fn.zoom = function (domain) {\n        var $$ = this.internal;\n        if (domain) {\n            if ($$.isTimeSeries()) {\n                domain = domain.map(function (x) {\n                    return $$.parseDate(x);\n                });\n            }\n            $$.brush.extent(domain);\n            $$.redraw({ withUpdateXDomain: true, withY: $$.config.zoom_rescale });\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n        }\n        return $$.brush.extent();\n    };\n    c3_chart_fn.zoom.enable = function (enabled) {\n        var $$ = this.internal;\n        $$.config.zoom_enabled = enabled;\n        $$.updateAndRedraw();\n    };\n    c3_chart_fn.unzoom = function () {\n        var $$ = this.internal;\n        $$.brush.clear().update();\n        $$.redraw({ withUpdateXDomain: true });\n    };\n\n    c3_chart_fn.zoom.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (max === 0 || max) {\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n        } else {\n            return config.zoom_x_max;\n        }\n    };\n\n    c3_chart_fn.zoom.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (min === 0 || min) {\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n        } else {\n            return config.zoom_x_min;\n        }\n    };\n\n    c3_chart_fn.zoom.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.domain.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.domain.min(range.min);\n            }\n        } else {\n            return {\n                max: this.domain.max(),\n                min: this.domain.min()\n            };\n        }\n    };\n\n    c3_chart_internal_fn.initPie = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.pie = d3.layout.pie().value(function (d) {\n            return d.values.reduce(function (a, b) {\n                return a + b.value;\n            }, 0);\n        });\n        $$.pie.sort($$.getOrderFunction() || null);\n    };\n\n    c3_chart_internal_fn.updateRadius = function () {\n        var $$ = this,\n            config = $$.config,\n            w = config.gauge_width || config.donut_width,\n            gaugeArcWidth = $$.filterTargetsToShow($$.data.targets).length * $$.config.gauge_arcs_minWidth;\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2 * ($$.hasType('gauge') ? 0.85 : 1);\n        $$.radius = $$.radiusExpanded * 0.95;\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n        $$.gaugeArcWidth = w ? w : gaugeArcWidth <= $$.radius - $$.innerRadius ? $$.radius - $$.innerRadius : gaugeArcWidth <= $$.radius ? gaugeArcWidth : $$.radius;\n    };\n\n    c3_chart_internal_fn.updateArc = function () {\n        var $$ = this;\n        $$.svgArc = $$.getSvgArc();\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n    };\n\n    c3_chart_internal_fn.updateAngle = function (d) {\n        var $$ = this,\n            config = $$.config,\n            found = false,\n            index = 0,\n            gMin,\n            gMax,\n            gTic,\n            gValue;\n\n        if (!config) {\n            return null;\n        }\n\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n            if (!found && t.data.id === d.data.id) {\n                found = true;\n                d = t;\n                d.index = index;\n            }\n            index++;\n        });\n        if (isNaN(d.startAngle)) {\n            d.startAngle = 0;\n        }\n        if (isNaN(d.endAngle)) {\n            d.endAngle = d.startAngle;\n        }\n        if ($$.isGaugeType(d.data)) {\n            gMin = config.gauge_min;\n            gMax = config.gauge_max;\n            gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\n            d.startAngle = config.gauge_startingAngle;\n            d.endAngle = d.startAngle + gTic * gValue;\n        }\n        return found ? d : null;\n    };\n\n    c3_chart_internal_fn.getSvgArc = function () {\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            arc = $$.d3.svg.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index : $$.radius;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        }),\n            newArc = function newArc(d, withoutUpdate) {\n            var updated;\n            if (withoutUpdate) {\n                return arc(d);\n            } // for interpolate\n            updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n        // TODO: extends all function\n        newArc.centroid = arc.centroid;\n        return newArc;\n    };\n\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n        rate = rate || 1;\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            expandWidth = Math.min($$.radiusExpanded * rate - $$.radius, singleArcWidth * 0.8 - (1 - rate) * 100),\n            arc = $$.d3.svg.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index + expandWidth : $$.radiusExpanded * rate;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        });\n        return function (d) {\n            var updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n    };\n\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n    };\n\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\n        var $$ = this,\n            config = $$.config,\n            updated = $$.updateAngle(d),\n            c,\n            x,\n            y,\n            h,\n            ratio,\n            translate = \"\",\n            hasGauge = $$.hasType('gauge');\n        if (updated && !hasGauge) {\n            c = this.svgArc.centroid(updated);\n            x = isNaN(c[0]) ? 0 : c[0];\n            y = isNaN(c[1]) ? 0 : c[1];\n            h = Math.sqrt(x * x + y * y);\n            if ($$.hasType('donut') && config.donut_label_ratio) {\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n            } else {\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n            }\n            translate = \"translate(\" + x * ratio + ',' + y * ratio + \")\";\n        } else if (updated && hasGauge && $$.filterTargetsToShow($$.data.targets).length > 1) {\n            var y1 = Math.sin(updated.endAngle - Math.PI / 2);\n            x = Math.cos(updated.endAngle - Math.PI / 2) * ($$.radiusExpanded + 25);\n            y = y1 * ($$.radiusExpanded + 15 - Math.abs(y1 * 10)) + 3;\n            translate = \"translate(\" + x + ',' + y + \")\";\n        }\n        return translate;\n    };\n\n    c3_chart_internal_fn.getArcRatio = function (d) {\n        var $$ = this,\n            config = $$.config,\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n        return d ? (d.endAngle - d.startAngle) / whole : null;\n    };\n\n    c3_chart_internal_fn.convertToArcData = function (d) {\n        return this.addName({\n            id: d.data.id,\n            value: d.value,\n            ratio: this.getArcRatio(d),\n            index: d.index\n        });\n    };\n\n    c3_chart_internal_fn.textForArcLabel = function (d) {\n        var $$ = this,\n            updated,\n            value,\n            ratio,\n            id,\n            format;\n        if (!$$.shouldShowArcLabel()) {\n            return \"\";\n        }\n        updated = $$.updateAngle(d);\n        value = updated ? updated.value : null;\n        ratio = $$.getArcRatio(updated);\n        id = d.data.id;\n        if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\n            return \"\";\n        }\n        format = $$.getArcLabelFormat();\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n    };\n\n    c3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {\n        var $$ = this,\n            format = $$.getGaugeLabelExtents();\n\n        return format ? format(value, isMax) : value;\n    };\n\n    c3_chart_internal_fn.expandArc = function (targetIds) {\n        var $$ = this,\n            interval;\n\n        // MEMO: avoid to cancel transition\n        if ($$.transiting) {\n            interval = window.setInterval(function () {\n                if (!$$.transiting) {\n                    window.clearInterval(interval);\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                        $$.expandArc(targetIds);\n                    }\n                }\n            }, 10);\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n            if (!$$.shouldExpand(d.data.id)) {\n                return;\n            }\n            $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr(\"d\", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr(\"d\", $$.svgArcExpandedSub).each(function (d) {\n                if ($$.isDonutType(d.data)) {\n                    // callback here\n                }\n            });\n        });\n    };\n\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n        var $$ = this;\n\n        if ($$.transiting) {\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {\n            return $$.expandDuration(d.data.id);\n        }).attr(\"d\", $$.svgArc);\n        $$.svg.selectAll('.' + CLASS.arc);\n    };\n\n    c3_chart_internal_fn.expandDuration = function (id) {\n        var $$ = this,\n            config = $$.config;\n\n        if ($$.isDonutType(id)) {\n            return config.donut_expand_duration;\n        } else if ($$.isGaugeType(id)) {\n            return config.gauge_expand_duration;\n        } else if ($$.isPieType(id)) {\n            return config.pie_expand_duration;\n        } else {\n            return 50;\n        }\n    };\n\n    c3_chart_internal_fn.shouldExpand = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;\n    };\n\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\n        var $$ = this,\n            config = $$.config,\n            shouldShow = true;\n        if ($$.hasType('donut')) {\n            shouldShow = config.donut_label_show;\n        } else if ($$.hasType('pie')) {\n            shouldShow = config.pie_label_show;\n        }\n        // when gauge, always true\n        return shouldShow;\n    };\n\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n        var $$ = this,\n            config = $$.config,\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n        return ratio >= threshold;\n    };\n\n    c3_chart_internal_fn.getArcLabelFormat = function () {\n        var $$ = this,\n            config = $$.config,\n            format = config.pie_label_format;\n        if ($$.hasType('gauge')) {\n            format = config.gauge_label_format;\n        } else if ($$.hasType('donut')) {\n            format = config.donut_label_format;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.getGaugeLabelExtents = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.gauge_label_extents;\n    };\n\n    c3_chart_internal_fn.getArcTitle = function () {\n        var $$ = this;\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n    };\n\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n        var $$ = this,\n            main = $$.main,\n            mainPieUpdate,\n            mainPieEnter,\n            classChartArc = $$.classChartArc.bind($$),\n            classArcs = $$.classArcs.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr(\"class\", function (d) {\n            return classChartArc(d) + classFocus(d.data);\n        });\n        mainPieEnter = mainPieUpdate.enter().append(\"g\").attr(\"class\", classChartArc);\n        mainPieEnter.append('g').attr('class', classArcs);\n        mainPieEnter.append(\"text\").attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\").style(\"opacity\", 0).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        // MEMO: can not keep same color..., but not bad to update color in redraw\n        //mainPieUpdate.exit().remove();\n    };\n\n    c3_chart_internal_fn.initArc = function () {\n        var $$ = this;\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n        $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style(\"text-anchor\", \"middle\").text($$.getArcTitle());\n    };\n\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            main = $$.main,\n            mainArc,\n            backgroundArc,\n            mainArcLabelLine,\n            hasGaugeType = $$.hasType('gauge');\n        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));\n        mainArc.enter().append('path').attr(\"class\", $$.classArc.bind($$)).style(\"fill\", function (d) {\n            return $$.color(d.data);\n        }).style(\"cursor\", function (d) {\n            return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null;\n        }).each(function (d) {\n            if ($$.isGaugeType(d.data)) {\n                d.startAngle = d.endAngle = config.gauge_startingAngle;\n            }\n            this._current = d;\n        });\n        if (hasGaugeType) {\n            mainArcLabelLine = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arcLabelLine).data($$.arcData.bind($$));\n            mainArcLabelLine.enter().append('rect').attr(\"class\", function (d) {\n                return CLASS.arcLabelLine + ' ' + CLASS.target + ' ' + CLASS.target + '-' + d.data.id;\n            });\n            if ($$.filterTargetsToShow($$.data.targets).length === 1) {\n                mainArcLabelLine.style(\"display\", \"none\");\n            } else {\n                mainArcLabelLine.style(\"fill\", function (d) {\n                    return config.color_pattern.length > 0 ? $$.levelColor(d.data.values[0].value) : $$.color(d.data);\n                }).style(\"display\", config.gauge_labelLine_show ? \"\" : \"none\").each(function (d) {\n                    var lineLength = 0,\n                        lineThickness = 2,\n                        x = 0,\n                        y = 0,\n                        transform = \"\";\n                    if ($$.hiddenTargetIds.indexOf(d.data.id) < 0) {\n                        var updated = $$.updateAngle(d),\n                            innerLineLength = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length * (updated.index + 1),\n                            lineAngle = updated.endAngle - Math.PI / 2,\n                            arcInnerRadius = $$.radius - innerLineLength,\n                            linePositioningAngle = lineAngle - (arcInnerRadius === 0 ? 0 : 1 / arcInnerRadius);\n                        lineLength = $$.radiusExpanded - $$.radius + innerLineLength;\n                        x = Math.cos(linePositioningAngle) * arcInnerRadius;\n                        y = Math.sin(linePositioningAngle) * arcInnerRadius;\n                        transform = \"rotate(\" + lineAngle * 180 / Math.PI + \", \" + x + \", \" + y + \")\";\n                    }\n                    d3.select(this).attr({ x: x, y: y, width: lineLength, height: lineThickness, transform: transform }).style(\"stroke-dasharray\", \"0, \" + (lineLength + lineThickness) + \", 0\");\n                });\n            }\n        }\n        mainArc.attr(\"transform\", function (d) {\n            return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\";\n        }).on('mouseover', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.expandArc(updated.data.id);\n                $$.api.focus(updated.data.id);\n                $$.toggleFocusLegend(updated.data.id, true);\n                $$.config.data_onmouseover(arcData, this);\n            }\n        } : null).on('mousemove', config.interaction_enabled ? function (d) {\n            var updated = $$.updateAngle(d),\n                arcData,\n                selectedData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated), selectedData = [arcData];\n                $$.showTooltip(selectedData, this);\n            }\n        } : null).on('mouseout', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.unexpandArc(updated.data.id);\n                $$.api.revert();\n                $$.revertLegend();\n                $$.hideTooltip();\n                $$.config.data_onmouseout(arcData, this);\n            }\n        } : null).on('click', config.interaction_enabled ? function (d, i) {\n            var updated = $$.updateAngle(d),\n                arcData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                if ($$.toggleShape) {\n                    $$.toggleShape(this, arcData, i);\n                }\n                $$.config.data_onclick.call($$.api, arcData, this);\n            }\n        } : null).each(function () {\n            $$.transiting = true;\n        }).transition().duration(duration).attrTween(\"d\", function (d) {\n            var updated = $$.updateAngle(d),\n                interpolate;\n            if (!updated) {\n                return function () {\n                    return \"M 0 0\";\n                };\n            }\n            //                if (this._current === d) {\n            //                    this._current = {\n            //                        startAngle: Math.PI*2,\n            //                        endAngle: Math.PI*2,\n            //                    };\n            //                }\n            if (isNaN(this._current.startAngle)) {\n                this._current.startAngle = 0;\n            }\n            if (isNaN(this._current.endAngle)) {\n                this._current.endAngle = this._current.startAngle;\n            }\n            interpolate = d3.interpolate(this._current, updated);\n            this._current = interpolate(0);\n            return function (t) {\n                var interpolated = interpolate(t);\n                interpolated.data = d.data; // data.id will be updated by interporator\n                return $$.getArc(interpolated, true);\n            };\n        }).attr(\"transform\", withTransform ? \"scale(1)\" : \"\").style(\"fill\", function (d) {\n            return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n        }) // Where gauge reading color would receive customization.\n        .call($$.endall, function () {\n            $$.transiting = false;\n        });\n        mainArc.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        main.selectAll('.' + CLASS.chartArc).select('text').style(\"opacity\", 0).attr('class', function (d) {\n            return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\n        }).text($$.textForArcLabel.bind($$)).attr(\"transform\", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {\n            return $$.isGaugeType(d.data) && $$.filterTargetsToShow($$.data.targets).length === 1 ? Math.round($$.radius / 5) + 'px' : '';\n        }).transition().duration(duration).style(\"opacity\", function (d) {\n            return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\n        });\n        main.select('.' + CLASS.chartArcsTitle).style(\"opacity\", $$.hasType('donut') || hasGaugeType ? 1 : 0);\n\n        if (hasGaugeType) {\n            var index = 0;\n            backgroundArc = $$.arcs.select('g.' + CLASS.chartArcsBackground).selectAll('path.' + CLASS.chartArcsBackground).data($$.data.targets);\n            backgroundArc.enter().append(\"path\");\n            backgroundArc.attr(\"class\", function (d, i) {\n                return CLASS.chartArcsBackground + ' ' + CLASS.chartArcsBackground + '-' + i;\n            }).attr(\"d\", function (d1) {\n                if ($$.hiddenTargetIds.indexOf(d1.id) >= 0) {\n                    return \"M 0 0\";\n                }\n\n                var d = {\n                    data: [{ value: config.gauge_max }],\n                    startAngle: config.gauge_startingAngle,\n                    endAngle: -1 * config.gauge_startingAngle * (config.gauge_fullCircle ? Math.PI : 1),\n                    index: index++\n                };\n                return $$.getArc(d, true, true);\n            });\n            backgroundArc.exit().remove();\n\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr(\"dy\", \".75em\").text(config.gauge_label_show ? config.gauge_units : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr(\"dx\", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr(\"dx\", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');\n        }\n    };\n    c3_chart_internal_fn.initGauge = function () {\n        var arcs = this.arcs;\n        if (this.hasType('gauge')) {\n            arcs.append('g').attr(\"class\", CLASS.chartArcsBackground);\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeUnit).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMin).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMax).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        }\n    };\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n        return this.config.gauge_label_show ? 20 : 0;\n    };\n\n    c3_chart_internal_fn.hasCaches = function (ids) {\n        for (var i = 0; i < ids.length; i++) {\n            if (!(ids[i] in this.cache)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    c3_chart_internal_fn.addCache = function (id, target) {\n        this.cache[id] = this.cloneTarget(target);\n    };\n    c3_chart_internal_fn.getCaches = function (ids) {\n        var targets = [],\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] in this.cache) {\n                targets.push(this.cloneTarget(this.cache[ids[i]]));\n            }\n        }\n        return targets;\n    };\n\n    c3_chart_internal_fn.categoryName = function (i) {\n        var config = this.config;\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n    };\n\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n    };\n    c3_chart_internal_fn.classText = function (d) {\n        return this.generateClass(CLASS.text, d.index);\n    };\n    c3_chart_internal_fn.classTexts = function (d) {\n        return this.generateClass(CLASS.texts, d.id);\n    };\n    c3_chart_internal_fn.classShape = function (d) {\n        return this.generateClass(CLASS.shape, d.index);\n    };\n    c3_chart_internal_fn.classShapes = function (d) {\n        return this.generateClass(CLASS.shapes, d.id);\n    };\n    c3_chart_internal_fn.classLine = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n    };\n    c3_chart_internal_fn.classLines = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n    };\n    c3_chart_internal_fn.classCircle = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n    };\n    c3_chart_internal_fn.classCircles = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n    };\n    c3_chart_internal_fn.classBar = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n    };\n    c3_chart_internal_fn.classBars = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n    };\n    c3_chart_internal_fn.classArc = function (d) {\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n    };\n    c3_chart_internal_fn.classArcs = function (d) {\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n    };\n    c3_chart_internal_fn.classArea = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n    };\n    c3_chart_internal_fn.classAreas = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n    };\n    c3_chart_internal_fn.classRegion = function (d, i) {\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n    };\n    c3_chart_internal_fn.classEvent = function (d) {\n        return this.generateClass(CLASS.eventRect, d.index);\n    };\n    c3_chart_internal_fn.classTarget = function (id) {\n        var $$ = this;\n        var additionalClassSuffix = $$.config.data_classes[id],\n            additionalClass = '';\n        if (additionalClassSuffix) {\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n        }\n        return $$.generateClass(CLASS.target, id) + additionalClass;\n    };\n    c3_chart_internal_fn.classFocus = function (d) {\n        return this.classFocused(d) + this.classDefocused(d);\n    };\n    c3_chart_internal_fn.classFocused = function (d) {\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n    };\n    c3_chart_internal_fn.classDefocused = function (d) {\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n    };\n    c3_chart_internal_fn.classChartText = function (d) {\n        return CLASS.chartText + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartLine = function (d) {\n        return CLASS.chartLine + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartBar = function (d) {\n        return CLASS.chartBar + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartArc = function (d) {\n        return CLASS.chartArc + this.classTarget(d.data.id);\n    };\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n    };\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n        var $$ = this;\n        ids = ids || [];\n        return ids.length ? ids.map(function (id) {\n            return $$.selectorTarget(id, prefix);\n        }) : null;\n    };\n    c3_chart_internal_fn.selectorLegend = function (id) {\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorLegends = function (ids) {\n        var $$ = this;\n        return ids && ids.length ? ids.map(function (id) {\n            return $$.selectorLegend(id);\n        }) : null;\n    };\n\n    c3_chart_internal_fn.getClipPath = function (id) {\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n    };\n    c3_chart_internal_fn.appendClip = function (parent, id) {\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n    };\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n        // axis line width + padding for left\n        var left = Math.max(30, this.margin.left);\n        return forHorizontal ? -(1 + left) : -(left - 1);\n    };\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n        return forHorizontal ? -20 : -this.margin.top;\n    };\n    c3_chart_internal_fn.getXAxisClipX = function () {\n        var $$ = this;\n        return $$.getAxisClipX(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipX = function () {\n        var $$ = this;\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n        var $$ = this,\n            left = Math.max(30, $$.margin.left),\n            right = Math.max(30, $$.margin.right);\n        // width + axis line width + padding for left/right\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n    };\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n        // less than 20 is not enough to show the axis label 'outer' without legend\n        return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;\n    };\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n    };\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight($$.config.axis_rotated);\n    };\n\n    c3_chart_internal_fn.generateColor = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            colors = config.data_colors,\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n            callback = config.data_color,\n            ids = [];\n\n        return function (d) {\n            var id = d.id || d.data && d.data.id || d,\n                color;\n\n            // if callback function is provided\n            if (colors[id] instanceof Function) {\n                color = colors[id](d);\n            }\n            // if specified, choose that color\n            else if (colors[id]) {\n                    color = colors[id];\n                }\n                // if not specified, choose from pattern\n                else {\n                        if (ids.indexOf(id) < 0) {\n                            ids.push(id);\n                        }\n                        color = pattern[ids.indexOf(id) % pattern.length];\n                        colors[id] = color;\n                    }\n            return callback instanceof Function ? callback(color, d) : color;\n        };\n    };\n    c3_chart_internal_fn.generateLevelColor = function () {\n        var $$ = this,\n            config = $$.config,\n            colors = config.color_pattern,\n            threshold = config.color_threshold,\n            asValue = threshold.unit === 'value',\n            values = threshold.values && threshold.values.length ? threshold.values : [],\n            max = threshold.max || 100;\n        return notEmpty(config.color_threshold) ? function (value) {\n            var i,\n                v,\n                color = colors[colors.length - 1];\n            for (i = 0; i < values.length; i++) {\n                v = asValue ? value : value * 100 / max;\n                if (v < values[i]) {\n                    color = colors[i];\n                    break;\n                }\n            }\n            return color;\n        } : null;\n    };\n\n    c3_chart_internal_fn.getDefaultConfig = function () {\n        var config = {\n            bindto: '#chart',\n            svg_classname: undefined,\n            size_width: undefined,\n            size_height: undefined,\n            padding_left: undefined,\n            padding_right: undefined,\n            padding_top: undefined,\n            padding_bottom: undefined,\n            resize_auto: true,\n            zoom_enabled: false,\n            zoom_extent: undefined,\n            zoom_privileged: false,\n            zoom_rescale: false,\n            zoom_onzoom: function zoom_onzoom() {},\n            zoom_onzoomstart: function zoom_onzoomstart() {},\n            zoom_onzoomend: function zoom_onzoomend() {},\n            zoom_x_min: undefined,\n            zoom_x_max: undefined,\n            interaction_brighten: true,\n            interaction_enabled: true,\n            onmouseover: function onmouseover() {},\n            onmouseout: function onmouseout() {},\n            onresize: function onresize() {},\n            onresized: function onresized() {},\n            oninit: function oninit() {},\n            onrendered: function onrendered() {},\n            transition_duration: 350,\n            data_x: undefined,\n            data_xs: {},\n            data_xFormat: '%Y-%m-%d',\n            data_xLocaltime: true,\n            data_xSort: true,\n            data_idConverter: function data_idConverter(id) {\n                return id;\n            },\n            data_names: {},\n            data_classes: {},\n            data_groups: [],\n            data_axes: {},\n            data_type: undefined,\n            data_types: {},\n            data_labels: {},\n            data_order: 'desc',\n            data_regions: {},\n            data_color: undefined,\n            data_colors: {},\n            data_hide: false,\n            data_filter: undefined,\n            data_selection_enabled: false,\n            data_selection_grouped: false,\n            data_selection_isselectable: function data_selection_isselectable() {\n                return true;\n            },\n            data_selection_multiple: true,\n            data_selection_draggable: false,\n            data_onclick: function data_onclick() {},\n            data_onmouseover: function data_onmouseover() {},\n            data_onmouseout: function data_onmouseout() {},\n            data_onselected: function data_onselected() {},\n            data_onunselected: function data_onunselected() {},\n            data_url: undefined,\n            data_headers: undefined,\n            data_json: undefined,\n            data_rows: undefined,\n            data_columns: undefined,\n            data_mimeType: undefined,\n            data_keys: undefined,\n            // configuration for no plot-able data supplied.\n            data_empty_label_text: \"\",\n            // subchart\n            subchart_show: false,\n            subchart_size_height: 60,\n            subchart_axis_x_show: true,\n            subchart_onbrush: function subchart_onbrush() {},\n            // color\n            color_pattern: [],\n            color_threshold: {},\n            // legend\n            legend_show: true,\n            legend_hide: false,\n            legend_position: 'bottom',\n            legend_inset_anchor: 'top-left',\n            legend_inset_x: 10,\n            legend_inset_y: 0,\n            legend_inset_step: undefined,\n            legend_item_onclick: undefined,\n            legend_item_onmouseover: undefined,\n            legend_item_onmouseout: undefined,\n            legend_equally: false,\n            legend_padding: 0,\n            legend_item_tile_width: 10,\n            legend_item_tile_height: 10,\n            // axis\n            axis_rotated: false,\n            axis_x_show: true,\n            axis_x_type: 'indexed',\n            axis_x_localtime: true,\n            axis_x_categories: [],\n            axis_x_tick_centered: false,\n            axis_x_tick_format: undefined,\n            axis_x_tick_culling: {},\n            axis_x_tick_culling_max: 10,\n            axis_x_tick_count: undefined,\n            axis_x_tick_fit: true,\n            axis_x_tick_values: null,\n            axis_x_tick_rotate: 0,\n            axis_x_tick_outer: true,\n            axis_x_tick_multiline: true,\n            axis_x_tick_multilineMax: 0,\n            axis_x_tick_width: null,\n            axis_x_max: undefined,\n            axis_x_min: undefined,\n            axis_x_padding: {},\n            axis_x_height: undefined,\n            axis_x_extent: undefined,\n            axis_x_label: {},\n            axis_x_inner: undefined,\n            axis_y_show: true,\n            axis_y_type: undefined,\n            axis_y_max: undefined,\n            axis_y_min: undefined,\n            axis_y_inverted: false,\n            axis_y_center: undefined,\n            axis_y_inner: undefined,\n            axis_y_label: {},\n            axis_y_tick_format: undefined,\n            axis_y_tick_outer: true,\n            axis_y_tick_values: null,\n            axis_y_tick_rotate: 0,\n            axis_y_tick_count: undefined,\n            axis_y_tick_time_value: undefined,\n            axis_y_tick_time_interval: undefined,\n            axis_y_padding: {},\n            axis_y_default: undefined,\n            axis_y2_show: false,\n            axis_y2_max: undefined,\n            axis_y2_min: undefined,\n            axis_y2_inverted: false,\n            axis_y2_center: undefined,\n            axis_y2_inner: undefined,\n            axis_y2_label: {},\n            axis_y2_tick_format: undefined,\n            axis_y2_tick_outer: true,\n            axis_y2_tick_values: null,\n            axis_y2_tick_count: undefined,\n            axis_y2_padding: {},\n            axis_y2_default: undefined,\n            // grid\n            grid_x_show: false,\n            grid_x_type: 'tick',\n            grid_x_lines: [],\n            grid_y_show: false,\n            // not used\n            // grid_y_type: 'tick',\n            grid_y_lines: [],\n            grid_y_ticks: 10,\n            grid_focus_show: true,\n            grid_lines_front: true,\n            // point - point of each data\n            point_show: true,\n            point_r: 2.5,\n            point_sensitivity: 10,\n            point_focus_expand_enabled: true,\n            point_focus_expand_r: undefined,\n            point_select_r: undefined,\n            // line\n            line_connectNull: false,\n            line_step_type: 'step',\n            // bar\n            bar_width: undefined,\n            bar_width_ratio: 0.6,\n            bar_width_max: undefined,\n            bar_zerobased: true,\n            bar_space: 0,\n            // area\n            area_zerobased: true,\n            area_above: false,\n            // pie\n            pie_label_show: true,\n            pie_label_format: undefined,\n            pie_label_threshold: 0.05,\n            pie_label_ratio: undefined,\n            pie_expand: {},\n            pie_expand_duration: 50,\n            // gauge\n            gauge_fullCircle: false,\n            gauge_label_show: true,\n            gauge_labelLine_show: true,\n            gauge_label_format: undefined,\n            gauge_min: 0,\n            gauge_max: 100,\n            gauge_startingAngle: -1 * Math.PI / 2,\n            gauge_label_extents: undefined,\n            gauge_units: undefined,\n            gauge_width: undefined,\n            gauge_arcs_minWidth: 5,\n            gauge_expand: {},\n            gauge_expand_duration: 50,\n            // donut\n            donut_label_show: true,\n            donut_label_format: undefined,\n            donut_label_threshold: 0.05,\n            donut_label_ratio: undefined,\n            donut_width: undefined,\n            donut_title: \"\",\n            donut_expand: {},\n            donut_expand_duration: 50,\n            // spline\n            spline_interpolation_type: 'cardinal',\n            // region - region to change style\n            regions: [],\n            // tooltip - show when mouseover on each data\n            tooltip_show: true,\n            tooltip_grouped: true,\n            tooltip_order: undefined,\n            tooltip_format_title: undefined,\n            tooltip_format_name: undefined,\n            tooltip_format_value: undefined,\n            tooltip_position: undefined,\n            tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n            },\n            tooltip_init_show: false,\n            tooltip_init_x: 0,\n            tooltip_init_position: { top: '0px', left: '50px' },\n            tooltip_onshow: function tooltip_onshow() {},\n            tooltip_onhide: function tooltip_onhide() {},\n            // title\n            title_text: undefined,\n            title_padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            title_position: 'top-center'\n        };\n\n        Object.keys(this.additionalConfig).forEach(function (key) {\n            config[key] = this.additionalConfig[key];\n        }, this);\n\n        return config;\n    };\n    c3_chart_internal_fn.additionalConfig = {};\n\n    c3_chart_internal_fn.loadConfig = function (config) {\n        var this_config = this.config,\n            target,\n            keys,\n            read;\n        function find() {\n            var key = keys.shift();\n            //        console.log(\"key =>\", key, \", target =>\", target);\n            if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {\n                target = target[key];\n                return find();\n            } else if (!key) {\n                return target;\n            } else {\n                return undefined;\n            }\n        }\n        Object.keys(this_config).forEach(function (key) {\n            target = config;\n            keys = key.split('_');\n            read = find();\n            //        console.log(\"CONFIG : \", key, read);\n            if (isDefined(read)) {\n                this_config[key] = read;\n            }\n        });\n    };\n\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n        var $$ = this,\n            type = mimeType ? mimeType : 'csv';\n        var req = $$.d3.xhr(url);\n        if (headers) {\n            Object.keys(headers).forEach(function (header) {\n                req.header(header, headers[header]);\n            });\n        }\n        req.get(function (error, data) {\n            var d;\n            var dataResponse = data.response || data.responseText; // Fixes IE9 XHR issue; see #1345\n            if (!data) {\n                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n            }\n            if (type === 'json') {\n                d = $$.convertJsonToData(JSON.parse(dataResponse), keys);\n            } else if (type === 'tsv') {\n                d = $$.convertTsvToData(dataResponse);\n            } else {\n                d = $$.convertCsvToData(dataResponse);\n            }\n            done.call($$, d);\n        });\n    };\n    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n        var rows = parser.parseRows(xsv),\n            d;\n        if (rows.length === 1) {\n            d = [{}];\n            rows[0].forEach(function (id) {\n                d[0][id] = null;\n            });\n        } else {\n            d = parser.parse(xsv);\n        }\n        return d;\n    };\n    c3_chart_internal_fn.convertCsvToData = function (csv) {\n        return this.convertXsvToData(csv, this.d3.csv);\n    };\n    c3_chart_internal_fn.convertTsvToData = function (tsv) {\n        return this.convertXsvToData(tsv, this.d3.tsv);\n    };\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n        var $$ = this,\n            new_rows = [],\n            targetKeys,\n            data;\n        if (keys) {\n            // when keys specified, json would be an array that includes objects\n            if (keys.x) {\n                targetKeys = keys.value.concat(keys.x);\n                $$.config.data_x = keys.x;\n            } else {\n                targetKeys = keys.value;\n            }\n            new_rows.push(targetKeys);\n            json.forEach(function (o) {\n                var new_row = [];\n                targetKeys.forEach(function (key) {\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                    var v = $$.findValueInJson(o, key);\n                    if (isUndefined(v)) {\n                        v = null;\n                    }\n                    new_row.push(v);\n                });\n                new_rows.push(new_row);\n            });\n            data = $$.convertRowsToData(new_rows);\n        } else {\n            Object.keys(json).forEach(function (key) {\n                new_rows.push([key].concat(json[key]));\n            });\n            data = $$.convertColumnsToData(new_rows);\n        }\n        return data;\n    };\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n        path = path.replace(/^\\./, ''); // strip a leading dot\n        var pathArray = path.split('.');\n        for (var i = 0; i < pathArray.length; ++i) {\n            var k = pathArray[i];\n            if (k in object) {\n                object = object[k];\n            } else {\n                return;\n            }\n        }\n        return object;\n    };\n\n    /**\n     * Converts the rows to normalized data.\n     * @param {any[][]} rows The row data\n     * @return {Object[]}\n     */\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\n        var newRows = [];\n        var keys = rows[0];\n\n        for (var i = 1; i < rows.length; i++) {\n            var newRow = {};\n            for (var j = 0; j < rows[i].length; j++) {\n                if (isUndefined(rows[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRow[keys[j]] = rows[i][j];\n            }\n            newRows.push(newRow);\n        }\n        return newRows;\n    };\n\n    /**\n     * Converts the columns to normalized data.\n     * @param {any[][]} columns The column data\n     * @return {Object[]}\n     */\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n        var newRows = [];\n\n        for (var i = 0; i < columns.length; i++) {\n            var key = columns[i][0];\n            for (var j = 1; j < columns[i].length; j++) {\n                if (isUndefined(newRows[j - 1])) {\n                    newRows[j - 1] = {};\n                }\n                if (isUndefined(columns[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRows[j - 1][key] = columns[i][j];\n            }\n        }\n\n        return newRows;\n    };\n\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n            targets;\n\n        // save x for update data by load when custom x and c3.x API\n        ids.forEach(function (id) {\n            var xKey = $$.getXKey(id);\n\n            if ($$.isCustomX() || $$.isTimeSeries()) {\n                // if included in input data\n                if (xs.indexOf(xKey) >= 0) {\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {\n                        return d[xKey];\n                    }).filter(isValue).map(function (rawX, i) {\n                        return $$.generateTargetX(rawX, id, i);\n                    }));\n                }\n                // if not included in input data, find from preloaded data of other id's x\n                else if (config.data_x) {\n                        $$.data.xs[id] = $$.getOtherTargetXs();\n                    }\n                    // if not included in input data, find from preloaded data\n                    else if (notEmpty(config.data_xs)) {\n                            $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                        }\n                // MEMO: if no x included, use same x of current will be used\n            } else {\n                $$.data.xs[id] = data.map(function (d, i) {\n                    return i;\n                });\n            }\n        });\n\n        // check x is defined\n        ids.forEach(function (id) {\n            if (!$$.data.xs[id]) {\n                throw new Error('x is not defined for id = \"' + id + '\".');\n            }\n        });\n\n        // convert to target\n        targets = ids.map(function (id, index) {\n            var convertedId = config.data_idConverter(id);\n            return {\n                id: convertedId,\n                id_org: id,\n                values: data.map(function (d, i) {\n                    var xKey = $$.getXKey(id),\n                        rawX = d[xKey],\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,\n                        x;\n                    // use x as categories if custom x and categorized\n                    if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\n                        if (index === 0 && i === 0) {\n                            config.axis_x_categories = [];\n                        }\n                        x = config.axis_x_categories.indexOf(rawX);\n                        if (x === -1) {\n                            x = config.axis_x_categories.length;\n                            config.axis_x_categories.push(rawX);\n                        }\n                    } else {\n                        x = $$.generateTargetX(rawX, id, i);\n                    }\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                        x = undefined;\n                    }\n                    return { x: x, value: value, id: convertedId };\n                }).filter(function (v) {\n                    return isDefined(v.x);\n                })\n            };\n        });\n\n        // finish targets\n        targets.forEach(function (t) {\n            var i;\n            // sort values by its x\n            if (config.data_xSort) {\n                t.values = t.values.sort(function (v1, v2) {\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                    return x1 - x2;\n                });\n            }\n            // indexing each value\n            i = 0;\n            t.values.forEach(function (v) {\n                v.index = i++;\n            });\n            // this needs to be sorted because its index and value.index is identical\n            $$.data.xs[t.id].sort(function (v1, v2) {\n                return v1 - v2;\n            });\n        });\n\n        // cache information about values\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n        // set target types\n        if (config.data_type) {\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) {\n                return !(id in config.data_types);\n            }), config.data_type);\n        }\n\n        // cache as original id keyed\n        targets.forEach(function (d) {\n            $$.addCache(d.id_org, d);\n        });\n\n        return targets;\n    };\n\n    c3_chart_internal_fn.isX = function (key) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);\n    };\n    c3_chart_internal_fn.isNotX = function (key) {\n        return !this.isX(key);\n    };\n    c3_chart_internal_fn.getXKey = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n    };\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n        var $$ = this,\n            xValues,\n            ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n        ids.forEach(function (id) {\n            if ($$.getXKey(id) === key) {\n                xValues = $$.data.xs[id];\n            }\n        });\n        return xValues;\n    };\n    c3_chart_internal_fn.getIndexByX = function (x) {\n        var $$ = this,\n            data = $$.filterByX($$.data.targets, x);\n        return data.length ? data[0].index : null;\n    };\n    c3_chart_internal_fn.getXValue = function (id, i) {\n        var $$ = this;\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n    };\n    c3_chart_internal_fn.getOtherTargetXs = function () {\n        var $$ = this,\n            idsForX = Object.keys($$.data.xs);\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n    };\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\n        var xs = this.getOtherTargetXs();\n        return xs && index < xs.length ? xs[index] : null;\n    };\n    c3_chart_internal_fn.addXs = function (xs) {\n        var $$ = this;\n        Object.keys(xs).forEach(function (id) {\n            $$.config.data_xs[id] = xs[id];\n        });\n    };\n    c3_chart_internal_fn.hasMultipleX = function (xs) {\n        return this.d3.set(Object.keys(xs).map(function (id) {\n            return xs[id];\n        })).size() > 1;\n    };\n    c3_chart_internal_fn.isMultipleX = function () {\n        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n    };\n    c3_chart_internal_fn.addName = function (data) {\n        var $$ = this,\n            name;\n        if (data) {\n            name = $$.config.data_names[data.id];\n            data.name = name !== undefined ? name : data.id;\n        }\n        return data;\n    };\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n        var valueOnIndex = values.filter(function (v) {\n            return v.index === index;\n        });\n        return valueOnIndex.length ? valueOnIndex[0] : null;\n    };\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            t.values.forEach(function (v, i) {\n                v.x = $$.generateTargetX(x[i], t.id, i);\n            });\n            $$.data.xs[t.id] = x;\n        });\n    };\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            if (xs[t.id]) {\n                $$.updateTargetX([t], xs[t.id]);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n        var $$ = this,\n            x;\n        if ($$.isTimeSeries()) {\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n        } else if ($$.isCustomX() && !$$.isCategorized()) {\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n        } else {\n            x = index;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.cloneTarget = function (target) {\n        return {\n            id: target.id,\n            id_org: target.id_org,\n            values: target.values.map(function (d) {\n                return { x: d.x, value: d.value, id: d.id };\n            })\n        };\n    };\n    c3_chart_internal_fn.updateXs = function () {\n        var $$ = this;\n        if ($$.data.targets.length) {\n            $$.xs = [];\n            $$.data.targets[0].values.forEach(function (v) {\n                $$.xs[v.index] = v.x;\n            });\n        }\n    };\n    c3_chart_internal_fn.getPrevX = function (i) {\n        var x = this.xs[i - 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getNextX = function (i) {\n        var x = this.xs[i + 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getMaxDataCount = function () {\n        var $$ = this;\n        return $$.d3.max($$.data.targets, function (t) {\n            return t.values.length;\n        });\n    };\n    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n        var length = targets.length,\n            max = 0,\n            maxTarget;\n        if (length > 1) {\n            targets.forEach(function (t) {\n                if (t.values.length > max) {\n                    maxTarget = t;\n                    max = t.values.length;\n                }\n            });\n        } else {\n            maxTarget = length ? targets[0] : null;\n        }\n        return maxTarget;\n    };\n    c3_chart_internal_fn.getEdgeX = function (targets) {\n        var $$ = this;\n        return !targets.length ? [0, 0] : [$$.d3.min(targets, function (t) {\n            return t.values[0].x;\n        }), $$.d3.max(targets, function (t) {\n            return t.values[t.values.length - 1].x;\n        })];\n    };\n    c3_chart_internal_fn.mapToIds = function (targets) {\n        return targets.map(function (d) {\n            return d.id;\n        });\n    };\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n        var $$ = this;\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n    };\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\n        var ids = this.mapToIds(targets),\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n        var $$ = this;\n        return targets.filter(function (t) {\n            return $$.isTargetToShow(t.id);\n        });\n    };\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n        var $$ = this;\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {\n            return t.values.map(function (v) {\n                return +v.x;\n            });\n        }))).values();\n        xs = $$.isTimeSeries() ? xs.map(function (x) {\n            return new Date(+x);\n        }) : xs.map(function (x) {\n            return +x;\n        });\n        return xs.sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n        });\n    };\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n        var ys = {};\n        targets.forEach(function (t) {\n            ys[t.id] = [];\n            t.values.forEach(function (v) {\n                ys[t.id].push(v.value);\n            });\n        });\n        return ys;\n    };\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n        var ids = Object.keys(targets),\n            i,\n            j,\n            values;\n        for (i = 0; i < ids.length; i++) {\n            values = targets[ids[i]].values;\n            for (j = 0; j < values.length; j++) {\n                if (checker(values[j].value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v < 0;\n        });\n    };\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v > 0;\n        });\n    };\n    c3_chart_internal_fn.isOrderDesc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';\n    };\n    c3_chart_internal_fn.isOrderAsc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';\n    };\n    c3_chart_internal_fn.getOrderFunction = function () {\n        var $$ = this,\n            config = $$.config,\n            orderAsc = $$.isOrderAsc(),\n            orderDesc = $$.isOrderDesc();\n        if (orderAsc || orderDesc) {\n            return function (t1, t2) {\n                var reducer = function reducer(p, c) {\n                    return p + Math.abs(c.value);\n                };\n                var t1Sum = t1.values.reduce(reducer, 0),\n                    t2Sum = t2.values.reduce(reducer, 0);\n                return orderDesc ? t2Sum - t1Sum : t1Sum - t2Sum;\n            };\n        } else if (isFunction(config.data_order)) {\n            return config.data_order;\n        } else if (isArray(config.data_order)) {\n            var order = config.data_order;\n            return function (t1, t2) {\n                return order.indexOf(t1.id) - order.indexOf(t2.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.orderTargets = function (targets) {\n        var fct = this.getOrderFunction();\n        if (fct) {\n            targets.sort(fct);\n            if (this.isOrderAsc() || this.isOrderDesc()) {\n                targets.reverse();\n            }\n        }\n        return targets;\n    };\n    c3_chart_internal_fn.filterByX = function (targets, x) {\n        return this.d3.merge(targets.map(function (t) {\n            return t.values;\n        })).filter(function (v) {\n            return v.x - x === 0;\n        });\n    };\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\n        return data.filter(function (d) {\n            return isValue(d.value);\n        });\n    };\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n        return targets.map(function (t) {\n            return {\n                id: t.id,\n                id_org: t.id_org,\n                values: t.values.filter(function (v) {\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n                })\n            };\n        });\n    };\n    c3_chart_internal_fn.hasDataLabel = function () {\n        var config = this.config;\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n            return true;\n        } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {\n            return true;\n        }\n        return false;\n    };\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n        var $$ = this,\n            lengths = [0, 0],\n            paddingCoef = 1.3;\n        $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {\n            return $$.dataLabelFormat(d.id)(d);\n        }).each(function (d, i) {\n            lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n        }).remove();\n        return lengths;\n    };\n    c3_chart_internal_fn.isNoneArc = function (d) {\n        return this.hasTarget(this.data.targets, d.id);\n    }, c3_chart_internal_fn.isArc = function (d) {\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n    };\n    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n        var i,\n            targetX = values[index].x,\n            sames = [];\n        for (i = index - 1; i >= 0; i--) {\n            if (targetX !== values[i].x) {\n                break;\n            }\n            sames.push(values[i]);\n        }\n        for (i = index; i < values.length; i++) {\n            if (targetX !== values[i].x) {\n                break;\n            }\n            sames.push(values[i]);\n        }\n        return sames;\n    };\n\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n        var $$ = this,\n            candidates;\n\n        // map to array of closest points of each target\n        candidates = targets.map(function (target) {\n            return $$.findClosest(target.values, pos);\n        });\n\n        // decide closest point and return\n        return $$.findClosest(candidates, pos);\n    };\n    c3_chart_internal_fn.findClosest = function (values, pos) {\n        var $$ = this,\n            minDist = $$.config.point_sensitivity,\n            closest;\n\n        // find mouseovering bar\n        values.filter(function (v) {\n            return v && $$.isBarType(v.id);\n        }).forEach(function (v) {\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n            if (!closest && $$.isWithinBar(shape)) {\n                closest = v;\n            }\n        });\n\n        // find closest point from non-bar\n        values.filter(function (v) {\n            return v && !$$.isBarType(v.id);\n        }).forEach(function (v) {\n            var d = $$.dist(v, pos);\n            if (d < minDist) {\n                minDist = d;\n                closest = v;\n            }\n        });\n\n        return closest;\n    };\n    c3_chart_internal_fn.dist = function (data, pos) {\n        var $$ = this,\n            config = $$.config,\n            xIndex = config.axis_rotated ? 1 : 0,\n            yIndex = config.axis_rotated ? 0 : 1,\n            y = $$.circleY(data, data.index),\n            x = $$.x(data.x);\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n    };\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\n        var converted = [].concat(values),\n            i;\n\n        if (!this.isCategorized()) {\n            return values;\n        }\n\n        for (i = values.length + 1; 0 < i; i--) {\n            converted[i] = converted[i - 1];\n        }\n\n        converted[0] = {\n            x: converted[0].x - 1,\n            value: converted[0].value,\n            id: converted[0].id\n        };\n        converted[values.length + 1] = {\n            x: converted[values.length].x + 1,\n            value: converted[values.length].value,\n            id: converted[values.length].id\n        };\n\n        return converted;\n    };\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n        var $$ = this,\n            config = $$.config,\n            current = config['data_' + name];\n        if (typeof attrs === 'undefined') {\n            return current;\n        }\n        Object.keys(attrs).forEach(function (id) {\n            current[id] = attrs[id];\n        });\n        $$.redraw({ withLegend: true });\n        return current;\n    };\n\n    c3_chart_internal_fn.load = function (targets, args) {\n        var $$ = this;\n        if (targets) {\n            // filter loading targets if needed\n            if (args.filter) {\n                targets = targets.filter(args.filter);\n            }\n            // set type if args.types || args.type specified\n            if (args.type || args.types) {\n                targets.forEach(function (t) {\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                    $$.setTargetType(t.id, type);\n                });\n            }\n            // Update/Add data\n            $$.data.targets.forEach(function (d) {\n                for (var i = 0; i < targets.length; i++) {\n                    if (d.id === targets[i].id) {\n                        d.values = targets[i].values;\n                        targets.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n\n        if (args.done) {\n            args.done();\n        }\n    };\n    c3_chart_internal_fn.loadFromArgs = function (args) {\n        var $$ = this;\n        if (args.data) {\n            $$.load($$.convertDataToTargets(args.data), args);\n        } else if (args.url) {\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n                $$.load($$.convertDataToTargets(data), args);\n            });\n        } else if (args.json) {\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n        } else if (args.rows) {\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n        } else if (args.columns) {\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n        } else {\n            $$.load(null, args);\n        }\n    };\n    c3_chart_internal_fn.unload = function (targetIds, done) {\n        var $$ = this;\n        if (!done) {\n            done = function done() {};\n        }\n        // filter existing target\n        targetIds = targetIds.filter(function (id) {\n            return $$.hasTarget($$.data.targets, id);\n        });\n        // If no target, call done and return\n        if (!targetIds || targetIds.length === 0) {\n            done();\n            return;\n        }\n        $$.svg.selectAll(targetIds.map(function (id) {\n            return $$.selectorTarget(id);\n        })).transition().style('opacity', 0).remove().call($$.endall, done);\n        targetIds.forEach(function (id) {\n            // Reset fadein for future load\n            $$.withoutFadeIn[id] = false;\n            // Remove target's elements\n            if ($$.legend) {\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n            }\n            // Remove target\n            $$.data.targets = $$.data.targets.filter(function (t) {\n                return t.id !== id;\n            });\n        });\n    };\n\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasNegativeValue;\n        if (config.data_groups.length > 0) {\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider negative values\n                if (hasNegativeValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v < 0 ? v : 0;\n                    });\n                }\n                // Compute min\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.min(Object.keys(ys).map(function (key) {\n            return $$.d3.min(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasPositiveValue;\n        if (config.data_groups.length > 0) {\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider positive values\n                if (hasPositiveValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v > 0 ? v : 0;\n                    });\n                }\n                // Compute max\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.max(Object.keys(ys).map(function (key) {\n            return $$.d3.max(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n        var $$ = this,\n            config = $$.config,\n            targetsByAxisId = targets.filter(function (t) {\n            return $$.axis.getId(t.id) === axisId;\n        }),\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n            yDomainMin = $$.getYDomainMin(yTargets),\n            yDomainMax = $$.getYDomainMax(yTargets),\n            domain,\n            domainLength,\n            padding,\n            padding_top,\n            padding_bottom,\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n            yDomainAbs,\n            lengths,\n            diff,\n            ratio,\n            isAllPositive,\n            isAllNegative,\n            isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n        // MEMO: avoid inverting domain unexpectedly\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;\n\n        if (yTargets.length === 0) {\n            // use current domain if target of axisId is none\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n        }\n        if (isNaN(yDomainMin)) {\n            // set minimum to zero when not number\n            yDomainMin = 0;\n        }\n        if (isNaN(yDomainMax)) {\n            // set maximum to have same value as yDomainMin\n            yDomainMax = yDomainMin;\n        }\n        if (yDomainMin === yDomainMax) {\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n        }\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n        // Cancel zerobased if axis_*_min / axis_*_max specified\n        if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {\n            isZeroBased = false;\n        }\n\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                yDomainMin = 0;\n            }\n            if (isAllNegative) {\n                yDomainMax = 0;\n            }\n        }\n\n        domainLength = Math.abs(yDomainMax - yDomainMin);\n        padding = padding_top = padding_bottom = domainLength * 0.1;\n\n        if (typeof center !== 'undefined') {\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n            yDomainMax = center + yDomainAbs;\n            yDomainMin = center - yDomainAbs;\n        }\n        // add padding for data label\n        if (showHorizontalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n            diff = diffDomain($$.y.range());\n            ratio = [lengths[0] / diff, lengths[1] / diff];\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n        } else if (showVerticalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n        }\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n        }\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n        }\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                padding_bottom = yDomainMin;\n            }\n            if (isAllNegative) {\n                padding_top = -yDomainMax;\n            }\n        }\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n        return isInverted ? domain.reverse() : domain;\n    };\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {\n            return $$.d3.min(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {\n            return $$.d3.max(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n        var $$ = this,\n            config = $$.config,\n            diff = domain[1] - domain[0],\n            maxDataCount,\n            padding,\n            paddingLeft,\n            paddingRight;\n        if ($$.isCategorized()) {\n            padding = 0;\n        } else if ($$.hasType('bar')) {\n            maxDataCount = $$.getMaxDataCount();\n            padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\n        } else {\n            padding = diff * 0.01;\n        }\n        if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n        } else if (typeof config.axis_x_padding === 'number') {\n            paddingLeft = paddingRight = config.axis_x_padding;\n        } else {\n            paddingLeft = paddingRight = padding;\n        }\n        return { left: paddingLeft, right: paddingRight };\n    };\n    c3_chart_internal_fn.getXDomain = function (targets) {\n        var $$ = this,\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n            firstX = xDomain[0],\n            lastX = xDomain[1],\n            padding = $$.getXDomainPadding(xDomain),\n            min = 0,\n            max = 0;\n        // show center of x domain if min and max are the same\n        if (firstX - lastX === 0 && !$$.isCategorized()) {\n            if ($$.isTimeSeries()) {\n                firstX = new Date(firstX.getTime() * 0.5);\n                lastX = new Date(lastX.getTime() * 1.5);\n            } else {\n                firstX = firstX === 0 ? 1 : firstX * 0.5;\n                lastX = lastX === 0 ? -1 : lastX * 1.5;\n            }\n        }\n        if (firstX || firstX === 0) {\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n        }\n        if (lastX || lastX === 0) {\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n        }\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n        var $$ = this,\n            config = $$.config;\n\n        if (withUpdateOrgXDomain) {\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n            $$.orgXDomain = $$.x.domain();\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x).updateScaleExtent();\n            }\n            $$.subX.domain($$.x.domain());\n            if ($$.brush) {\n                $$.brush.scale($$.subX);\n            }\n        }\n        if (withUpdateXDomain) {\n            $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.extent());\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x).updateScaleExtent();\n            }\n        }\n\n        // Trim domain when too big by zoom mousemove event\n        if (withTrim) {\n            $$.x.domain($$.trimXDomain($$.x.orgDomain()));\n        }\n\n        return $$.x.domain();\n    };\n    c3_chart_internal_fn.trimXDomain = function (domain) {\n        var zoomDomain = this.getZoomDomain(),\n            min = zoomDomain[0],\n            max = zoomDomain[1];\n        if (domain[0] <= min) {\n            domain[1] = +domain[1] + (min - domain[0]);\n            domain[0] = min;\n        }\n        if (max <= domain[1]) {\n            domain[0] = +domain[0] - (domain[1] - max);\n            domain[1] = max;\n        }\n        return domain;\n    };\n\n    c3_chart_internal_fn.drag = function (mouse) {\n        var $$ = this,\n            config = $$.config,\n            main = $$.main,\n            d3 = $$.d3;\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        if (config.zoom_enabled && !$$.zoom.altDomain) {\n            return;\n        } // skip if zoomable because of conflict drag dehavior\n        if (!config.data_selection_multiple) {\n            return;\n        } // skip when single selection because drag is used for multiple selection\n\n        sx = $$.dragStart[0];\n        sy = $$.dragStart[1];\n        mx = mouse[0];\n        my = mouse[1];\n        minX = Math.min(sx, mx);\n        maxX = Math.max(sx, mx);\n        minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\n        maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\n\n        main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY);\n        // TODO: binary search when multiple xs\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {\n            return config.data_selection_isselectable(d);\n        }).each(function (d, i) {\n            var shape = d3.select(this),\n                isSelected = shape.classed(CLASS.SELECTED),\n                isIncluded = shape.classed(CLASS.INCLUDED),\n                _x,\n                _y,\n                _w,\n                _h,\n                toggle,\n                isWithin = false,\n                box;\n            if (shape.classed(CLASS.circle)) {\n                _x = shape.attr(\"cx\") * 1;\n                _y = shape.attr(\"cy\") * 1;\n                toggle = $$.togglePoint;\n                isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n            } else if (shape.classed(CLASS.bar)) {\n                box = getPathBox(this);\n                _x = box.x;\n                _y = box.y;\n                _w = box.width;\n                _h = box.height;\n                toggle = $$.togglePath;\n                isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n            } else {\n                // line/area selection not supported yet\n                return;\n            }\n            if (isWithin ^ isIncluded) {\n                shape.classed(CLASS.INCLUDED, !isIncluded);\n                // TODO: included/unincluded callback here\n                shape.classed(CLASS.SELECTED, !isSelected);\n                toggle.call($$, !isSelected, shape, d, i);\n            }\n        });\n    };\n\n    c3_chart_internal_fn.dragstart = function (mouse) {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.dragStart = mouse;\n        $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);\n        $$.dragging = true;\n    };\n\n    c3_chart_internal_fn.dragend = function () {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();\n        $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\n        $$.dragging = false;\n    };\n\n    c3_chart_internal_fn.getYFormat = function (forArc) {\n        var $$ = this,\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n        return function (v, ratio, id) {\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n            return format.call($$, v, ratio);\n        };\n    };\n    c3_chart_internal_fn.yFormat = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.y2Format = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\n        return isValue(v) ? +v : \"\";\n    };\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n        return (ratio * 100).toFixed(1) + '%';\n    };\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n        var $$ = this,\n            data_labels = $$.config.data_labels,\n            format,\n            defaultFormat = function defaultFormat(v) {\n            return isValue(v) ? +v : \"\";\n        };\n        // find format according to axis id\n        if (typeof data_labels.format === 'function') {\n            format = data_labels.format;\n        } else if (_typeof(data_labels.format) === 'object') {\n            if (data_labels.format[targetId]) {\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n            } else {\n                format = function format() {\n                    return '';\n                };\n            }\n        } else {\n            format = defaultFormat;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.initGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        $$.grid = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid);\n        if (config.grid_x_show) {\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n        }\n        if (config.grid_y_show) {\n            $$.grid.append('g').attr('class', CLASS.ygrids);\n        }\n        if (config.grid_focus_show) {\n            $$.grid.append('g').attr(\"class\", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);\n        }\n        $$.xgrid = d3.selectAll([]);\n        if (!config.grid_lines_front) {\n            $$.initGridLines();\n        }\n    };\n    c3_chart_internal_fn.initGridLines = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.gridLines = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n        $$.xgridLines = d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n        $$.xgridAttr = config.axis_rotated ? {\n            'x1': 0,\n            'x2': $$.width,\n            'y1': function y1(d) {\n                return $$.x(d) - tickOffset;\n            },\n            'y2': function y2(d) {\n                return $$.x(d) - tickOffset;\n            }\n        } : {\n            'x1': function x1(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'x2': function x2(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'y1': 0,\n            'y2': $$.height\n        };\n\n        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);\n        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n        if (!withoutUpdate) {\n            $$.xgrid.attr($$.xgridAttr).style(\"opacity\", function () {\n                return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\n            });\n        }\n        $$.xgrid.exit().remove();\n    };\n\n    c3_chart_internal_fn.updateYGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);\n        $$.ygrid.enter().append('line').attr('class', CLASS.ygrid);\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0).attr(\"x2\", config.axis_rotated ? $$.y : $$.width).attr(\"y1\", config.axis_rotated ? 0 : $$.y).attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n        $$.ygrid.exit().remove();\n        $$.smoothLines($$.ygrid, 'grid');\n    };\n\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\n        return d.position ? d.position : \"end\";\n    };\n    c3_chart_internal_fn.gridTextDx = function (d) {\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n    };\n    c3_chart_internal_fn.xGridTextX = function (d) {\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n    };\n    c3_chart_internal_fn.yGridTextX = function (d) {\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n    };\n    c3_chart_internal_fn.updateGrid = function (duration) {\n        var $$ = this,\n            main = $$.main,\n            config = $$.config,\n            xgridLine,\n            ygridLine,\n            yv;\n\n        // hide if arc type\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n        if (config.grid_x_show) {\n            $$.updateXGrid();\n        }\n        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines);\n        // enter\n        xgridLine = $$.xgridLines.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        xgridLine.append('line').style(\"opacity\", 0);\n        xgridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // udpate\n        // done in d3.transition() of the end of this function\n        // exit\n        $$.xgridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n\n        // Y-Grid\n        if (config.grid_y_show) {\n            $$.updateYGrid();\n        }\n        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines);\n        // enter\n        ygridLine = $$.ygridLines.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        ygridLine.append('line').style(\"opacity\", 0);\n        ygridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // update\n        yv = $$.yv.bind($$);\n        $$.ygridLines.select('line').transition().duration(duration).attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 1);\n        $$.ygridLines.select('text').transition().duration(duration).attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr(\"y\", yv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1);\n        // exit\n        $$.ygridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawGrid = function (withTransition) {\n        var $$ = this,\n            config = $$.config,\n            xv = $$.xv.bind($$),\n            lines = $$.xgridLines.select('line'),\n            texts = $$.xgridLines.select('text');\n        return [(withTransition ? lines.transition() : lines).attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 1), (withTransition ? texts.transition() : texts).attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr(\"y\", xv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n        var $$ = this,\n            config = $$.config,\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n            xx = $$.xx.bind($$);\n        if (!config.tooltip_show) {\n            return;\n        }\n        // Hide when scatter plot exists\n        if ($$.hasType('scatter') || $$.hasArcType()) {\n            return;\n        }\n        focusEl.style(\"visibility\", \"visible\").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);\n        $$.smoothLines(focusEl, 'grid');\n    };\n    c3_chart_internal_fn.hideXGridFocus = function () {\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    };\n    c3_chart_internal_fn.updateXgridFocus = function () {\n        var $$ = this,\n            config = $$.config;\n        $$.main.select('line.' + CLASS.xgridFocus).attr(\"x1\", config.axis_rotated ? 0 : -10).attr(\"x2\", config.axis_rotated ? $$.width : -10).attr(\"y1\", config.axis_rotated ? -10 : 0).attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n    };\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\n        var $$ = this,\n            gridData = [],\n            xDomain,\n            firstYear,\n            lastYear,\n            i,\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n        if (type === 'year') {\n            xDomain = $$.getXDomain();\n            firstYear = xDomain[0].getFullYear();\n            lastYear = xDomain[1].getFullYear();\n            for (i = firstYear; i <= lastYear; i++) {\n                gridData.push(new Date(i + '-01-01 00:00:00'));\n            }\n        } else {\n            gridData = scale.ticks(10);\n            if (gridData.length > tickNum) {\n                // use only int\n                gridData = gridData.filter(function (d) {\n                    return (\"\" + d).indexOf('.') < 0;\n                });\n            }\n        }\n        return gridData;\n    };\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n        return params ? function (line) {\n            var found = false;\n            [].concat(params).forEach(function (param) {\n                if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {\n                    found = true;\n                }\n            });\n            return found;\n        } : function () {\n            return true;\n        };\n    };\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n        var $$ = this,\n            config = $$.config,\n            toRemove = $$.getGridFilterToRemove(params),\n            toShow = function toShow(line) {\n            return !toRemove(line);\n        },\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();\n        if (forX) {\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n        } else {\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n        }\n    };\n\n    c3_chart_internal_fn.initEventRect = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.eventRects).style('fill-opacity', 0);\n    };\n    c3_chart_internal_fn.redrawEventRect = function () {\n        var $$ = this,\n            config = $$.config,\n            eventRectUpdate,\n            maxDataCountTarget,\n            isMultipleX = $$.isMultipleX();\n\n        // rects for mouseover\n        var eventRects = $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null).classed(CLASS.eventRectsMultiple, isMultipleX).classed(CLASS.eventRectsSingle, !isMultipleX);\n\n        // clear old rects\n        eventRects.selectAll('.' + CLASS.eventRect).remove();\n\n        // open as public variable\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n        if (isMultipleX) {\n            eventRectUpdate = $$.eventRect.data([0]);\n            // enter : only one rect will be added\n            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit : not needed because always only one rect exists\n        } else {\n            // Set data and update $$.eventRect\n            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n            eventRectUpdate = $$.eventRect.data(function (d) {\n                return d;\n            });\n            // enter\n            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit\n            eventRectUpdate.exit().remove();\n        }\n    };\n    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n        var $$ = this,\n            config = $$.config,\n            x,\n            y,\n            w,\n            h,\n            rectW,\n            rectX;\n\n        // set update selection if null\n        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) {\n            return d;\n        });\n\n        if ($$.isMultipleX()) {\n            // TODO: rotated not supported yet\n            x = 0;\n            y = 0;\n            w = $$.width;\n            h = $$.height;\n        } else {\n            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\n                // update index for x that is used by prevX and nextX\n                $$.updateXs();\n\n                rectW = function rectW(d) {\n                    var prevX = $$.getPrevX(d.index),\n                        nextX = $$.getNextX(d.index);\n\n                    // if there this is a single data point make the eventRect full width (or height)\n                    if (prevX === null && nextX === null) {\n                        return config.axis_rotated ? $$.height : $$.width;\n                    }\n\n                    if (prevX === null) {\n                        prevX = $$.x.domain()[0];\n                    }\n                    if (nextX === null) {\n                        nextX = $$.x.domain()[1];\n                    }\n\n                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n                };\n                rectX = function rectX(d) {\n                    var prevX = $$.getPrevX(d.index),\n                        nextX = $$.getNextX(d.index),\n                        thisX = $$.data.xs[d.id][d.index];\n\n                    // if there this is a single data point position the eventRect at 0\n                    if (prevX === null && nextX === null) {\n                        return 0;\n                    }\n\n                    if (prevX === null) {\n                        prevX = $$.x.domain()[0];\n                    }\n\n                    return ($$.x(thisX) + $$.x(prevX)) / 2;\n                };\n            } else {\n                rectW = $$.getEventRectWidth();\n                rectX = function rectX(d) {\n                    return $$.x(d.x) - rectW / 2;\n                };\n            }\n            x = config.axis_rotated ? 0 : rectX;\n            y = config.axis_rotated ? rectX : 0;\n            w = config.axis_rotated ? $$.width : rectW;\n            h = config.axis_rotated ? rectW : $$.height;\n        }\n\n        eventRectUpdate.attr('class', $$.classEvent.bind($$)).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h);\n    };\n    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n        eventRectEnter.append(\"rect\").attr(\"class\", $$.classEvent.bind($$)).style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null).on('mouseover', function (d) {\n            var index = d.index;\n\n            if ($$.dragging || $$.flowing) {\n                return;\n            } // do nothing while dragging/flowing\n            if ($$.hasArcType()) {\n                return;\n            }\n\n            // Expand shapes for selection\n            if (config.point_focus_expand_enabled) {\n                $$.expandCircles(index, null, true);\n            }\n            $$.expandBars(index, null, true);\n\n            // Call event handler\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                config.data_onmouseover.call($$.api, d);\n            });\n        }).on('mouseout', function (d) {\n            var index = d.index;\n            if (!$$.config) {\n                return;\n            } // chart is destroyed\n            if ($$.hasArcType()) {\n                return;\n            }\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            // Undo expanded shapes\n            $$.unexpandCircles();\n            $$.unexpandBars();\n            // Call event handler\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                config.data_onmouseout.call($$.api, d);\n            });\n        }).on('mousemove', function (d) {\n            var selectedData,\n                index = d.index,\n                eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n            if ($$.dragging || $$.flowing) {\n                return;\n            } // do nothing while dragging/flowing\n            if ($$.hasArcType()) {\n                return;\n            }\n\n            if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                index -= 1;\n            }\n\n            // Show tooltip\n            selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n                return $$.addName($$.getValueOnIndex(t.values, index));\n            });\n\n            if (config.tooltip_grouped) {\n                $$.showTooltip(selectedData, this);\n                $$.showXGridFocus(selectedData);\n            }\n\n            if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n                return;\n            }\n\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function () {\n                d3.select(this).classed(CLASS.EXPANDED, true);\n                if (config.data_selection_enabled) {\n                    eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n                }\n                if (!config.tooltip_grouped) {\n                    $$.hideXGridFocus();\n                    $$.hideTooltip();\n                    if (!config.data_selection_grouped) {\n                        $$.unexpandCircles(index);\n                        $$.unexpandBars(index);\n                    }\n                }\n            }).filter(function (d) {\n                return $$.isWithinShape(this, d);\n            }).each(function (d) {\n                if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n                    eventRect.style('cursor', 'pointer');\n                }\n                if (!config.tooltip_grouped) {\n                    $$.showTooltip([d], this);\n                    $$.showXGridFocus([d]);\n                    if (config.point_focus_expand_enabled) {\n                        $$.expandCircles(index, d.id, true);\n                    }\n                    $$.expandBars(index, d.id, true);\n                }\n            });\n        }).on('click', function (d) {\n            var index = d.index;\n            if ($$.hasArcType() || !$$.toggleShape) {\n                return;\n            }\n            if ($$.cancelClick) {\n                $$.cancelClick = false;\n                return;\n            }\n            if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                index -= 1;\n            }\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                    $$.toggleShape(this, d, index);\n                    $$.config.data_onclick.call($$.api, d, this);\n                }\n            });\n        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n            $$.drag(d3.mouse(this));\n        }).on('dragstart', function () {\n            $$.dragstart(d3.mouse(this));\n        }).on('dragend', function () {\n            $$.dragend();\n        }) : function () {});\n    };\n\n    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n\n        function mouseout() {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            $$.unexpandCircles();\n            $$.unexpandBars();\n        }\n\n        eventRectEnter.append('rect').attr('x', 0).attr('y', 0).attr('width', $$.width).attr('height', $$.height).attr('class', CLASS.eventRect).on('mouseout', function () {\n            if (!$$.config) {\n                return;\n            } // chart is destroyed\n            if ($$.hasArcType()) {\n                return;\n            }\n            mouseout();\n        }).on('mousemove', function () {\n            var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            var mouse, closest, sameXData, selectedData;\n\n            if ($$.dragging) {\n                return;\n            } // do nothing when dragging\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n            if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n                config.data_onmouseout.call($$.api, $$.mouseover);\n                $$.mouseover = undefined;\n            }\n\n            if (!closest) {\n                mouseout();\n                return;\n            }\n\n            if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n                sameXData = [closest];\n            } else {\n                sameXData = $$.filterByX(targetsToShow, closest.x);\n            }\n\n            // show tooltip when cursor is close to some point\n            selectedData = sameXData.map(function (d) {\n                return $$.addName(d);\n            });\n            $$.showTooltip(selectedData, this);\n\n            // expand points\n            if (config.point_focus_expand_enabled) {\n                $$.expandCircles(closest.index, closest.id, true);\n            }\n            $$.expandBars(closest.index, closest.id, true);\n\n            // Show xgrid focus line\n            $$.showXGridFocus(selectedData);\n\n            // Show cursor as pointer if point is close to mouse position\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n                if (!$$.mouseover) {\n                    config.data_onmouseover.call($$.api, closest);\n                    $$.mouseover = closest;\n                }\n            }\n        }).on('click', function () {\n            var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            var mouse, closest;\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n            if (!closest) {\n                return;\n            }\n            // select if selection enabled\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n                    if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n                        $$.toggleShape(this, closest, closest.index);\n                        $$.config.data_onclick.call($$.api, closest, this);\n                    }\n                });\n            }\n        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n            $$.drag(d3.mouse(this));\n        }).on('dragstart', function () {\n            $$.dragstart(d3.mouse(this));\n        }).on('dragend', function () {\n            $$.dragend();\n        }) : function () {});\n    };\n    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n        var $$ = this,\n            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n            eventRect = $$.main.select(selector).node(),\n            box = eventRect.getBoundingClientRect(),\n            x = box.left + (mouse ? mouse[0] : 0),\n            y = box.top + (mouse ? mouse[1] : 0),\n            event = document.createEvent(\"MouseEvents\");\n\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\n        eventRect.dispatchEvent(event);\n    };\n\n    c3_chart_internal_fn.initLegend = function () {\n        var $$ = this;\n        $$.legendItemTextBox = {};\n        $$.legendHasRendered = false;\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n        if (!$$.config.legend_show) {\n            $$.legend.style('visibility', 'hidden');\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n            return;\n        }\n        // MEMO: call here to update legend box and tranlate for all\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n        $$.updateLegendWithDefaults();\n    };\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n        var $$ = this;\n        $$.updateLegend($$.mapToIds($$.data.targets), { withTransform: false, withTransitionForTransform: false, withTransition: false });\n    };\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n        var $$ = this,\n            config = $$.config,\n            insetLegendPosition = {\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n        };\n\n        $$.margin3 = {\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n            right: NaN,\n            bottom: 0,\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n        };\n    };\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\n        var $$ = this;\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n    };\n    c3_chart_internal_fn.updateLegendStep = function (step) {\n        this.legendStep = step;\n    };\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n        this.legendItemWidth = w;\n    };\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n        this.legendItemHeight = h;\n    };\n    c3_chart_internal_fn.getLegendWidth = function () {\n        var $$ = this;\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n    };\n    c3_chart_internal_fn.getLegendHeight = function () {\n        var $$ = this,\n            h = 0;\n        if ($$.config.legend_show) {\n            if ($$.isLegendRight) {\n                h = $$.currentHeight;\n            } else {\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n            }\n        }\n        return h;\n    };\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n    };\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n    };\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n        var $$ = this;\n        targetIds = $$.mapToTargetIds(targetIds);\n        $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {\n            return targetIds.indexOf(id) >= 0;\n        }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {\n            var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n            return opacity.call($$, $$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.revertLegend = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {\n            return $$.opacityForLegend(d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.showLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (!config.legend_show) {\n            config.legend_show = true;\n            $$.legend.style('visibility', 'visible');\n            if (!$$.legendHasRendered) {\n                $$.updateLegendWithDefaults();\n            }\n        }\n        $$.removeHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {\n            return $$.opacityForLegend($$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (config.legend_show && isEmpty(targetIds)) {\n            config.legend_show = false;\n            $$.legend.style('visibility', 'hidden');\n        }\n        $$.addHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');\n    };\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n        this.legendItemTextBox = {};\n    };\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n        var $$ = this,\n            config = $$.config;\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n        var paddingTop = 4,\n            paddingRight = 10,\n            maxWidth = 0,\n            maxHeight = 0,\n            posMin = 10,\n            tileWidth = config.legend_item_tile_width + 5;\n        var l,\n            totalLength = 0,\n            offsets = {},\n            widths = {},\n            heights = {},\n            margins = [0],\n            steps = {},\n            step = 0;\n        var withTransition, withTransitionForTransform;\n        var texts, rects, tiles, background;\n\n        // Skip elements when their name is set to null\n        targetIds = targetIds.filter(function (id) {\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n        });\n\n        options = options || {};\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n        function getTextBox(textElement, id) {\n            if (!$$.legendItemTextBox[id]) {\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n            }\n            return $$.legendItemTextBox[id];\n        }\n\n        function updatePositions(textElement, id, index) {\n            var reset = index === 0,\n                isLast = index === targetIds.length - 1,\n                box = getTextBox(textElement, id),\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n                itemHeight = box.height + paddingTop,\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n                margin,\n                maxLength;\n\n            // MEMO: care about condifion of step, totalLength\n            function updateValues(id, withoutStep) {\n                if (!withoutStep) {\n                    margin = (areaLength - totalLength - itemLength) / 2;\n                    if (margin < posMin) {\n                        margin = (areaLength - itemLength) / 2;\n                        totalLength = 0;\n                        step++;\n                    }\n                }\n                steps[id] = step;\n                margins[step] = $$.isLegendInset ? 10 : margin;\n                offsets[id] = totalLength;\n                totalLength += itemLength;\n            }\n\n            if (reset) {\n                totalLength = 0;\n                step = 0;\n                maxWidth = 0;\n                maxHeight = 0;\n            }\n\n            if (config.legend_show && !$$.isLegendToShow(id)) {\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n                return;\n            }\n\n            widths[id] = itemWidth;\n            heights[id] = itemHeight;\n\n            if (!maxWidth || itemWidth >= maxWidth) {\n                maxWidth = itemWidth;\n            }\n            if (!maxHeight || itemHeight >= maxHeight) {\n                maxHeight = itemHeight;\n            }\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n            if (config.legend_equally) {\n                Object.keys(widths).forEach(function (id) {\n                    widths[id] = maxWidth;\n                });\n                Object.keys(heights).forEach(function (id) {\n                    heights[id] = maxHeight;\n                });\n                margin = (areaLength - maxLength * targetIds.length) / 2;\n                if (margin < posMin) {\n                    totalLength = 0;\n                    step = 0;\n                    targetIds.forEach(function (id) {\n                        updateValues(id);\n                    });\n                } else {\n                    updateValues(id, true);\n                }\n            } else {\n                updateValues(id);\n            }\n        }\n\n        if ($$.isLegendInset) {\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n            $$.updateLegendStep(step);\n        }\n\n        if ($$.isLegendRight) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else if ($$.isLegendInset) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id] + 10;\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else {\n            xForLegend = function xForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return maxHeight * steps[id];\n            };\n        }\n        xForLegendText = function xForLegendText(id, i) {\n            return xForLegend(id, i) + 4 + config.legend_item_tile_width;\n        };\n        yForLegendText = function yForLegendText(id, i) {\n            return yForLegend(id, i) + 9;\n        };\n        xForLegendRect = function xForLegendRect(id, i) {\n            return xForLegend(id, i);\n        };\n        yForLegendRect = function yForLegendRect(id, i) {\n            return yForLegend(id, i) - 5;\n        };\n        x1ForLegendTile = function x1ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2;\n        };\n        x2ForLegendTile = function x2ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2 + config.legend_item_tile_width;\n        };\n        yForLegendTile = function yForLegendTile(id, i) {\n            return yForLegend(id, i) + 4;\n        };\n\n        // Define g for legend area\n        l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {\n            return $$.generateClass(CLASS.legendItem, id);\n        }).style('visibility', function (id) {\n            return $$.isLegendToShow(id) ? 'visible' : 'hidden';\n        }).style('cursor', 'pointer').on('click', function (id) {\n            if (config.legend_item_onclick) {\n                config.legend_item_onclick.call($$, id);\n            } else {\n                if ($$.d3.event.altKey) {\n                    $$.api.hide();\n                    $$.api.show(id);\n                } else {\n                    $$.api.toggle(id);\n                    $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n                }\n            }\n        }).on('mouseover', function (id) {\n            if (config.legend_item_onmouseover) {\n                config.legend_item_onmouseover.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n                if (!$$.transiting && $$.isTargetToShow(id)) {\n                    $$.api.focus(id);\n                }\n            }\n        }).on('mouseout', function (id) {\n            if (config.legend_item_onmouseout) {\n                config.legend_item_onmouseout.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n                $$.api.revert();\n            }\n        });\n        l.append('text').text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }).each(function (id, i) {\n            updatePositions(this, id, i);\n        }).style(\"pointer-events\", \"none\").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n        l.append('rect').attr(\"class\", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n        l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style(\"pointer-events\", \"none\").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height);\n\n        // Set background for inset legend\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n            background = $$.legend.insert('g', '.' + CLASS.legendItem).attr(\"class\", CLASS.legendBackground).append('rect');\n        }\n\n        texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }) // MEMO: needed for update\n        .each(function (id, i) {\n            updatePositions(this, id, i);\n        });\n        (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);\n\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\n        (withTransition ? rects.transition() : rects).attr('width', function (id) {\n            return widths[id];\n        }).attr('height', function (id) {\n            return heights[id];\n        }).attr('x', xForLegendRect).attr('y', yForLegendRect);\n\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\n        (withTransition ? tiles.transition() : tiles).style('stroke', $$.levelColor ? function (id) {\n            return $$.levelColor($$.cache[id].values[0].value);\n        } : $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);\n\n        if (background) {\n            (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);\n        }\n\n        // toggle legend state\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {\n            return !$$.isTargetToShow(id);\n        });\n\n        // Update all to reflect change of legend\n        $$.updateLegendItemWidth(maxWidth);\n        $$.updateLegendItemHeight(maxHeight);\n        $$.updateLegendStep(step);\n        // Update size and scale\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(withTransitionForTransform, transitions);\n        $$.legendHasRendered = true;\n    };\n\n    c3_chart_internal_fn.initRegion = function () {\n        var $$ = this;\n        $$.region = $$.main.append('g').attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.regions);\n    };\n    c3_chart_internal_fn.updateRegion = function (duration) {\n        var $$ = this,\n            config = $$.config;\n\n        // hide if arc type\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);\n        $$.mainRegion.enter().append('g').append('rect').style(\"fill-opacity\", 0);\n        $$.mainRegion.attr('class', $$.classRegion.bind($$));\n        $$.mainRegion.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawRegion = function (withTransition) {\n        var $$ = this,\n            regions = $$.mainRegion.selectAll('rect').each(function () {\n            // data is binded to g and it's not transferred to rect (child node) automatically,\n            // then data of each rect has to be updated manually.\n            // TODO: there should be more efficient way to solve this?\n            var parentData = $$.d3.select(this.parentNode).datum();\n            $$.d3.select(this).datum(parentData);\n        }),\n            x = $$.regionX.bind($$),\n            y = $$.regionY.bind($$),\n            w = $$.regionWidth.bind($$),\n            h = $$.regionHeight.bind($$);\n        return [(withTransition ? regions.transition() : regions).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h).style(\"fill-opacity\", function (d) {\n            return isValue(d.opacity) ? d.opacity : 0.1;\n        })];\n    };\n    c3_chart_internal_fn.regionX = function (d) {\n        var $$ = this,\n            config = $$.config,\n            xPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;\n        } else {\n            xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.regionY = function (d) {\n        var $$ = this,\n            config = $$.config,\n            yPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\n        } else {\n            yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;\n        }\n        return yPos;\n    };\n    c3_chart_internal_fn.regionWidth = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = $$.regionX(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;\n        } else {\n            end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.regionHeight = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = this.regionY(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;\n        } else {\n            end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.isRegionOnX = function (d) {\n        return !d.axis || d.axis === 'x';\n    };\n\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n    };\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n        var $$ = this,\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\n            _scale = domain ? scale.domain(domain) : scale,\n            key;\n        // Define customized scale if categorized axis\n        if ($$.isCategorized()) {\n            offset = offset || function () {\n                return 0;\n            };\n            scale = function scale(d, raw) {\n                var v = _scale(d) + offset(d);\n                return raw ? v : Math.ceil(v);\n            };\n        } else {\n            scale = function scale(d, raw) {\n                var v = _scale(d);\n                return raw ? v : Math.ceil(v);\n            };\n        }\n        // define functions\n        for (key in _scale) {\n            scale[key] = _scale[key];\n        }\n        scale.orgDomain = function () {\n            return _scale.domain();\n        };\n        // define custom domain() for categorized axis\n        if ($$.isCategorized()) {\n            scale.domain = function (domain) {\n                if (!arguments.length) {\n                    domain = this.orgDomain();\n                    return [domain[0], domain[1] + 1];\n                }\n                _scale.domain(domain);\n                return scale;\n            };\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getY = function (min, max, domain) {\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\n        if (domain) {\n            scale.domain(domain);\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n    };\n    c3_chart_internal_fn.getSubYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n    };\n    c3_chart_internal_fn.updateScales = function () {\n        var $$ = this,\n            config = $$.config,\n            forInit = !$$.x;\n        // update edges\n        $$.xMin = config.axis_rotated ? 1 : 0;\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\n        $$.yMax = config.axis_rotated ? $$.width : 1;\n        $$.subXMin = $$.xMin;\n        $$.subXMax = $$.xMax;\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n        // update scales\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\n            return $$.xAxis.tickOffset();\n        });\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\n            return d % 1 ? 0 : $$.subXAxis.tickOffset();\n        });\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n        // update axes\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n        // Set initialized scales to brush and zoom\n        if (!forInit) {\n            if ($$.brush) {\n                $$.brush.scale($$.subX);\n            }\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x);\n            }\n        }\n        // update for arc\n        if ($$.updateArc) {\n            $$.updateArc();\n        }\n    };\n\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n        var $$ = this,\n            config = $$.config,\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n            r = $$.pointSelectR.bind($$);\n        config.data_onselected.call($$.api, d, target.node());\n        // add selected-circle on low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr(\"class\", function () {\n            return $$.generateClass(CLASS.selectedCircle, i);\n        }).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"stroke\", function () {\n            return $$.color(d);\n        }).attr(\"r\", function (d) {\n            return $$.pointSelectR(d) * 1.4;\n        }).transition().duration(100).attr(\"r\", r);\n    };\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$.api, d, target.node());\n        // remove selected-circle from low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();\n    };\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n    };\n    c3_chart_internal_fn.selectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.d3.rgb($$.color(d)).brighter(0.75);\n            });\n        }\n    };\n    c3_chart_internal_fn.unselectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.color(d);\n            });\n        }\n    };\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n    };\n    c3_chart_internal_fn.getToggle = function (that, d) {\n        var $$ = this,\n            toggle;\n        if (that.nodeName === 'circle') {\n            if ($$.isStepType(d)) {\n                // circle is hidden in step chart, so treat as within the click area\n                toggle = function toggle() {}; // TODO: how to select step chart?\n            } else {\n                toggle = $$.togglePoint;\n            }\n        } else if (that.nodeName === 'path') {\n            toggle = $$.togglePath;\n        }\n        return toggle;\n    };\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            shape = d3.select(that),\n            isSelected = shape.classed(CLASS.SELECTED),\n            toggle = $$.getToggle(that, d).bind($$);\n\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n            if (!config.data_selection_multiple) {\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                    var shape = d3.select(this);\n                    if (shape.classed(CLASS.SELECTED)) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                });\n            }\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle(!isSelected, shape, d, i);\n        }\n    };\n\n    c3_chart_internal_fn.initBar = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n    };\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainBarUpdate,\n            mainBarEnter,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {\n            return classChartBar(d) + classFocus(d);\n        });\n        mainBarEnter = mainBarUpdate.enter().append('g').attr('class', classChartBar).style(\"pointer-events\", \"none\");\n        // Bars for each data\n        mainBarEnter.append('g').attr(\"class\", classBars).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n    };\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\n        var $$ = this,\n            barData = $$.barData.bind($$),\n            classBar = $$.classBar.bind($$),\n            initialOpacity = $$.initialOpacity.bind($$),\n            color = function color(d) {\n            return $$.color(d.id);\n        };\n        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);\n        $$.mainBar.enter().append('path').attr(\"class\", classBar).style(\"stroke\", color).style(\"fill\", color);\n        $$.mainBar.style(\"opacity\", initialOpacity);\n        $$.mainBar.exit().transition().duration(durationForExit).remove();\n    };\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n        return [(withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar).attr('d', drawBar).style(\"stroke\", this.color).style(\"fill\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n        var $$ = this,\n            config = $$.config,\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n    };\n    c3_chart_internal_fn.getBars = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n        var $$ = this;\n        if (reset) {\n            $$.unexpandBars();\n        }\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n    };\n    c3_chart_internal_fn.unexpandBars = function (i) {\n        var $$ = this;\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\n    };\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n        return function (d, i) {\n            // 4 points that make a bar\n            var points = getPoints(d, i);\n\n            // switch points if axis is rotated, not applicable for sub chart\n            var indexX = config.axis_rotated ? 1 : 0;\n            var indexY = config.axis_rotated ? 0 : 1;\n\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';\n\n            return path;\n        };\n    };\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n        var $$ = this,\n            axis = isSub ? $$.subXAxis : $$.xAxis,\n            barTargetsNum = barIndices.__max__ + 1,\n            barW = $$.getBarW(axis, barTargetsNum),\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n            barY = $$.getShapeY(!!isSub),\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n            barSpaceOffset = barW * ($$.config.bar_space / 2),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = barOffset(d, i) || y0,\n                // offset is for stacked bar chart\n            posX = barX(d),\n                posY = barY(d);\n            // fix posY not to overflow opposite quadrant\n            if ($$.config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 4 points that make a bar\n            return [[posX + barSpaceOffset, offset], [posX + barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, offset]];\n        };\n    };\n    c3_chart_internal_fn.isWithinBar = function (that) {\n        var mouse = this.d3.mouse(that),\n            box = that.getBoundingClientRect(),\n            seg0 = that.pathSegList.getItem(0),\n            seg1 = that.pathSegList.getItem(1),\n            x = Math.min(seg0.x, seg1.x),\n            y = Math.min(seg0.y, seg1.y),\n            w = box.width,\n            h = box.height,\n            offset = 2,\n            sx = x - offset,\n            ex = x + w + offset,\n            sy = y + h + offset,\n            ey = y - offset;\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n    };\n\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n        var $$ = this,\n            config = $$.config,\n            indices = {},\n            i = 0,\n            j,\n            k;\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n            for (j = 0; j < config.data_groups.length; j++) {\n                if (config.data_groups[j].indexOf(d.id) < 0) {\n                    continue;\n                }\n                for (k = 0; k < config.data_groups[j].length; k++) {\n                    if (config.data_groups[j][k] in indices) {\n                        indices[d.id] = indices[config.data_groups[j][k]];\n                        break;\n                    }\n                }\n            }\n            if (isUndefined(indices[d.id])) {\n                indices[d.id] = i++;\n            }\n        });\n        indices.__max__ = i - 1;\n        return indices;\n    };\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n        var $$ = this,\n            scale = isSub ? $$.subX : $$.x;\n        return function (d) {\n            var index = d.id in indices ? indices[d.id] : 0;\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n        };\n    };\n    c3_chart_internal_fn.getShapeY = function (isSub) {\n        var $$ = this;\n        return function (d) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n            return scale(d.value);\n        };\n    };\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n        var $$ = this,\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n            targetIds = targets.map(function (t) {\n            return t.id;\n        });\n        return function (d, i) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n                y0 = scale(0),\n                offset = y0;\n            targets.forEach(function (t) {\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) {\n                    return;\n                }\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                    // check if the x values line up\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {\n                        // \"+\" for timeseries\n                        // if not, try to find the value that does line up\n                        i = -1;\n                        values.forEach(function (v, j) {\n                            if (v.x === d.x) {\n                                i = j;\n                            }\n                        });\n                    }\n                    if (i in values && values[i].value * d.value >= 0) {\n                        offset += scale(values[i].value) - y0;\n                    }\n                }\n            });\n            return offset;\n        };\n    };\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\n        var $$ = this,\n            shape = $$.d3.select(that),\n            isWithin;\n        if (!$$.isTargetToShow(d.id)) {\n            isWithin = false;\n        } else if (that.nodeName === 'circle') {\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n        } else if (that.nodeName === 'path') {\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n        }\n        return isWithin;\n    };\n\n    c3_chart_internal_fn.getInterpolate = function (d) {\n        var $$ = this,\n            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n    };\n\n    c3_chart_internal_fn.initLine = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n    };\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainLineUpdate,\n            mainLineEnter,\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$),\n            classCircles = $$.classCircles.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {\n            return classChartLine(d) + classFocus(d);\n        });\n        mainLineEnter = mainLineUpdate.enter().append('g').attr('class', classChartLine).style('opacity', 0).style(\"pointer-events\", \"none\");\n        // Lines for each data\n        mainLineEnter.append('g').attr(\"class\", classLines);\n        // Areas\n        mainLineEnter.append('g').attr('class', classAreas);\n        // Circles for each data point on lines\n        mainLineEnter.append('g').attr(\"class\", function (d) {\n            return $$.generateClass(CLASS.selectedCircles, d.id);\n        });\n        mainLineEnter.append('g').attr(\"class\", classCircles).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n        // Update date for selected circles\n        targets.forEach(function (t) {\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n                d.value = t.values[d.index].value;\n            });\n        });\n        // MEMO: can not keep same color...\n        //mainLineUpdate.exit().remove();\n    };\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\n        var $$ = this;\n        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        $$.mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style(\"stroke\", $$.color);\n        $$.mainLine.style(\"opacity\", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {\n            return $$.isStepType(d) ? 'crispEdges' : '';\n        }).attr('transform', null);\n        $$.mainLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n        return [(withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine).attr(\"d\", drawLine).style(\"stroke\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            line = $$.d3.svg.line(),\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            yValue = function yValue(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n        if (!config.line_connectNull) {\n            line = line.defined(function (d) {\n                return d.value != null;\n            });\n        }\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x = isSub ? $$.x : $$.subX,\n                y = yScaleGetter.call($$, d.id),\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isLineType(d)) {\n                if (config.data_regions[d.id]) {\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n                } else {\n                    if ($$.isStepType(d)) {\n                        values = $$.convertValuesToStep(values);\n                    }\n                    path = line.interpolate($$.getInterpolate(d))(values);\n                }\n            } else {\n                if (values[0]) {\n                    x0 = x(values[0].x);\n                    y0 = y(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            lineTargetsNum = lineIndices.__max__ + 1,\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = lineOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the line position\n            return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n        var $$ = this,\n            config = $$.config,\n            prev = -1,\n            i,\n            j,\n            s = \"M\",\n            sWithRegion,\n            xp,\n            yp,\n            dx,\n            dy,\n            dd,\n            diff,\n            diffx2,\n            xOffset = $$.isCategorized() ? 0.5 : 0,\n            xValue,\n            yValue,\n            regions = [];\n\n        function isWithinRegions(x, regions) {\n            var i;\n            for (i = 0; i < regions.length; i++) {\n                if (regions[i].start < x && x <= regions[i].end) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        // Check start/end of regions\n        if (isDefined(_regions)) {\n            for (i = 0; i < _regions.length; i++) {\n                regions[i] = {};\n                if (isUndefined(_regions[i].start)) {\n                    regions[i].start = d[0].x;\n                } else {\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n                }\n                if (isUndefined(_regions[i].end)) {\n                    regions[i].end = d[d.length - 1].x;\n                } else {\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n                }\n            }\n        }\n\n        // Set scales\n        xValue = config.axis_rotated ? function (d) {\n            return y(d.value);\n        } : function (d) {\n            return x(d.x);\n        };\n        yValue = config.axis_rotated ? function (d) {\n            return x(d.x);\n        } : function (d) {\n            return y(d.value);\n        };\n\n        // Define svg generator function for region\n        function generateM(points) {\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n        }\n        if ($$.isTimeSeries()) {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var x0 = d0.x.getTime(),\n                    x_diff = d1.x - d0.x,\n                    xv0 = new Date(x0 + x_diff * j),\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\n                    points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n                } else {\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        } else {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n                } else {\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        }\n\n        // Generate\n        for (i = 0; i < d.length; i++) {\n\n            // Draw as normal\n            if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n            }\n            // Draw with region // TODO: Fix for horizotal charts\n            else {\n                    xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                    yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                    dx = x(d[i].x) - x(d[i - 1].x);\n                    dy = y(d[i].value) - y(d[i - 1].value);\n                    dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                    diff = 2 / dd;\n                    diffx2 = diff * 2;\n\n                    for (j = diff; j <= 1; j += diffx2) {\n                        s += sWithRegion(d[i - 1], d[i], j, diff);\n                    }\n                }\n            prev = d[i].x;\n        }\n\n        return s;\n    };\n\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        $$.mainArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        $$.mainArea.style(\"opacity\", $$.orgAreaOpacity);\n        $$.mainArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n        return [(withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea).attr(\"d\", drawArea).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity)];\n    };\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            area = $$.d3.svg.area(),\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            value0 = function value0(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n        },\n            value1 = function value1(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n        if (!config.line_connectNull) {\n            area = area.defined(function (d) {\n                return d.value !== null;\n            });\n        }\n\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isAreaType(d)) {\n                if ($$.isStepType(d)) {\n                    values = $$.convertValuesToStep(values);\n                }\n                path = area.interpolate($$.getInterpolate(d))(values);\n            } else {\n                if (values[0]) {\n                    x0 = $$.x(values[0].x);\n                    y0 = $$.getYScale(d.id)(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.getAreaBaseValue = function () {\n        return 0;\n    };\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            areaTargetsNum = areaIndices.__max__ + 1,\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = areaOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the area position\n            return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, offset] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.updateCircle = function () {\n        var $$ = this;\n        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));\n        $$.mainCircle.enter().append(\"circle\").attr(\"class\", $$.classCircle.bind($$)).attr(\"r\", $$.pointR.bind($$)).style(\"fill\", $$.color);\n        $$.mainCircle.style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n        $$.mainCircle.exit().remove();\n    };\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n        return [(withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle).style('opacity', this.opacityForCircle.bind(this)).style(\"fill\", this.color).attr(\"cx\", cx).attr(\"cy\", cy), (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles).attr(\"cx\", cx).attr(\"cy\", cy)];\n    };\n    c3_chart_internal_fn.circleX = function (d) {\n        return d.x || d.x === 0 ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.updateCircleY = function () {\n        var $$ = this,\n            lineIndices,\n            getPoints;\n        if ($$.config.data_groups.length > 0) {\n            lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);\n            $$.circleY = function (d, i) {\n                return getPoints(d, i)[0][1];\n            };\n        } else {\n            $$.circleY = function (d) {\n                return $$.getYScale(d.id)(d.value);\n            };\n        }\n    };\n    c3_chart_internal_fn.getCircles = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n        var $$ = this,\n            r = $$.pointExpandedR.bind($$);\n        if (reset) {\n            $$.unexpandCircles();\n        }\n        $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);\n    };\n    c3_chart_internal_fn.unexpandCircles = function (i) {\n        var $$ = this,\n            r = $$.pointR.bind($$);\n        $$.getCircles(i).filter(function () {\n            return $$.d3.select(this).classed(CLASS.EXPANDED);\n        }).classed(CLASS.EXPANDED, false).attr('r', r);\n    };\n    c3_chart_internal_fn.pointR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;\n    };\n    c3_chart_internal_fn.pointExpandedR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        if (config.point_focus_expand_enabled) {\n            return isFunction(config.point_focus_expand_r) ? config.point_focus_expand_r(d) : config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75;\n        } else {\n            return $$.pointR(d);\n        }\n    };\n    c3_chart_internal_fn.pointSelectR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;\n    };\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n        var d3 = this.d3,\n            mouse = d3.mouse(that),\n            d3_this = d3.select(that),\n            cx = +d3_this.attr(\"cx\"),\n            cy = +d3_this.attr(\"cy\");\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n    };\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n    };\n\n    c3_chart_internal_fn.getCurrentWidth = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.size_width ? config.size_width : $$.getParentWidth();\n    };\n    c3_chart_internal_fn.getCurrentHeight = function () {\n        var $$ = this,\n            config = $$.config,\n            h = config.size_height ? config.size_height : $$.getParentHeight();\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\n    };\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n        var $$ = this,\n            config = $$.config,\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\n        if ($$.title && $$.title.node()) {\n            padding += $$.getTitlePadding();\n        }\n        return padding;\n    };\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n        var config = this.config;\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n    };\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config;\n        if (isValue(config.padding_left)) {\n            return config.padding_left;\n        } else if (config.axis_rotated) {\n            return !config.axis_x_show || config.axis_x_inner ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n        } else if (!config.axis_y_show || config.axis_y_inner) {\n            // && !config.axis_rotated\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n        }\n    };\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n        var $$ = this,\n            config = $$.config,\n            defaultPadding = 10,\n            legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n        if (isValue(config.padding_right)) {\n            return config.padding_right + 1; // 1 is needed not to hide tick line\n        } else if (config.axis_rotated) {\n            return defaultPadding + legendWidthOnRight;\n        } else if (!config.axis_y2_show || config.axis_y2_inner) {\n            // && !config.axis_rotated\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n        }\n    };\n\n    c3_chart_internal_fn.getParentRectValue = function (key) {\n        var parent = this.selectChart.node(),\n            v;\n        while (parent && parent.tagName !== 'BODY') {\n            try {\n                v = parent.getBoundingClientRect()[key];\n            } catch (e) {\n                if (key === 'width') {\n                    // In IE in certain cases getBoundingClientRect\n                    // will cause an \"unspecified error\"\n                    v = parent.offsetWidth;\n                }\n            }\n            if (v) {\n                break;\n            }\n            parent = parent.parentNode;\n        }\n        return v;\n    };\n    c3_chart_internal_fn.getParentWidth = function () {\n        return this.getParentRectValue('width');\n    };\n    c3_chart_internal_fn.getParentHeight = function () {\n        var h = this.selectChart.style('height');\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n    };\n\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config,\n            hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : { right: 0 },\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\n            hasArc = $$.hasArcType(),\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n        return svgLeft > 0 ? svgLeft : 0;\n    };\n\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n        var $$ = this,\n            position = $$.axis.getLabelPositionById(id);\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n    };\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n        var $$ = this,\n            config = $$.config,\n            h = 30;\n        if (axisId === 'x' && !config.axis_x_show) {\n            return 8;\n        }\n        if (axisId === 'x' && config.axis_x_height) {\n            return config.axis_x_height;\n        }\n        if (axisId === 'y' && !config.axis_y_show) {\n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\n        }\n        if (axisId === 'y2' && !config.axis_y2_show) {\n            return $$.rotated_padding_top;\n        }\n        // Calculate x axis height when tick rotated\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n        }\n        // Calculate y axis height when tick rotated\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n        }\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n    };\n\n    c3_chart_internal_fn.getEventRectWidth = function () {\n        return Math.max(0, this.xAxis.tickInterval());\n    };\n\n    c3_chart_internal_fn.initBrush = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.brush = d3.svg.brush().on(\"brush\", function () {\n            $$.redrawForBrush();\n        });\n        $$.brush.update = function () {\n            if ($$.context) {\n                $$.context.select('.' + CLASS.brush).call(this);\n            }\n            return this;\n        };\n        $$.brush.scale = function (scale) {\n            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n    };\n    c3_chart_internal_fn.initSubchart = function () {\n        var $$ = this,\n            config = $$.config,\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n            visibility = config.subchart_show ? 'visible' : 'hidden';\n\n        context.style('visibility', visibility);\n\n        // Define g for chart area\n        context.append('g').attr(\"clip-path\", $$.clipPathForSubchart).attr('class', CLASS.chart);\n\n        // Define g for bar chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n\n        // Define g for line chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n\n        // Add extent rect for Brush\n        context.append(\"g\").attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.brush).call($$.brush);\n\n        // ATTENTION: This must be called AFTER chart added\n        // Add Axis\n        $$.axes.subx = context.append(\"g\").attr(\"class\", CLASS.axisX).attr(\"transform\", $$.getTranslate('subx')).attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis).style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n    };\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n        var $$ = this,\n            context = $$.context,\n            config = $$.config,\n            contextLineEnter,\n            contextLineUpdate,\n            contextBarEnter,\n            contextBarUpdate,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$);\n\n        if (config.subchart_show) {\n            //-- Bar --//\n            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', classChartBar);\n            contextBarEnter = contextBarUpdate.enter().append('g').style('opacity', 0).attr('class', classChartBar);\n            // Bars for each data\n            contextBarEnter.append('g').attr(\"class\", classBars);\n\n            //-- Line --//\n            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', classChartLine);\n            contextLineEnter = contextLineUpdate.enter().append('g').style('opacity', 0).attr('class', classChartLine);\n            // Lines for each data\n            contextLineEnter.append(\"g\").attr(\"class\", classLines);\n            // Area\n            contextLineEnter.append(\"g\").attr(\"class\", classAreas);\n\n            //-- Brush --//\n            context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n        }\n    };\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));\n        $$.contextBar.enter().append('path').attr(\"class\", $$.classBar.bind($$)).style(\"stroke\", 'none').style(\"fill\", $$.color);\n        $$.contextBar.style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        $$.contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);\n        $$.contextLine.style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr(\"d\", drawLineOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        $$.contextArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        $$.contextArea.style(\"opacity\", 0);\n        $$.contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr(\"d\", drawAreaOnSub).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity);\n    };\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            drawAreaOnSub,\n            drawBarOnSub,\n            drawLineOnSub;\n\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n        // subchart\n        if (config.subchart_show) {\n            // reflect main chart to extent on subchart if zoomed\n            if (d3.event && d3.event.type === 'zoom') {\n                $$.brush.extent($$.x.orgDomain()).update();\n            }\n            // update subchart elements if needed\n            if (withSubchart) {\n\n                // extent rect\n                if (!$$.brush.empty()) {\n                    $$.brush.extent($$.x.orgDomain()).update();\n                }\n                // setup drawer - MEMO: this must be called after axis updated\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n                $$.updateBarForSubchart(duration);\n                $$.updateLineForSubchart(duration);\n                $$.updateAreaForSubchart(duration);\n\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawForBrush = function () {\n        var $$ = this,\n            x = $$.x;\n        $$.redraw({\n            withTransition: false,\n            withY: $$.config.zoom_rescale,\n            withSubchart: false,\n            withUpdateXDomain: true,\n            withDimension: false\n        });\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n    };\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n        var $$ = this,\n            subXAxis;\n        if (transitions && transitions.axisSubX) {\n            subXAxis = transitions.axisSubX;\n        } else {\n            subXAxis = $$.context.select('.' + CLASS.axisX);\n            if (withTransition) {\n                subXAxis = subXAxis.transition();\n            }\n        }\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n    };\n    c3_chart_internal_fn.getDefaultExtent = function () {\n        var $$ = this,\n            config = $$.config,\n            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n        if ($$.isTimeSeries()) {\n            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n        }\n        return extent;\n    };\n\n    c3_chart_internal_fn.initText = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartTexts);\n        $$.mainText = $$.d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n        var $$ = this,\n            mainTextUpdate,\n            mainTextEnter,\n            classChartText = $$.classChartText.bind($$),\n            classTexts = $$.classTexts.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets).attr('class', function (d) {\n            return classChartText(d) + classFocus(d);\n        });\n        mainTextEnter = mainTextUpdate.enter().append('g').attr('class', classChartText).style('opacity', 0).style(\"pointer-events\", \"none\");\n        mainTextEnter.append('g').attr('class', classTexts);\n    };\n    c3_chart_internal_fn.updateText = function (durationForExit) {\n        var $$ = this,\n            config = $$.config,\n            barOrLineData = $$.barOrLineData.bind($$),\n            classText = $$.classText.bind($$);\n        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);\n        $$.mainText.enter().append('text').attr(\"class\", classText).attr('text-anchor', function (d) {\n            return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';\n        }).style(\"stroke\", 'none').style(\"fill\", function (d) {\n            return $$.color(d);\n        }).style(\"fill-opacity\", 0);\n        $$.mainText.text(function (d, i, j) {\n            return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\n        });\n        $$.mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n        return [(withTransition ? this.mainText.transition() : this.mainText).attr('x', xForText).attr('y', yForText).style(\"fill\", this.color).style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))];\n    };\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            font = this.d3.select(element).style('font'),\n            rect;\n        svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : \"\", true).style('font', font).text(text).each(function () {\n            rect = this.getBoundingClientRect();\n        });\n        dummy.remove();\n        return rect;\n    };\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n        var $$ = this,\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n            getter = forX ? $$.getXForText : $$.getYForText;\n        return function (d, i) {\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n            return getter.call($$, getPoints(d, i), d, this);\n        };\n    };\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            xPos,\n            padding;\n        if ($$.config.axis_rotated) {\n            padding = $$.isBarType(d) ? 4 : 6;\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n        } else {\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null) {\n            if (xPos > $$.width) {\n                xPos = $$.width - box.width;\n            } else if (xPos < 0) {\n                xPos = 4;\n            }\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            yPos;\n        if ($$.config.axis_rotated) {\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n        } else {\n            yPos = points[2][1];\n            if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {\n                yPos += box.height;\n                if ($$.isBarType(d) && $$.isSafari()) {\n                    yPos -= 3;\n                } else if (!$$.isBarType(d) && $$.isChrome()) {\n                    yPos += 3;\n                }\n            } else {\n                yPos += $$.isBarType(d) ? -3 : -6;\n            }\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null && !$$.config.axis_rotated) {\n            if (yPos < box.height) {\n                yPos = box.height;\n            } else if (yPos > this.height) {\n                yPos = this.height - 4;\n            }\n        }\n        return yPos;\n    };\n\n    c3_chart_internal_fn.initTitle = function () {\n        var $$ = this;\n        $$.title = $$.svg.append(\"text\").text($$.config.title_text).attr(\"class\", $$.CLASS.title);\n    };\n    c3_chart_internal_fn.redrawTitle = function () {\n        var $$ = this;\n        $$.title.attr(\"x\", $$.xForTitle.bind($$)).attr(\"y\", $$.yForTitle.bind($$));\n    };\n    c3_chart_internal_fn.xForTitle = function () {\n        var $$ = this,\n            config = $$.config,\n            position = config.title_position || 'left',\n            x;\n        if (position.indexOf('right') >= 0) {\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n        } else if (position.indexOf('center') >= 0) {\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n        } else {\n            // left\n            x = config.title_padding.left;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.yForTitle = function () {\n        var $$ = this;\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n    };\n    c3_chart_internal_fn.getTitlePadding = function () {\n        var $$ = this;\n        return $$.yForTitle() + $$.config.title_padding.bottom;\n    };\n\n    c3_chart_internal_fn.initTooltip = function () {\n        var $$ = this,\n            config = $$.config,\n            i;\n        $$.tooltip = $$.selectChart.style(\"position\", \"relative\").append(\"div\").attr('class', CLASS.tooltipContainer).style(\"position\", \"absolute\").style(\"pointer-events\", \"none\").style(\"display\", \"none\");\n        // Show tooltip if needed\n        if (config.tooltip_init_show) {\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                    if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\n                        break;\n                    }\n                }\n                config.tooltip_init_x = i;\n            }\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n                return $$.addName(d.values[config.tooltip_init_x]);\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top).style(\"left\", config.tooltip_init_position.left).style(\"display\", \"block\");\n        }\n    };\n    c3_chart_internal_fn.getTooltipSortFunction = function () {\n        var $$ = this,\n            config = $$.config;\n\n        if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\n            // if data are not grouped or if an order is specified\n            // for the tooltip values we sort them by their values\n\n            var order = config.tooltip_order;\n            if (order === undefined) {\n                order = config.data_order;\n            }\n\n            var valueOf = function valueOf(obj) {\n                return obj ? obj.value : null;\n            };\n\n            // if data are not grouped, we sort them by their value\n            if (isString(order) && order.toLowerCase() === 'asc') {\n                return function (a, b) {\n                    return valueOf(a) - valueOf(b);\n                };\n            } else if (isString(order) && order.toLowerCase() === 'desc') {\n                return function (a, b) {\n                    return valueOf(b) - valueOf(a);\n                };\n            } else if (isFunction(order)) {\n\n                // if the function is from data_order we need\n                // to wrap the returned function in order to format\n                // the sorted value to the expected format\n\n                var sortFunction = order;\n\n                if (config.tooltip_order === undefined) {\n                    sortFunction = function sortFunction(a, b) {\n                        return order(a ? {\n                            id: a.id,\n                            values: [a]\n                        } : null, b ? {\n                            id: b.id,\n                            values: [b]\n                        } : null);\n                    };\n                }\n\n                return sortFunction;\n            } else if (isArray(order)) {\n                return function (a, b) {\n                    return order.indexOf(a.id) - order.indexOf(b.id);\n                };\n            }\n        } else {\n            // if data are grouped, we follow the order of grouped targets\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n                return i.id;\n            });\n\n            // if it was either asc or desc we need to invert the order\n            // returned by orderTargets\n            if ($$.isOrderAsc() || $$.isOrderDesc()) {\n                ids = ids.reverse();\n            }\n\n            return function (a, b) {\n                return ids.indexOf(a.id) - ids.indexOf(b.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n        var $$ = this,\n            config = $$.config,\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n            nameFormat = config.tooltip_format_name || function (name) {\n            return name;\n        },\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\n            text,\n            i,\n            title,\n            value,\n            name,\n            bgcolor;\n\n        var tooltipSortFunction = this.getTooltipSortFunction();\n        if (tooltipSortFunction) {\n            d.sort(tooltipSortFunction);\n        }\n\n        for (i = 0; i < d.length; i++) {\n            if (!(d[i] && (d[i].value || d[i].value === 0))) {\n                continue;\n            }\n\n            if (!text) {\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n            }\n\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n            if (value !== undefined) {\n                // Skip elements when their name is set to null\n                if (d[i].name === null) {\n                    continue;\n                }\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n                text += \"<td class='value'>\" + value + \"</td>\";\n                text += \"</tr>\";\n            }\n        }\n        return text + \"</table>\";\n    };\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n        var forArc = $$.hasArcType(),\n            mouse = d3.mouse(element);\n        // Determin tooltip position\n        if (forArc) {\n            tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\n            tooltipTop = ($$.hasType('gauge') ? $$.height : $$.height / 2) + mouse[1] + 20;\n        } else {\n            svgLeft = $$.getSvgLeft(true);\n            if (config.axis_rotated) {\n                tooltipLeft = svgLeft + mouse[0] + 100;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\n            } else {\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = mouse[1] + 15;\n            }\n\n            if (tooltipRight > chartRight) {\n                // 20 is needed for Firefox to keep tooltip width\n                tooltipLeft -= tooltipRight - chartRight + 20;\n            }\n            if (tooltipTop + tHeight > $$.currentHeight) {\n                tooltipTop -= tHeight + 30;\n            }\n        }\n        if (tooltipTop < 0) {\n            tooltipTop = 0;\n        }\n        return { top: tooltipTop, left: tooltipLeft };\n    };\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n        var $$ = this,\n            config = $$.config;\n        var tWidth, tHeight, position;\n        var forArc = $$.hasArcType(),\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n        if (dataToShow.length === 0 || !config.tooltip_show) {\n            return;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n        // Get tooltip dimensions\n        tWidth = $$.tooltip.property('offsetWidth');\n        tHeight = $$.tooltip.property('offsetHeight');\n\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n        // Set tooltip\n        $$.tooltip.style(\"top\", position.top + \"px\").style(\"left\", position.left + 'px');\n    };\n    c3_chart_internal_fn.hideTooltip = function () {\n        this.tooltip.style(\"display\", \"none\");\n    };\n\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n        var $$ = this,\n            config = $$.config;\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\n            $$.withoutFadeIn[id] = type === config.data_types[id];\n            config.data_types[id] = type;\n        });\n        if (!targetIds) {\n            config.data_type = type;\n        }\n    };\n    c3_chart_internal_fn.hasType = function (type, targets) {\n        var $$ = this,\n            types = $$.config.data_types,\n            has = false;\n        targets = targets || $$.data.targets;\n        if (targets && targets.length) {\n            targets.forEach(function (target) {\n                var t = types[target.id];\n                if (t && t.indexOf(type) >= 0 || !t && type === 'line') {\n                    has = true;\n                }\n            });\n        } else if (Object.keys(types).length) {\n            Object.keys(types).forEach(function (id) {\n                if (types[id] === type) {\n                    has = true;\n                }\n            });\n        } else {\n            has = $$.config.data_type === type;\n        }\n        return has;\n    };\n    c3_chart_internal_fn.hasArcType = function (targets) {\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n    };\n    c3_chart_internal_fn.isLineType = function (d) {\n        var config = this.config,\n            id = isString(d) ? d : d.id;\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isStepType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isSplineType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isAreaType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isBarType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'bar';\n    };\n    c3_chart_internal_fn.isScatterType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'scatter';\n    };\n    c3_chart_internal_fn.isPieType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'pie';\n    };\n    c3_chart_internal_fn.isGaugeType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'gauge';\n    };\n    c3_chart_internal_fn.isDonutType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'donut';\n    };\n    c3_chart_internal_fn.isArcType = function (d) {\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n    };\n    c3_chart_internal_fn.lineData = function (d) {\n        return this.isLineType(d) ? [d] : [];\n    };\n    c3_chart_internal_fn.arcData = function (d) {\n        return this.isArcType(d.data) ? [d] : [];\n    };\n    /* not used\n     function scatterData(d) {\n     return isScatterType(d) ? d.values : [];\n     }\n     */\n    c3_chart_internal_fn.barData = function (d) {\n        return this.isBarType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.barOrLineData = function (d) {\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.isInterpolationType = function (type) {\n        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n    };\n\n    c3_chart_internal_fn.isSafari = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n    };\n    c3_chart_internal_fn.isChrome = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Chrome') >= 0;\n    };\n\n    c3_chart_internal_fn.initZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            startEvent;\n\n        $$.zoom = d3.behavior.zoom().on(\"zoomstart\", function () {\n            startEvent = d3.event.sourceEvent;\n            $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n            config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n        }).on(\"zoom\", function () {\n            $$.redrawForZoom.call($$);\n        }).on('zoomend', function () {\n            var event = d3.event.sourceEvent;\n            // if click, do nothing. otherwise, click interaction will be canceled.\n            if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n                return;\n            }\n            $$.redrawEventRect();\n            $$.updateZoom();\n            config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n        });\n        $$.zoom.scale = function (scale) {\n            return config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n        $$.zoom.orgScaleExtent = function () {\n            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n        };\n        $$.zoom.updateScaleExtent = function () {\n            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n                extent = this.orgScaleExtent();\n            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n            return this;\n        };\n    };\n    c3_chart_internal_fn.getZoomDomain = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateZoom = function () {\n        var $$ = this,\n            z = $$.config.zoom_enabled ? $$.zoom : function () {};\n        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n    };\n    c3_chart_internal_fn.redrawForZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            zoom = $$.zoom,\n            x = $$.x;\n        if (!config.zoom_enabled) {\n            return;\n        }\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n            return;\n        }\n        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n            x.domain(zoom.altDomain);\n            zoom.scale(x).updateScaleExtent();\n            return;\n        }\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n        }\n        $$.redraw({\n            withTransition: false,\n            withY: config.zoom_rescale,\n            withSubchart: false,\n            withEventRect: false,\n            withDimension: false\n        });\n        if (d3.event.sourceEvent.type === 'mousemove') {\n            $$.cancelClick = true;\n        }\n        config.zoom_onzoom.call($$.api, x.orgDomain());\n    };\n\n    return c3;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/c3/c3.js\n// module id = 2286\n// module chunks = 67","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3/d3.js\n// module id = 2287\n// module chunks = 67","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../css-loader/index.js??ref--1-oneOf-4-2!../postcss-loader/lib/index.js??postcss!./c3.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":false}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/c3/c3.css\n// module id = 2288\n// module chunks = 67","exports = module.exports = require(\"../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".c3 svg{font:10px sans-serif;-webkit-tap-highlight-color:transparent}.c3 line,.c3 path{fill:none;stroke:#000}.c3 text{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.c3-bars path,.c3-event-rect,.c3-legend-item-tile,.c3-xgrid-focus,.c3-ygrid{shape-rendering:crispEdges}.c3-chart-arc path{stroke:#fff}.c3-chart-arc rect{stroke:#fff;stroke-width:1}.c3-chart-arc text{fill:#fff;font-size:13px}.c3-grid line{stroke:#aaa}.c3-grid text{fill:#aaa}.c3-xgrid,.c3-ygrid{stroke-dasharray:3 3}.c3-text.c3-empty{fill:gray;font-size:2em}.c3-line{stroke-width:1px}.c3-circle._expanded_{stroke-width:1px;stroke:#fff}.c3-selected-circle{fill:#fff;stroke-width:2px}.c3-bar{stroke-width:0}.c3-bar._expanded_{fill-opacity:1;fill-opacity:.75}.c3-target.c3-focused{opacity:1}.c3-target.c3-focused path.c3-line,.c3-target.c3-focused path.c3-step{stroke-width:2px}.c3-target.c3-defocused{opacity:.3!important}.c3-region{fill:#4682b4;fill-opacity:.1}.c3-brush .extent{fill-opacity:.1}.c3-legend-item{font-size:12px}.c3-legend-item-hidden{opacity:.15}.c3-legend-background{opacity:.75;fill:#fff;stroke:#d3d3d3;stroke-width:1}.c3-title{font:14px sans-serif}.c3-tooltip-container{z-index:10}.c3-tooltip{border-collapse:collapse;border-spacing:0;background-color:#fff;empty-cells:show;-webkit-box-shadow:7px 7px 12px -9px #777;box-shadow:7px 7px 12px -9px #777;opacity:.9}.c3-tooltip tr{border:1px solid #ccc}.c3-tooltip th{background-color:#aaa;font-size:14px;padding:2px 5px;text-align:left;color:#fff}.c3-tooltip td{font-size:13px;padding:3px 6px;background-color:#fff;border-left:1px dotted #999}.c3-tooltip td>span{display:inline-block;width:10px;height:10px;margin-right:6px}.c3-tooltip td.value{text-align:right}.c3-area{stroke-width:0;opacity:.2}.c3-chart-arcs-title{dominant-baseline:middle;font-size:1.3em}.c3-chart-arcs .c3-chart-arcs-background{fill:#e0e0e0;stroke:#fff}.c3-chart-arcs .c3-chart-arcs-gauge-unit{fill:#000;font-size:16px}.c3-chart-arcs .c3-chart-arcs-gauge-max,.c3-chart-arcs .c3-chart-arcs-gauge-min{fill:#777}.c3-chart-arc .c3-gauge-value{fill:#000}.c3-chart-arc.c3-target.c3-focused g path,.c3-chart-arc.c3-target g path{opacity:1}\", \"\", {\"version\":3,\"sources\":[\"/NOBACKUP/dtig-data-dashboard/node_modules/c3/c3.css\"],\"names\":[],\"mappings\":\"AACA,QACE,qBAAsB,AACtB,uCAAyC,CAAE,AAE7C,kBACE,UAAW,AACX,WAAa,CAAE,AAEjB,SACE,yBAA0B,AAC1B,sBAAuB,AACvB,qBAAsB,AAClB,gBAAkB,CAAE,AAE1B,4EAKE,0BAA4B,CAAE,AAEhC,mBACE,WAAa,CAAE,AAEjB,mBACE,YAAc,AACd,cAAgB,CAAE,AAEpB,mBACE,UAAW,AACX,cAAgB,CAAE,AAIpB,cACE,WAAa,CAAE,AAEjB,cACE,SAAW,CAAE,AAEf,oBACE,oBAAsB,CAAE,AAG1B,kBACE,UAAc,AACd,aAAe,CAAE,AAGnB,SACE,gBAAkB,CAAE,AAGtB,sBACE,iBAAkB,AAClB,WAAc,CAAE,AAElB,oBACE,UAAY,AACZ,gBAAkB,CAAE,AAGtB,QACE,cAAgB,CAAE,AAEpB,mBACE,eAAgB,AAChB,gBAAmB,CAAE,AAGvB,sBACE,SAAW,CAAE,AAEf,sEACE,gBAAkB,CAAE,AAEtB,wBACE,oBAAwB,CAAE,AAG5B,WACE,aAAgB,AAChB,eAAiB,CAAE,AAGrB,kBACE,eAAiB,CAAE,AAIrB,gBACE,cAAgB,CAAE,AAEpB,uBACE,WAAc,CAAE,AAElB,sBACE,YAAc,AACd,UAAY,AACZ,eAAkB,AAClB,cAAgB,CAAE,AAGpB,UACE,oBAAsB,CAAE,AAG1B,sBACE,UAAY,CAAE,AAEhB,YACE,yBAA0B,AAC1B,iBAAkB,AAClB,sBAAuB,AACvB,iBAAkB,AAClB,0CAA8C,AAC9C,kCAAsC,AACtC,UAAa,CAAE,AAEjB,eACE,qBAAuB,CAAE,AAE3B,eACE,sBAAuB,AACvB,eAAgB,AAChB,gBAAiB,AACjB,gBAAiB,AACjB,UAAY,CAAE,AAEhB,eACE,eAAgB,AAChB,gBAAiB,AACjB,sBAAuB,AACvB,2BAA6B,CAAE,AAEjC,oBACE,qBAAsB,AACtB,WAAY,AACZ,YAAa,AACb,gBAAkB,CAAE,AAEtB,qBACE,gBAAkB,CAAE,AAGtB,SACE,eAAgB,AAChB,UAAa,CAAE,AAGjB,qBACE,yBAA0B,AAC1B,eAAiB,CAAE,AAErB,yCACE,aAAc,AACd,WAAa,CAAE,AAEjB,yCACE,UAAW,AACX,cAAgB,CAAE,AAKpB,gFACE,SAAW,CAAE,AAEf,8BACE,SAAW,CACwB,AAKrC,yEACE,SAAW,CAAE\",\"file\":\"c3.css\",\"sourcesContent\":[\"/*-- Chart --*/\\n.c3 svg {\\n  font: 10px sans-serif;\\n  -webkit-tap-highlight-color: transparent; }\\n\\n.c3 path, .c3 line {\\n  fill: none;\\n  stroke: #000; }\\n\\n.c3 text {\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n      user-select: none; }\\n\\n.c3-legend-item-tile,\\n.c3-xgrid-focus,\\n.c3-ygrid,\\n.c3-event-rect,\\n.c3-bars path {\\n  shape-rendering: crispEdges; }\\n\\n.c3-chart-arc path {\\n  stroke: #fff; }\\n\\n.c3-chart-arc rect {\\n  stroke: white;\\n  stroke-width: 1; }\\n\\n.c3-chart-arc text {\\n  fill: #fff;\\n  font-size: 13px; }\\n\\n/*-- Axis --*/\\n/*-- Grid --*/\\n.c3-grid line {\\n  stroke: #aaa; }\\n\\n.c3-grid text {\\n  fill: #aaa; }\\n\\n.c3-xgrid, .c3-ygrid {\\n  stroke-dasharray: 3 3; }\\n\\n/*-- Text on Chart --*/\\n.c3-text.c3-empty {\\n  fill: #808080;\\n  font-size: 2em; }\\n\\n/*-- Line --*/\\n.c3-line {\\n  stroke-width: 1px; }\\n\\n/*-- Point --*/\\n.c3-circle._expanded_ {\\n  stroke-width: 1px;\\n  stroke: white; }\\n\\n.c3-selected-circle {\\n  fill: white;\\n  stroke-width: 2px; }\\n\\n/*-- Bar --*/\\n.c3-bar {\\n  stroke-width: 0; }\\n\\n.c3-bar._expanded_ {\\n  fill-opacity: 1;\\n  fill-opacity: 0.75; }\\n\\n/*-- Focus --*/\\n.c3-target.c3-focused {\\n  opacity: 1; }\\n\\n.c3-target.c3-focused path.c3-line, .c3-target.c3-focused path.c3-step {\\n  stroke-width: 2px; }\\n\\n.c3-target.c3-defocused {\\n  opacity: 0.3 !important; }\\n\\n/*-- Region --*/\\n.c3-region {\\n  fill: steelblue;\\n  fill-opacity: .1; }\\n\\n/*-- Brush --*/\\n.c3-brush .extent {\\n  fill-opacity: .1; }\\n\\n/*-- Select - Drag --*/\\n/*-- Legend --*/\\n.c3-legend-item {\\n  font-size: 12px; }\\n\\n.c3-legend-item-hidden {\\n  opacity: 0.15; }\\n\\n.c3-legend-background {\\n  opacity: 0.75;\\n  fill: white;\\n  stroke: lightgray;\\n  stroke-width: 1; }\\n\\n/*-- Title --*/\\n.c3-title {\\n  font: 14px sans-serif; }\\n\\n/*-- Tooltip --*/\\n.c3-tooltip-container {\\n  z-index: 10; }\\n\\n.c3-tooltip {\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n  background-color: #fff;\\n  empty-cells: show;\\n  -webkit-box-shadow: 7px 7px 12px -9px #777777;\\n  box-shadow: 7px 7px 12px -9px #777777;\\n  opacity: 0.9; }\\n\\n.c3-tooltip tr {\\n  border: 1px solid #CCC; }\\n\\n.c3-tooltip th {\\n  background-color: #aaa;\\n  font-size: 14px;\\n  padding: 2px 5px;\\n  text-align: left;\\n  color: #FFF; }\\n\\n.c3-tooltip td {\\n  font-size: 13px;\\n  padding: 3px 6px;\\n  background-color: #fff;\\n  border-left: 1px dotted #999; }\\n\\n.c3-tooltip td > span {\\n  display: inline-block;\\n  width: 10px;\\n  height: 10px;\\n  margin-right: 6px; }\\n\\n.c3-tooltip td.value {\\n  text-align: right; }\\n\\n/*-- Area --*/\\n.c3-area {\\n  stroke-width: 0;\\n  opacity: 0.2; }\\n\\n/*-- Arc --*/\\n.c3-chart-arcs-title {\\n  dominant-baseline: middle;\\n  font-size: 1.3em; }\\n\\n.c3-chart-arcs .c3-chart-arcs-background {\\n  fill: #e0e0e0;\\n  stroke: #FFF; }\\n\\n.c3-chart-arcs .c3-chart-arcs-gauge-unit {\\n  fill: #000;\\n  font-size: 16px; }\\n\\n.c3-chart-arcs .c3-chart-arcs-gauge-max {\\n  fill: #777; }\\n\\n.c3-chart-arcs .c3-chart-arcs-gauge-min {\\n  fill: #777; }\\n\\n.c3-chart-arc .c3-gauge-value {\\n  fill: #000;\\n  /*  font-size: 28px !important;*/ }\\n\\n.c3-chart-arc.c3-target g path {\\n  opacity: 1; }\\n\\n.c3-chart-arc.c3-target.c3-focused g path {\\n  opacity: 1; }\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./node_modules/c3/c3.css\n// module id = 2289\n// module chunks = 67"],"sourceRoot":""}